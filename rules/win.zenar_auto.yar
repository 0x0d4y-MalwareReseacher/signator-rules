rule win_zenar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.zenar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zenar"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0b410c 50 e8???????? 68b8000000 }
            // n = 4, score = 100
            //   0b410c               | or                  eax, dword ptr [ecx + 0xc]
            //   50                   | push                eax
            //   e8????????           |                     
            //   68b8000000           | push                0xb8

        $sequence_1 = { c3 55 8bec 807d0800 7404 33c0 5d }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   807d0800             | cmp                 byte ptr [ebp + 8], 0
            //   7404                 | je                  6
            //   33c0                 | xor                 eax, eax
            //   5d                   | pop                 ebp

        $sequence_2 = { 83f801 753b 8d85f4fdffff 53 50 e8???????? }
            // n = 6, score = 100
            //   83f801               | cmp                 eax, 1
            //   753b                 | jne                 0x3d
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_3 = { 83c404 8bc8 eb02 33c9 8d045d02000000 890e 50 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   8bc8                 | mov                 ecx, eax
            //   eb02                 | jmp                 4
            //   33c9                 | xor                 ecx, ecx
            //   8d045d02000000       | lea                 eax, [ebx*2 + 2]
            //   890e                 | mov                 dword ptr [esi], ecx
            //   50                   | push                eax

        $sequence_4 = { 83ec10 56 ff30 8bf1 8d4df0 e8???????? 50 }
            // n = 7, score = 100
            //   83ec10               | sub                 esp, 0x10
            //   56                   | push                esi
            //   ff30                 | push                dword ptr [eax]
            //   8bf1                 | mov                 esi, ecx
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   e8????????           |                     
            //   50                   | push                eax

        $sequence_5 = { 32c0 e9???????? 56 e8???????? 59 56 8d4de8 }
            // n = 7, score = 100
            //   32c0                 | xor                 al, al
            //   e9????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   56                   | push                esi
            //   8d4de8               | lea                 ecx, [ebp - 0x18]

        $sequence_6 = { 50 895f10 895f14 e8???????? 6850020000 895dfc }
            // n = 6, score = 100
            //   50                   | push                eax
            //   895f10               | mov                 dword ptr [edi + 0x10], ebx
            //   895f14               | mov                 dword ptr [edi + 0x14], ebx
            //   e8????????           |                     
            //   6850020000           | push                0x250
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx

        $sequence_7 = { 8b01 ff5004 8d45dc c745fc03000000 50 e8???????? 83c404 }
            // n = 7, score = 100
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5004               | call                dword ptr [eax + 4]
            //   8d45dc               | lea                 eax, [ebp - 0x24]
            //   c745fc03000000       | mov                 dword ptr [ebp - 4], 3
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_8 = { 8bcf 50 e8???????? 33db 43 885dfc }
            // n = 6, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   33db                 | xor                 ebx, ebx
            //   43                   | inc                 ebx
            //   885dfc               | mov                 byte ptr [ebp - 4], bl

        $sequence_9 = { 8b4de0 8845f3 85c9 7411 8b01 ff5008 }
            // n = 6, score = 100
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   8845f3               | mov                 byte ptr [ebp - 0xd], al
            //   85c9                 | test                ecx, ecx
            //   7411                 | je                  0x13
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5008               | call                dword ptr [eax + 8]

    condition:
        7 of them and filesize < 519168
}