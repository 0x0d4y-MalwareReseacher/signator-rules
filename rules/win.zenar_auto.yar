rule win_zenar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.zenar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zenar"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 59 8d4802 f7d8 1bc0 23c1 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8d4802               | lea                 ecx, [eax + 2]
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   23c1                 | and                 eax, ecx

        $sequence_1 = { 7503 83caff 41 0fb7044e 6685c0 }
            // n = 5, score = 100
            //   7503                 | jne                 5
            //   83caff               | or                  edx, 0xffffffff
            //   41                   | inc                 ecx
            //   0fb7044e             | movzx               eax, word ptr [esi + ecx*2]
            //   6685c0               | test                ax, ax

        $sequence_2 = { 8b750c 8b7d10 894dfc c745f001000000 8b4e10 034f10 51 }
            // n = 7, score = 100
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8b7d10               | mov                 edi, dword ptr [ebp + 0x10]
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   8b4e10               | mov                 ecx, dword ptr [esi + 0x10]
            //   034f10               | add                 ecx, dword ptr [edi + 0x10]
            //   51                   | push                ecx

        $sequence_3 = { ff5008 89be90000000 807e1000 7422 80be8900000000 7419 8d4664 }
            // n = 7, score = 100
            //   ff5008               | call                dword ptr [eax + 8]
            //   89be90000000         | mov                 dword ptr [esi + 0x90], edi
            //   807e1000             | cmp                 byte ptr [esi + 0x10], 0
            //   7422                 | je                  0x24
            //   80be8900000000       | cmp                 byte ptr [esi + 0x89], 0
            //   7419                 | je                  0x1b
            //   8d4664               | lea                 eax, [esi + 0x64]

        $sequence_4 = { 84c0 0f848d010000 c645fc02 8bc7 }
            // n = 4, score = 100
            //   84c0                 | test                al, al
            //   0f848d010000         | je                  0x193
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8bc7                 | mov                 eax, edi

        $sequence_5 = { 56 ff75dc 8d4de8 e8???????? ff75e8 e8???????? 59 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   e8????????           |                     
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_6 = { c645fc01 83611000 83611400 56 e8???????? 57 c645fc02 }
            // n = 7, score = 100
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   83611000             | and                 dword ptr [ecx + 0x10], 0
            //   83611400             | and                 dword ptr [ecx + 0x14], 0
            //   56                   | push                esi
            //   e8????????           |                     
            //   57                   | push                edi
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2

        $sequence_7 = { 5d c3 6a24 b8???????? e8???????? 8bd9 895dd0 }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   6a24                 | push                0x24
            //   b8????????           |                     
            //   e8????????           |                     
            //   8bd9                 | mov                 ebx, ecx
            //   895dd0               | mov                 dword ptr [ebp - 0x30], ebx

        $sequence_8 = { 0fb74d08 33c0 663b881cdd4200 740d 83c002 83f814 }
            // n = 6, score = 100
            //   0fb74d08             | movzx               ecx, word ptr [ebp + 8]
            //   33c0                 | xor                 eax, eax
            //   663b881cdd4200       | cmp                 cx, word ptr [eax + 0x42dd1c]
            //   740d                 | je                  0xf
            //   83c002               | add                 eax, 2
            //   83f814               | cmp                 eax, 0x14

        $sequence_9 = { 6bc938 8855d4 8b048598ae4300 88540828 8b0b 8bc1 }
            // n = 6, score = 100
            //   6bc938               | imul                ecx, ecx, 0x38
            //   8855d4               | mov                 byte ptr [ebp - 0x2c], dl
            //   8b048598ae4300       | mov                 eax, dword ptr [eax*4 + 0x43ae98]
            //   88540828             | mov                 byte ptr [eax + ecx + 0x28], dl
            //   8b0b                 | mov                 ecx, dword ptr [ebx]
            //   8bc1                 | mov                 eax, ecx

    condition:
        7 of them and filesize < 519168
}