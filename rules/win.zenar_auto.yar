rule win_zenar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.zenar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zenar"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 85c0 7454 8b55c4 85d2 7410 8b4de8 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7454                 | je                  0x56
            //   8b55c4               | mov                 edx, dword ptr [ebp - 0x3c]
            //   85d2                 | test                edx, edx
            //   7410                 | je                  0x12
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]

        $sequence_1 = { c785a4f7ffff0f000000 c68590f7ffff00 e8???????? 8b85d8f6ffff 8b4004 8b840508f7ffff 8b4804 }
            // n = 7, score = 100
            //   c785a4f7ffff0f000000     | mov    dword ptr [ebp - 0x85c], 0xf
            //   c68590f7ffff00       | mov                 byte ptr [ebp - 0x870], 0
            //   e8????????           |                     
            //   8b85d8f6ffff         | mov                 eax, dword ptr [ebp - 0x928]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   8b840508f7ffff       | mov                 eax, dword ptr [ebp + eax - 0x8f8]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]

        $sequence_2 = { 8975fc c745f001000000 8d4a02 668b02 83c202 }
            // n = 5, score = 100
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   8d4a02               | lea                 ecx, [edx + 2]
            //   668b02               | mov                 ax, word ptr [edx]
            //   83c202               | add                 edx, 2

        $sequence_3 = { 68???????? 8d0448 83c0f4 50 e8???????? 59 59 }
            // n = 7, score = 100
            //   68????????           |                     
            //   8d0448               | lea                 eax, [eax + ecx*2]
            //   83c0f4               | add                 eax, -0xc
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

        $sequence_4 = { 722a 83fa10 8db5d8f7ffff 8d4103 0f43b5d8f7ffff 03f1 8985e8f7ffff }
            // n = 7, score = 100
            //   722a                 | jb                  0x2c
            //   83fa10               | cmp                 edx, 0x10
            //   8db5d8f7ffff         | lea                 esi, [ebp - 0x828]
            //   8d4103               | lea                 eax, [ecx + 3]
            //   0f43b5d8f7ffff       | cmovae              esi, dword ptr [ebp - 0x828]
            //   03f1                 | add                 esi, ecx
            //   8985e8f7ffff         | mov                 dword ptr [ebp - 0x818], eax

        $sequence_5 = { 2bc2 8b55e4 8bcb d1f8 2bca 3bc1 7734 }
            // n = 7, score = 100
            //   2bc2                 | sub                 eax, edx
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   8bcb                 | mov                 ecx, ebx
            //   d1f8                 | sar                 eax, 1
            //   2bca                 | sub                 ecx, edx
            //   3bc1                 | cmp                 eax, ecx
            //   7734                 | ja                  0x36

        $sequence_6 = { 8bf0 c785ccfdffff00000000 8d85d0fdffff 50 56 ff15???????? 83f801 }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   c785ccfdffff00000000     | mov    dword ptr [ebp - 0x234], 0
            //   8d85d0fdffff         | lea                 eax, [ebp - 0x230]
            //   50                   | push                eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1

        $sequence_7 = { eb45 33c0 40 c9 c3 6a02 eb3c }
            // n = 7, score = 100
            //   eb45                 | jmp                 0x47
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   c9                   | leave               
            //   c3                   | ret                 
            //   6a02                 | push                2
            //   eb3c                 | jmp                 0x3e

        $sequence_8 = { 0f848f000000 837de400 0f8485000000 8b4df0 8b048d98ae4300 f644072848 744d }
            // n = 7, score = 100
            //   0f848f000000         | je                  0x95
            //   837de400             | cmp                 dword ptr [ebp - 0x1c], 0
            //   0f8485000000         | je                  0x8b
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b048d98ae4300       | mov                 eax, dword ptr [ecx*4 + 0x43ae98]
            //   f644072848           | test                byte ptr [edi + eax + 0x28], 0x48
            //   744d                 | je                  0x4f

        $sequence_9 = { eb1f c685d4f6ffff00 8d8dd8f7ffff ffb5d4f6ffff 53 e8???????? }
            // n = 6, score = 100
            //   eb1f                 | jmp                 0x21
            //   c685d4f6ffff00       | mov                 byte ptr [ebp - 0x92c], 0
            //   8d8dd8f7ffff         | lea                 ecx, [ebp - 0x828]
            //   ffb5d4f6ffff         | push                dword ptr [ebp - 0x92c]
            //   53                   | push                ebx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 519168
}