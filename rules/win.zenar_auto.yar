rule win_zenar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.zenar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zenar"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff36 8bd8 e8???????? 59 59 891e 897e08 }
            // n = 7, score = 100
            //   ff36                 | push                dword ptr [esi]
            //   8bd8                 | mov                 ebx, eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   891e                 | mov                 dword ptr [esi], ebx
            //   897e08               | mov                 dword ptr [esi + 8], edi

        $sequence_1 = { 6bc938 8b048598ae4300 0fb6440828 83e040 5d c3 e8???????? }
            // n = 7, score = 100
            //   6bc938               | imul                ecx, ecx, 0x38
            //   8b048598ae4300       | mov                 eax, dword ptr [eax*4 + 0x43ae98]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]
            //   83e040               | and                 eax, 0x40
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   e8????????           |                     

        $sequence_2 = { 8bf1 8d45e4 8975e0 50 8975e0 e8???????? }
            // n = 6, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   8d45e4               | lea                 eax, [ebp - 0x1c]
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   50                   | push                eax
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   e8????????           |                     

        $sequence_3 = { c1f806 6bc938 8855d4 8b048598ae4300 88540828 8b0b 8bc1 }
            // n = 7, score = 100
            //   c1f806               | sar                 eax, 6
            //   6bc938               | imul                ecx, ecx, 0x38
            //   8855d4               | mov                 byte ptr [ebp - 0x2c], dl
            //   8b048598ae4300       | mov                 eax, dword ptr [eax*4 + 0x43ae98]
            //   88540828             | mov                 byte ptr [eax + ecx + 0x28], dl
            //   8b0b                 | mov                 ecx, dword ptr [ebx]
            //   8bc1                 | mov                 eax, ecx

        $sequence_4 = { 83f85c 7466 83f82f 7461 8d4601 3bf8 735a }
            // n = 7, score = 100
            //   83f85c               | cmp                 eax, 0x5c
            //   7466                 | je                  0x68
            //   83f82f               | cmp                 eax, 0x2f
            //   7461                 | je                  0x63
            //   8d4601               | lea                 eax, [esi + 1]
            //   3bf8                 | cmp                 edi, eax
            //   735a                 | jae                 0x5c

        $sequence_5 = { 52 ff750c ff7508 e8???????? 5e 5d c20800 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8

        $sequence_6 = { ffd7 837de008 8d4dcc 0f434dcc e8???????? 8bf0 }
            // n = 6, score = 100
            //   ffd7                 | call                edi
            //   837de008             | cmp                 dword ptr [ebp - 0x20], 8
            //   8d4dcc               | lea                 ecx, [ebp - 0x34]
            //   0f434dcc             | cmovae              ecx, dword ptr [ebp - 0x34]
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_7 = { 7455 807dfc01 8b4df4 8b55f0 7522 8b048d98ae4300 f644022d02 }
            // n = 7, score = 100
            //   7455                 | je                  0x57
            //   807dfc01             | cmp                 byte ptr [ebp - 4], 1
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   7522                 | jne                 0x24
            //   8b048d98ae4300       | mov                 eax, dword ptr [ecx*4 + 0x43ae98]
            //   f644022d02           | test                byte ptr [edx + eax + 0x2d], 2

        $sequence_8 = { 2bfb c1ff02 8b5204 8bc1 83c024 f7d9 1bc9 }
            // n = 7, score = 100
            //   2bfb                 | sub                 edi, ebx
            //   c1ff02               | sar                 edi, 2
            //   8b5204               | mov                 edx, dword ptr [edx + 4]
            //   8bc1                 | mov                 eax, ecx
            //   83c024               | add                 eax, 0x24
            //   f7d9                 | neg                 ecx
            //   1bc9                 | sbb                 ecx, ecx

        $sequence_9 = { 0f84b6000000 a810 0f84ae000000 8bce e8???????? }
            // n = 5, score = 100
            //   0f84b6000000         | je                  0xbc
            //   a810                 | test                al, 0x10
            //   0f84ae000000         | je                  0xb4
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

    condition:
        7 of them and filesize < 519168
}