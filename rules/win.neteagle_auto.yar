rule win_neteagle_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.neteagle."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.neteagle"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1ea02 52 50 68???????? 8d7106 e8???????? }
            // n = 6, score = 100
            //   c1ea02               | shr                 edx, 2
            //   52                   | push                edx
            //   50                   | push                eax
            //   68????????           |                     
            //   8d7106               | lea                 esi, [ecx + 6]
            //   e8????????           |                     

        $sequence_1 = { e8???????? 51 c684245c0c000011 8bf4 89642418 51 8bcc }
            // n = 7, score = 100
            //   e8????????           |                     
            //   51                   | push                ecx
            //   c684245c0c000011     | mov                 byte ptr [esp + 0xc5c], 0x11
            //   8bf4                 | mov                 esi, esp
            //   89642418             | mov                 dword ptr [esp + 0x18], esp
            //   51                   | push                ecx
            //   8bcc                 | mov                 ecx, esp

        $sequence_2 = { 8bf1 68???????? 68???????? 6800020000 }
            // n = 4, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   68????????           |                     
            //   68????????           |                     
            //   6800020000           | push                0x200

        $sequence_3 = { 52 68???????? 50 e8???????? 83c428 8d4b5c 51 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c428               | add                 esp, 0x28
            //   8d4b5c               | lea                 ecx, [ebx + 0x5c]
            //   51                   | push                ecx

        $sequence_4 = { 8b7304 8b45e0 c645fc06 8a10 8a1e }
            // n = 5, score = 100
            //   8b7304               | mov                 esi, dword ptr [ebx + 4]
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   8a1e                 | mov                 bl, byte ptr [esi]

        $sequence_5 = { 8d442420 6a10 50 51 47 ffd5 83f8ff }
            // n = 7, score = 100
            //   8d442420             | lea                 eax, [esp + 0x20]
            //   6a10                 | push                0x10
            //   50                   | push                eax
            //   51                   | push                ecx
            //   47                   | inc                 edi
            //   ffd5                 | call                ebp
            //   83f8ff               | cmp                 eax, -1

        $sequence_6 = { 8b4e24 c744242400000000 8b42f8 8d540105 8d4c2410 52 e8???????? }
            // n = 7, score = 100
            //   8b4e24               | mov                 ecx, dword ptr [esi + 0x24]
            //   c744242400000000     | mov                 dword ptr [esp + 0x24], 0
            //   8b42f8               | mov                 eax, dword ptr [edx - 8]
            //   8d540105             | lea                 edx, [ecx + eax + 5]
            //   8d4c2410             | lea                 ecx, [esp + 0x10]
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_7 = { 8bf1 57 b907000000 33c0 8d7c240c }
            // n = 5, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   57                   | push                edi
            //   b907000000           | mov                 ecx, 7
            //   33c0                 | xor                 eax, eax
            //   8d7c240c             | lea                 edi, [esp + 0xc]

        $sequence_8 = { 55 8bec 83ec14 8b451c 53 8945ec 33c0 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec14               | sub                 esp, 0x14
            //   8b451c               | mov                 eax, dword ptr [ebp + 0x1c]
            //   53                   | push                ebx
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   33c0                 | xor                 eax, eax

        $sequence_9 = { 8bf8 85ff 747f 6aff 57 8d4e20 e8???????? }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   747f                 | je                  0x81
            //   6aff                 | push                -1
            //   57                   | push                edi
            //   8d4e20               | lea                 ecx, [esi + 0x20]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 262144
}