rule win_iispy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.iispy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.iispy"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8be5 5d c3 c705????????60c00210 b001 c3 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   c705????????60c00210     |     
            //   b001                 | mov                 al, 1
            //   c3                   | ret                 

        $sequence_1 = { c1c00c 03d0 89560c 8bca 8b06 f7d1 234e04 }
            // n = 7, score = 100
            //   c1c00c               | rol                 eax, 0xc
            //   03d0                 | add                 edx, eax
            //   89560c               | mov                 dword ptr [esi + 0xc], edx
            //   8bca                 | mov                 ecx, edx
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   f7d1                 | not                 ecx
            //   234e04               | and                 ecx, dword ptr [esi + 4]

        $sequence_2 = { 8bc8 89420c 8b4204 f7d0 0bc1 3302 034208 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   89420c               | mov                 dword ptr [edx + 0xc], eax
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   f7d0                 | not                 eax
            //   0bc1                 | or                  eax, ecx
            //   3302                 | xor                 eax, dword ptr [edx]
            //   034208               | add                 eax, dword ptr [edx + 8]

        $sequence_3 = { 8bc7 6685d2 7503 8b4708 8b4d0c 3bc8 7469 }
            // n = 7, score = 100
            //   8bc7                 | mov                 eax, edi
            //   6685d2               | test                dx, dx
            //   7503                 | jne                 5
            //   8b4708               | mov                 eax, dword ptr [edi + 8]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   3bc8                 | cmp                 ecx, eax
            //   7469                 | je                  0x6b

        $sequence_4 = { ff75d8 ff5050 8b03 8bcb 6aff ff75d4 ff5050 }
            // n = 7, score = 100
            //   ff75d8               | push                dword ptr [ebp - 0x28]
            //   ff5050               | call                dword ptr [eax + 0x50]
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8bcb                 | mov                 ecx, ebx
            //   6aff                 | push                -1
            //   ff75d4               | push                dword ptr [ebp - 0x2c]
            //   ff5050               | call                dword ptr [eax + 0x50]

        $sequence_5 = { f7c100100000 740d 0fbe400d b90d000000 2bc8 eb02 8b08 }
            // n = 7, score = 100
            //   f7c100100000         | test                ecx, 0x1000
            //   740d                 | je                  0xf
            //   0fbe400d             | movsx               eax, byte ptr [eax + 0xd]
            //   b90d000000           | mov                 ecx, 0xd
            //   2bc8                 | sub                 ecx, eax
            //   eb02                 | jmp                 4
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_6 = { 752d 33c9 894c2414 3bf8 }
            // n = 4, score = 100
            //   752d                 | jne                 0x2f
            //   33c9                 | xor                 ecx, ecx
            //   894c2414             | mov                 dword ptr [esp + 0x14], ecx
            //   3bf8                 | cmp                 edi, eax

        $sequence_7 = { ff5024 8b07 8bcf 6a01 6a01 }
            // n = 5, score = 100
            //   ff5024               | call                dword ptr [eax + 0x24]
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   8bcf                 | mov                 ecx, edi
            //   6a01                 | push                1
            //   6a01                 | push                1

        $sequence_8 = { eb3f 0fb600 0fbe8850c70210 41 894dd0 3bcf 0f8fa8010000 }
            // n = 7, score = 100
            //   eb3f                 | jmp                 0x41
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   0fbe8850c70210       | movsx               ecx, byte ptr [eax + 0x1002c750]
            //   41                   | inc                 ecx
            //   894dd0               | mov                 dword ptr [ebp - 0x30], ecx
            //   3bcf                 | cmp                 ecx, edi
            //   0f8fa8010000         | jg                  0x1ae

        $sequence_9 = { 8d4dd8 c745fcffffffff e8???????? 6a07 0f57c0 c745e800000000 68???????? }
            // n = 7, score = 100
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   e8????????           |                     
            //   6a07                 | push                7
            //   0f57c0               | xorps               xmm0, xmm0
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   68????????           |                     

    condition:
        7 of them and filesize < 397312
}