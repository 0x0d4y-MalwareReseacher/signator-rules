rule win_lockfile_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.lockfile."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lockfile"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4c8b7130 483bda 7436 4d8b4018 49c1e003 4d85c0 7429 }
            // n = 7, score = 200
            //   4c8b7130             | mov                 dword ptr [esp], edx
            //   483bda               | dec                 eax
            //   7436                 | mul                 dword ptr [ebx + 0x28]
            //   4d8b4018             | dec                 ecx
            //   49c1e003             | lea                 ecx, [eax + eax]
            //   4d85c0               | dec                 eax
            //   7429                 | mov                 eax, dword ptr [esi + 0x30]

        $sequence_1 = { 4c8bc6 418bd4 e8???????? f20f1000 8b7808 e9???????? 488d058e3d0300 }
            // n = 7, score = 200
            //   4c8bc6               | lea                 edx, [edi + ebx]
            //   418bd4               | dec                 eax
            //   e8????????           |                     
            //   f20f1000             | add                 eax, ecx
            //   8b7808               | dec                 esp
            //   e9????????           |                     
            //   488d058e3d0300       | mov                 ecx, edx

        $sequence_2 = { 2b05???????? 4c8bfa 488364244000 488bf1 894598 895c2448 }
            // n = 6, score = 200
            //   2b05????????         |                     
            //   4c8bfa               | dec                 ebx
            //   488364244000         | lea                 ecx, [edx + ecx]
            //   488bf1               | dec                 ecx
            //   894598               | add                 eax, eax
            //   895c2448             | dec                 ecx

        $sequence_3 = { 4803c1 483bc1 4913d6 488d3c47 49897c2438 498d0c10 483bca }
            // n = 7, score = 200
            //   4803c1               | dec                 ebp
            //   483bc1               | lea                 edx, [eax + eax]
            //   4913d6               | dec                 ebp
            //   488d3c47             | cmp                 edx, eax
            //   49897c2438           | dec                 ecx
            //   498d0c10             | adc                 ebp, 0
            //   483bca               | xor                 ecx, ecx

        $sequence_4 = { 48833cc800 488d1ccd00000000 7516 b910000000 e8???????? 488b4e08 }
            // n = 6, score = 200
            //   48833cc800           | dec                 esp
            //   488d1ccd00000000     | mov                 ebx, dword ptr [ebp + 0x58]
            //   7516                 | dec                 eax
            //   b910000000           | mov                 edx, dword ptr [ebp - 0x20]
            //   e8????????           |                     
            //   488b4e08             | inc                 ecx

        $sequence_5 = { 755f c74424380a000000 488d0520710200 4889442430 488d542430 0f28442430 488d4c2460 }
            // n = 7, score = 200
            //   755f                 | inc                 ecx
            //   c74424380a000000     | cmp                 al, 0x30
            //   488d0520710200       | mov                 al, byte ptr [ecx]
            //   4889442430           | test                al, al
            //   488d542430           | jne                 0x263
            //   0f28442430           | and                 dword ptr [edi + 8], 0
            //   488d4c2460           | dec                 eax

        $sequence_6 = { 493bc0 4d13cc 4f8d040a 48894118 418bcc 488b4518 49f76508 }
            // n = 7, score = 200
            //   493bc0               | xor                 esi, ebp
            //   4d13cc               | inc                 ecx
            //   4f8d040a             | add                 ecx, ecx
            //   48894118             | xor                 esi, dword ptr [esp + 0x30]
            //   418bcc               | inc                 esp
            //   488b4518             | lea                 ecx, [edx - 0x70e44324]
            //   49f76508             | inc                 esp

        $sequence_7 = { 488d15a6450100 f20f1014c2 f20f1025???????? f20f59e6 f20f58c4 f20f58d5 f20f58c2 }
            // n = 7, score = 200
            //   488d15a6450100       | xor                 al, 0x46
            //   f20f1014c2           | mov                 byte ptr [ebp - 0x65], al
            //   f20f1025????????     |                     
            //   f20f59e6             | mov                 eax, dword ptr [esp + 0x40]
            //   f20f58c4             | add                 al, 0x58
            //   f20f58d5             | xor                 al, 0x35
            //   f20f58c2             | mov                 byte ptr [ebp - 0x64], al

        $sequence_8 = { 48895c2420 56 4156 4157 4883ec20 4c8b7110 48bbffffffffffffff7f }
            // n = 7, score = 200
            //   48895c2420           | add                 al, 0x1e
            //   56                   | mov                 eax, dword ptr [ebp + 0x10]
            //   4156                 | add                 al, 0x1e
            //   4157                 | xor                 al, 0x20
            //   4883ec20             | mov                 byte ptr [ebp + 0x32], al
            //   4c8b7110             | mov                 eax, dword ptr [ebp + 0x10]
            //   48bbffffffffffffff7f     | add    al, 0x1f

        $sequence_9 = { 48c745d800000000 4883d200 4c03c0 4c3bc0 4983d100 4a8d0c1a 483bca }
            // n = 7, score = 200
            //   48c745d800000000     | inc                 esp
            //   4883d200             | mov                 ecx, edx
            //   4c03c0               | mov                 edx, 0x40
            //   4c3bc0               | xor                 edx, edx
            //   4983d100             | dec                 eax
            //   4a8d0c1a             | mov                 eax, dword ptr [esp + 0x48]
            //   483bca               | mov                 ecx, 0x1000

    condition:
        7 of them and filesize < 1163264
}