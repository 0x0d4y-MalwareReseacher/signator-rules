rule win_pykspa_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.pykspa."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pykspa"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 881d???????? c605????????01 881d???????? e8???????? 83c424 891d???????? c605????????01 }
            // n = 7, score = 100
            //   881d????????         |                     
            //   c605????????01       |                     
            //   881d????????         |                     
            //   e8????????           |                     
            //   83c424               | add                 esp, 0x24
            //   891d????????         |                     
            //   c605????????01       |                     

        $sequence_1 = { ffd6 85c0 7509 c6457301 e9???????? 68???????? 57 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   7509                 | jne                 0xb
            //   c6457301             | mov                 byte ptr [ebp + 0x73], 1
            //   e9????????           |                     
            //   68????????           |                     
            //   57                   | push                edi

        $sequence_2 = { ffd3 8945d4 c645fb00 e8???????? 8bf0 85f6 8975e8 }
            // n = 7, score = 100
            //   ffd3                 | call                ebx
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   c645fb00             | mov                 byte ptr [ebp - 5], 0
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   8975e8               | mov                 dword ptr [ebp - 0x18], esi

        $sequence_3 = { 740f 50 e8???????? 84c0 59 0f84a1feffff ff75fc }
            // n = 7, score = 100
            //   740f                 | je                  0x11
            //   50                   | push                eax
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   59                   | pop                 ecx
            //   0f84a1feffff         | je                  0xfffffea7
            //   ff75fc               | push                dword ptr [ebp - 4]

        $sequence_4 = { 85c0 75f1 c3 a1???????? 85c0 7501 c3 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   75f1                 | jne                 0xfffffff3
            //   c3                   | ret                 
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   7501                 | jne                 3
            //   c3                   | ret                 

        $sequence_5 = { c645ff01 8b4510 8945f0 eb29 c705????????16000000 891d???????? 83c8ff }
            // n = 7, score = 100
            //   c645ff01             | mov                 byte ptr [ebp - 1], 1
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   eb29                 | jmp                 0x2b
            //   c705????????16000000     |     
            //   891d????????         |                     
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_6 = { 8b35???????? c605????????00 eb0d 85c0 740e 6a0a ffd6 }
            // n = 7, score = 100
            //   8b35????????         |                     
            //   c605????????00       |                     
            //   eb0d                 | jmp                 0xf
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10
            //   6a0a                 | push                0xa
            //   ffd6                 | call                esi

        $sequence_7 = { 85c0 7461 56 8b35???????? c605????????00 eb0d 85c0 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7461                 | je                  0x63
            //   56                   | push                esi
            //   8b35????????         |                     
            //   c605????????00       |                     
            //   eb0d                 | jmp                 0xf
            //   85c0                 | test                eax, eax

        $sequence_8 = { 56 be???????? 56 ff15???????? 833d????????00 ff750c 751d }
            // n = 7, score = 100
            //   56                   | push                esi
            //   be????????           |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   833d????????00       |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   751d                 | jne                 0x1f

        $sequence_9 = { 8a08 80f93a 7443 8078ff3a 743d 8078fe3a 7437 }
            // n = 7, score = 100
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   80f93a               | cmp                 cl, 0x3a
            //   7443                 | je                  0x45
            //   8078ff3a             | cmp                 byte ptr [eax - 1], 0x3a
            //   743d                 | je                  0x3f
            //   8078fe3a             | cmp                 byte ptr [eax - 2], 0x3a
            //   7437                 | je                  0x39

    condition:
        7 of them and filesize < 835584
}