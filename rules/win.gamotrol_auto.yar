rule win_gamotrol_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.gamotrol."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gamotrol"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645d853 c645d968 885dda c645db6c c645dc6c c645dd45 c645de78 }
            // n = 7, score = 100
            //   c645d853             | mov                 byte ptr [ebp - 0x28], 0x53
            //   c645d968             | mov                 byte ptr [ebp - 0x27], 0x68
            //   885dda               | mov                 byte ptr [ebp - 0x26], bl
            //   c645db6c             | mov                 byte ptr [ebp - 0x25], 0x6c
            //   c645dc6c             | mov                 byte ptr [ebp - 0x24], 0x6c
            //   c645dd45             | mov                 byte ptr [ebp - 0x23], 0x45
            //   c645de78             | mov                 byte ptr [ebp - 0x22], 0x78

        $sequence_1 = { 55 8bec 85f6 83c40e 83c4f2 41 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   85f6                 | test                esi, esi
            //   83c40e               | add                 esp, 0xe
            //   83c4f2               | add                 esp, -0xe
            //   41                   | inc                 ecx

        $sequence_2 = { 83ec1d 8be5 90 90 }
            // n = 4, score = 100
            //   83ec1d               | sub                 esp, 0x1d
            //   8be5                 | mov                 esp, ebp
            //   90                   | nop                 
            //   90                   | nop                 

        $sequence_3 = { 83c4f8 8be5 90 90 5d 8b30 03f3 }
            // n = 7, score = 100
            //   83c4f8               | add                 esp, -8
            //   8be5                 | mov                 esp, ebp
            //   90                   | nop                 
            //   90                   | nop                 
            //   5d                   | pop                 ebp
            //   8b30                 | mov                 esi, dword ptr [eax]
            //   03f3                 | add                 esi, ebx

        $sequence_4 = { ff15???????? e9???????? 90 90 55 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   e9????????           |                     
            //   90                   | nop                 
            //   90                   | nop                 
            //   55                   | push                ebp

        $sequence_5 = { 7416 8b06 89458c 8b85b0000000 85c0 7407 0500000300 }
            // n = 7, score = 100
            //   7416                 | je                  0x18
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   89458c               | mov                 dword ptr [ebp - 0x74], eax
            //   8b85b0000000         | mov                 eax, dword ptr [ebp + 0xb0]
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   0500000300           | add                 eax, 0x30000

        $sequence_6 = { 8b45f8 0fb74a06 83c001 83c728 }
            // n = 4, score = 100
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   0fb74a06             | movzx               ecx, word ptr [edx + 6]
            //   83c001               | add                 eax, 1
            //   83c728               | add                 edi, 0x28

        $sequence_7 = { 55 90 8bec 83c401 83ec01 }
            // n = 5, score = 100
            //   55                   | push                ebp
            //   90                   | nop                 
            //   8bec                 | mov                 ebp, esp
            //   83c401               | add                 esp, 1
            //   83ec01               | sub                 esp, 1

        $sequence_8 = { 668945d5 8845d7 c645c872 c645c975 c645ca6e c645cb64 c645cc6c }
            // n = 7, score = 100
            //   668945d5             | mov                 word ptr [ebp - 0x2b], ax
            //   8845d7               | mov                 byte ptr [ebp - 0x29], al
            //   c645c872             | mov                 byte ptr [ebp - 0x38], 0x72
            //   c645c975             | mov                 byte ptr [ebp - 0x37], 0x75
            //   c645ca6e             | mov                 byte ptr [ebp - 0x36], 0x6e
            //   c645cb64             | mov                 byte ptr [ebp - 0x35], 0x64
            //   c645cc6c             | mov                 byte ptr [ebp - 0x34], 0x6c

        $sequence_9 = { 830d????????ff 33c0 68???????? c705????????e4dd2e00 c705????????54dd2e00 }
            // n = 5, score = 100
            //   830d????????ff       |                     
            //   33c0                 | xor                 eax, eax
            //   68????????           |                     
            //   c705????????e4dd2e00     |     
            //   c705????????54dd2e00     |     

    condition:
        7 of them and filesize < 376832
}