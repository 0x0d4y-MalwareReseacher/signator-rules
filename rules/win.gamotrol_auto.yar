rule win_gamotrol_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.gamotrol."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gamotrol"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 668945e5 8845e7 c645d853 c645d968 }
            // n = 4, score = 100
            //   668945e5             | mov                 word ptr [ebp - 0x1b], ax
            //   8845e7               | mov                 byte ptr [ebp - 0x19], al
            //   c645d853             | mov                 byte ptr [ebp - 0x28], 0x53
            //   c645d968             | mov                 byte ptr [ebp - 0x27], 0x68

        $sequence_1 = { 8bec 83c40e 83c4f2 41 49 }
            // n = 5, score = 100
            //   8bec                 | mov                 ebp, esp
            //   83c40e               | add                 esp, 0xe
            //   83c4f2               | add                 esp, -0xe
            //   41                   | inc                 ecx
            //   49                   | dec                 ecx

        $sequence_2 = { 83c40b 83ec0b 68b4c2ffff 83c410 83c4f0 6aff 68???????? }
            // n = 7, score = 100
            //   83c40b               | add                 esp, 0xb
            //   83ec0b               | sub                 esp, 0xb
            //   68b4c2ffff           | push                0xffffc2b4
            //   83c410               | add                 esp, 0x10
            //   83c4f0               | add                 esp, -0x10
            //   6aff                 | push                -1
            //   68????????           |                     

        $sequence_3 = { 8be5 5d 60 8b45fc c1c803 c1c804 8945fc }
            // n = 7, score = 100
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   60                   | pushal              
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   c1c803               | ror                 eax, 3
            //   c1c804               | ror                 eax, 4
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_4 = { 6a01 ffd6 8b45e8 8b4de0 6a00 }
            // n = 5, score = 100
            //   6a01                 | push                1
            //   ffd6                 | call                esi
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   6a00                 | push                0

        $sequence_5 = { 6a00 89853cfaffff ffd7 68???????? ff9530faffff 33c0 8945ad }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   89853cfaffff         | mov                 dword ptr [ebp - 0x5c4], eax
            //   ffd7                 | call                edi
            //   68????????           |                     
            //   ff9530faffff         | call                dword ptr [ebp - 0x5d0]
            //   33c0                 | xor                 eax, eax
            //   8945ad               | mov                 dword ptr [ebp - 0x53], eax

        $sequence_6 = { 59 7409 8a03 8807 47 }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   7409                 | je                  0xb
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   8807                 | mov                 byte ptr [edi], al
            //   47                   | inc                 edi

        $sequence_7 = { 55 8bec 83c413 83ec13 68e0280000 83c40c 83c4f4 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83c413               | add                 esp, 0x13
            //   83ec13               | sub                 esp, 0x13
            //   68e0280000           | push                0x28e0
            //   83c40c               | add                 esp, 0xc
            //   83c4f4               | add                 esp, -0xc

        $sequence_8 = { 8be5 5d 8b4508 8b583c 03d8 895df4 }
            // n = 6, score = 100
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b583c               | mov                 ebx, dword ptr [eax + 0x3c]
            //   03d8                 | add                 ebx, eax
            //   895df4               | mov                 dword ptr [ebp - 0xc], ebx

        $sequence_9 = { 5d 85c0 7709 33c0 5f 5e 5b }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   85c0                 | test                eax, eax
            //   7709                 | ja                  0xb
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 376832
}