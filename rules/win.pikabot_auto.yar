rule win_pikabot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.pikabot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pikabot"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? ffd0 c9 c3 55 }
            // n = 5, score = 800
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_1 = { 88440de4 41 83f90c 7cf0 }
            // n = 4, score = 700
            //   88440de4             | mov                 byte ptr [ebp + ecx - 0x1c], al
            //   41                   | inc                 ecx
            //   83f90c               | cmp                 ecx, 0xc
            //   7cf0                 | jl                  0xfffffff2

        $sequence_2 = { 64a130000000 8b4068 83e070 8945fc }
            // n = 4, score = 600
            //   64a130000000         | mov                 eax, dword ptr fs:[0x30]
            //   8b4068               | mov                 eax, dword ptr [eax + 0x68]
            //   83e070               | and                 eax, 0x70
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_3 = { 8945f8 8b4510 8945f4 8b4510 48 }
            // n = 5, score = 600
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   48                   | dec                 eax

        $sequence_4 = { 894510 837df400 741a 8b45fc 8b4df8 }
            // n = 5, score = 600
            //   894510               | mov                 dword ptr [ebp + 0x10], eax
            //   837df400             | cmp                 dword ptr [ebp - 0xc], 0
            //   741a                 | je                  0x1c
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_5 = { 88440de8 41 83f909 7cf0 }
            // n = 4, score = 600
            //   88440de8             | mov                 byte ptr [ebp + ecx - 0x18], al
            //   41                   | inc                 ecx
            //   83f909               | cmp                 ecx, 9
            //   7cf0                 | jl                  0xfffffff2

        $sequence_6 = { 7ce9 8b4214 2b420c 5f }
            // n = 4, score = 600
            //   7ce9                 | jl                  0xffffffeb
            //   8b4214               | mov                 eax, dword ptr [edx + 0x14]
            //   2b420c               | sub                 eax, dword ptr [edx + 0xc]
            //   5f                   | pop                 edi

        $sequence_7 = { 88440dec 41 83f908 7cf0 }
            // n = 4, score = 600
            //   88440dec             | mov                 byte ptr [ebp + ecx - 0x14], al
            //   41                   | inc                 ecx
            //   83f908               | cmp                 ecx, 8
            //   7cf0                 | jl                  0xfffffff2

        $sequence_8 = { f30f7e05???????? 660fefc8 0f57c0 660f60c8 }
            // n = 4, score = 600
            //   f30f7e05????????     |                     
            //   660fefc8             | pxor                xmm1, xmm0
            //   0f57c0               | xorps               xmm0, xmm0
            //   660f60c8             | punpcklbw           xmm1, xmm0

        $sequence_9 = { 8945f8 ebd3 8b4508 c9 c3 }
            // n = 5, score = 600
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   ebd3                 | jmp                 0xffffffd5
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   c9                   | leave               
            //   c3                   | ret                 

        $sequence_10 = { c20c00 33c0 c3 33c0 c3 33c0 c3 }
            // n = 7, score = 500
            //   c20c00               | ret                 0xc
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 

        $sequence_11 = { 885de8 46 8d55d4 8bce e8???????? ffd0 0fb7c0 }
            // n = 7, score = 500
            //   885de8               | mov                 byte ptr [ebp - 0x18], bl
            //   46                   | inc                 esi
            //   8d55d4               | lea                 edx, [ebp - 0x2c]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   0fb7c0               | movzx               eax, ax

        $sequence_12 = { 33c0 64a130000000 8b4002 25ff000000 8945fc }
            // n = 5, score = 500
            //   33c0                 | xor                 eax, eax
            //   64a130000000         | mov                 eax, dword ptr fs:[0x30]
            //   8b4002               | mov                 eax, dword ptr [eax + 2]
            //   25ff000000           | and                 eax, 0xff
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_13 = { f644240101 7502 eb07 c745fc01000000 }
            // n = 4, score = 500
            //   f644240101           | test                byte ptr [esp + 1], 1
            //   7502                 | jne                 4
            //   eb07                 | jmp                 9
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1

    condition:
        7 of them and filesize < 961536
}