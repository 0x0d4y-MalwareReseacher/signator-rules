rule win_darkdew_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.darkdew."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.darkdew"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5d c3 e8???????? 68???????? ffd6 e8???????? e8???????? }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   e8????????           |                     
            //   68????????           |                     
            //   ffd6                 | call                esi
            //   e8????????           |                     
            //   e8????????           |                     

        $sequence_1 = { 8bd0 c645fc01 837a1408 7202 }
            // n = 4, score = 100
            //   8bd0                 | mov                 edx, eax
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   837a1408             | cmp                 dword ptr [edx + 0x14], 8
            //   7202                 | jb                  4

        $sequence_2 = { d1f8 894dfc 8955f4 8945f0 56 57 3bd0 }
            // n = 7, score = 100
            //   d1f8                 | sar                 eax, 1
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   56                   | push                esi
            //   57                   | push                edi
            //   3bd0                 | cmp                 edx, eax

        $sequence_3 = { 0f87a8040000 52 51 e8???????? 83c408 c645fc17 8b55cc }
            // n = 7, score = 100
            //   0f87a8040000         | ja                  0x4ae
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   c645fc17             | mov                 byte ptr [ebp - 4], 0x17
            //   8b55cc               | mov                 edx, dword ptr [ebp - 0x34]

        $sequence_4 = { c78554feffff00000000 c7856efeffff00000000 898d60feffff c78558feffff02000000 ff15???????? c645fc11 }
            // n = 6, score = 100
            //   c78554feffff00000000     | mov    dword ptr [ebp - 0x1ac], 0
            //   c7856efeffff00000000     | mov    dword ptr [ebp - 0x192], 0
            //   898d60feffff         | mov                 dword ptr [ebp - 0x1a0], ecx
            //   c78558feffff02000000     | mov    dword ptr [ebp - 0x1a8], 2
            //   ff15????????         |                     
            //   c645fc11             | mov                 byte ptr [ebp - 4], 0x11

        $sequence_5 = { eb1a c685e8feffff00 8d8d68ffffff ffb5e8feffff }
            // n = 4, score = 100
            //   eb1a                 | jmp                 0x1c
            //   c685e8feffff00       | mov                 byte ptr [ebp - 0x118], 0
            //   8d8d68ffffff         | lea                 ecx, [ebp - 0x98]
            //   ffb5e8feffff         | push                dword ptr [ebp - 0x118]

        $sequence_6 = { b991000000 894508 8dbda8fdffff 8bf0 8d8574fcffff 50 }
            // n = 6, score = 100
            //   b991000000           | mov                 ecx, 0x91
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   8dbda8fdffff         | lea                 edi, [ebp - 0x258]
            //   8bf0                 | mov                 esi, eax
            //   8d8574fcffff         | lea                 eax, [ebp - 0x38c]
            //   50                   | push                eax

        $sequence_7 = { 83e03f c1f906 6bf038 03348da0f30110 }
            // n = 4, score = 100
            //   83e03f               | and                 eax, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bf038               | imul                esi, eax, 0x38
            //   03348da0f30110       | add                 esi, dword ptr [ecx*4 + 0x1001f3a0]

        $sequence_8 = { 8a01 8d4901 88440aff 84c0 75f3 b950000000 8db578feffff }
            // n = 7, score = 100
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   8d4901               | lea                 ecx, [ecx + 1]
            //   88440aff             | mov                 byte ptr [edx + ecx - 1], al
            //   84c0                 | test                al, al
            //   75f3                 | jne                 0xfffffff5
            //   b950000000           | mov                 ecx, 0x50
            //   8db578feffff         | lea                 esi, [ebp - 0x188]

        $sequence_9 = { 50 68???????? ffd3 837dcc10 8d45b8 8b35???????? 0f4345b8 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   68????????           |                     
            //   ffd3                 | call                ebx
            //   837dcc10             | cmp                 dword ptr [ebp - 0x34], 0x10
            //   8d45b8               | lea                 eax, [ebp - 0x48]
            //   8b35????????         |                     
            //   0f4345b8             | cmovae              eax, dword ptr [ebp - 0x48]

    condition:
        7 of them and filesize < 279552
}