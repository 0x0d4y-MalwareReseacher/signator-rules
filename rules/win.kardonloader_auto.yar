rule win_kardonloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.kardonloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kardonloader"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a03 59 f7f9 8bc2 83e201 }
            // n = 5, score = 200
            //   6a03                 | push                3
            //   59                   | pop                 ecx
            //   f7f9                 | idiv                ecx
            //   8bc2                 | mov                 eax, edx
            //   83e201               | and                 edx, 1

        $sequence_1 = { 0ac8 c0e204 8b45fc 880c30 0fb6441f02 8a8018314000 c0e802 }
            // n = 7, score = 200
            //   0ac8                 | or                  cl, al
            //   c0e204               | shl                 dl, 4
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   880c30               | mov                 byte ptr [eax + esi], cl
            //   0fb6441f02           | movzx               eax, byte ptr [edi + ebx + 2]
            //   8a8018314000         | mov                 al, byte ptr [eax + 0x403118]
            //   c0e802               | shr                 al, 2

        $sequence_2 = { ff35???????? ff35???????? e8???????? 83c438 e9???????? }
            // n = 5, score = 200
            //   ff35????????         |                     
            //   ff35????????         |                     
            //   e8????????           |                     
            //   83c438               | add                 esp, 0x38
            //   e9????????           |                     

        $sequence_3 = { 8d7801 0f45f8 6bc103 8b4d10 }
            // n = 4, score = 200
            //   8d7801               | lea                 edi, [eax + 1]
            //   0f45f8               | cmovne              edi, eax
            //   6bc103               | imul                eax, ecx, 3
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]

        $sequence_4 = { 8d4dfc 83c40c 894704 51 }
            // n = 4, score = 200
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   83c40c               | add                 esp, 0xc
            //   894704               | mov                 dword ptr [edi + 4], eax
            //   51                   | push                ecx

        $sequence_5 = { c1e802 03d2 8a0418 880437 8b4508 }
            // n = 5, score = 200
            //   c1e802               | shr                 eax, 2
            //   03d2                 | add                 edx, edx
            //   8a0418               | mov                 al, byte ptr [eax + ebx]
            //   880437               | mov                 byte ptr [edi + esi], al
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_6 = { 8b400c 8b00 85c0 7417 }
            // n = 4, score = 200
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   85c0                 | test                eax, eax
            //   7417                 | je                  0x19

        $sequence_7 = { ba???????? b9???????? 8d857cffffff 0f44ca 50 }
            // n = 5, score = 200
            //   ba????????           |                     
            //   b9????????           |                     
            //   8d857cffffff         | lea                 eax, [ebp - 0x84]
            //   0f44ca               | cmove               ecx, edx
            //   50                   | push                eax

        $sequence_8 = { ff35???????? e8???????? 83c438 e9???????? 5f }
            // n = 5, score = 200
            //   ff35????????         |                     
            //   e8????????           |                     
            //   83c438               | add                 esp, 0x38
            //   e9????????           |                     
            //   5f                   | pop                 edi

        $sequence_9 = { 50 8d8578fcfeff 50 ff15???????? 85c0 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   8d8578fcfeff         | lea                 eax, [ebp - 0x10388]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

    condition:
        7 of them and filesize < 57344
}