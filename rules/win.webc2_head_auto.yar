rule win_webc2_head_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.webc2_head."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_head"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d7c2428 f3a5 895c2410 88542410 8b542410 8bc2 }
            // n = 6, score = 100
            //   8d7c2428             | lea                 edi, [esp + 0x28]
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   895c2410             | mov                 dword ptr [esp + 0x10], ebx
            //   88542410             | mov                 byte ptr [esp + 0x10], dl
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]
            //   8bc2                 | mov                 eax, edx

        $sequence_1 = { 8b542410 8bc2 c1e802 83e03f a4 7c0b 83f840 }
            // n = 7, score = 100
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]
            //   8bc2                 | mov                 eax, edx
            //   c1e802               | shr                 eax, 2
            //   83e03f               | and                 eax, 0x3f
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   7c0b                 | jl                  0xd
            //   83f840               | cmp                 eax, 0x40

        $sequence_2 = { eb02 b03d 8b742410 8bcb 83e103 8806 }
            // n = 6, score = 100
            //   eb02                 | jmp                 4
            //   b03d                 | mov                 al, 0x3d
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   8bcb                 | mov                 ecx, ebx
            //   83e103               | and                 ecx, 3
            //   8806                 | mov                 byte ptr [esi], al

        $sequence_3 = { 8d4c2418 8d942444080000 03f0 51 50 52 55 }
            // n = 7, score = 100
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   8d942444080000       | lea                 edx, [esp + 0x844]
            //   03f0                 | add                 esi, eax
            //   51                   | push                ecx
            //   50                   | push                eax
            //   52                   | push                edx
            //   55                   | push                ebp

        $sequence_4 = { f7e1 d1ea a4 8d049500000000 8d0c52 89442418 894c2438 }
            // n = 7, score = 100
            //   f7e1                 | mul                 ecx
            //   d1ea                 | shr                 edx, 1
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   8d049500000000       | lea                 eax, [edx*4]
            //   8d0c52               | lea                 ecx, [edx + edx*2]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   894c2438             | mov                 dword ptr [esp + 0x38], ecx

        $sequence_5 = { 8b048540cb4000 8d04c8 8b0b 8908 8a4d00 }
            // n = 5, score = 100
            //   8b048540cb4000       | mov                 eax, dword ptr [eax*4 + 0x40cb40]
            //   8d04c8               | lea                 eax, [eax + ecx*8]
            //   8b0b                 | mov                 ecx, dword ptr [ebx]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8a4d00               | mov                 cl, byte ptr [ebp]

        $sequence_6 = { 80f941 89442414 7c0d 80f95a 7f08 0fbee9 }
            // n = 6, score = 100
            //   80f941               | cmp                 cl, 0x41
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   7c0d                 | jl                  0xf
            //   80f95a               | cmp                 cl, 0x5a
            //   7f08                 | jg                  0xa
            //   0fbee9               | movsx               ebp, cl

        $sequence_7 = { 8dbc248c010000 896c2428 f3ab 8d442434 }
            // n = 4, score = 100
            //   8dbc248c010000       | lea                 edi, [esp + 0x18c]
            //   896c2428             | mov                 dword ptr [esp + 0x28], ebp
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8d442434             | lea                 eax, [esp + 0x34]

        $sequence_8 = { 8d9e38994000 803b00 8bcb 742c }
            // n = 4, score = 100
            //   8d9e38994000         | lea                 ebx, [esi + 0x409938]
            //   803b00               | cmp                 byte ptr [ebx], 0
            //   8bcb                 | mov                 ecx, ebx
            //   742c                 | je                  0x2e

        $sequence_9 = { 6a06 55 c7442430804f1200 ffd7 bf???????? 83c9ff 33c0 }
            // n = 7, score = 100
            //   6a06                 | push                6
            //   55                   | push                ebp
            //   c7442430804f1200     | mov                 dword ptr [esp + 0x30], 0x124f80
            //   ffd7                 | call                edi
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 106496
}