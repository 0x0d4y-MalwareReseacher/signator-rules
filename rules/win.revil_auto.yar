rule win_revil_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.revil."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.revil"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 337e70 33be98000000 33bec0000000 895df8 8b5e18 335e40 335e68 }
            // n = 7, score = 4600
            //   337e70               | xor                 edi, dword ptr [esi + 0x70]
            //   33be98000000         | xor                 edi, dword ptr [esi + 0x98]
            //   33bec0000000         | xor                 edi, dword ptr [esi + 0xc0]
            //   895df8               | mov                 dword ptr [ebp - 8], ebx
            //   8b5e18               | mov                 ebx, dword ptr [esi + 0x18]
            //   335e40               | xor                 ebx, dword ptr [esi + 0x40]
            //   335e68               | xor                 ebx, dword ptr [esi + 0x68]

        $sequence_1 = { 33c0 8b5a10 8b5214 0facf715 }
            // n = 4, score = 4600
            //   33c0                 | xor                 eax, eax
            //   8b5a10               | mov                 ebx, dword ptr [edx + 0x10]
            //   8b5214               | mov                 edx, dword ptr [edx + 0x14]
            //   0facf715             | shrd                edi, esi, 0x15

        $sequence_2 = { 43 895db8 0fb60b 51 }
            // n = 4, score = 4600
            //   43                   | inc                 ebx
            //   895db8               | mov                 dword ptr [ebp - 0x48], ebx
            //   0fb60b               | movzx               ecx, byte ptr [ebx]
            //   51                   | push                ecx

        $sequence_3 = { c1e118 0bc3 c1ea08 0bca 8b5508 898a9c000000 }
            // n = 6, score = 4600
            //   c1e118               | shl                 ecx, 0x18
            //   0bc3                 | or                  eax, ebx
            //   c1ea08               | shr                 edx, 8
            //   0bca                 | or                  ecx, edx
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   898a9c000000         | mov                 dword ptr [edx + 0x9c], ecx

        $sequence_4 = { 898fb4000000 33c0 8b5f48 8b7f4c 8b55dc 8bca c1e11d }
            // n = 7, score = 4600
            //   898fb4000000         | mov                 dword ptr [edi + 0xb4], ecx
            //   33c0                 | xor                 eax, eax
            //   8b5f48               | mov                 ebx, dword ptr [edi + 0x48]
            //   8b7f4c               | mov                 edi, dword ptr [edi + 0x4c]
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]
            //   8bca                 | mov                 ecx, edx
            //   c1e11d               | shl                 ecx, 0x1d

        $sequence_5 = { ff15???????? 8bf0 6a01 ff15???????? ff15???????? 3bf0 74ee }
            // n = 7, score = 4600
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   6a01                 | push                1
            //   ff15????????         |                     
            //   ff15????????         |                     
            //   3bf0                 | cmp                 esi, eax
            //   74ee                 | je                  0xfffffff0

        $sequence_6 = { 0f846a060000 83e813 0f8461060000 83e83d 0f84fa020000 f6c204 7411 }
            // n = 7, score = 4600
            //   0f846a060000         | je                  0x670
            //   83e813               | sub                 eax, 0x13
            //   0f8461060000         | je                  0x667
            //   83e83d               | sub                 eax, 0x3d
            //   0f84fa020000         | je                  0x300
            //   f6c204               | test                dl, 4
            //   7411                 | je                  0x13

        $sequence_7 = { 8b5ddc 0fa4da06 c1e91a 0bc2 c1e306 8b5508 }
            // n = 6, score = 4600
            //   8b5ddc               | mov                 ebx, dword ptr [ebp - 0x24]
            //   0fa4da06             | shld                edx, ebx, 6
            //   c1e91a               | shr                 ecx, 0x1a
            //   0bc2                 | or                  eax, edx
            //   c1e306               | shl                 ebx, 6
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]

        $sequence_8 = { 334e54 334e7c 338ea4000000 8b5614 }
            // n = 4, score = 4600
            //   334e54               | xor                 ecx, dword ptr [esi + 0x54]
            //   334e7c               | xor                 ecx, dword ptr [esi + 0x7c]
            //   338ea4000000         | xor                 ecx, dword ptr [esi + 0xa4]
            //   8b5614               | mov                 edx, dword ptr [esi + 0x14]

        $sequence_9 = { e9???????? 6a01 8d45e0 50 8d45e8 50 }
            // n = 6, score = 4600
            //   e9????????           |                     
            //   6a01                 | push                1
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   50                   | push                eax
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 155794432
}