rule win_revil_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.revil."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.revil"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 8b7d0c 8b4508 59 3bfe }
            // n = 6, score = 4600
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   59                   | pop                 ecx
            //   3bfe                 | cmp                 edi, esi

        $sequence_1 = { 03c0 0bf0 8bc2 334324 8bce 334b20 }
            // n = 6, score = 4600
            //   03c0                 | add                 eax, eax
            //   0bf0                 | or                  esi, eax
            //   8bc2                 | mov                 eax, edx
            //   334324               | xor                 eax, dword ptr [ebx + 0x24]
            //   8bce                 | mov                 ecx, esi
            //   334b20               | xor                 ecx, dword ptr [ebx + 0x20]

        $sequence_2 = { 897e08 8955f8 f645a001 0f8419010000 f7c200600000 0f84c6000000 f7c200200000 }
            // n = 7, score = 4600
            //   897e08               | mov                 dword ptr [esi + 8], edi
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   f645a001             | test                byte ptr [ebp - 0x60], 1
            //   0f8419010000         | je                  0x11f
            //   f7c200600000         | test                edx, 0x6000
            //   0f84c6000000         | je                  0xcc
            //   f7c200200000         | test                edx, 0x2000

        $sequence_3 = { 8b4ee8 334efc 8b46ec 33c1 890e 894604 }
            // n = 6, score = 4600
            //   8b4ee8               | mov                 ecx, dword ptr [esi - 0x18]
            //   334efc               | xor                 ecx, dword ptr [esi - 4]
            //   8b46ec               | mov                 eax, dword ptr [esi - 0x14]
            //   33c1                 | xor                 eax, ecx
            //   890e                 | mov                 dword ptr [esi], ecx
            //   894604               | mov                 dword ptr [esi + 4], eax

        $sequence_4 = { 8975f4 894dec 897d10 e9???????? 85f6 0f8482030000 837e0402 }
            // n = 7, score = 4600
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   897d10               | mov                 dword ptr [ebp + 0x10], edi
            //   e9????????           |                     
            //   85f6                 | test                esi, esi
            //   0f8482030000         | je                  0x388
            //   837e0402             | cmp                 dword ptr [esi + 4], 2

        $sequence_5 = { f6c210 0f84d6020000 83e2ef 0fbec1 8955f8 ddd8 83e862 }
            // n = 7, score = 4600
            //   f6c210               | test                dl, 0x10
            //   0f84d6020000         | je                  0x2dc
            //   83e2ef               | and                 edx, 0xffffffef
            //   0fbec1               | movsx               eax, cl
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   ddd8                 | fstp                st(0)
            //   83e862               | sub                 eax, 0x62

        $sequence_6 = { 898f90000000 8bcf 898194000000 33b1b8000000 3391bc000000 }
            // n = 5, score = 4600
            //   898f90000000         | mov                 dword ptr [edi + 0x90], ecx
            //   8bcf                 | mov                 ecx, edi
            //   898194000000         | mov                 dword ptr [ecx + 0x94], eax
            //   33b1b8000000         | xor                 esi, dword ptr [ecx + 0xb8]
            //   3391bc000000         | xor                 edx, dword ptr [ecx + 0xbc]

        $sequence_7 = { 3355fc 89b1a0000000 8991a4000000 33d2 8b4ddc 8bf1 8b45f8 }
            // n = 7, score = 4600
            //   3355fc               | xor                 edx, dword ptr [ebp - 4]
            //   89b1a0000000         | mov                 dword ptr [ecx + 0xa0], esi
            //   8991a4000000         | mov                 dword ptr [ecx + 0xa4], edx
            //   33d2                 | xor                 edx, edx
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   8bf1                 | mov                 esi, ecx
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_8 = { 7508 85ff 0f850a010000 8b7518 b8c8000000 }
            // n = 5, score = 4600
            //   7508                 | jne                 0xa
            //   85ff                 | test                edi, edi
            //   0f850a010000         | jne                 0x110
            //   8b7518               | mov                 esi, dword ptr [ebp + 0x18]
            //   b8c8000000           | mov                 eax, 0xc8

        $sequence_9 = { 57 33db 89b53cffffff 8d8540ffffff 43 }
            // n = 5, score = 4600
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx
            //   89b53cffffff         | mov                 dword ptr [ebp - 0xc4], esi
            //   8d8540ffffff         | lea                 eax, [ebp - 0xc0]
            //   43                   | inc                 ebx

    condition:
        7 of them and filesize < 155794432
}