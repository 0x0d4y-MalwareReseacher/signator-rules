rule win_babylon_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.babylon_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.babylon_rat"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb07 8b4508 c6404101 5f 8bc6 5e 5b }
            // n = 7, score = 100
            //   eb07                 | jmp                 9
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   c6404101             | mov                 byte ptr [eax + 0x41], 1
            //   5f                   | pop                 edi
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_1 = { ff750c 56 e8???????? ebb3 33db ff7638 e8???????? }
            // n = 7, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   56                   | push                esi
            //   e8????????           |                     
            //   ebb3                 | jmp                 0xffffffb5
            //   33db                 | xor                 ebx, ebx
            //   ff7638               | push                dword ptr [esi + 0x38]
            //   e8????????           |                     

        $sequence_2 = { ff75f4 e8???????? 83c448 53 8b5d08 53 e8???????? }
            // n = 7, score = 100
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   e8????????           |                     
            //   83c448               | add                 esp, 0x48
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   53                   | push                ebx
            //   e8????????           |                     

        $sequence_3 = { 8b450c 33c9 66394ddc 0f95c1 8908 8be5 5d }
            // n = 7, score = 100
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   33c9                 | xor                 ecx, ecx
            //   66394ddc             | cmp                 word ptr [ebp - 0x24], cx
            //   0f95c1               | setne               cl
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp

        $sequence_4 = { ab 8b7d10 837e0800 7511 ff15???????? 57 894604 }
            // n = 7, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   8b7d10               | mov                 edi, dword ptr [ebp + 0x10]
            //   837e0800             | cmp                 dword ptr [esi + 8], 0
            //   7511                 | jne                 0x13
            //   ff15????????         |                     
            //   57                   | push                edi
            //   894604               | mov                 dword ptr [esi + 4], eax

        $sequence_5 = { eb05 be???????? 8b4dfc 8bc6 5f 5e 33cd }
            // n = 7, score = 100
            //   eb05                 | jmp                 7
            //   be????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8bc6                 | mov                 eax, esi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   33cd                 | xor                 ecx, ebp

        $sequence_6 = { ff36 0fb6c9 51 ff761c ff7510 ff7508 e8???????? }
            // n = 7, score = 100
            //   ff36                 | push                dword ptr [esi]
            //   0fb6c9               | movzx               ecx, cl
            //   51                   | push                ecx
            //   ff761c               | push                dword ptr [esi + 0x1c]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     

        $sequence_7 = { ff75b0 ff7008 ff75dc e8???????? 83c40c 8945d4 85c0 }
            // n = 7, score = 100
            //   ff75b0               | push                dword ptr [ebp - 0x50]
            //   ff7008               | push                dword ptr [eax + 8]
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   85c0                 | test                eax, eax

        $sequence_8 = { f20f1109 5a 660bc2 66894108 8b85f8feffff 0a8528ffffff 84c2 }
            // n = 7, score = 100
            //   f20f1109             | movsd               qword ptr [ecx], xmm1
            //   5a                   | pop                 edx
            //   660bc2               | or                  ax, dx
            //   66894108             | mov                 word ptr [ecx + 8], ax
            //   8b85f8feffff         | mov                 eax, dword ptr [ebp - 0x108]
            //   0a8528ffffff         | or                  al, byte ptr [ebp - 0xd8]
            //   84c2                 | test                dl, al

        $sequence_9 = { 8995f8feffff 038520ffffff 8985fcfeffff 8b8510ffffff 8a4008 0a4108 a801 }
            // n = 7, score = 100
            //   8995f8feffff         | mov                 dword ptr [ebp - 0x108], edx
            //   038520ffffff         | add                 eax, dword ptr [ebp - 0xe0]
            //   8985fcfeffff         | mov                 dword ptr [ebp - 0x104], eax
            //   8b8510ffffff         | mov                 eax, dword ptr [ebp - 0xf0]
            //   8a4008               | mov                 al, byte ptr [eax + 8]
            //   0a4108               | or                  al, byte ptr [ecx + 8]
            //   a801                 | test                al, 1

    condition:
        7 of them and filesize < 1604608
}