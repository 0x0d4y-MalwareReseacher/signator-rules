rule win_babylon_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.babylon_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.babylon_rat"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff7514 ff7008 57 e8???????? 83c41c e9???????? ff7004 }
            // n = 7, score = 100
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   ff7008               | push                dword ptr [eax + 8]
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c
            //   e9????????           |                     
            //   ff7004               | push                dword ptr [eax + 4]

        $sequence_1 = { 6800000040 68???????? 68???????? 57 ffd6 57 8b3d???????? }
            // n = 7, score = 100
            //   6800000040           | push                0x40000000
            //   68????????           |                     
            //   68????????           |                     
            //   57                   | push                edi
            //   ffd6                 | call                esi
            //   57                   | push                edi
            //   8b3d????????         |                     

        $sequence_2 = { e8???????? eb02 8bc3 8b7508 834dfcff 56 894704 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb02                 | jmp                 4
            //   8bc3                 | mov                 eax, ebx
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff
            //   56                   | push                esi
            //   894704               | mov                 dword ptr [edi + 4], eax

        $sequence_3 = { 8b4004 0fbf1450 52 57 e8???????? 59 98 }
            // n = 7, score = 100
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   0fbf1450             | movsx               edx, word ptr [eax + edx*2]
            //   52                   | push                edx
            //   57                   | push                edi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   98                   | cwde                

        $sequence_4 = { 837bf474 7497 c6421601 eb91 ff73e4 ff32 e8???????? }
            // n = 7, score = 100
            //   837bf474             | cmp                 dword ptr [ebx - 0xc], 0x74
            //   7497                 | je                  0xffffff99
            //   c6421601             | mov                 byte ptr [edx + 0x16], 1
            //   eb91                 | jmp                 0xffffff93
            //   ff73e4               | push                dword ptr [ebx - 0x1c]
            //   ff32                 | push                dword ptr [edx]
            //   e8????????           |                     

        $sequence_5 = { ff15???????? 50 680a190000 e9???????? e8???????? 8945f8 59 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   50                   | push                eax
            //   680a190000           | push                0x190a
            //   e9????????           |                     
            //   e8????????           |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   59                   | pop                 ecx

        $sequence_6 = { ff7310 68???????? e9???????? 8b4310 50 56 898508ffffff }
            // n = 7, score = 100
            //   ff7310               | push                dword ptr [ebx + 0x10]
            //   68????????           |                     
            //   e9????????           |                     
            //   8b4310               | mov                 eax, dword ptr [ebx + 0x10]
            //   50                   | push                eax
            //   56                   | push                esi
            //   898508ffffff         | mov                 dword ptr [ebp - 0xf8], eax

        $sequence_7 = { ff7740 ff33 e8???????? 8bc8 8b4344 894508 40 }
            // n = 7, score = 100
            //   ff7740               | push                dword ptr [edi + 0x40]
            //   ff33                 | push                dword ptr [ebx]
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   8b4344               | mov                 eax, dword ptr [ebx + 0x44]
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   40                   | inc                 eax

        $sequence_8 = { f20f1006 f20f110424 e8???????? 59 59 8bf8 8bda }
            // n = 7, score = 100
            //   f20f1006             | movsd               xmm0, qword ptr [esi]
            //   f20f110424           | movsd               qword ptr [esp], xmm0
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8bf8                 | mov                 edi, eax
            //   8bda                 | mov                 ebx, edx

        $sequence_9 = { ebc4 3bf7 7521 8b7510 8b7f08 ff36 ff7710 }
            // n = 7, score = 100
            //   ebc4                 | jmp                 0xffffffc6
            //   3bf7                 | cmp                 esi, edi
            //   7521                 | jne                 0x23
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]
            //   8b7f08               | mov                 edi, dword ptr [edi + 8]
            //   ff36                 | push                dword ptr [esi]
            //   ff7710               | push                dword ptr [edi + 0x10]

    condition:
        7 of them and filesize < 1604608
}