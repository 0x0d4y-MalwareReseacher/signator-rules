rule win_thumbthief_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.thumbthief."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thumbthief"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? c645fc01 33d2 8b4df0 be80510100 8b4118 f7f6 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   33d2                 | xor                 edx, edx
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   be80510100           | mov                 esi, 0x15180
            //   8b4118               | mov                 eax, dword ptr [ecx + 0x18]
            //   f7f6                 | div                 esi

        $sequence_1 = { e8???????? eb05 e8???????? 89460c 8b4710 8b560c 894610 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb05                 | jmp                 7
            //   e8????????           |                     
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   8b4710               | mov                 eax, dword ptr [edi + 0x10]
            //   8b560c               | mov                 edx, dword ptr [esi + 0xc]
            //   894610               | mov                 dword ptr [esi + 0x10], eax

        $sequence_2 = { 8d8d18feffff e8???????? c645fc05 8d8d68feffff e8???????? c645fc04 8d8d54feffff }
            // n = 7, score = 100
            //   8d8d18feffff         | lea                 ecx, dword ptr [ebp - 0x1e8]
            //   e8????????           |                     
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5
            //   8d8d68feffff         | lea                 ecx, dword ptr [ebp - 0x198]
            //   e8????????           |                     
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8d8d54feffff         | lea                 ecx, dword ptr [ebp - 0x1ac]

        $sequence_3 = { ff15???????? 8944b5f8 85c0 7504 ffd3 eb01 46 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8944b5f8             | mov                 dword ptr [ebp + esi*4 - 8], eax
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6
            //   ffd3                 | call                ebx
            //   eb01                 | jmp                 3
            //   46                   | inc                 esi

        $sequence_4 = { ff750c 8d5e58 ff5018 8bf0 0fb60e 880b 8d4e04 }
            // n = 7, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8d5e58               | lea                 ebx, dword ptr [esi + 0x58]
            //   ff5018               | call                dword ptr [eax + 0x18]
            //   8bf0                 | mov                 esi, eax
            //   0fb60e               | movzx               ecx, byte ptr [esi]
            //   880b                 | mov                 byte ptr [ebx], cl
            //   8d4e04               | lea                 ecx, dword ptr [esi + 4]

        $sequence_5 = { e8???????? c645fc01 8d4d98 e8???????? c645fc02 8d4dc4 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8d4d98               | lea                 ecx, dword ptr [ebp - 0x68]
            //   e8????????           |                     
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8d4dc4               | lea                 ecx, dword ptr [ebp - 0x3c]
            //   e8????????           |                     

        $sequence_6 = { ff34b8 e8???????? 8b4610 59 891cb8 47 3b7e08 }
            // n = 7, score = 100
            //   ff34b8               | push                dword ptr [eax + edi*4]
            //   e8????????           |                     
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]
            //   59                   | pop                 ecx
            //   891cb8               | mov                 dword ptr [eax + edi*4], ebx
            //   47                   | inc                 edi
            //   3b7e08               | cmp                 edi, dword ptr [esi + 8]

        $sequence_7 = { e8???????? 83c414 8bd6 8bcb e8???????? 837d1000 7515 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   8bd6                 | mov                 edx, esi
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0
            //   7515                 | jne                 0x17

        $sequence_8 = { ff74242c 6a00 68e9fd0000 ff15???????? 89442438 8d0c00 51 }
            // n = 7, score = 100
            //   ff74242c             | push                dword ptr [esp + 0x2c]
            //   6a00                 | push                0
            //   68e9fd0000           | push                0xfde9
            //   ff15????????         |                     
            //   89442438             | mov                 dword ptr [esp + 0x38], eax
            //   8d0c00               | lea                 ecx, dword ptr [eax + eax]
            //   51                   | push                ecx

        $sequence_9 = { e8???????? c645fc0c 8d4de4 e8???????? c645fc0b 8d4d84 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c645fc0c             | mov                 byte ptr [ebp - 4], 0xc
            //   8d4de4               | lea                 ecx, dword ptr [ebp - 0x1c]
            //   e8????????           |                     
            //   c645fc0b             | mov                 byte ptr [ebp - 4], 0xb
            //   8d4d84               | lea                 ecx, dword ptr [ebp - 0x7c]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 4235264
}