rule win_thumbthief_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.thumbthief."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thumbthief"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f20f118d70ffffff 6a7e 50 66898578ffffff 8bf1 8d857affffff 50 }
            // n = 7, score = 100
            //   f20f118d70ffffff     | movsd               qword ptr [ebp - 0x90], xmm1
            //   6a7e                 | push                0x7e
            //   50                   | push                eax
            //   66898578ffffff       | mov                 word ptr [ebp - 0x88], ax
            //   8bf1                 | mov                 esi, ecx
            //   8d857affffff         | lea                 eax, dword ptr [ebp - 0x86]
            //   50                   | push                eax

        $sequence_1 = { ff758c 8d4d84 e8???????? 8975fc 8b458c 8b4cf590 854810 }
            // n = 7, score = 100
            //   ff758c               | push                dword ptr [ebp - 0x74]
            //   8d4d84               | lea                 ecx, dword ptr [ebp - 0x7c]
            //   e8????????           |                     
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   8b458c               | mov                 eax, dword ptr [ebp - 0x74]
            //   8b4cf590             | mov                 ecx, dword ptr [ebp + esi*8 - 0x70]
            //   854810               | test                dword ptr [eax + 0x10], ecx

        $sequence_2 = { e8???????? c785b0feffff14000000 c785b4feffffeb000000 8b8580feffff 8985b8feffff c785bcfeffffff000000 8db5b0feffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c785b0feffff14000000     | mov    dword ptr [ebp - 0x150], 0x14
            //   c785b4feffffeb000000     | mov    dword ptr [ebp - 0x14c], 0xeb
            //   8b8580feffff         | mov                 eax, dword ptr [ebp - 0x180]
            //   8985b8feffff         | mov                 dword ptr [ebp - 0x148], eax
            //   c785bcfeffffff000000     | mov    dword ptr [ebp - 0x144], 0xff
            //   8db5b0feffff         | lea                 esi, dword ptr [ebp - 0x150]

        $sequence_3 = { 8d85b4deffff 50 e8???????? 84c0 7413 c645fc09 c785f4deffff04645800 }
            // n = 7, score = 100
            //   8d85b4deffff         | lea                 eax, dword ptr [ebp - 0x214c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7413                 | je                  0x15
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9
            //   c785f4deffff04645800     | mov    dword ptr [ebp - 0x210c], 0x586404

        $sequence_4 = { e8???????? 8d86ec040000 8bcb 50 e8???????? 8bcb e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d86ec040000         | lea                 eax, dword ptr [esi + 0x4ec]
            //   8bcb                 | mov                 ecx, ebx
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     

        $sequence_5 = { e8???????? c645fc02 8d4508 c7473c00000000 8d4f44 c7474000000000 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8d4508               | lea                 eax, dword ptr [ebp + 8]
            //   c7473c00000000       | mov                 dword ptr [edi + 0x3c], 0
            //   8d4f44               | lea                 ecx, dword ptr [edi + 0x44]
            //   c7474000000000       | mov                 dword ptr [edi + 0x40], 0
            //   50                   | push                eax

        $sequence_6 = { ff33 68???????? 56 e8???????? 83c418 8b5df4 8b4f1c }
            // n = 7, score = 100
            //   ff33                 | push                dword ptr [ebx]
            //   68????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   8b5df4               | mov                 ebx, dword ptr [ebp - 0xc]
            //   8b4f1c               | mov                 ecx, dword ptr [edi + 0x1c]

        $sequence_7 = { f7fe 8b7c241c 66898424b0000000 8b477c c1e002 99 f7f9 }
            // n = 7, score = 100
            //   f7fe                 | idiv                esi
            //   8b7c241c             | mov                 edi, dword ptr [esp + 0x1c]
            //   66898424b0000000     | mov                 word ptr [esp + 0xb0], ax
            //   8b477c               | mov                 eax, dword ptr [edi + 0x7c]
            //   c1e002               | shl                 eax, 2
            //   99                   | cdq                 
            //   f7f9                 | idiv                ecx

        $sequence_8 = { eb10 e8???????? 8945f0 85c0 750c 8bd6 8bcf }
            // n = 7, score = 100
            //   eb10                 | jmp                 0x12
            //   e8????????           |                     
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   85c0                 | test                eax, eax
            //   750c                 | jne                 0xe
            //   8bd6                 | mov                 edx, esi
            //   8bcf                 | mov                 ecx, edi

        $sequence_9 = { f20f59c4 f20f59c2 f20f58c3 660f28d8 f20f115dc0 807df700 0f84f6000000 }
            // n = 7, score = 100
            //   f20f59c4             | mulsd               xmm0, xmm4
            //   f20f59c2             | mulsd               xmm0, xmm2
            //   f20f58c3             | addsd               xmm0, xmm3
            //   660f28d8             | movapd              xmm3, xmm0
            //   f20f115dc0           | movsd               qword ptr [ebp - 0x40], xmm3
            //   807df700             | cmp                 byte ptr [ebp - 9], 0
            //   0f84f6000000         | je                  0xfc

    condition:
        7 of them and filesize < 4235264
}