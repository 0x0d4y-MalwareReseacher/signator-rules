rule win_new_ct_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.new_ct."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.new_ct"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 23d0 6a00 52 56 }
            // n = 4, score = 200
            //   23d0                 | and                 edx, eax
            //   6a00                 | push                0
            //   52                   | push                edx
            //   56                   | push                esi

        $sequence_1 = { 6a03 8d95dcfbffff 52 e8???????? 83c408 }
            // n = 5, score = 200
            //   6a03                 | push                3
            //   8d95dcfbffff         | lea                 edx, [ebp - 0x424]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_2 = { 8bca 8d9424f0000000 83e103 f3a4 }
            // n = 4, score = 200
            //   8bca                 | mov                 ecx, edx
            //   8d9424f0000000       | lea                 edx, [esp + 0xf0]
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]

        $sequence_3 = { 76f0 8b9090010000 0594010000 52 50 }
            // n = 5, score = 200
            //   76f0                 | jbe                 0xfffffff2
            //   8b9090010000         | mov                 edx, dword ptr [eax + 0x190]
            //   0594010000           | add                 eax, 0x194
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_4 = { 33c0 8dbc24bd0b0000 c644245800 f3ab }
            // n = 4, score = 200
            //   33c0                 | xor                 eax, eax
            //   8dbc24bd0b0000       | lea                 edi, [esp + 0xbbd]
            //   c644245800           | mov                 byte ptr [esp + 0x58], 0
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_5 = { 51 52 53 ffd5 8d9600020000 }
            // n = 5, score = 200
            //   51                   | push                ecx
            //   52                   | push                edx
            //   53                   | push                ebx
            //   ffd5                 | call                ebp
            //   8d9600020000         | lea                 edx, [esi + 0x200]

        $sequence_6 = { 8dbddcfaffff f3ab 8bce 8d7208 8dbddcfaffff 8bc1 c1e902 }
            // n = 7, score = 200
            //   8dbddcfaffff         | lea                 edi, [ebp - 0x524]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8bce                 | mov                 ecx, esi
            //   8d7208               | lea                 esi, [edx + 8]
            //   8dbddcfaffff         | lea                 edi, [ebp - 0x524]
            //   8bc1                 | mov                 eax, ecx
            //   c1e902               | shr                 ecx, 2

        $sequence_7 = { 33c0 83e103 50 f3a4 8b742420 b900640000 }
            // n = 6, score = 200
            //   33c0                 | xor                 eax, eax
            //   83e103               | and                 ecx, 3
            //   50                   | push                eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b742420             | mov                 esi, dword ptr [esp + 0x20]
            //   b900640000           | mov                 ecx, 0x6400

        $sequence_8 = { 8d942414020000 52 ffd0 83c404 5f 5e }
            // n = 6, score = 200
            //   8d942414020000       | lea                 edx, [esp + 0x214]
            //   52                   | push                edx
            //   ffd0                 | call                eax
            //   83c404               | add                 esp, 4
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_9 = { e8???????? 85c0 7e1a 6a40 bb01000000 68???????? 68???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7e1a                 | jle                 0x1c
            //   6a40                 | push                0x40
            //   bb01000000           | mov                 ebx, 1
            //   68????????           |                     
            //   68????????           |                     

    condition:
        7 of them and filesize < 122880
}