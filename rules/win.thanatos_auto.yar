rule win_thanatos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.thanatos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thanatos"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83e20f c1e202 0bd0 0fb68228850110 8841fe 0fbe4437ff 83e03f }
            // n = 7, score = 500
            //   83e20f               | and                 edx, 0xf
            //   c1e202               | shl                 edx, 2
            //   0bd0                 | or                  edx, eax
            //   0fb68228850110       | movzx               eax, byte ptr [edx + 0x10018528]
            //   8841fe               | mov                 byte ptr [ecx - 2], al
            //   0fbe4437ff           | movsx               eax, byte ptr [edi + esi - 1]
            //   83e03f               | and                 eax, 0x3f

        $sequence_1 = { 8d7e01 3bfb 7ed0 83c8ff eb07 8b04f52c5a0110 5f }
            // n = 7, score = 500
            //   8d7e01               | lea                 edi, [esi + 1]
            //   3bfb                 | cmp                 edi, ebx
            //   7ed0                 | jle                 0xffffffd2
            //   83c8ff               | or                  eax, 0xffffffff
            //   eb07                 | jmp                 9
            //   8b04f52c5a0110       | mov                 eax, dword ptr [esi*8 + 0x10015a2c]
            //   5f                   | pop                 edi

        $sequence_2 = { 8b4d08 33c0 3b0cc570490110 740a 40 83f817 }
            // n = 6, score = 500
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   33c0                 | xor                 eax, eax
            //   3b0cc570490110       | cmp                 ecx, dword ptr [eax*8 + 0x10014970]
            //   740a                 | je                  0xc
            //   40                   | inc                 eax
            //   83f817               | cmp                 eax, 0x17

        $sequence_3 = { 8d0449 5e 8d0445981c0210 c3 8d04cd00000000 }
            // n = 5, score = 500
            //   8d0449               | lea                 eax, [ecx + ecx*2]
            //   5e                   | pop                 esi
            //   8d0445981c0210       | lea                 eax, [eax*2 + 0x10021c98]
            //   c3                   | ret                 
            //   8d04cd00000000       | lea                 eax, [ecx*8]

        $sequence_4 = { f7ff 68???????? 46 8a441414 3086cb5b0210 ff15???????? 3bf0 }
            // n = 7, score = 500
            //   f7ff                 | idiv                edi
            //   68????????           |                     
            //   46                   | inc                 esi
            //   8a441414             | mov                 al, byte ptr [esp + edx + 0x14]
            //   3086cb5b0210         | xor                 byte ptr [esi + 0x10025bcb], al
            //   ff15????????         |                     
            //   3bf0                 | cmp                 esi, eax

        $sequence_5 = { 0307 f7c1ff0f0000 740c 8b5df8 8b4d08 010c18 8b5df4 }
            // n = 7, score = 500
            //   0307                 | add                 eax, dword ptr [edi]
            //   f7c1ff0f0000         | test                ecx, 0xfff
            //   740c                 | je                  0xe
            //   8b5df8               | mov                 ebx, dword ptr [ebp - 8]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   010c18               | add                 dword ptr [eax + ebx], ecx
            //   8b5df4               | mov                 ebx, dword ptr [ebp - 0xc]

        $sequence_6 = { 8bf9 8b4e28 8955fc 83f803 0f85e5020000 8b5d08 c60201 }
            // n = 7, score = 500
            //   8bf9                 | mov                 edi, ecx
            //   8b4e28               | mov                 ecx, dword ptr [esi + 0x28]
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   83f803               | cmp                 eax, 3
            //   0f85e5020000         | jne                 0x2eb
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   c60201               | mov                 byte ptr [edx], 1

        $sequence_7 = { a3???????? e8???????? baaf96584f 8bcf a3???????? e8???????? ba698d6939 }
            // n = 7, score = 500
            //   a3????????           |                     
            //   e8????????           |                     
            //   baaf96584f           | mov                 edx, 0x4f5896af
            //   8bcf                 | mov                 ecx, edi
            //   a3????????           |                     
            //   e8????????           |                     
            //   ba698d6939           | mov                 edx, 0x39698d69

        $sequence_8 = { 6a00 6a01 51 50 51 e8???????? 6a00 }
            // n = 7, score = 500
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   51                   | push                ecx
            //   50                   | push                eax
            //   51                   | push                ecx
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_9 = { 50 8d857cffffff 68???????? 50 ffd6 8d8d7cffffff e8???????? }
            // n = 7, score = 500
            //   50                   | push                eax
            //   8d857cffffff         | lea                 eax, [ebp - 0x84]
            //   68????????           |                     
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8d8d7cffffff         | lea                 ecx, [ebp - 0x84]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1810432
}