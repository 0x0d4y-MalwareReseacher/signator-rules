rule win_thanatos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.thanatos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.thanatos"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a19 57 8b3d???????? ffd7 8b35???????? 50 ffd6 }
            // n = 7, score = 500
            //   6a19                 | push                0x19
            //   57                   | push                edi
            //   8b3d????????         |                     
            //   ffd7                 | call                edi
            //   8b35????????         |                     
            //   50                   | push                eax
            //   ffd6                 | call                esi

        $sequence_1 = { 8b4d24 7403 83c108 f6462810 }
            // n = 4, score = 500
            //   8b4d24               | mov                 ecx, dword ptr [ebp + 0x24]
            //   7403                 | je                  5
            //   83c108               | add                 ecx, 8
            //   f6462810             | test                byte ptr [esi + 0x28], 0x10

        $sequence_2 = { 8bf2 8d85d8f2ffff 50 ba14000000 89b5d4f2ffff c785d0f2ffff00000000 e8???????? }
            // n = 7, score = 500
            //   8bf2                 | mov                 esi, edx
            //   8d85d8f2ffff         | lea                 eax, [ebp - 0xd28]
            //   50                   | push                eax
            //   ba14000000           | mov                 edx, 0x14
            //   89b5d4f2ffff         | mov                 dword ptr [ebp - 0xd2c], esi
            //   c785d0f2ffff00000000     | mov    dword ptr [ebp - 0xd30], 0
            //   e8????????           |                     

        $sequence_3 = { 741c 50 6a01 ba???????? b9???????? e8???????? 83c408 }
            // n = 7, score = 500
            //   741c                 | je                  0x1e
            //   50                   | push                eax
            //   6a01                 | push                1
            //   ba????????           |                     
            //   b9????????           |                     
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_4 = { a3???????? e8???????? ba799e75a6 8bcf a3???????? e8???????? }
            // n = 6, score = 500
            //   a3????????           |                     
            //   e8????????           |                     
            //   ba799e75a6           | mov                 edx, 0xa6759e79
            //   8bcf                 | mov                 ecx, edi
            //   a3????????           |                     
            //   e8????????           |                     

        $sequence_5 = { 0f845a010000 8b5d10 53 56 51 ffd0 83c40c }
            // n = 7, score = 500
            //   0f845a010000         | je                  0x160
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   51                   | push                ecx
            //   ffd0                 | call                eax
            //   83c40c               | add                 esp, 0xc

        $sequence_6 = { 51 e9???????? 8b4dfc 5f 5e 33cd }
            // n = 6, score = 500
            //   51                   | push                ecx
            //   e9????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   33cd                 | xor                 ecx, ebp

        $sequence_7 = { f6c101 7414 8b4df4 81c900000002 894e04 }
            // n = 5, score = 500
            //   f6c101               | test                cl, 1
            //   7414                 | je                  0x16
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   81c900000002         | or                  ecx, 0x2000000
            //   894e04               | mov                 dword ptr [esi + 4], ecx

        $sequence_8 = { 0f841b010000 6a00 6a00 6a00 }
            // n = 4, score = 500
            //   0f841b010000         | je                  0x121
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_9 = { 68???????? 46 8a4415f4 3086a35b0210 ff15???????? 3bf0 7ce1 }
            // n = 7, score = 500
            //   68????????           |                     
            //   46                   | inc                 esi
            //   8a4415f4             | mov                 al, byte ptr [ebp + edx - 0xc]
            //   3086a35b0210         | xor                 byte ptr [esi + 0x10025ba3], al
            //   ff15????????         |                     
            //   3bf0                 | cmp                 esi, eax
            //   7ce1                 | jl                  0xffffffe3

    condition:
        7 of them and filesize < 1810432
}