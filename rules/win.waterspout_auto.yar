rule win_waterspout_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.waterspout."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.waterspout"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bc7 7403 50 ffd6 a1???????? 3bc7 7416 }
            // n = 7, score = 200
            //   3bc7                 | cmp                 eax, edi
            //   7403                 | je                  5
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   a1????????           |                     
            //   3bc7                 | cmp                 eax, edi
            //   7416                 | je                  0x18

        $sequence_1 = { 3bc7 7522 8b8c2470200000 56 }
            // n = 4, score = 200
            //   3bc7                 | cmp                 eax, edi
            //   7522                 | jne                 0x24
            //   8b8c2470200000       | mov                 ecx, dword ptr [esp + 0x2070]
            //   56                   | push                esi

        $sequence_2 = { 5f 83f001 5e a3???????? 5d 33c0 5b }
            // n = 7, score = 200
            //   5f                   | pop                 edi
            //   83f001               | xor                 eax, 1
            //   5e                   | pop                 esi
            //   a3????????           |                     
            //   5d                   | pop                 ebp
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx

        $sequence_3 = { c644244c07 c644244d12 c644244e80 c644244fe2 }
            // n = 4, score = 200
            //   c644244c07           | mov                 byte ptr [esp + 0x4c], 7
            //   c644244d12           | mov                 byte ptr [esp + 0x4d], 0x12
            //   c644244e80           | mov                 byte ptr [esp + 0x4e], 0x80
            //   c644244fe2           | mov                 byte ptr [esp + 0x4f], 0xe2

        $sequence_4 = { 8806 ff15???????? 8b0d???????? 8d44241c 8b11 8bce 52 }
            // n = 7, score = 200
            //   8806                 | mov                 byte ptr [esi], al
            //   ff15????????         |                     
            //   8b0d????????         |                     
            //   8d44241c             | lea                 eax, [esp + 0x1c]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8bce                 | mov                 ecx, esi
            //   52                   | push                edx

        $sequence_5 = { f7d1 49 51 8d8c24a8230000 51 52 ff15???????? }
            // n = 7, score = 200
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   51                   | push                ecx
            //   8d8c24a8230000       | lea                 ecx, [esp + 0x23a8]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_6 = { 85f6 7e1d 8b2d???????? ffd5 99 }
            // n = 5, score = 200
            //   85f6                 | test                esi, esi
            //   7e1d                 | jle                 0x1f
            //   8b2d????????         |                     
            //   ffd5                 | call                ebp
            //   99                   | cdq                 

        $sequence_7 = { 83fa01 8a5c042c 7702 ffd5 8b442424 6a00 }
            // n = 6, score = 200
            //   83fa01               | cmp                 edx, 1
            //   8a5c042c             | mov                 bl, byte ptr [esp + eax + 0x2c]
            //   7702                 | ja                  4
            //   ffd5                 | call                ebp
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   6a00                 | push                0

        $sequence_8 = { 8844240e 8844240f 8d442400 50 8b442418 }
            // n = 5, score = 200
            //   8844240e             | mov                 byte ptr [esp + 0xe], al
            //   8844240f             | mov                 byte ptr [esp + 0xf], al
            //   8d442400             | lea                 eax, [esp]
            //   50                   | push                eax
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]

        $sequence_9 = { c644245ed6 c644245fb3 33db c644246029 c6442461e3 c64424622f c644246384 }
            // n = 7, score = 200
            //   c644245ed6           | mov                 byte ptr [esp + 0x5e], 0xd6
            //   c644245fb3           | mov                 byte ptr [esp + 0x5f], 0xb3
            //   33db                 | xor                 ebx, ebx
            //   c644246029           | mov                 byte ptr [esp + 0x60], 0x29
            //   c6442461e3           | mov                 byte ptr [esp + 0x61], 0xe3
            //   c64424622f           | mov                 byte ptr [esp + 0x62], 0x2f
            //   c644246384           | mov                 byte ptr [esp + 0x63], 0x84

    condition:
        7 of them and filesize < 98304
}