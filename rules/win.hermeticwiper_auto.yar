rule win_hermeticwiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.hermeticwiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hermeticwiper"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 740c 6afe 50 ff15???????? }
            // n = 4, score = 200
            //   740c                 | je                  0xe
            //   6afe                 | push                -2
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_1 = { 33ff 6a3a 53 ff15???????? 8bf0 85f6 }
            // n = 6, score = 200
            //   33ff                 | xor                 edi, edi
            //   6a3a                 | push                0x3a
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi

        $sequence_2 = { 8b4604 85c0 7411 50 ffd1 8b0d???????? 8bd8 }
            // n = 7, score = 200
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   85c0                 | test                eax, eax
            //   7411                 | je                  0x13
            //   50                   | push                eax
            //   ffd1                 | call                ecx
            //   8b0d????????         |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_3 = { 7432 8b450c 0fb7480b 0fb6500d 0fafd1 52 51 }
            // n = 7, score = 200
            //   7432                 | je                  0x34
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   0fb7480b             | movzx               ecx, word ptr [eax + 0xb]
            //   0fb6500d             | movzx               edx, byte ptr [eax + 0xd]
            //   0fafd1               | imul                edx, ecx
            //   52                   | push                edx
            //   51                   | push                ecx

        $sequence_4 = { 8be5 5d c3 8b00 8907 8b4e04 8b06 }
            // n = 7, score = 200
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8907                 | mov                 dword ptr [edi], eax
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   8b06                 | mov                 eax, dword ptr [esi]

        $sequence_5 = { eb12 8d041e 0fbe0410 99 8bc8 8bfa 8b55f4 }
            // n = 7, score = 200
            //   eb12                 | jmp                 0x14
            //   8d041e               | lea                 eax, [esi + ebx]
            //   0fbe0410             | movsx               eax, byte ptr [eax + edx]
            //   99                   | cdq                 
            //   8bc8                 | mov                 ecx, eax
            //   8bfa                 | mov                 edi, edx
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]

        $sequence_6 = { c745f001000000 83f802 740d 85c0 }
            // n = 4, score = 200
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   83f802               | cmp                 eax, 2
            //   740d                 | je                  0xf
            //   85c0                 | test                eax, eax

        $sequence_7 = { 895c2420 8b5c2428 8bce 8b7c242c 8bc3 0fafc7 2b4c2414 }
            // n = 7, score = 200
            //   895c2420             | mov                 dword ptr [esp + 0x20], ebx
            //   8b5c2428             | mov                 ebx, dword ptr [esp + 0x28]
            //   8bce                 | mov                 ecx, esi
            //   8b7c242c             | mov                 edi, dword ptr [esp + 0x2c]
            //   8bc3                 | mov                 eax, ebx
            //   0fafc7               | imul                eax, edi
            //   2b4c2414             | sub                 ecx, dword ptr [esp + 0x14]

        $sequence_8 = { 0f118550ffffff 50 0f1005???????? 6a08 }
            // n = 4, score = 200
            //   0f118550ffffff       | movups              xmmword ptr [ebp - 0xb0], xmm0
            //   50                   | push                eax
            //   0f1005????????       |                     
            //   6a08                 | push                8

        $sequence_9 = { 0f878a000000 8b4c240c 8b401c 83c118 03c1 8b4c2414 89442424 }
            // n = 7, score = 200
            //   0f878a000000         | ja                  0x90
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   8b401c               | mov                 eax, dword ptr [eax + 0x1c]
            //   83c118               | add                 ecx, 0x18
            //   03c1                 | add                 eax, ecx
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   89442424             | mov                 dword ptr [esp + 0x24], eax

    condition:
        7 of them and filesize < 247808
}