rule win_coredn_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.coredn."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.coredn"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 56 8d45fc 8bf1 50 e8???????? 85c0 }
            // n = 7, score = 600
            //   51                   | push                ecx
            //   56                   | push                esi
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   8bf1                 | mov                 esi, ecx
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_1 = { 6690 8d82fafeff7f 85c0 741c 8a040e }
            // n = 5, score = 400
            //   6690                 | nop                 
            //   8d82fafeff7f         | lea                 eax, [edx + 0x7ffffefa]
            //   85c0                 | test                eax, eax
            //   741c                 | je                  0x1e
            //   8a040e               | mov                 al, byte ptr [esi + ecx]

        $sequence_2 = { 84c0 7415 8801 41 83ea01 }
            // n = 5, score = 400
            //   84c0                 | test                al, al
            //   7415                 | je                  0x17
            //   8801                 | mov                 byte ptr [ecx], al
            //   41                   | inc                 ecx
            //   83ea01               | sub                 edx, 1

        $sequence_3 = { 2bf9 90 8d0416 85c0 }
            // n = 4, score = 400
            //   2bf9                 | sub                 edi, ecx
            //   90                   | nop                 
            //   8d0416               | lea                 eax, [esi + edx]
            //   85c0                 | test                eax, eax

        $sequence_4 = { 8bec 56 8b7508 ba04010000 2bf1 6690 8d82fafeff7f }
            // n = 7, score = 400
            //   8bec                 | mov                 ebp, esp
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   ba04010000           | mov                 edx, 0x104
            //   2bf1                 | sub                 esi, ecx
            //   6690                 | nop                 
            //   8d82fafeff7f         | lea                 eax, [edx + 0x7ffffefa]

        $sequence_5 = { 741c 8818 4a 40 83e901 75ec }
            // n = 6, score = 400
            //   741c                 | je                  0x1e
            //   8818                 | mov                 byte ptr [eax], bl
            //   4a                   | dec                 edx
            //   40                   | inc                 eax
            //   83e901               | sub                 ecx, 1
            //   75ec                 | jne                 0xffffffee

        $sequence_6 = { 7408 81faffffff7f 7605 b857000780 85c0 784f }
            // n = 6, score = 400
            //   7408                 | je                  0xa
            //   81faffffff7f         | cmp                 edx, 0x7fffffff
            //   7605                 | jbe                 7
            //   b857000780           | mov                 eax, 0x80070057
            //   85c0                 | test                eax, eax
            //   784f                 | js                  0x51

        $sequence_7 = { ff15???????? 8bd3 8bf8 8d4201 8a0a 42 }
            // n = 6, score = 400
            //   ff15????????         |                     
            //   8bd3                 | mov                 edx, ebx
            //   8bf8                 | mov                 edi, eax
            //   8d4201               | lea                 eax, [edx + 1]
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   42                   | inc                 edx

        $sequence_8 = { 75ca 8b4608 5b 5f }
            // n = 4, score = 400
            //   75ca                 | jne                 0xffffffcc
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi

        $sequence_9 = { 5d c20400 85d2 750d 8851ff b87a000780 5e }
            // n = 7, score = 400
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   85d2                 | test                edx, edx
            //   750d                 | jne                 0xf
            //   8851ff               | mov                 byte ptr [ecx - 1], dl
            //   b87a000780           | mov                 eax, 0x8007007a
            //   5e                   | pop                 esi

        $sequence_10 = { 53 8d5f20 53 e8???????? }
            // n = 4, score = 400
            //   53                   | push                ebx
            //   8d5f20               | lea                 ebx, [edi + 0x20]
            //   53                   | push                ebx
            //   e8????????           |                     

        $sequence_11 = { 740b 6a01 50 e8???????? 83c408 8b4608 }
            // n = 6, score = 400
            //   740b                 | je                  0xd
            //   6a01                 | push                1
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b4608               | mov                 eax, dword ptr [esi + 8]

        $sequence_12 = { b87a000780 5e 5d c20400 }
            // n = 4, score = 400
            //   b87a000780           | mov                 eax, 0x8007007a
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4

        $sequence_13 = { 7423 8a1c06 84db 741c 8818 }
            // n = 5, score = 400
            //   7423                 | je                  0x25
            //   8a1c06               | mov                 bl, byte ptr [esi + eax]
            //   84db                 | test                bl, bl
            //   741c                 | je                  0x1e
            //   8818                 | mov                 byte ptr [eax], bl

        $sequence_14 = { 8bc3 8811 5b 5d }
            // n = 4, score = 400
            //   8bc3                 | mov                 eax, ebx
            //   8811                 | mov                 byte ptr [ecx], dl
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp

        $sequence_15 = { 6a02 50 e8???????? 83c408 53 8bce }
            // n = 6, score = 400
            //   6a02                 | push                2
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   53                   | push                ebx
            //   8bce                 | mov                 ecx, esi

    condition:
        7 of them and filesize < 385024
}