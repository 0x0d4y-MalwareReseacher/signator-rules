rule elf_bashlite_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects elf.bashlite."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/elf.bashlite"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 21d0 3345fc c9 c3 55 }
            // n = 5, score = 300
            //   21d0                 | mov                 dword ptr [ebp - 4], 0
            //   3345fc               | mov                 edi, 0x512c00
            //   c9                   | inc                 esp
            //   c3                   | mov                 edi, esp
            //   55                   | mov                 edi, 0x512c00

        $sequence_1 = { e8???????? 89c2 89d0 c1e81f }
            // n = 4, score = 300
            //   e8????????           |                     
            //   89c2                 | mov                 byte ptr [ebx], 0
            //   89d0                 | sub                 eax, edx
            //   c1e81f               | cmp                 eax, dword ptr [esp + 0x7c]

        $sequence_2 = { e8???????? 8945ec 837dec00 750b 8b45ec }
            // n = 5, score = 300
            //   e8????????           |                     
            //   8945ec               | je                  0xffffff7c
            //   837dec00             | mov                 al, byte ptr [ebp - 0xf]
            //   750b                 | cmp                 al, 0xc0
            //   8b45ec               | mov                 al, byte ptr [ebp - 0xd]

        $sequence_3 = { f7d0 21d0 3345fc c9 }
            // n = 4, score = 300
            //   f7d0                 | mov                 ecx, eax
            //   21d0                 | dec                 eax
            //   3345fc               | mov                 edx, dword ptr [ebp - 0x40]
            //   c9                   | mov                 edi, 0x800

        $sequence_4 = { 750c e8???????? 8b00 83f804 }
            // n = 4, score = 300
            //   750c                 | cmp                 al, 0xfc
            //   e8????????           |                     
            //   8b00                 | jne                 0x18a
            //   83f804               | dec                 eax

        $sequence_5 = { eb0a c785ecefffff00000000 8b85ecefffff c9 c3 }
            // n = 5, score = 300
            //   eb0a                 | mov                 eax, dword ptr [eax]
            //   c785ecefffff00000000     | mov    dword ptr [ebp - 0x108], eax
            //   8b85ecefffff         | mov                 dword ptr [ebp - 0x10c], 0x8056e9e
            //   c9                   | mov                 dword ptr [ebp - 0x110], 5
            //   c3                   | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_6 = { 8b85ecefffff c9 c3 55 }
            // n = 4, score = 300
            //   8b85ecefffff         | add                 eax, 0x41
            //   c9                   | mov                 byte ptr [ebx], al
            //   c3                   | mov                 dword ptr [ebp - 0x1c], edx
            //   55                   | mov                 eax, dword ptr [ebp - 0x20]

        $sequence_7 = { c1f802 89c2 89d0 01c0 01d0 }
            // n = 5, score = 300
            //   c1f802               | mov                 dword ptr [ebp - 0x88], eax
            //   89c2                 | jmp                 0x159
            //   89d0                 | mov                 dword ptr [esp], eax
            //   01c0                 | mov                 ecx, eax
            //   01d0                 | or                  ecx, 0x800

        $sequence_8 = { 85c0 750c c785ecefffff01000000 eb0a c785ecefffff00000000 8b85ecefffff }
            // n = 6, score = 300
            //   85c0                 | mov                 dword ptr [ebp - 0x4c], edx
            //   750c                 | dec                 eax
            //   c785ecefffff01000000     | mov    edi, dword ptr [ebp - 0x18]
            //   eb0a                 | mov                 ecx, dword ptr [ebp - 0x38]
            //   c785ecefffff00000000     | mov    edx, dword ptr [ebp - 0x3c]
            //   8b85ecefffff         | add                 dword ptr [ebp - 0x34], eax

        $sequence_9 = { 21d0 3345fc c9 c3 }
            // n = 4, score = 300
            //   21d0                 | mov                 eax, dword ptr [ebp - 0x1c]
            //   3345fc               | mov                 word ptr [eax + 0xa], dx
            //   c9                   | mov                 dword ptr [esp], 0
            //   c3                   | movzx               edx, ax

    condition:
        7 of them and filesize < 274018
}