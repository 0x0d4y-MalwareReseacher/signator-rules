rule win_wslink_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.wslink."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wslink"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 488b09 e8???????? 83f845 741a c7442420da000000 4c8d0d1ee00700 41b87c000000 }
            // n = 7, score = 100
            //   488b09               | dec                 eax
            //   e8????????           |                     
            //   83f845               | lea                 ecx, dword ptr [0xb7842]
            //   741a                 | mov                 edx, 0x193
            //   c7442420da000000     | cmp                 ebx, 1
            //   4c8d0d1ee00700       | jbe                 0x8bd
            //   41b87c000000         | dec                 esp

        $sequence_1 = { c1c005 418bca 89542408 03c7 4133cb 23cb 4133ca }
            // n = 7, score = 100
            //   c1c005               | movzx               eax, byte ptr [esi + 0x13]
            //   418bca               | shl                 eax, 0x18
            //   89542408             | inc                 esp
            //   03c7                 | or                  edx, eax
            //   4133cb               | inc                 esp
            //   23cb                 | mov                 dword ptr [esp], edx
            //   4133ca               | movzx               ebx, byte ptr [esi + 0x18]

        $sequence_2 = { 746a ffc9 7453 ffc9 743c ffc9 741a }
            // n = 7, score = 100
            //   746a                 | mov                 ecx, ebx
            //   ffc9                 | je                  0xe2a
            //   7453                 | mov                 dword ptr [esp + 0x40], edi
            //   ffc9                 | dec                 eax
            //   743c                 | lea                 edx, dword ptr [0x96033]
            //   ffc9                 | dec                 ecx
            //   741a                 | mov                 ecx, edi

        $sequence_3 = { 4d63e4 488d4daf 4d8bc4 498bd5 e8???????? 488d559f 488d4daf }
            // n = 7, score = 100
            //   4d63e4               | dec                 eax
            //   488d4daf             | mov                 ecx, ebx
            //   4d8bc4               | jmp                 0x15ce
            //   498bd5               | dec                 esp
            //   e8????????           |                     
            //   488d559f             | mov                 edx, dword ptr [ebp + 0x4f]
            //   488d4daf             | inc                 ebp

        $sequence_4 = { 7cb7 4585c0 7e15 488d542420 488bcd e8???????? 85c0 }
            // n = 7, score = 100
            //   7cb7                 | lea                 ecx, dword ptr [0x9715b]
            //   4585c0               | xor                 eax, eax
            //   7e15                 | dec                 eax
            //   488d542420           | add                 esp, 0x38
            //   488bcd               | ret                 
            //   e8????????           |                     
            //   85c0                 | dec                 eax

        $sequence_5 = { 747a 488bd6 488bcf 85ed 7430 e8???????? 85c0 }
            // n = 7, score = 100
            //   747a                 | dec                 eax
            //   488bd6               | mov                 dword ptr [esp + 0x50], esi
            //   488bcf               | dec                 esp
            //   85ed                 | mov                 dword ptr [esp + 0x48], esi
            //   7430                 | jne                 0x1168
            //   e8????????           |                     
            //   85c0                 | je                  0x1161

        $sequence_6 = { 750b 488b5c2440 4883c430 5f c3 c744242089000000 4c8d0db2530a00 }
            // n = 7, score = 100
            //   750b                 | dec                 esp
            //   488b5c2440           | mov                 edx, dword ptr [eax + 8]
            //   4883c430             | jle                 0x1d45
            //   5f                   | dec                 eax
            //   c3                   | mov                 eax, dword ptr [ebx]
            //   c744242089000000     | test                byte ptr [eax], 1
            //   4c8d0db2530a00       | je                  0x1d45

        $sequence_7 = { c744242070000000 e8???????? 488bcf e8???????? 4885db 7408 488bcb }
            // n = 7, score = 100
            //   c744242070000000     | mov                 dword ptr [esp + 0x20], 0x149
            //   e8????????           |                     
            //   488bcf               | or                  eax, 0xffffffff
            //   e8????????           |                     
            //   4885db               | dec                 eax
            //   7408                 | mov                 ebx, dword ptr [esp + 0x68]
            //   488bcb               | dec                 eax

        $sequence_8 = { e8???????? 85c0 0f84b4000000 488b5db0 c744243001000000 0f1f8000000000 488b4b10 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | mov                 ebx, eax
            //   0f84b4000000         | dec                 eax
            //   488b5db0             | sub                 esp, eax
            //   c744243001000000     | dec                 eax
            //   0f1f8000000000       | mov                 edi, ecx
            //   488b4b10             | inc                 esp

        $sequence_9 = { c3 81c2feefffff 83fa08 0f8799020000 488d0debf2f9ff 4863c2 8b8481f00f0600 }
            // n = 7, score = 100
            //   c3                   | dec                 eax
            //   81c2feefffff         | mov                 edx, dword ptr [ebx + 0x10]
            //   83fa08               | inc                 esp
            //   0f8799020000         | mov                 eax, ebp
            //   488d0debf2f9ff       | dec                 eax
            //   4863c2               | mov                 ecx, esi
            //   8b8481f00f0600       | inc                 esp

    condition:
        7 of them and filesize < 2007040
}