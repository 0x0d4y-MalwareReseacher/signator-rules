rule win_erebus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.erebus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.erebus"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03f2 0f84a2010000 8b0d???????? b8abaaaa2a 8b3d???????? 2bcf f7e9 }
            // n = 7, score = 100
            //   03f2                 | add                 esi, edx
            //   0f84a2010000         | je                  0x1a8
            //   8b0d????????         |                     
            //   b8abaaaa2a           | mov                 eax, 0x2aaaaaab
            //   8b3d????????         |                     
            //   2bcf                 | sub                 ecx, edi
            //   f7e9                 | imul                ecx

        $sequence_1 = { c1e905 c1e102 2bc1 8b4c241c 03c8 eb08 8bc2 }
            // n = 7, score = 100
            //   c1e905               | shr                 ecx, 5
            //   c1e102               | shl                 ecx, 2
            //   2bc1                 | sub                 eax, ecx
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   03c8                 | add                 ecx, eax
            //   eb08                 | jmp                 0xa
            //   8bc2                 | mov                 eax, edx

        $sequence_2 = { 0f8473ffffff e9???????? 8d85fcfeffff 68???????? 50 e8???????? 83c408 }
            // n = 7, score = 100
            //   0f8473ffffff         | je                  0xffffff79
            //   e9????????           |                     
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_3 = { c7442420f4e64f00 8b48fc 8bc1 c1e810 0fb6c0 0fb69020e84f00 8bc1 }
            // n = 7, score = 100
            //   c7442420f4e64f00     | mov                 dword ptr [esp + 0x20], 0x4fe6f4
            //   8b48fc               | mov                 ecx, dword ptr [eax - 4]
            //   8bc1                 | mov                 eax, ecx
            //   c1e810               | shr                 eax, 0x10
            //   0fb6c0               | movzx               eax, al
            //   0fb69020e84f00       | movzx               edx, byte ptr [eax + 0x4fe820]
            //   8bc1                 | mov                 eax, ecx

        $sequence_4 = { c745fc00000000 50 8d45fc 50 ff7510 ff750c ff7508 }
            // n = 7, score = 100
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   50                   | push                eax
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_5 = { ffb324010000 ffb320010000 68???????? 56 e8???????? 83c414 eb1c }
            // n = 7, score = 100
            //   ffb324010000         | push                dword ptr [ebx + 0x124]
            //   ffb320010000         | push                dword ptr [ebx + 0x120]
            //   68????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   eb1c                 | jmp                 0x1e

        $sequence_6 = { 8b95f4efffff 8b0485b86f5200 f644080404 8b85f0efffff 7401 47 80bdfbefffff01 }
            // n = 7, score = 100
            //   8b95f4efffff         | mov                 edx, dword ptr [ebp - 0x100c]
            //   8b0485b86f5200       | mov                 eax, dword ptr [eax*4 + 0x526fb8]
            //   f644080404           | test                byte ptr [eax + ecx + 4], 4
            //   8b85f0efffff         | mov                 eax, dword ptr [ebp - 0x1010]
            //   7401                 | je                  3
            //   47                   | inc                 edi
            //   80bdfbefffff01       | cmp                 byte ptr [ebp - 0x1005], 1

        $sequence_7 = { 8d4c240c e8???????? a1???????? 50 ff742414 ff36 e8???????? }
            // n = 7, score = 100
            //   8d4c240c             | lea                 ecx, [esp + 0xc]
            //   e8????????           |                     
            //   a1????????           |                     
            //   50                   | push                eax
            //   ff742414             | push                dword ptr [esp + 0x14]
            //   ff36                 | push                dword ptr [esi]
            //   e8????????           |                     

        $sequence_8 = { 8993c8000000 3bc7 7515 53 e8???????? 83c404 5b }
            // n = 7, score = 100
            //   8993c8000000         | mov                 dword ptr [ebx + 0xc8], edx
            //   3bc7                 | cmp                 eax, edi
            //   7515                 | jne                 0x17
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   5b                   | pop                 ebx

        $sequence_9 = { e8???????? 83c40c 8b5e2c 8bce e8???????? 8bd0 803a00 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8b5e2c               | mov                 ebx, dword ptr [esi + 0x2c]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax
            //   803a00               | cmp                 byte ptr [edx], 0

    condition:
        7 of them and filesize < 2564096
}