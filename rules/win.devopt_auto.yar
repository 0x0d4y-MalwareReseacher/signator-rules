rule win_devopt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.devopt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.devopt"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff75f0 ff15???????? 8b45e8 8b55e0 29d0 8b55f4 894258 }
            // n = 7, score = 100
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   ff15????????         |                     
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8b55e0               | mov                 edx, dword ptr [ebp - 0x20]
            //   29d0                 | sub                 eax, edx
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   894258               | mov                 dword ptr [edx + 0x58], eax

        $sequence_1 = { e8???????? c705????????00000000 807d8800 7502 eb2a 833d????????00 7502 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c705????????00000000     |     
            //   807d8800             | cmp                 byte ptr [ebp - 0x78], 0
            //   7502                 | jne                 4
            //   eb2a                 | jmp                 0x2c
            //   833d????????00       |                     
            //   7502                 | jne                 4

        $sequence_2 = { ff75f8 ff75fc ff15???????? 8945f0 eb07 c745f001000000 8b45f0 }
            // n = 7, score = 100
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff15????????         |                     
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   eb07                 | jmp                 9
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]

        $sequence_3 = { eb2c 8b45fc 8b55fc 8b12 ff92bc040000 83f800 7d02 }
            // n = 7, score = 100
            //   eb2c                 | jmp                 0x2e
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b12                 | mov                 edx, dword ptr [edx]
            //   ff92bc040000         | call                dword ptr [edx + 0x4bc]
            //   83f800               | cmp                 eax, 0
            //   7d02                 | jge                 4

        $sequence_4 = { ff13 8975fc 89f2 89827c010000 ba???????? 8910 ba???????? }
            // n = 7, score = 100
            //   ff13                 | call                dword ptr [ebx]
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   89f2                 | mov                 edx, esi
            //   89827c010000         | mov                 dword ptr [edx + 0x17c], eax
            //   ba????????           |                     
            //   8910                 | mov                 dword ptr [eax], edx
            //   ba????????           |                     

        $sequence_5 = { f68574ffffffff 751a 8b45e8 8b55ec 83e001 31d2 750d }
            // n = 7, score = 100
            //   f68574ffffffff       | test                byte ptr [ebp - 0x8c], 0xff
            //   751a                 | jne                 0x1c
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   83e001               | and                 eax, 1
            //   31d2                 | xor                 edx, edx
            //   750d                 | jne                 0xf

        $sequence_6 = { 8b45e4 8d4001 8945e4 8d7600 8b45e4 8d40ff 8945e4 }
            // n = 7, score = 100
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   8d4001               | lea                 eax, [eax + 1]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8d7600               | lea                 esi, [esi]
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   8d40ff               | lea                 eax, [eax - 1]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax

        $sequence_7 = { ff91dc000000 8b45f8 8b90f0000000 8b45fc 8b4dfc 8b09 ff91f4000000 }
            // n = 7, score = 100
            //   ff91dc000000         | call                dword ptr [ecx + 0xdc]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b90f0000000         | mov                 edx, dword ptr [eax + 0xf0]
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   ff91f4000000         | call                dword ptr [ecx + 0xf4]

        $sequence_8 = { 8d4584 ba00000000 e8???????? 8d4588 50 8b4d84 85c9 }
            // n = 7, score = 100
            //   8d4584               | lea                 eax, [ebp - 0x7c]
            //   ba00000000           | mov                 edx, 0
            //   e8????????           |                     
            //   8d4588               | lea                 eax, [ebp - 0x78]
            //   50                   | push                eax
            //   8b4d84               | mov                 ecx, dword ptr [ebp - 0x7c]
            //   85c9                 | test                ecx, ecx

        $sequence_9 = { ff9284010000 89c3 ba01000000 89d8 ff5368 8945e4 31c0 }
            // n = 7, score = 100
            //   ff9284010000         | call                dword ptr [edx + 0x184]
            //   89c3                 | mov                 ebx, eax
            //   ba01000000           | mov                 edx, 1
            //   89d8                 | mov                 eax, ebx
            //   ff5368               | call                dword ptr [ebx + 0x68]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   31c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 4645888
}