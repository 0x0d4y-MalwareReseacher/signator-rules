rule win_slub_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.slub."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.slub"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f848e000000 8b7c242c 85ff 7465 8b474c 8937 85c0 }
            // n = 7, score = 100
            //   0f848e000000         | je                  0x94
            //   8b7c242c             | mov                 edi, dword ptr [esp + 0x2c]
            //   85ff                 | test                edi, edi
            //   7465                 | je                  0x67
            //   8b474c               | mov                 eax, dword ptr [edi + 0x4c]
            //   8937                 | mov                 dword ptr [edi], esi
            //   85c0                 | test                eax, eax

        $sequence_1 = { c60000 8b8624060000 85c0 7418 50 ff15???????? 83c404 }
            // n = 7, score = 100
            //   c60000               | mov                 byte ptr [eax], 0
            //   8b8624060000         | mov                 eax, dword ptr [esi + 0x624]
            //   85c0                 | test                eax, eax
            //   7418                 | je                  0x1a
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c404               | add                 esp, 4

        $sequence_2 = { c785ccfdffff0f000000 c785c8fdffff00000000 c685b8fdffff00 e8???????? c645fc0b 8d8db8fdffff 83bdccfdffff10 }
            // n = 7, score = 100
            //   c785ccfdffff0f000000     | mov    dword ptr [ebp - 0x234], 0xf
            //   c785c8fdffff00000000     | mov    dword ptr [ebp - 0x238], 0
            //   c685b8fdffff00       | mov                 byte ptr [ebp - 0x248], 0
            //   e8????????           |                     
            //   c645fc0b             | mov                 byte ptr [ebp - 4], 0xb
            //   8d8db8fdffff         | lea                 ecx, [ebp - 0x248]
            //   83bdccfdffff10       | cmp                 dword ptr [ebp - 0x234], 0x10

        $sequence_3 = { 0f8470010000 50 e8???????? 83c404 50 ff15???????? 50 }
            // n = 7, score = 100
            //   0f8470010000         | je                  0x176
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   50                   | push                eax
            //   ff15????????         |                     
            //   50                   | push                eax

        $sequence_4 = { 8b049d70c59000 0fb6440828 83e001 7469 56 e8???????? 59 }
            // n = 7, score = 100
            //   8b049d70c59000       | mov                 eax, dword ptr [ebx*4 + 0x90c570]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]
            //   83e001               | and                 eax, 1
            //   7469                 | je                  0x6b
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_5 = { 56 e8???????? 83c40c 899eb0060000 c686b406000001 8b3d???????? bb???????? }
            // n = 7, score = 100
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   899eb0060000         | mov                 dword ptr [esi + 0x6b0], ebx
            //   c686b406000001       | mov                 byte ptr [esi + 0x6b4], 1
            //   8b3d????????         |                     
            //   bb????????           |                     

        $sequence_6 = { 898564ffffff 83f9ff 0f851cffffff 85f6 0f84e6010000 8b03 8bce }
            // n = 7, score = 100
            //   898564ffffff         | mov                 dword ptr [ebp - 0x9c], eax
            //   83f9ff               | cmp                 ecx, -1
            //   0f851cffffff         | jne                 0xffffff22
            //   85f6                 | test                esi, esi
            //   0f84e6010000         | je                  0x1ec
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8bce                 | mov                 ecx, esi

        $sequence_7 = { 45 5c 8600 59 5c 8600 d15c8600 }
            // n = 7, score = 100
            //   45                   | inc                 ebp
            //   5c                   | pop                 esp
            //   8600                 | xchg                byte ptr [eax], al
            //   59                   | pop                 ecx
            //   5c                   | pop                 esp
            //   8600                 | xchg                byte ptr [eax], al
            //   d15c8600             | rcr                 dword ptr [esi + eax*4], 1

        $sequence_8 = { 0f95c1 8888f8040000 8bc3 5b 83c408 c3 8b442424 }
            // n = 7, score = 100
            //   0f95c1               | setne               cl
            //   8888f8040000         | mov                 byte ptr [eax + 0x4f8], cl
            //   8bc3                 | mov                 eax, ebx
            //   5b                   | pop                 ebx
            //   83c408               | add                 esp, 8
            //   c3                   | ret                 
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]

        $sequence_9 = { 6a20 50 e8???????? 83c408 ff33 8d850cffffff 50 }
            // n = 7, score = 100
            //   6a20                 | push                0x20
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   ff33                 | push                dword ptr [ebx]
            //   8d850cffffff         | lea                 eax, [ebp - 0xf4]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 1785856
}