rule win_avaddon_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.avaddon."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.avaddon"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 40 50 56 e8???????? 8b45f8 83c420 }
            // n = 6, score = 200
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c420               | add                 esp, 0x20

        $sequence_1 = { 8d55e0 8d4dd8 660f6ec0 f30fe6c0 f20f5c05???????? f20f1145d8 e8???????? }
            // n = 7, score = 200
            //   8d55e0               | lea                 edx, [ebp - 0x20]
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   660f6ec0             | movd                xmm0, eax
            //   f30fe6c0             | cvtdq2pd            xmm0, xmm0
            //   f20f5c05????????     |                     
            //   f20f1145d8           | movsd               qword ptr [ebp - 0x28], xmm0
            //   e8????????           |                     

        $sequence_2 = { 0f948587fdffff 83f808 7216 8d044502000000 50 ffb538fdffff }
            // n = 6, score = 200
            //   0f948587fdffff       | sete                byte ptr [ebp - 0x279]
            //   83f808               | cmp                 eax, 8
            //   7216                 | jb                  0x18
            //   8d044502000000       | lea                 eax, [eax*2 + 2]
            //   50                   | push                eax
            //   ffb538fdffff         | push                dword ptr [ebp - 0x2c8]

        $sequence_3 = { 83c408 660f1345ec 8975ec 897df0 8b4de8 8d45ec 50 }
            // n = 7, score = 200
            //   83c408               | add                 esp, 8
            //   660f1345ec           | movlpd              qword ptr [ebp - 0x14], xmm0
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi
            //   897df0               | mov                 dword ptr [ebp - 0x10], edi
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax

        $sequence_4 = { 68???????? 68???????? 50 e8???????? 83c424 e8???????? 50 }
            // n = 7, score = 200
            //   68????????           |                     
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c424               | add                 esp, 0x24
            //   e8????????           |                     
            //   50                   | push                eax

        $sequence_5 = { c7471000000000 c7471407000000 668907 8b7508 8945fc c745f001000000 8b4610 }
            // n = 7, score = 200
            //   c7471000000000       | mov                 dword ptr [edi + 0x10], 0
            //   c7471407000000       | mov                 dword ptr [edi + 0x14], 7
            //   668907               | mov                 word ptr [edi], ax
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]

        $sequence_6 = { 8b5708 51 e8???????? 8b4f04 8b470c 2bc1 }
            // n = 6, score = 200
            //   8b5708               | mov                 edx, dword ptr [edi + 8]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8b4f04               | mov                 ecx, dword ptr [edi + 4]
            //   8b470c               | mov                 eax, dword ptr [edi + 0xc]
            //   2bc1                 | sub                 eax, ecx

        $sequence_7 = { 8bc1 3bc8 7409 8b4914 53 8b01 ff5008 }
            // n = 7, score = 200
            //   8bc1                 | mov                 eax, ecx
            //   3bc8                 | cmp                 ecx, eax
            //   7409                 | je                  0xb
            //   8b4914               | mov                 ecx, dword ptr [ecx + 0x14]
            //   53                   | push                ebx
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5008               | call                dword ptr [eax + 8]

        $sequence_8 = { 7d0c 85db 7808 8b45f0 3b460c 7c37 8b4f14 }
            // n = 7, score = 200
            //   7d0c                 | jge                 0xe
            //   85db                 | test                ebx, ebx
            //   7808                 | js                  0xa
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   3b460c               | cmp                 eax, dword ptr [esi + 0xc]
            //   7c37                 | jl                  0x39
            //   8b4f14               | mov                 ecx, dword ptr [edi + 0x14]

        $sequence_9 = { f30f7e4610 660fd645e8 c7461000000000 c746140f000000 c60600 8b4598 83f810 }
            // n = 7, score = 200
            //   f30f7e4610           | movq                xmm0, qword ptr [esi + 0x10]
            //   660fd645e8           | movq                qword ptr [ebp - 0x18], xmm0
            //   c7461000000000       | mov                 dword ptr [esi + 0x10], 0
            //   c746140f000000       | mov                 dword ptr [esi + 0x14], 0xf
            //   c60600               | mov                 byte ptr [esi], 0
            //   8b4598               | mov                 eax, dword ptr [ebp - 0x68]
            //   83f810               | cmp                 eax, 0x10

    condition:
        7 of them and filesize < 2343936
}