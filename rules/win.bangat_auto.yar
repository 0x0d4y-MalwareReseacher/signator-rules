rule win_bangat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.bangat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bangat"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 55 57 e8???????? 57 e8???????? 8b83f4000000 83c40c }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   57                   | push                edi
            //   e8????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b83f4000000         | mov                 eax, dword ptr [ebx + 0xf4]
            //   83c40c               | add                 esp, 0xc

        $sequence_1 = { 42 8a80881e4800 4e 8841fe c641ff3a 75d7 8bc7 }
            // n = 7, score = 100
            //   42                   | inc                 edx
            //   8a80881e4800         | mov                 al, byte ptr [eax + 0x481e88]
            //   4e                   | dec                 esi
            //   8841fe               | mov                 byte ptr [ecx - 2], al
            //   c641ff3a             | mov                 byte ptr [ecx - 1], 0x3a
            //   75d7                 | jne                 0xffffffd9
            //   8bc7                 | mov                 eax, edi

        $sequence_2 = { ff15???????? 85c0 751e 56 ff15???????? 6804010000 8d85b8fdffff }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   751e                 | jne                 0x20
            //   56                   | push                esi
            //   ff15????????         |                     
            //   6804010000           | push                0x104
            //   8d85b8fdffff         | lea                 eax, dword ptr [ebp - 0x248]

        $sequence_3 = { 8d98a0000000 85c9 0f8c27010000 83f930 0f8f1e010000 8b889c000000 33ed }
            // n = 7, score = 100
            //   8d98a0000000         | lea                 ebx, dword ptr [eax + 0xa0]
            //   85c9                 | test                ecx, ecx
            //   0f8c27010000         | jl                  0x12d
            //   83f930               | cmp                 ecx, 0x30
            //   0f8f1e010000         | jg                  0x124
            //   8b889c000000         | mov                 ecx, dword ptr [eax + 0x9c]
            //   33ed                 | xor                 ebp, ebp

        $sequence_4 = { 8bca 83e103 f3a4 8d7334 892e 8b36 81fe80000000 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8d7334               | lea                 esi, dword ptr [ebx + 0x34]
            //   892e                 | mov                 dword ptr [esi], ebp
            //   8b36                 | mov                 esi, dword ptr [esi]
            //   81fe80000000         | cmp                 esi, 0x80

        $sequence_5 = { ff30 e8???????? 85c0 7422 c745e401000000 }
            // n = 5, score = 100
            //   ff30                 | push                dword ptr [eax]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7422                 | je                  0x24
            //   c745e401000000       | mov                 dword ptr [ebp - 0x1c], 1

        $sequence_6 = { 33c0 5e 64890d00000000 c9 c20400 56 683f000f00 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   c9                   | leave               
            //   c20400               | ret                 4
            //   56                   | push                esi
            //   683f000f00           | push                0xf003f

        $sequence_7 = { 7508 6a01 ff15???????? 47 eb99 ff75e4 ff15???????? }
            // n = 7, score = 100
            //   7508                 | jne                 0xa
            //   6a01                 | push                1
            //   ff15????????         |                     
            //   47                   | inc                 edi
            //   eb99                 | jmp                 0xffffff9b
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   ff15????????         |                     

        $sequence_8 = { 7414 ff762c ff761c 50 e8???????? 83c40c 83f8ff }
            // n = 7, score = 100
            //   7414                 | je                  0x16
            //   ff762c               | push                dword ptr [esi + 0x2c]
            //   ff761c               | push                dword ptr [esi + 0x1c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   83f8ff               | cmp                 eax, -1

        $sequence_9 = { 33d2 3bca 7440 8b490c 81e100803f1c 81f900002000 7509 }
            // n = 7, score = 100
            //   33d2                 | xor                 edx, edx
            //   3bca                 | cmp                 ecx, edx
            //   7440                 | je                  0x42
            //   8b490c               | mov                 ecx, dword ptr [ecx + 0xc]
            //   81e100803f1c         | and                 ecx, 0x1c3f8000
            //   81f900002000         | cmp                 ecx, 0x200000
            //   7509                 | jne                 0xb

    condition:
        7 of them and filesize < 1228800
}