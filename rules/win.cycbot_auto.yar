rule win_cycbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.cycbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cycbot"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b90d0a0000 663b0c07 750d 8d4802 8945e8 ba01000000 890b }
            // n = 7, score = 100
            //   b90d0a0000           | mov                 ecx, 0xa0d
            //   663b0c07             | cmp                 cx, word ptr [edi + eax]
            //   750d                 | jne                 0xf
            //   8d4802               | lea                 ecx, [eax + 2]
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   ba01000000           | mov                 edx, 1
            //   890b                 | mov                 dword ptr [ebx], ecx

        $sequence_1 = { 50 81ecb0050000 a1???????? 33c4 898424a8050000 53 56 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   81ecb0050000         | sub                 esp, 0x5b0
            //   a1????????           |                     
            //   33c4                 | xor                 eax, esp
            //   898424a8050000       | mov                 dword ptr [esp + 0x5a8], eax
            //   53                   | push                ebx
            //   56                   | push                esi

        $sequence_2 = { ff15???????? 8bf0 83feff 7509 ff15???????? 8945fc 3b7510 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   83feff               | cmp                 esi, -1
            //   7509                 | jne                 0xb
            //   ff15????????         |                     
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   3b7510               | cmp                 esi, dword ptr [ebp + 0x10]

        $sequence_3 = { a1???????? 8365e400 8365e000 8945f4 a1???????? 8945f8 85db }
            // n = 7, score = 100
            //   a1????????           |                     
            //   8365e400             | and                 dword ptr [ebp - 0x1c], 0
            //   8365e000             | and                 dword ptr [ebp - 0x20], 0
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   a1????????           |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   85db                 | test                ebx, ebx

        $sequence_4 = { a5 50 8d45e0 8bd9 50 899dc8fdffff a4 }
            // n = 7, score = 100
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   50                   | push                eax
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   8bd9                 | mov                 ebx, ecx
            //   50                   | push                eax
            //   899dc8fdffff         | mov                 dword ptr [ebp - 0x238], ebx
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]

        $sequence_5 = { a4 33f6 8975fc 897598 56 56 8d4598 }
            // n = 7, score = 100
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   33f6                 | xor                 esi, esi
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   897598               | mov                 dword ptr [ebp - 0x68], esi
            //   56                   | push                esi
            //   56                   | push                esi
            //   8d4598               | lea                 eax, [ebp - 0x68]

        $sequence_6 = { 39b5bcfdffff 740c ffb5bcfdffff ff15???????? 39b5b8fdffff 740c }
            // n = 6, score = 100
            //   39b5bcfdffff         | cmp                 dword ptr [ebp - 0x244], esi
            //   740c                 | je                  0xe
            //   ffb5bcfdffff         | push                dword ptr [ebp - 0x244]
            //   ff15????????         |                     
            //   39b5b8fdffff         | cmp                 dword ptr [ebp - 0x248], esi
            //   740c                 | je                  0xe

        $sequence_7 = { 8b4d18 898544fcffff 8b450c 898534fcffff 8b4514 bf???????? }
            // n = 6, score = 100
            //   8b4d18               | mov                 ecx, dword ptr [ebp + 0x18]
            //   898544fcffff         | mov                 dword ptr [ebp - 0x3bc], eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   898534fcffff         | mov                 dword ptr [ebp - 0x3cc], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   bf????????           |                     

        $sequence_8 = { 40 50 8d5598 56 52 e8???????? 83c40c }
            // n = 7, score = 100
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   8d5598               | lea                 edx, [ebp - 0x68]
            //   56                   | push                esi
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_9 = { 8d7001 83fefe 7716 8b5114 3bd6 733a 8b4d08 }
            // n = 7, score = 100
            //   8d7001               | lea                 esi, [eax + 1]
            //   83fefe               | cmp                 esi, -2
            //   7716                 | ja                  0x18
            //   8b5114               | mov                 edx, dword ptr [ecx + 0x14]
            //   3bd6                 | cmp                 edx, esi
            //   733a                 | jae                 0x3c
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 1163264
}