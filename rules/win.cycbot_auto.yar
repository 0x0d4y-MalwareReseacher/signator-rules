rule win_cycbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.cycbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cycbot"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 59 59 3bfe 742e 8d5001 8a08 40 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   3bfe                 | cmp                 edi, esi
            //   742e                 | je                  0x30
            //   8d5001               | lea                 edx, [eax + 1]
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   40                   | inc                 eax

        $sequence_1 = { c785ecfcffff01000000 8b4dfc 8b85ecfcffff 5f 5e 33cd 5b }
            // n = 7, score = 100
            //   c785ecfcffff01000000     | mov    dword ptr [ebp - 0x314], 1
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b85ecfcffff         | mov                 eax, dword ptr [ebp - 0x314]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   33cd                 | xor                 ecx, ebp
            //   5b                   | pop                 ebx

        $sequence_2 = { 7427 8b8dc0fdffff 33c0 40 83bdacfdffff00 7525 }
            // n = 6, score = 100
            //   7427                 | je                  0x29
            //   8b8dc0fdffff         | mov                 ecx, dword ptr [ebp - 0x240]
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   83bdacfdffff00       | cmp                 dword ptr [ebp - 0x254], 0
            //   7525                 | jne                 0x27

        $sequence_3 = { 0f876b010000 8b35???????? 68???????? ff75cc ffd6 50 8b45cc }
            // n = 7, score = 100
            //   0f876b010000         | ja                  0x171
            //   8b35????????         |                     
            //   68????????           |                     
            //   ff75cc               | push                dword ptr [ebp - 0x34]
            //   ffd6                 | call                esi
            //   50                   | push                eax
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]

        $sequence_4 = { 885dd4 e8???????? 8b7dcc 8d45d4 50 c745fc02000000 e8???????? }
            // n = 7, score = 100
            //   885dd4               | mov                 byte ptr [ebp - 0x2c], bl
            //   e8????????           |                     
            //   8b7dcc               | mov                 edi, dword ptr [ebp - 0x34]
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   50                   | push                eax
            //   c745fc02000000       | mov                 dword ptr [ebp - 4], 2
            //   e8????????           |                     

        $sequence_5 = { 8a8048de4300 8b8df8faffff 88443908 47 3bfe 72da 399df8faffff }
            // n = 7, score = 100
            //   8a8048de4300         | mov                 al, byte ptr [eax + 0x43de48]
            //   8b8df8faffff         | mov                 ecx, dword ptr [ebp - 0x508]
            //   88443908             | mov                 byte ptr [ecx + edi + 8], al
            //   47                   | inc                 edi
            //   3bfe                 | cmp                 edi, esi
            //   72da                 | jb                  0xffffffdc
            //   399df8faffff         | cmp                 dword ptr [ebp - 0x508], ebx

        $sequence_6 = { 33db 8d442418 53 50 e8???????? 8b4730 83c40c }
            // n = 7, score = 100
            //   33db                 | xor                 ebx, ebx
            //   8d442418             | lea                 eax, [esp + 0x18]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4730               | mov                 eax, dword ptr [edi + 0x30]
            //   83c40c               | add                 esp, 0xc

        $sequence_7 = { 56 53 53 6a04 50 ff15???????? 33c9 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   6a04                 | push                4
            //   50                   | push                eax
            //   ff15????????         |                     
            //   33c9                 | xor                 ecx, ecx

        $sequence_8 = { 53 6a01 8d4dd4 e8???????? 8bc7 e8???????? c20800 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   6a01                 | push                1
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]
            //   e8????????           |                     
            //   8bc7                 | mov                 eax, edi
            //   e8????????           |                     
            //   c20800               | ret                 8

        $sequence_9 = { 8bf8 3bfb 7417 6afe 57 ff15???????? 57 }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   3bfb                 | cmp                 edi, ebx
            //   7417                 | je                  0x19
            //   6afe                 | push                -2
            //   57                   | push                edi
            //   ff15????????         |                     
            //   57                   | push                edi

    condition:
        7 of them and filesize < 1163264
}