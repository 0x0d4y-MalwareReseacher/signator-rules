rule win_rincux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rincux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rincux"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5e 5b 8be5 5d c20800 8b4304 6a01 }
            // n = 7, score = 200
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   6a01                 | push                1

        $sequence_1 = { 57 57 53 ff15???????? 85c0 0f8499000000 8d95e4feffff }
            // n = 7, score = 200
            //   57                   | push                edi
            //   57                   | push                edi
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8499000000         | je                  0x9f
            //   8d95e4feffff         | lea                 edx, [ebp - 0x11c]

        $sequence_2 = { 8d4c244c 3931 7408 40 83c104 3bc3 72f4 }
            // n = 7, score = 200
            //   8d4c244c             | lea                 ecx, [esp + 0x4c]
            //   3931                 | cmp                 dword ptr [ecx], esi
            //   7408                 | je                  0xa
            //   40                   | inc                 eax
            //   83c104               | add                 ecx, 4
            //   3bc3                 | cmp                 eax, ebx
            //   72f4                 | jb                  0xfffffff6

        $sequence_3 = { 6a04 8d8528feffff 52 50 6802000080 e8???????? 6a00 }
            // n = 7, score = 200
            //   6a04                 | push                4
            //   8d8528feffff         | lea                 eax, [ebp - 0x1d8]
            //   52                   | push                edx
            //   50                   | push                eax
            //   6802000080           | push                0x80000002
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_4 = { c644240d67 c644240e75 884c240f 885c2410 88542411 88442412 }
            // n = 6, score = 200
            //   c644240d67           | mov                 byte ptr [esp + 0xd], 0x67
            //   c644240e75           | mov                 byte ptr [esp + 0xe], 0x75
            //   884c240f             | mov                 byte ptr [esp + 0xf], cl
            //   885c2410             | mov                 byte ptr [esp + 0x10], bl
            //   88542411             | mov                 byte ptr [esp + 0x11], dl
            //   88442412             | mov                 byte ptr [esp + 0x12], al

        $sequence_5 = { 3bde 894c2410 c744241800000000 7249 33ed 8b442410 6a00 }
            // n = 7, score = 200
            //   3bde                 | cmp                 ebx, esi
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx
            //   c744241800000000     | mov                 dword ptr [esp + 0x18], 0
            //   7249                 | jb                  0x4b
            //   33ed                 | xor                 ebp, ebp
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   6a00                 | push                0

        $sequence_6 = { 8d7801 c1e902 c60099 55 f3a5 8bca 50 }
            // n = 7, score = 200
            //   8d7801               | lea                 edi, [eax + 1]
            //   c1e902               | shr                 ecx, 2
            //   c60099               | mov                 byte ptr [eax], 0x99
            //   55                   | push                ebp
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bca                 | mov                 ecx, edx
            //   50                   | push                eax

        $sequence_7 = { 8b6c240c 56 8b742414 57 8b7c2420 57 56 }
            // n = 7, score = 200
            //   8b6c240c             | mov                 ebp, dword ptr [esp + 0xc]
            //   56                   | push                esi
            //   8b742414             | mov                 esi, dword ptr [esp + 0x14]
            //   57                   | push                edi
            //   8b7c2420             | mov                 edi, dword ptr [esp + 0x20]
            //   57                   | push                edi
            //   56                   | push                esi

        $sequence_8 = { 732d 2bd5 2bc5 81c202010000 3bd0 }
            // n = 5, score = 200
            //   732d                 | jae                 0x2f
            //   2bd5                 | sub                 edx, ebp
            //   2bc5                 | sub                 eax, ebp
            //   81c202010000         | add                 edx, 0x102
            //   3bd0                 | cmp                 edx, eax

        $sequence_9 = { 8a44241a 83c604 8b1c9570080210 8bd1 8b048570040210 81e1ff000000 c1ea18 }
            // n = 7, score = 200
            //   8a44241a             | mov                 al, byte ptr [esp + 0x1a]
            //   83c604               | add                 esi, 4
            //   8b1c9570080210       | mov                 ebx, dword ptr [edx*4 + 0x10020870]
            //   8bd1                 | mov                 edx, ecx
            //   8b048570040210       | mov                 eax, dword ptr [eax*4 + 0x10020470]
            //   81e1ff000000         | and                 ecx, 0xff
            //   c1ea18               | shr                 edx, 0x18

    condition:
        7 of them and filesize < 392192
}