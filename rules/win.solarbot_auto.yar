rule win_solarbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.solarbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.solarbot"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c685f0feffff05 c685f2feffff00 c685f3feffff01 8b85e4feffff 8985f4feffff }
            // n = 5, score = 300
            //   c685f0feffff05       | mov                 byte ptr [ebp - 0x110], 5
            //   c685f2feffff00       | mov                 byte ptr [ebp - 0x10e], 0
            //   c685f3feffff01       | mov                 byte ptr [ebp - 0x10d], 1
            //   8b85e4feffff         | mov                 eax, dword ptr [ebp - 0x11c]
            //   8985f4feffff         | mov                 dword ptr [ebp - 0x10c], eax

        $sequence_1 = { 8945fc 8b7d14 8b4518 8945f4 8b451c c745ec00000000 6a00 }
            // n = 7, score = 300
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b7d14               | mov                 edi, dword ptr [ebp + 0x14]
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b451c               | mov                 eax, dword ptr [ebp + 0x1c]
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0
            //   6a00                 | push                0

        $sequence_2 = { 85c0 762f c645c401 eb29 c645c401 eb23 6a00 }
            // n = 7, score = 300
            //   85c0                 | test                eax, eax
            //   762f                 | jbe                 0x31
            //   c645c401             | mov                 byte ptr [ebp - 0x3c], 1
            //   eb29                 | jmp                 0x2b
            //   c645c401             | mov                 byte ptr [ebp - 0x3c], 1
            //   eb23                 | jmp                 0x25
            //   6a00                 | push                0

        $sequence_3 = { 766f 89d8 05d0080000 89c6 56 e8???????? }
            // n = 6, score = 300
            //   766f                 | jbe                 0x71
            //   89d8                 | mov                 eax, ebx
            //   05d0080000           | add                 eax, 0x8d0
            //   89c6                 | mov                 esi, eax
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_4 = { 83bdccfdffff26 7532 8b85e0fdffff 0385d0fdffff 8b38 }
            // n = 5, score = 300
            //   83bdccfdffff26       | cmp                 dword ptr [ebp - 0x234], 0x26
            //   7532                 | jne                 0x34
            //   8b85e0fdffff         | mov                 eax, dword ptr [ebp - 0x220]
            //   0385d0fdffff         | add                 eax, dword ptr [ebp - 0x230]
            //   8b38                 | mov                 edi, dword ptr [eax]

        $sequence_5 = { 0f8564010000 85ff 0f855c010000 ffb510f9ffff ffb5e8faffff e8???????? 89c7 }
            // n = 7, score = 300
            //   0f8564010000         | jne                 0x16a
            //   85ff                 | test                edi, edi
            //   0f855c010000         | jne                 0x162
            //   ffb510f9ffff         | push                dword ptr [ebp - 0x6f0]
            //   ffb5e8faffff         | push                dword ptr [ebp - 0x518]
            //   e8????????           |                     
            //   89c7                 | mov                 edi, eax

        $sequence_6 = { e8???????? 85f6 7512 8b85e0fdffff 0385d0fdffff }
            // n = 5, score = 300
            //   e8????????           |                     
            //   85f6                 | test                esi, esi
            //   7512                 | jne                 0x14
            //   8b85e0fdffff         | mov                 eax, dword ptr [ebp - 0x220]
            //   0385d0fdffff         | add                 eax, dword ptr [ebp - 0x230]

        $sequence_7 = { 8b7d0c 8b5d10 e8???????? 89c2 b000 6a00 6a00 }
            // n = 7, score = 300
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   89c2                 | mov                 edx, eax
            //   b000                 | mov                 al, 0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_8 = { 31c2 81e2ff000000 89d6 89c2 c1ea08 81e2ffffff00 }
            // n = 6, score = 300
            //   31c2                 | xor                 edx, eax
            //   81e2ff000000         | and                 edx, 0xff
            //   89d6                 | mov                 esi, edx
            //   89c2                 | mov                 edx, eax
            //   c1ea08               | shr                 edx, 8
            //   81e2ffffff00         | and                 edx, 0xffffff

        $sequence_9 = { 0f8618010000 6808020000 8d85f4fdffff 50 }
            // n = 4, score = 300
            //   0f8618010000         | jbe                 0x11e
            //   6808020000           | push                0x208
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 204800
}