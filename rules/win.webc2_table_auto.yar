rule win_webc2_table_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.webc2_table."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_table"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8345fc04 ff4dec 0f8567feffff ff75f4 }
            // n = 4, score = 100
            //   8345fc04             | add                 dword ptr [ebp - 4], 4
            //   ff4dec               | dec                 dword ptr [ebp - 0x14]
            //   0f8567feffff         | jne                 0xfffffe6d
            //   ff75f4               | push                dword ptr [ebp - 0xc]

        $sequence_1 = { 55 8bec 81ec0c0b0000 53 56 57 33db }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec0c0b0000         | sub                 esp, 0xb0c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx

        $sequence_2 = { 8a01 3c20 7c08 3c21 7f08 041e eb34 }
            // n = 7, score = 100
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   3c20                 | cmp                 al, 0x20
            //   7c08                 | jl                  0xa
            //   3c21                 | cmp                 al, 0x21
            //   7f08                 | jg                  0xa
            //   041e                 | add                 al, 0x1e
            //   eb34                 | jmp                 0x36

        $sequence_3 = { 7620 8b55f0 8bcf 2bd7 }
            // n = 4, score = 100
            //   7620                 | jbe                 0x22
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   8bcf                 | mov                 ecx, edi
            //   2bd7                 | sub                 edx, edi

        $sequence_4 = { 0f8ea5010000 8d8d48ffffff 8945ec 894dfc 8d85e4feffff 50 }
            // n = 6, score = 100
            //   0f8ea5010000         | jle                 0x1ab
            //   8d8d48ffffff         | lea                 ecx, [ebp - 0xb8]
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8d85e4feffff         | lea                 eax, [ebp - 0x11c]
            //   50                   | push                eax

        $sequence_5 = { 53 50 e8???????? 6a0e 8d45e4 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   50                   | push                eax
            //   e8????????           |                     
            //   6a0e                 | push                0xe
            //   8d45e4               | lea                 eax, [ebp - 0x1c]

        $sequence_6 = { 6a06 8d85f4f8ffff 6a01 50 ffd7 }
            // n = 5, score = 100
            //   6a06                 | push                6
            //   8d85f4f8ffff         | lea                 eax, [ebp - 0x70c]
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_7 = { 33c0 8dbde5fdffff 889de4fdffff 6a1d }
            // n = 4, score = 100
            //   33c0                 | xor                 eax, eax
            //   8dbde5fdffff         | lea                 edi, [ebp - 0x21b]
            //   889de4fdffff         | mov                 byte ptr [ebp - 0x21c], bl
            //   6a1d                 | push                0x1d

        $sequence_8 = { 83c434 8d8548fdffff c78548fdffff9c000000 50 }
            // n = 4, score = 100
            //   83c434               | add                 esp, 0x34
            //   8d8548fdffff         | lea                 eax, [ebp - 0x2b8]
            //   c78548fdffff9c000000     | mov    dword ptr [ebp - 0x2b8], 0x9c
            //   50                   | push                eax

        $sequence_9 = { 83c410 ff15???????? ffd6 8d45c4 50 }
            // n = 5, score = 100
            //   83c410               | add                 esp, 0x10
            //   ff15????????         |                     
            //   ffd6                 | call                esi
            //   8d45c4               | lea                 eax, [ebp - 0x3c]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 49152
}