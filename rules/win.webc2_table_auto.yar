rule win_webc2_table_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.webc2_table."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_table"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bec 81ec0c0b0000 53 56 57 33db }
            // n = 6, score = 100
            //   8bec                 | mov                 ebp, esp
            //   81ec0c0b0000         | sub                 esp, 0xb0c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx

        $sequence_1 = { 53 ff15???????? 8d85d8f6ffff 50 8d85d8faffff }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8d85d8f6ffff         | lea                 eax, [ebp - 0x928]
            //   50                   | push                eax
            //   8d85d8faffff         | lea                 eax, [ebp - 0x528]

        $sequence_2 = { 8d85bcfdffff 53 50 ff15???????? 5f 5e 5b }
            // n = 7, score = 100
            //   8d85bcfdffff         | lea                 eax, [ebp - 0x244]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_3 = { 8d85e4feffff 50 ffd7 85c0 753b 8d85e4feffff }
            // n = 6, score = 100
            //   8d85e4feffff         | lea                 eax, [ebp - 0x11c]
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   753b                 | jne                 0x3d
            //   8d85e4feffff         | lea                 eax, [ebp - 0x11c]

        $sequence_4 = { 33c0 8dbdd9f6ffff c745e464000000 f3ab 66ab aa }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   8dbdd9f6ffff         | lea                 edi, [ebp - 0x927]
            //   c745e464000000       | mov                 dword ptr [ebp - 0x1c], 0x64
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_5 = { 57 50 8945f4 ff15???????? 8b45f4 bf???????? 57 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   50                   | push                eax
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   ff15????????         |                     
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   bf????????           |                     
            //   57                   | push                edi

        $sequence_6 = { 6860ea0000 ffd7 ff45f0 e9???????? ff15???????? a1???????? }
            // n = 6, score = 100
            //   6860ea0000           | push                0xea60
            //   ffd7                 | call                edi
            //   ff45f0               | inc                 dword ptr [ebp - 0x10]
            //   e9????????           |                     
            //   ff15????????         |                     
            //   a1????????           |                     

        $sequence_7 = { ab ab 66ab 59 33c0 8dbde5feffff 889de4feffff }
            // n = 7, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   8dbde5feffff         | lea                 edi, [ebp - 0x11b]
            //   889de4feffff         | mov                 byte ptr [ebp - 0x11c], bl

        $sequence_8 = { 50 e8???????? 8b45e8 68???????? 889c0580feffff 8d8580feffff }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   68????????           |                     
            //   889c0580feffff       | mov                 byte ptr [ebp + eax - 0x180], bl
            //   8d8580feffff         | lea                 eax, [ebp - 0x180]

        $sequence_9 = { 8bf8 8d46cd 50 8b45f8 83c032 }
            // n = 5, score = 100
            //   8bf8                 | mov                 edi, eax
            //   8d46cd               | lea                 eax, [esi - 0x33]
            //   50                   | push                eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c032               | add                 eax, 0x32

    condition:
        7 of them and filesize < 49152
}