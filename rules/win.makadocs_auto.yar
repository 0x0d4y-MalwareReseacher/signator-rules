rule win_makadocs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.makadocs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.makadocs"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 c645fc41 8bc4 89a54cffffff 50 b9???????? }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   c645fc41             | mov                 byte ptr [ebp - 4], 0x41
            //   8bc4                 | mov                 eax, esp
            //   89a54cffffff         | mov                 dword ptr [ebp - 0xb4], esp
            //   50                   | push                eax
            //   b9????????           |                     

        $sequence_1 = { 8b1b 56 53 e8???????? 83c408 85c0 }
            // n = 6, score = 100
            //   8b1b                 | mov                 ebx, dword ptr [ebx]
            //   56                   | push                esi
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax

        $sequence_2 = { 8b4514 51 8d5004 50 e8???????? c645fc03 8b4e10 }
            // n = 7, score = 100
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   51                   | push                ecx
            //   8d5004               | lea                 edx, [eax + 4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   8b4e10               | mov                 ecx, dword ptr [esi + 0x10]

        $sequence_3 = { 8b3d???????? 56 56 8974241c 8b58f4 53 50 }
            // n = 7, score = 100
            //   8b3d????????         |                     
            //   56                   | push                esi
            //   56                   | push                esi
            //   8974241c             | mov                 dword ptr [esp + 0x1c], esi
            //   8b58f4               | mov                 ebx, dword ptr [eax - 0xc]
            //   53                   | push                ebx
            //   50                   | push                eax

        $sequence_4 = { 52 e8???????? 8bf0 8b442424 83c404 40 50 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   83c404               | add                 esp, 4
            //   40                   | inc                 eax
            //   50                   | push                eax

        $sequence_5 = { 51 8bcc 8964240c 51 b9???????? c744246c00000000 e8???????? }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   8bcc                 | mov                 ecx, esp
            //   8964240c             | mov                 dword ptr [esp + 0xc], esp
            //   51                   | push                ecx
            //   b9????????           |                     
            //   c744246c00000000     | mov                 dword ptr [esp + 0x6c], 0
            //   e8????????           |                     

        $sequence_6 = { e8???????? c644243010 8b442420 83c0f0 8d500c 83c9ff f00fc10a }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c644243010           | mov                 byte ptr [esp + 0x30], 0x10
            //   8b442420             | mov                 eax, dword ptr [esp + 0x20]
            //   83c0f0               | add                 eax, -0x10
            //   8d500c               | lea                 edx, [eax + 0xc]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   f00fc10a             | lock xadd           dword ptr [edx], ecx

        $sequence_7 = { 8b08 8b11 50 8b4204 ffd0 8b5550 6a0a }
            // n = 7, score = 100
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   50                   | push                eax
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   ffd0                 | call                eax
            //   8b5550               | mov                 edx, dword ptr [ebp + 0x50]
            //   6a0a                 | push                0xa

        $sequence_8 = { 889c24b4000000 e8???????? 83c410 c68424a400000013 8b08 8b41f4 51 }
            // n = 7, score = 100
            //   889c24b4000000       | mov                 byte ptr [esp + 0xb4], bl
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   c68424a400000013     | mov                 byte ptr [esp + 0xa4], 0x13
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b41f4               | mov                 eax, dword ptr [ecx - 0xc]
            //   51                   | push                ecx

        $sequence_9 = { 50 c744242801000000 e8???????? e8???????? 8b5df4 6a00 6a00 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   c744242801000000     | mov                 dword ptr [esp + 0x28], 1
            //   e8????????           |                     
            //   e8????????           |                     
            //   8b5df4               | mov                 ebx, dword ptr [ebp - 0xc]
            //   6a00                 | push                0
            //   6a00                 | push                0

    condition:
        7 of them and filesize < 344064
}