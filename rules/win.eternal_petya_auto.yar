rule win_eternal_petya_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.eternal_petya."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.eternal_petya"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68f0000000 6a40 ff15???????? 8bd8 }
            // n = 4, score = 400
            //   68f0000000           | push                0xf0
            //   6a40                 | push                0x40
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_1 = { 53 8d4644 50 53 }
            // n = 4, score = 400
            //   53                   | push                ebx
            //   8d4644               | lea                 eax, [esi + 0x44]
            //   50                   | push                eax
            //   53                   | push                ebx

        $sequence_2 = { 53 6a21 8d460c 50 }
            // n = 4, score = 400
            //   53                   | push                ebx
            //   6a21                 | push                0x21
            //   8d460c               | lea                 eax, [esi + 0xc]
            //   50                   | push                eax

        $sequence_3 = { 55 8bec 51 57 68000000f0 }
            // n = 5, score = 400
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   57                   | push                edi
            //   68000000f0           | push                0xf0000000

        $sequence_4 = { 57 68000000f0 6a18 33ff }
            // n = 4, score = 400
            //   57                   | push                edi
            //   68000000f0           | push                0xf0000000
            //   6a18                 | push                0x18
            //   33ff                 | xor                 edi, edi

        $sequence_5 = { 40 49 75f9 56 ff15???????? }
            // n = 5, score = 400
            //   40                   | inc                 eax
            //   49                   | dec                 ecx
            //   75f9                 | jne                 0xfffffffb
            //   56                   | push                esi
            //   ff15????????         |                     

        $sequence_6 = { 68bd010000 ff7508 33f6 e8???????? }
            // n = 4, score = 300
            //   68bd010000           | push                0x1bd
            //   ff7508               | push                dword ptr [ebp + 8]
            //   33f6                 | xor                 esi, esi
            //   e8????????           |                     

        $sequence_7 = { 8d442428 50 6a38 8d442440 }
            // n = 4, score = 300
            //   8d442428             | lea                 eax, [esp + 0x28]
            //   50                   | push                eax
            //   6a38                 | push                0x38
            //   8d442440             | lea                 eax, [esp + 0x40]

        $sequence_8 = { 55 8bec 83ec50 53 68???????? }
            // n = 5, score = 300
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec50               | sub                 esp, 0x50
            //   53                   | push                ebx
            //   68????????           |                     

        $sequence_9 = { 03c8 ff442418 ff442410 89940ca0020000 }
            // n = 4, score = 300
            //   03c8                 | add                 ecx, eax
            //   ff442418             | inc                 dword ptr [esp + 0x18]
            //   ff442410             | inc                 dword ptr [esp + 0x10]
            //   89940ca0020000       | mov                 dword ptr [esp + ecx + 0x2a0], edx

        $sequence_10 = { 0f86eef9ffff 6afe 58 5f }
            // n = 4, score = 300
            //   0f86eef9ffff         | jbe                 0xfffff9f4
            //   6afe                 | push                -2
            //   58                   | pop                 eax
            //   5f                   | pop                 edi

        $sequence_11 = { 55 8bec 83ec24 85c0 742c }
            // n = 5, score = 300
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec24               | sub                 esp, 0x24
            //   85c0                 | test                eax, eax
            //   742c                 | je                  0x2e

        $sequence_12 = { 33db 47 395e34 7520 }
            // n = 4, score = 300
            //   33db                 | xor                 ebx, ebx
            //   47                   | inc                 edi
            //   395e34               | cmp                 dword ptr [esi + 0x34], ebx
            //   7520                 | jne                 0x22

        $sequence_13 = { 8d442428 50 6a0c ff742424 ffd7 85c0 0f84af000000 }
            // n = 7, score = 300
            //   8d442428             | lea                 eax, [esp + 0x28]
            //   50                   | push                eax
            //   6a0c                 | push                0xc
            //   ff742424             | push                dword ptr [esp + 0x24]
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   0f84af000000         | je                  0xb5

        $sequence_14 = { 8b6b04 896c2404 8bec 81ec48310000 8365f800 }
            // n = 5, score = 200
            //   8b6b04               | mov                 ebp, dword ptr [ebx + 4]
            //   896c2404             | mov                 dword ptr [esp + 4], ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec48310000         | sub                 esp, 0x3148
            //   8365f800             | and                 dword ptr [ebp - 8], 0

        $sequence_15 = { 8b7004 0bca 314808 3108 }
            // n = 4, score = 200
            //   8b7004               | mov                 esi, dword ptr [eax + 4]
            //   0bca                 | or                  ecx, edx
            //   314808               | xor                 dword ptr [eax + 8], ecx
            //   3108                 | xor                 dword ptr [eax], ecx

    condition:
        7 of them and filesize < 851968
}