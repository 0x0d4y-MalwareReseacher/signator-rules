rule win_oldbait_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.oldbait."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oldbait"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ebda 8b45fc 0531b11800 50 }
            // n = 4, score = 400
            //   ebda                 | jmp                 0xffffffdc
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   0531b11800           | add                 eax, 0x18b131
            //   50                   | push                eax

        $sequence_1 = { 8d70ff 85f6 7626 8b4510 }
            // n = 4, score = 400
            //   8d70ff               | lea                 esi, [eax - 1]
            //   85f6                 | test                esi, esi
            //   7626                 | jbe                 0x28
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_2 = { 6a40 6800300000 68d4fd1900 6a00 }
            // n = 4, score = 400
            //   6a40                 | push                0x40
            //   6800300000           | push                0x3000
            //   68d4fd1900           | push                0x19fdd4
            //   6a00                 | push                0

        $sequence_3 = { 0145d4 41 c1ea04 75dc }
            // n = 4, score = 400
            //   0145d4               | add                 dword ptr [ebp - 0x2c], eax
            //   41                   | inc                 ecx
            //   c1ea04               | shr                 edx, 4
            //   75dc                 | jne                 0xffffffde

        $sequence_4 = { 0145d8 8bb54cffffff 56 ff55d0 }
            // n = 4, score = 400
            //   0145d8               | add                 dword ptr [ebp - 0x28], eax
            //   8bb54cffffff         | mov                 esi, dword ptr [ebp - 0xb4]
            //   56                   | push                esi
            //   ff55d0               | call                dword ptr [ebp - 0x30]

        $sequence_5 = { 0145d8 33ff 8d837ff61800 803800 }
            // n = 4, score = 400
            //   0145d8               | add                 dword ptr [ebp - 0x28], eax
            //   33ff                 | xor                 edi, edi
            //   8d837ff61800         | lea                 eax, [ebx + 0x18f67f]
            //   803800               | cmp                 byte ptr [eax], 0

        $sequence_6 = { 8b4510 8bca 83f101 83e107 d3e8 }
            // n = 5, score = 400
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8bca                 | mov                 ecx, edx
            //   83f101               | xor                 ecx, 1
            //   83e107               | and                 ecx, 7
            //   d3e8                 | shr                 eax, cl

        $sequence_7 = { 83e107 d3e8 30043a 8b4510 69c061ea0000 }
            // n = 5, score = 400
            //   83e107               | and                 ecx, 7
            //   d3e8                 | shr                 eax, cl
            //   30043a               | xor                 byte ptr [edx + edi], al
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   69c061ea0000         | imul                eax, eax, 0xea61

        $sequence_8 = { 01459c 8b45c8 8945f8 eb05 }
            // n = 4, score = 400
            //   01459c               | add                 dword ptr [ebp - 0x64], eax
            //   8b45c8               | mov                 eax, dword ptr [ebp - 0x38]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   eb05                 | jmp                 7

        $sequence_9 = { 0103 01451c 8b06 8bc8 c1e906 }
            // n = 5, score = 400
            //   0103                 | add                 dword ptr [ebx], eax
            //   01451c               | add                 dword ptr [ebp + 0x1c], eax
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8bc8                 | mov                 ecx, eax
            //   c1e906               | shr                 ecx, 6

        $sequence_10 = { 42 3bd6 894510 72da }
            // n = 4, score = 400
            //   42                   | inc                 edx
            //   3bd6                 | cmp                 edx, esi
            //   894510               | mov                 dword ptr [ebp + 0x10], eax
            //   72da                 | jb                  0xffffffdc

        $sequence_11 = { 0145d8 8b45d8 3b45c8 7cc2 }
            // n = 4, score = 400
            //   0145d8               | add                 dword ptr [ebp - 0x28], eax
            //   8b45d8               | mov                 eax, dword ptr [ebp - 0x28]
            //   3b45c8               | cmp                 eax, dword ptr [ebp - 0x38]
            //   7cc2                 | jl                  0xffffffc4

        $sequence_12 = { ff35???????? ff75fc ff55f4 5f 5e }
            // n = 5, score = 400
            //   ff35????????         |                     
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff55f4               | call                dword ptr [ebp - 0xc]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_13 = { 0145d8 8b45f0 ff45ec 0fb64004 }
            // n = 4, score = 400
            //   0145d8               | add                 dword ptr [ebp - 0x28], eax
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   ff45ec               | inc                 dword ptr [ebp - 0x14]
            //   0fb64004             | movzx               eax, byte ptr [eax + 4]

        $sequence_14 = { 8b450c 56 33d2 57 8b7d08 8d70ff 85f6 }
            // n = 7, score = 400
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   56                   | push                esi
            //   33d2                 | xor                 edx, edx
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8d70ff               | lea                 esi, [eax - 1]
            //   85f6                 | test                esi, esi

        $sequence_15 = { 837d1c00 8b4d18 762f 8b5d0c 8bc6 }
            // n = 5, score = 400
            //   837d1c00             | cmp                 dword ptr [ebp + 0x1c], 0
            //   8b4d18               | mov                 ecx, dword ptr [ebp + 0x18]
            //   762f                 | jbe                 0x31
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   8bc6                 | mov                 eax, esi

        $sequence_16 = { 8d8578ffffff 50 e8???????? ff75f4 8d8578ffffff 68???????? 50 }
            // n = 7, score = 100
            //   8d8578ffffff         | lea                 eax, [ebp - 0x88]
            //   50                   | push                eax
            //   e8????????           |                     
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   8d8578ffffff         | lea                 eax, [ebp - 0x88]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_17 = { ff55d8 8bd8 83fbff 744e }
            // n = 4, score = 100
            //   ff55d8               | call                dword ptr [ebp - 0x28]
            //   8bd8                 | mov                 ebx, eax
            //   83fbff               | cmp                 ebx, -1
            //   744e                 | je                  0x50

        $sequence_18 = { 8955fc 8d4402fe 8945f8 eb03 8b55fc }
            // n = 5, score = 100
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   8d4402fe             | lea                 eax, [edx + eax - 2]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   eb03                 | jmp                 5
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]

        $sequence_19 = { 68???????? 53 ffd6 ffd0 8d8578ffffff 6a64 }
            // n = 6, score = 100
            //   68????????           |                     
            //   53                   | push                ebx
            //   ffd6                 | call                esi
            //   ffd0                 | call                eax
            //   8d8578ffffff         | lea                 eax, [ebp - 0x88]
            //   6a64                 | push                0x64

        $sequence_20 = { d3e8 32d8 8d47ff 83e007 321c30 8b45f8 301c38 }
            // n = 7, score = 100
            //   d3e8                 | shr                 eax, cl
            //   32d8                 | xor                 bl, al
            //   8d47ff               | lea                 eax, [edi - 1]
            //   83e007               | and                 eax, 7
            //   321c30               | xor                 bl, byte ptr [eax + esi]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   301c38               | xor                 byte ptr [eax + edi], bl

        $sequence_21 = { ff75f8 ffd6 ffd0 8d45f4 50 8d45dc }
            // n = 6, score = 100
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ffd6                 | call                esi
            //   ffd0                 | call                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   8d45dc               | lea                 eax, [ebp - 0x24]

        $sequence_22 = { 56 8b7514 3bc1 57 8945f0 8945f4 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   8b7514               | mov                 esi, dword ptr [ebp + 0x14]
            //   3bc1                 | cmp                 eax, ecx
            //   57                   | push                edi
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax

        $sequence_23 = { 53 8d85c0feffff 57 50 e8???????? 53 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   8d85c0feffff         | lea                 eax, [ebp - 0x140]
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 172032
}