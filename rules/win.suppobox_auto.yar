rule win_suppobox_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.suppobox."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suppobox"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bc8 7d10 a1???????? 2b05???????? a3???????? }
            // n = 5, score = 200
            //   3bc8                 | cmp                 ecx, eax
            //   7d10                 | jge                 0x12
            //   a1????????           |                     
            //   2b05????????         |                     
            //   a3????????           |                     

        $sequence_1 = { 8945f0 a1???????? 83e801 a3???????? }
            // n = 4, score = 200
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   a1????????           |                     
            //   83e801               | sub                 eax, 1
            //   a3????????           |                     

        $sequence_2 = { 7412 8b0d???????? 030d???????? 890d???????? }
            // n = 4, score = 200
            //   7412                 | je                  0x14
            //   8b0d????????         |                     
            //   030d????????         |                     
            //   890d????????         |                     

        $sequence_3 = { 7d10 a1???????? 0b05???????? a3???????? }
            // n = 4, score = 200
            //   7d10                 | jge                 0x12
            //   a1????????           |                     
            //   0b05????????         |                     
            //   a3????????           |                     

        $sequence_4 = { 7e10 a1???????? 0305???????? a3???????? }
            // n = 4, score = 200
            //   7e10                 | jle                 0x12
            //   a1????????           |                     
            //   0305????????         |                     
            //   a3????????           |                     

        $sequence_5 = { 7d10 a1???????? 3305???????? a3???????? }
            // n = 4, score = 200
            //   7d10                 | jge                 0x12
            //   a1????????           |                     
            //   3305????????         |                     
            //   a3????????           |                     

        $sequence_6 = { 890d???????? e8???????? 8bf0 e8???????? 03f0 }
            // n = 5, score = 200
            //   890d????????         |                     
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   e8????????           |                     
            //   03f0                 | add                 esi, eax

        $sequence_7 = { 01c6 39fe 0f8d2f020000 80bc2ef4f7ffff0a }
            // n = 4, score = 100
            //   01c6                 | add                 esi, eax
            //   39fe                 | cmp                 esi, edi
            //   0f8d2f020000         | jge                 0x235
            //   80bc2ef4f7ffff0a     | cmp                 byte ptr [esi + ebp - 0x80c], 0xa

        $sequence_8 = { 01c6 ebdb ff7510 57 }
            // n = 4, score = 100
            //   01c6                 | add                 esi, eax
            //   ebdb                 | jmp                 0xffffffdd
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   57                   | push                edi

        $sequence_9 = { 019dacf7ffff 83c40c 299dc4f7ffff e9???????? }
            // n = 4, score = 100
            //   019dacf7ffff         | add                 dword ptr [ebp - 0x854], ebx
            //   83c40c               | add                 esp, 0xc
            //   299dc4f7ffff         | sub                 dword ptr [ebp - 0x83c], ebx
            //   e9????????           |                     

        $sequence_10 = { 8d4508 890424 e8???????? 8b5dfc 83ec08 }
            // n = 5, score = 100
            //   8d4508               | lea                 eax, [ebp + 8]
            //   890424               | mov                 dword ptr [esp], eax
            //   e8????????           |                     
            //   8b5dfc               | mov                 ebx, dword ptr [ebp - 4]
            //   83ec08               | sub                 esp, 8

        $sequence_11 = { 8d449004 894c2408 c744240400000000 890424 }
            // n = 4, score = 100
            //   8d449004             | lea                 eax, [eax + edx*4 + 4]
            //   894c2408             | mov                 dword ptr [esp + 8], ecx
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0
            //   890424               | mov                 dword ptr [esp], eax

        $sequence_12 = { 01bdacf7ffff 83c40c 83bdc8f7ffff00 8b95c8f7ffff }
            // n = 4, score = 100
            //   01bdacf7ffff         | add                 dword ptr [ebp - 0x854], edi
            //   83c40c               | add                 esp, 0xc
            //   83bdc8f7ffff00       | cmp                 dword ptr [ebp - 0x838], 0
            //   8b95c8f7ffff         | mov                 edx, dword ptr [ebp - 0x838]

        $sequence_13 = { 01d8 3b85b0f7ffff 7e2f 8b95c8f7ffff }
            // n = 4, score = 100
            //   01d8                 | add                 eax, ebx
            //   3b85b0f7ffff         | cmp                 eax, dword ptr [ebp - 0x850]
            //   7e2f                 | jle                 0x31
            //   8b95c8f7ffff         | mov                 edx, dword ptr [ebp - 0x838]

        $sequence_14 = { 8d4504 8b7c2418 85d2 8917 }
            // n = 4, score = 100
            //   8d4504               | lea                 eax, [ebp + 4]
            //   8b7c2418             | mov                 edi, dword ptr [esp + 0x18]
            //   85d2                 | test                edx, edx
            //   8917                 | mov                 dword ptr [edi], edx

        $sequence_15 = { 01c6 39fe 0f8d7e010000 80bc2ef4f7ffff0a }
            // n = 4, score = 100
            //   01c6                 | add                 esi, eax
            //   39fe                 | cmp                 esi, edi
            //   0f8d7e010000         | jge                 0x184
            //   80bc2ef4f7ffff0a     | cmp                 byte ptr [esi + ebp - 0x80c], 0xa

        $sequence_16 = { 01d7 68???????? 57 e8???????? }
            // n = 4, score = 100
            //   01d7                 | add                 edi, edx
            //   68????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_17 = { 8d4504 89442418 89c2 89f8 }
            // n = 4, score = 100
            //   8d4504               | lea                 eax, [ebp + 4]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   89c2                 | mov                 edx, eax
            //   89f8                 | mov                 eax, edi

        $sequence_18 = { 8d4501 8b6c242c 89742410 8b742438 }
            // n = 4, score = 100
            //   8d4501               | lea                 eax, [ebp + 1]
            //   8b6c242c             | mov                 ebp, dword ptr [esp + 0x2c]
            //   89742410             | mov                 dword ptr [esp + 0x10], esi
            //   8b742438             | mov                 esi, dword ptr [esp + 0x38]

        $sequence_19 = { 8d4501 85ff 8944241c 8d2cbd00000000 }
            // n = 4, score = 100
            //   8d4501               | lea                 eax, [ebp + 1]
            //   85ff                 | test                edi, edi
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   8d2cbd00000000       | lea                 ebp, [edi*4]

        $sequence_20 = { 01c9 4a 79f2 833b54 }
            // n = 4, score = 100
            //   01c9                 | add                 ecx, ecx
            //   4a                   | dec                 edx
            //   79f2                 | jns                 0xfffffff4
            //   833b54               | cmp                 dword ptr [ebx], 0x54

        $sequence_21 = { 8d448504 85db 8918 7403 83c004 }
            // n = 5, score = 100
            //   8d448504             | lea                 eax, [ebp + eax*4 + 4]
            //   85db                 | test                ebx, ebx
            //   8918                 | mov                 dword ptr [eax], ebx
            //   7403                 | je                  5
            //   83c004               | add                 eax, 4

    condition:
        7 of them and filesize < 1875968
}