rule win_isspace_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.isspace."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.isspace"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d05171b0000 4c 8d05fc1a0000 48 8d15fd1a0000 48 }
            // n = 6, score = 200
            //   8d05171b0000         | lea                 eax, [0x1b17]
            //   4c                   | dec                 esp
            //   8d05fc1a0000         | lea                 eax, [0x1afc]
            //   48                   | dec                 eax
            //   8d15fd1a0000         | lea                 edx, [0x1afd]
            //   48                   | dec                 eax

        $sequence_1 = { 83c9ff 48 8947ff 33c0 48 8dbc2420010000 f2ae }
            // n = 7, score = 200
            //   83c9ff               | or                  ecx, 0xffffffff
            //   48                   | dec                 eax
            //   8947ff               | mov                 dword ptr [edi - 1], eax
            //   33c0                 | xor                 eax, eax
            //   48                   | dec                 eax
            //   8dbc2420010000       | lea                 edi, [esp + 0x120]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]

        $sequence_2 = { c701???????? a1???????? 85c0 7409 50 }
            // n = 5, score = 200
            //   c701????????         |                     
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   50                   | push                eax

        $sequence_3 = { 48 8b4b18 ff15???????? 83f801 7553 4c }
            // n = 6, score = 200
            //   48                   | dec                 eax
            //   8b4b18               | mov                 ecx, dword ptr [ebx + 0x18]
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1
            //   7553                 | jne                 0x55
            //   4c                   | dec                 esp

        $sequence_4 = { 48 33cc e8???????? 4c 8d9c2440050000 49 8b5b18 }
            // n = 7, score = 200
            //   48                   | dec                 eax
            //   33cc                 | xor                 ecx, esp
            //   e8????????           |                     
            //   4c                   | dec                 esp
            //   8d9c2440050000       | lea                 ebx, [esp + 0x540]
            //   49                   | dec                 ecx
            //   8b5b18               | mov                 ebx, dword ptr [ebx + 0x18]

        $sequence_5 = { c784248c00000001010000 6689b42490000000 40 88b42420010000 e8???????? 48 }
            // n = 6, score = 200
            //   c784248c00000001010000     | mov    dword ptr [esp + 0x8c], 0x101
            //   6689b42490000000     | mov                 word ptr [esp + 0x90], si
            //   40                   | inc                 eax
            //   88b42420010000       | mov                 byte ptr [esp + 0x120], dh
            //   e8????????           |                     
            //   48                   | dec                 eax

        $sequence_6 = { c68424d90000006f c68424da0000006d c68424db00000053 c68424dc00000070 c68424dd00000065 }
            // n = 5, score = 200
            //   c68424d90000006f     | mov                 byte ptr [esp + 0xd9], 0x6f
            //   c68424da0000006d     | mov                 byte ptr [esp + 0xda], 0x6d
            //   c68424db00000053     | mov                 byte ptr [esp + 0xdb], 0x53
            //   c68424dc00000070     | mov                 byte ptr [esp + 0xdc], 0x70
            //   c68424dd00000065     | mov                 byte ptr [esp + 0xdd], 0x65

        $sequence_7 = { 89842430010000 48 8bda 83f904 0f85f5000000 48 8d4c2421 }
            // n = 7, score = 200
            //   89842430010000       | mov                 dword ptr [esp + 0x130], eax
            //   48                   | dec                 eax
            //   8bda                 | mov                 ebx, edx
            //   83f904               | cmp                 ecx, 4
            //   0f85f5000000         | jne                 0xfb
            //   48                   | dec                 eax
            //   8d4c2421             | lea                 ecx, [esp + 0x21]

    condition:
        7 of them and filesize < 434176
}