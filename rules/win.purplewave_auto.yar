rule win_purplewave_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.purplewave."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.purplewave"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d8de4feffff c645fc2e e8???????? 8b9548ffffff 8d8db4feffff e8???????? 8bf0 }
            // n = 7, score = 400
            //   8d8de4feffff         | lea                 ecx, dword ptr [ebp - 0x11c]
            //   c645fc2e             | mov                 byte ptr [ebp - 4], 0x2e
            //   e8????????           |                     
            //   8b9548ffffff         | mov                 edx, dword ptr [ebp - 0xb8]
            //   8d8db4feffff         | lea                 ecx, dword ptr [ebp - 0x14c]
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_1 = { 80c201 8d0441 8d4dd8 0f454dd8 33d2 83a560feffff00 50 }
            // n = 7, score = 400
            //   80c201               | add                 dl, 1
            //   8d0441               | lea                 eax, dword ptr [ecx + eax*2]
            //   8d4dd8               | lea                 ecx, dword ptr [ebp - 0x28]
            //   0f454dd8             | cmovne              ecx, dword ptr [ebp - 0x28]
            //   33d2                 | xor                 edx, edx
            //   83a560feffff00       | and                 dword ptr [ebp - 0x1a0], 0
            //   50                   | push                eax

        $sequence_2 = { 8d8d08ffffff e9???????? c3 8b853cffffff 2500040000 0f8415000000 81a53cfffffffffbffff }
            // n = 7, score = 400
            //   8d8d08ffffff         | lea                 ecx, dword ptr [ebp - 0xf8]
            //   e9????????           |                     
            //   c3                   | ret                 
            //   8b853cffffff         | mov                 eax, dword ptr [ebp - 0xc4]
            //   2500040000           | and                 eax, 0x400
            //   0f8415000000         | je                  0x1b
            //   81a53cfffffffffbffff     | and    dword ptr [ebp - 0xc4], 0xfffffbff

        $sequence_3 = { 42 83ee01 75f2 5e 5d c20800 6888000000 }
            // n = 7, score = 400
            //   42                   | inc                 edx
            //   83ee01               | sub                 esi, 1
            //   75f2                 | jne                 0xfffffff4
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   6888000000           | push                0x88

        $sequence_4 = { 8b75ec d1f9 8910 8b4730 8908 8b45f4 891e }
            // n = 7, score = 400
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   d1f9                 | sar                 ecx, 1
            //   8910                 | mov                 dword ptr [eax], edx
            //   8b4730               | mov                 eax, dword ptr [edi + 0x30]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   891e                 | mov                 dword ptr [esi], ebx

        $sequence_5 = { 8b8a10fdffff 33c8 e8???????? 8b4afc 33c8 e8???????? b8???????? }
            // n = 7, score = 400
            //   8b8a10fdffff         | mov                 ecx, dword ptr [edx - 0x2f0]
            //   33c8                 | xor                 ecx, eax
            //   e8????????           |                     
            //   8b4afc               | mov                 ecx, dword ptr [edx - 4]
            //   33c8                 | xor                 ecx, eax
            //   e8????????           |                     
            //   b8????????           |                     

        $sequence_6 = { e8???????? 8d4c2478 e8???????? 8d4c2460 e8???????? 8d8c24f0000000 e8???????? }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8d4c2478             | lea                 ecx, dword ptr [esp + 0x78]
            //   e8????????           |                     
            //   8d4c2460             | lea                 ecx, dword ptr [esp + 0x60]
            //   e8????????           |                     
            //   8d8c24f0000000       | lea                 ecx, dword ptr [esp + 0xf0]
            //   e8????????           |                     

        $sequence_7 = { 6a01 8bd0 8d8d08ffffff c7003519ef54 c740046e5bc9d4 c74008c2246f96 c7400c2fadf12e }
            // n = 7, score = 400
            //   6a01                 | push                1
            //   8bd0                 | mov                 edx, eax
            //   8d8d08ffffff         | lea                 ecx, dword ptr [ebp - 0xf8]
            //   c7003519ef54         | mov                 dword ptr [eax], 0x54ef1935
            //   c740046e5bc9d4       | mov                 dword ptr [eax + 4], 0xd4c95b6e
            //   c74008c2246f96       | mov                 dword ptr [eax + 8], 0x966f24c2
            //   c7400c2fadf12e       | mov                 dword ptr [eax + 0xc], 0x2ef1ad2f

        $sequence_8 = { 50 8d8dacf9ffff e8???????? c78540fafffffe010000 57 8d8dacf9ffff c645fc10 }
            // n = 7, score = 400
            //   50                   | push                eax
            //   8d8dacf9ffff         | lea                 ecx, dword ptr [ebp - 0x654]
            //   e8????????           |                     
            //   c78540fafffffe010000     | mov    dword ptr [ebp - 0x5c0], 0x1fe
            //   57                   | push                edi
            //   8d8dacf9ffff         | lea                 ecx, dword ptr [ebp - 0x654]
            //   c645fc10             | mov                 byte ptr [ebp - 4], 0x10

        $sequence_9 = { 8bfe 83e63f c1ff06 6bf638 8b04bd201e4900 807c302800 7d3c }
            // n = 7, score = 400
            //   8bfe                 | mov                 edi, esi
            //   83e63f               | and                 esi, 0x3f
            //   c1ff06               | sar                 edi, 6
            //   6bf638               | imul                esi, esi, 0x38
            //   8b04bd201e4900       | mov                 eax, dword ptr [edi*4 + 0x491e20]
            //   807c302800           | cmp                 byte ptr [eax + esi + 0x28], 0
            //   7d3c                 | jge                 0x3e

    condition:
        7 of them and filesize < 1400832
}