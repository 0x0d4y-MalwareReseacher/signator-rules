rule win_chir_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.chir."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chir"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33d2 48 8d4c0901 7410 8d0c8df4ffffff 304c15f8 42 }
            // n = 7, score = 300
            //   33d2                 | xor                 edx, edx
            //   48                   | dec                 eax
            //   8d4c0901             | lea                 ecx, [ecx + ecx + 1]
            //   7410                 | je                  0x12
            //   8d0c8df4ffffff       | lea                 ecx, [ecx*4 - 0xc]
            //   304c15f8             | xor                 byte ptr [ebp + edx - 8], cl
            //   42                   | inc                 edx

        $sequence_1 = { 8d4c0901 7410 8d0c8df4ffffff 304c15f8 42 }
            // n = 5, score = 300
            //   8d4c0901             | lea                 ecx, [ecx + ecx + 1]
            //   7410                 | je                  0x12
            //   8d0c8df4ffffff       | lea                 ecx, [ecx*4 - 0xc]
            //   304c15f8             | xor                 byte ptr [ebp + edx - 8], cl
            //   42                   | inc                 edx

        $sequence_2 = { 8d45f8 50 c745f821352432 c745fc51173300 }
            // n = 4, score = 300
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   c745f821352432       | mov                 dword ptr [ebp - 8], 0x32243521
            //   c745fc51173300       | mov                 dword ptr [ebp - 4], 0x331751

        $sequence_3 = { 80c203 46 8811 3bf0 72e7 57 }
            // n = 6, score = 300
            //   80c203               | add                 dl, 3
            //   46                   | inc                 esi
            //   8811                 | mov                 byte ptr [ecx], dl
            //   3bf0                 | cmp                 esi, eax
            //   72e7                 | jb                  0xffffffe9
            //   57                   | push                edi

        $sequence_4 = { 48 8d4c0901 7410 8d0c8df4ffffff 304c15f8 42 }
            // n = 6, score = 300
            //   48                   | dec                 eax
            //   8d4c0901             | lea                 ecx, [ecx + ecx + 1]
            //   7410                 | je                  0x12
            //   8d0c8df4ffffff       | lea                 ecx, [ecx*4 - 0xc]
            //   304c15f8             | xor                 byte ptr [ebp + edx - 8], cl
            //   42                   | inc                 edx

        $sequence_5 = { 33d2 48 8d4c0901 7410 }
            // n = 4, score = 300
            //   33d2                 | xor                 edx, edx
            //   48                   | dec                 eax
            //   8d4c0901             | lea                 ecx, [ecx + ecx + 1]
            //   7410                 | je                  0x12

        $sequence_6 = { c745fc51173300 e8???????? 83c410 48 }
            // n = 4, score = 300
            //   c745fc51173300       | mov                 dword ptr [ebp - 4], 0x331751
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   48                   | dec                 eax

        $sequence_7 = { 7419 8d4c35f8 8a11 80f2fc 80c202 80f201 80c203 }
            // n = 7, score = 300
            //   7419                 | je                  0x1b
            //   8d4c35f8             | lea                 ecx, [ebp + esi - 8]
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   80f2fc               | xor                 dl, 0xfc
            //   80c202               | add                 dl, 2
            //   80f201               | xor                 dl, 1
            //   80c203               | add                 dl, 3

        $sequence_8 = { 8d4c35f8 8a11 80f2fc 80c202 80f201 80c203 46 }
            // n = 7, score = 300
            //   8d4c35f8             | lea                 ecx, [ebp + esi - 8]
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   80f2fc               | xor                 dl, 0xfc
            //   80c202               | add                 dl, 2
            //   80f201               | xor                 dl, 1
            //   80c203               | add                 dl, 3
            //   46                   | inc                 esi

        $sequence_9 = { 8a11 80f2fc 80c202 80f201 80c203 46 8811 }
            // n = 7, score = 300
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   80f2fc               | xor                 dl, 0xfc
            //   80c202               | add                 dl, 2
            //   80f201               | xor                 dl, 1
            //   80c203               | add                 dl, 3
            //   46                   | inc                 esi
            //   8811                 | mov                 byte ptr [ecx], dl

    condition:
        7 of them and filesize < 286720
}