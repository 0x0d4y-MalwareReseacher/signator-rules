rule win_quickheal_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.quickheal."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.quickheal"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3b35???????? 7365 8bce 8bc6 c1f905 83e01f 8b0c8d20020410 }
            // n = 7, score = 100
            //   3b35????????         |                     
            //   7365                 | jae                 0x67
            //   8bce                 | mov                 ecx, esi
            //   8bc6                 | mov                 eax, esi
            //   c1f905               | sar                 ecx, 5
            //   83e01f               | and                 eax, 0x1f
            //   8b0c8d20020410       | mov                 ecx, dword ptr [ecx*4 + 0x10040220]

        $sequence_1 = { 8b442408 53 55 56 8d68ff 33f6 }
            // n = 6, score = 100
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi
            //   8d68ff               | lea                 ebp, [eax - 1]
            //   33f6                 | xor                 esi, esi

        $sequence_2 = { f2ae 8bcb 4f c1e902 f3a5 8bcb 8d842490050000 }
            // n = 7, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   8bcb                 | mov                 ecx, ebx
            //   4f                   | dec                 edi
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bcb                 | mov                 ecx, ebx
            //   8d842490050000       | lea                 eax, [esp + 0x590]

        $sequence_3 = { 83c404 85c0 0f85e0000000 eb2a 3d00070000 7411 }
            // n = 6, score = 100
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   0f85e0000000         | jne                 0xe6
            //   eb2a                 | jmp                 0x2c
            //   3d00070000           | cmp                 eax, 0x700
            //   7411                 | je                  0x13

        $sequence_4 = { 884609 c6460ac3 5e b801000000 5b 83c414 c3 }
            // n = 7, score = 100
            //   884609               | mov                 byte ptr [esi + 9], al
            //   c6460ac3             | mov                 byte ptr [esi + 0xa], 0xc3
            //   5e                   | pop                 esi
            //   b801000000           | mov                 eax, 1
            //   5b                   | pop                 ebx
            //   83c414               | add                 esp, 0x14
            //   c3                   | ret                 

        $sequence_5 = { 8b5f04 8b6f08 51 52 89442460 e8???????? }
            // n = 6, score = 100
            //   8b5f04               | mov                 ebx, dword ptr [edi + 4]
            //   8b6f08               | mov                 ebp, dword ptr [edi + 8]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   89442460             | mov                 dword ptr [esp + 0x60], eax
            //   e8????????           |                     

        $sequence_6 = { 8d9424c8000000 52 6a08 50 e8???????? 8d4c2454 }
            // n = 6, score = 100
            //   8d9424c8000000       | lea                 edx, [esp + 0xc8]
            //   52                   | push                edx
            //   6a08                 | push                8
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d4c2454             | lea                 ecx, [esp + 0x54]

        $sequence_7 = { c6442415d5 c64424165b c644241715 8b4c2414 6689542459 89842498000000 }
            // n = 6, score = 100
            //   c6442415d5           | mov                 byte ptr [esp + 0x15], 0xd5
            //   c64424165b           | mov                 byte ptr [esp + 0x16], 0x5b
            //   c644241715           | mov                 byte ptr [esp + 0x17], 0x15
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   6689542459           | mov                 word ptr [esp + 0x59], dx
            //   89842498000000       | mov                 dword ptr [esp + 0x98], eax

        $sequence_8 = { 88943484000000 46 81fe4c010000 72e2 8d942484000000 684c010000 52 }
            // n = 7, score = 100
            //   88943484000000       | mov                 byte ptr [esp + esi + 0x84], dl
            //   46                   | inc                 esi
            //   81fe4c010000         | cmp                 esi, 0x14c
            //   72e2                 | jb                  0xffffffe4
            //   8d942484000000       | lea                 edx, [esp + 0x84]
            //   684c010000           | push                0x14c
            //   52                   | push                edx

        $sequence_9 = { ff542444 83c40c 85c0 0f8583000000 8b4c2414 6a06 51 }
            // n = 7, score = 100
            //   ff542444             | call                dword ptr [esp + 0x44]
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f8583000000         | jne                 0x89
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   6a06                 | push                6
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 553984
}