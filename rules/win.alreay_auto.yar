rule win_alreay_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.alreay."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alreay"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b5c2460 33eb 8bd8 03de 8b742410 03eb 8b5c2460 }
            // n = 7, score = 100
            //   8b5c2460             | mov                 ebx, dword ptr [esp + 0x60]
            //   33eb                 | xor                 ebp, ebx
            //   8bd8                 | mov                 ebx, eax
            //   03de                 | add                 ebx, esi
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   03eb                 | add                 ebp, ebx
            //   8b5c2460             | mov                 ebx, dword ptr [esp + 0x60]

        $sequence_1 = { e8???????? 660fbae50e 687de90e11 f8 83ed02 60 9c }
            // n = 7, score = 100
            //   e8????????           |                     
            //   660fbae50e           | bt                  bp, 0xe
            //   687de90e11           | push                0x110ee97d
            //   f8                   | clc                 
            //   83ed02               | sub                 ebp, 2
            //   60                   | pushal              
            //   9c                   | pushfd              

        $sequence_2 = { 8bd8 e8???????? 83c410 33ed 83fbff 0f847ff2ffff 8b442434 }
            // n = 7, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   33ed                 | xor                 ebp, ebp
            //   83fbff               | cmp                 ebx, -1
            //   0f847ff2ffff         | je                  0xfffff285
            //   8b442434             | mov                 eax, dword ptr [esp + 0x34]

        $sequence_3 = { e8???????? 884723 8b4630 8b5634 b918000000 e8???????? 884724 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   884723               | mov                 byte ptr [edi + 0x23], al
            //   8b4630               | mov                 eax, dword ptr [esi + 0x30]
            //   8b5634               | mov                 edx, dword ptr [esi + 0x34]
            //   b918000000           | mov                 ecx, 0x18
            //   e8????????           |                     
            //   884724               | mov                 byte ptr [edi + 0x24], al

        $sequence_4 = { ff15???????? 83c410 83f801 0f8c90020000 8bfb 83c9ff 33c0 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   83f801               | cmp                 eax, 1
            //   0f8c90020000         | jl                  0x296
            //   8bfb                 | mov                 edi, ebx
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { e9???????? 3bd8 0f8517010000 8a4e04 84c9 0f850c010000 8985e8000000 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   3bd8                 | cmp                 ebx, eax
            //   0f8517010000         | jne                 0x11d
            //   8a4e04               | mov                 cl, byte ptr [esi + 4]
            //   84c9                 | test                cl, cl
            //   0f850c010000         | jne                 0x112
            //   8985e8000000         | mov                 dword ptr [ebp + 0xe8], eax

        $sequence_6 = { 8944240c 895c2410 895c2414 55 8b6c2448 8d44241c 3bc5 }
            // n = 7, score = 100
            //   8944240c             | mov                 dword ptr [esp + 0xc], eax
            //   895c2410             | mov                 dword ptr [esp + 0x10], ebx
            //   895c2414             | mov                 dword ptr [esp + 0x14], ebx
            //   55                   | push                ebp
            //   8b6c2448             | mov                 ebp, dword ptr [esp + 0x48]
            //   8d44241c             | lea                 eax, [esp + 0x1c]
            //   3bc5                 | cmp                 eax, ebp

        $sequence_7 = { 8b442440 8bdd 50 e8???????? 25ff000000 83c428 8bf0 }
            // n = 7, score = 100
            //   8b442440             | mov                 eax, dword ptr [esp + 0x40]
            //   8bdd                 | mov                 ebx, ebp
            //   50                   | push                eax
            //   e8????????           |                     
            //   25ff000000           | and                 eax, 0xff
            //   83c428               | add                 esp, 0x28
            //   8bf0                 | mov                 esi, eax

        $sequence_8 = { e8???????? 8bf0 83c414 85f6 7521 8d542458 52 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c414               | add                 esp, 0x14
            //   85f6                 | test                esi, esi
            //   7521                 | jne                 0x23
            //   8d542458             | lea                 edx, [esp + 0x58]
            //   52                   | push                edx

        $sequence_9 = { 8b0d???????? 25ff000000 833901 7e0a 6a08 50 ffd3 }
            // n = 7, score = 100
            //   8b0d????????         |                     
            //   25ff000000           | and                 eax, 0xff
            //   833901               | cmp                 dword ptr [ecx], 1
            //   7e0a                 | jle                 0xc
            //   6a08                 | push                8
            //   50                   | push                eax
            //   ffd3                 | call                ebx

    condition:
        7 of them and filesize < 1867776
}