rule win_hdmr_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.hdmr."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hdmr"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d7241 0fb701 0fb71c0f 2bc3 2bc2 }
            // n = 5, score = 100
            //   8d7241               | lea                 esi, [edx + 0x41]
            //   0fb701               | movzx               eax, word ptr [ecx]
            //   0fb71c0f             | movzx               ebx, word ptr [edi + ecx]
            //   2bc3                 | sub                 eax, ebx
            //   2bc2                 | sub                 eax, edx

        $sequence_1 = { 8bce ffd2 84c0 743b 8d4900 }
            // n = 5, score = 100
            //   8bce                 | mov                 ecx, esi
            //   ffd2                 | call                edx
            //   84c0                 | test                al, al
            //   743b                 | je                  0x3d
            //   8d4900               | lea                 ecx, [ecx]

        $sequence_2 = { 8bc2 57 c1e210 0bc2 b920000000 }
            // n = 5, score = 100
            //   8bc2                 | mov                 eax, edx
            //   57                   | push                edi
            //   c1e210               | shl                 edx, 0x10
            //   0bc2                 | or                  eax, edx
            //   b920000000           | mov                 ecx, 0x20

        $sequence_3 = { 52 8b5014 51 8bce }
            // n = 4, score = 100
            //   52                   | push                edx
            //   8b5014               | mov                 edx, dword ptr [eax + 0x14]
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi

        $sequence_4 = { 8d7241 8bff 8b450c 0fb73c08 }
            // n = 4, score = 100
            //   8d7241               | lea                 esi, [edx + 0x41]
            //   8bff                 | mov                 edi, edi
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   0fb73c08             | movzx               edi, word ptr [eax + ecx]

        $sequence_5 = { 51 66898424740a0000 e8???????? 83c40c 8d542444 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   66898424740a0000     | mov                 word ptr [esp + 0xa74], ax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d542444             | lea                 edx, [esp + 0x44]

        $sequence_6 = { 8b0c8d40d04100 8d440104 8020fe ff36 e8???????? 59 }
            // n = 6, score = 100
            //   8b0c8d40d04100       | mov                 ecx, dword ptr [ecx*4 + 0x41d040]
            //   8d440104             | lea                 eax, [ecx + eax + 4]
            //   8020fe               | and                 byte ptr [eax], 0xfe
            //   ff36                 | push                dword ptr [esi]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_7 = { 83e00f eb02 33c0 0fbe84c1381c4100 }
            // n = 4, score = 100
            //   83e00f               | and                 eax, 0xf
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   0fbe84c1381c4100     | movsx               eax, byte ptr [ecx + eax*8 + 0x411c38]

        $sequence_8 = { 5e c3 8bff 56 57 33ff ffb7488a4100 }
            // n = 7, score = 100
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   56                   | push                esi
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   ffb7488a4100         | push                dword ptr [edi + 0x418a48]

        $sequence_9 = { 8b10 5e 8bc8 8b5268 5d ffe2 }
            // n = 6, score = 100
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   5e                   | pop                 esi
            //   8bc8                 | mov                 ecx, eax
            //   8b5268               | mov                 edx, dword ptr [edx + 0x68]
            //   5d                   | pop                 ebp
            //   ffe2                 | jmp                 edx

    condition:
        7 of them and filesize < 284672
}