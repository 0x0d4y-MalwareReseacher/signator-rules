rule win_citadel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.citadel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.citadel"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb0e 6800800000 53 57 56 }
            // n = 5, score = 4900
            //   eb0e                 | jmp                 0x10
            //   6800800000           | push                0x8000
            //   53                   | push                ebx
            //   57                   | push                edi
            //   56                   | push                esi

        $sequence_1 = { ff750c e8???????? 8845ff e8???????? 8a45ff }
            // n = 5, score = 4800
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   8845ff               | mov                 byte ptr [ebp - 1], al
            //   e8????????           |                     
            //   8a45ff               | mov                 al, byte ptr [ebp - 1]

        $sequence_2 = { e8???????? 8b4d14 8901 85c0 0f84e4feffff 8b4518 }
            // n = 6, score = 4800
            //   e8????????           |                     
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   85c0                 | test                eax, eax
            //   0f84e4feffff         | je                  0xfffffeea
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]

        $sequence_3 = { e8???????? 85c0 7e45 51 }
            // n = 4, score = 4800
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7e45                 | jle                 0x47
            //   51                   | push                ecx

        $sequence_4 = { e9???????? a802 0f84d2000000 8b450c 83651000 8365fc00 03c8 }
            // n = 7, score = 4800
            //   e9????????           |                     
            //   a802                 | test                al, 2
            //   0f84d2000000         | je                  0xd8
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   83651000             | and                 dword ptr [ebp + 0x10], 0
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   03c8                 | add                 ecx, eax

        $sequence_5 = { e8???????? 807c240f00 750e ff742410 e8???????? 8364241000 ff742410 }
            // n = 7, score = 4800
            //   e8????????           |                     
            //   807c240f00           | cmp                 byte ptr [esp + 0xf], 0
            //   750e                 | jne                 0x10
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   e8????????           |                     
            //   8364241000           | and                 dword ptr [esp + 0x10], 0
            //   ff742410             | push                dword ptr [esp + 0x10]

        $sequence_6 = { eb32 a801 742e 807d1000 0f84e1feffff 037d0c 53 }
            // n = 7, score = 4800
            //   eb32                 | jmp                 0x34
            //   a801                 | test                al, 1
            //   742e                 | je                  0x30
            //   807d1000             | cmp                 byte ptr [ebp + 0x10], 0
            //   0f84e1feffff         | je                  0xfffffee7
            //   037d0c               | add                 edi, dword ptr [ebp + 0xc]
            //   53                   | push                ebx

        $sequence_7 = { ff15???????? 85c0 0f8566010000 57 57 }
            // n = 5, score = 4800
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8566010000         | jne                 0x16c
            //   57                   | push                edi
            //   57                   | push                edi

        $sequence_8 = { 8a5614 85c0 7404 84d2 7575 }
            // n = 5, score = 3700
            //   8a5614               | mov                 dl, byte ptr [esi + 0x14]
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6
            //   84d2                 | test                dl, dl
            //   7575                 | jne                 0x77

        $sequence_9 = { eb81 d0e9 3aca 73fa 0fb6c9 8b04c8 ebae }
            // n = 7, score = 3700
            //   eb81                 | jmp                 0xffffff83
            //   d0e9                 | shr                 cl, 1
            //   3aca                 | cmp                 cl, dl
            //   73fa                 | jae                 0xfffffffc
            //   0fb6c9               | movzx               ecx, cl
            //   8b04c8               | mov                 eax, dword ptr [eax + ecx*8]
            //   ebae                 | jmp                 0xffffffb0

        $sequence_10 = { 84db 0f85a0000000 33c0 85c0 }
            // n = 4, score = 3700
            //   84db                 | test                bl, bl
            //   0f85a0000000         | jne                 0xa6
            //   33c0                 | xor                 eax, eax
            //   85c0                 | test                eax, eax

        $sequence_11 = { 8a5604 8a4e01 ffd0 884601 33c0 6689460c ff4df8 }
            // n = 7, score = 3700
            //   8a5604               | mov                 dl, byte ptr [esi + 4]
            //   8a4e01               | mov                 cl, byte ptr [esi + 1]
            //   ffd0                 | call                eax
            //   884601               | mov                 byte ptr [esi + 1], al
            //   33c0                 | xor                 eax, eax
            //   6689460c             | mov                 word ptr [esi + 0xc], ax
            //   ff4df8               | dec                 dword ptr [ebp - 8]

        $sequence_12 = { 32d0 8ac2 3245fe 85c9 7408 }
            // n = 5, score = 3700
            //   32d0                 | xor                 dl, al
            //   8ac2                 | mov                 al, dl
            //   3245fe               | xor                 al, byte ptr [ebp - 2]
            //   85c9                 | test                ecx, ecx
            //   7408                 | je                  0xa

        $sequence_13 = { 85c9 7408 84db 0f85a0000000 }
            // n = 4, score = 3700
            //   85c9                 | test                ecx, ecx
            //   7408                 | je                  0xa
            //   84db                 | test                bl, bl
            //   0f85a0000000         | jne                 0xa6

        $sequence_14 = { 0f842b010000 837e1000 0f8421010000 807e1400 0f8417010000 85ff }
            // n = 6, score = 3700
            //   0f842b010000         | je                  0x131
            //   837e1000             | cmp                 dword ptr [esi + 0x10], 0
            //   0f8421010000         | je                  0x127
            //   807e1400             | cmp                 byte ptr [esi + 0x14], 0
            //   0f8417010000         | je                  0x11d
            //   85ff                 | test                edi, edi

        $sequence_15 = { 33c0 85c0 7409 3255fd 8a0f ffd0 }
            // n = 6, score = 3700
            //   33c0                 | xor                 eax, eax
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   3255fd               | xor                 dl, byte ptr [ebp - 3]
            //   8a0f                 | mov                 cl, byte ptr [edi]
            //   ffd0                 | call                eax

    condition:
        7 of them and filesize < 1236992
}