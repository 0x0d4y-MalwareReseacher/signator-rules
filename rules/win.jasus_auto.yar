rule win_jasus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.jasus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jasus"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 75ed 68???????? e8???????? 83c040 50 e8???????? 8b8df8feffff }
            // n = 7, score = 200
            //   75ed                 | jne                 0xffffffef
            //   68????????           |                     
            //   e8????????           |                     
            //   83c040               | add                 eax, 0x40
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b8df8feffff         | mov                 ecx, dword ptr [ebp - 0x108]

        $sequence_1 = { 53 8b5d08 56 8bf0 8b4604 57 8b7d0c }
            // n = 7, score = 200
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8bf0                 | mov                 esi, eax
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   57                   | push                edi
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]

        $sequence_2 = { 0203 110411 0506110708 0911 0a0b 0c0d 1111 }
            // n = 7, score = 200
            //   0203                 | add                 al, byte ptr [ebx]
            //   110411               | adc                 dword ptr [ecx + edx], eax
            //   0506110708           | add                 eax, 0x8071106
            //   0911                 | or                  dword ptr [ecx], edx
            //   0a0b                 | or                  cl, byte ptr [ebx]
            //   0c0d                 | or                  al, 0xd
            //   1111                 | adc                 dword ptr [ecx], edx

        $sequence_3 = { 0f84a3000000 6a3c 8d55c0 6a00 }
            // n = 4, score = 200
            //   0f84a3000000         | je                  0xa9
            //   6a3c                 | push                0x3c
            //   8d55c0               | lea                 edx, [ebp - 0x40]
            //   6a00                 | push                0

        $sequence_4 = { 57 68???????? e8???????? 8b95f8feffff 52 ff15???????? 83c40c }
            // n = 7, score = 200
            //   57                   | push                edi
            //   68????????           |                     
            //   e8????????           |                     
            //   8b95f8feffff         | mov                 edx, dword ptr [ebp - 0x108]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_5 = { 52 0fb65707 50 0fb64706 51 52 50 }
            // n = 7, score = 200
            //   52                   | push                edx
            //   0fb65707             | movzx               edx, byte ptr [edi + 7]
            //   50                   | push                eax
            //   0fb64706             | movzx               eax, byte ptr [edi + 6]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_6 = { 8bd9 837df803 7533 68???????? 56 e8???????? 83c408 }
            // n = 7, score = 200
            //   8bd9                 | mov                 ebx, ecx
            //   837df803             | cmp                 dword ptr [ebp - 8], 3
            //   7533                 | jne                 0x35
            //   68????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_7 = { 8b5c2418 c1ea08 32941ca0030000 894608 88941ca0030000 8bd3 }
            // n = 6, score = 200
            //   8b5c2418             | mov                 ebx, dword ptr [esp + 0x18]
            //   c1ea08               | shr                 edx, 8
            //   32941ca0030000       | xor                 dl, byte ptr [esp + ebx + 0x3a0]
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   88941ca0030000       | mov                 byte ptr [esp + ebx + 0x3a0], dl
            //   8bd3                 | mov                 edx, ebx

        $sequence_8 = { 8be5 5d c3 c6043300 b001 5b }
            // n = 6, score = 200
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   c6043300             | mov                 byte ptr [ebx + esi], 0
            //   b001                 | mov                 al, 1
            //   5b                   | pop                 ebx

        $sequence_9 = { 68???????? e8???????? 8b8df8feffff 83c448 51 ff15???????? 83c404 }
            // n = 7, score = 200
            //   68????????           |                     
            //   e8????????           |                     
            //   8b8df8feffff         | mov                 ecx, dword ptr [ebp - 0x108]
            //   83c448               | add                 esp, 0x48
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   83c404               | add                 esp, 4

    condition:
        7 of them and filesize < 507904
}