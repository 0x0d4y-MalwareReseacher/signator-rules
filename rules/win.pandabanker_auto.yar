rule win_pandabanker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.pandabanker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pandabanker"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bf7 750c 84c0 7404 41 }
            // n = 5, score = 8600
            //   3bf7                 | cmp                 esi, edi
            //   750c                 | jne                 0xe
            //   84c0                 | test                al, al
            //   7404                 | je                  6
            //   41                   | inc                 ecx

        $sequence_1 = { 85ed 7504 33c0 eb19 6aff 8bd3 c6450022 }
            // n = 7, score = 8600
            //   85ed                 | test                ebp, ebp
            //   7504                 | jne                 6
            //   33c0                 | xor                 eax, eax
            //   eb19                 | jmp                 0x1b
            //   6aff                 | push                -1
            //   8bd3                 | mov                 edx, ebx
            //   c6450022             | mov                 byte ptr [ebp], 0x22

        $sequence_2 = { 51 51 8d442420 8bd5 }
            // n = 4, score = 8600
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   8d442420             | lea                 eax, dword ptr [esp + 0x20]
            //   8bd5                 | mov                 edx, ebp

        $sequence_3 = { 740e 8bd7 e8???????? 85c0 7403 8b5814 }
            // n = 6, score = 8600
            //   740e                 | je                  0x10
            //   8bd7                 | mov                 edx, edi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   8b5814               | mov                 ebx, dword ptr [eax + 0x14]

        $sequence_4 = { 8bce e8???????? 8b5c2414 8bcf }
            // n = 4, score = 8600
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8b5c2414             | mov                 ebx, dword ptr [esp + 0x14]
            //   8bcf                 | mov                 ecx, edi

        $sequence_5 = { 8d4a10 e8???????? 51 51 }
            // n = 4, score = 8600
            //   8d4a10               | lea                 ecx, dword ptr [edx + 0x10]
            //   e8????????           |                     
            //   51                   | push                ecx
            //   51                   | push                ecx

        $sequence_6 = { 85d2 5f 0f4fe8 f7da 1bd2 }
            // n = 5, score = 8600
            //   85d2                 | test                edx, edx
            //   5f                   | pop                 edi
            //   0f4fe8               | cmovg               ebp, eax
            //   f7da                 | neg                 edx
            //   1bd2                 | sbb                 edx, edx

        $sequence_7 = { 88542411 8ae2 0f94c1 02e4 fec9 8ac4 }
            // n = 6, score = 8600
            //   88542411             | mov                 byte ptr [esp + 0x11], dl
            //   8ae2                 | mov                 ah, dl
            //   0f94c1               | sete                cl
            //   02e4                 | add                 ah, ah
            //   fec9                 | dec                 cl
            //   8ac4                 | mov                 al, ah

        $sequence_8 = { 0fb64505 8d7509 8b7c2440 03f0 }
            // n = 4, score = 8600
            //   0fb64505             | movzx               eax, byte ptr [ebp + 5]
            //   8d7509               | lea                 esi, dword ptr [ebp + 9]
            //   8b7c2440             | mov                 edi, dword ptr [esp + 0x40]
            //   03f0                 | add                 esi, eax

        $sequence_9 = { 8843ff 8bc1 884bfe c1e810 }
            // n = 4, score = 8600
            //   8843ff               | mov                 byte ptr [ebx - 1], al
            //   8bc1                 | mov                 eax, ecx
            //   884bfe               | mov                 byte ptr [ebx - 2], cl
            //   c1e810               | shr                 eax, 0x10

    condition:
        7 of them and filesize < 417792
}