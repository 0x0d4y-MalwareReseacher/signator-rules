rule win_pandabanker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.pandabanker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pandabanker"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bfb e8???????? 8be8 6aff 55 }
            // n = 5, score = 8600
            //   8bfb                 | mov                 edi, ebx
            //   e8????????           |                     
            //   8be8                 | mov                 ebp, eax
            //   6aff                 | push                -1
            //   55                   | push                ebp

        $sequence_1 = { 0bc8 47 8a07 84c0 75e2 85c9 }
            // n = 6, score = 8600
            //   0bc8                 | or                  ecx, eax
            //   47                   | inc                 edi
            //   8a07                 | mov                 al, byte ptr [edi]
            //   84c0                 | test                al, al
            //   75e2                 | jne                 0xffffffe4
            //   85c9                 | test                ecx, ecx

        $sequence_2 = { 8b4f04 56 e8???????? 897708 b301 8ac3 }
            // n = 6, score = 8600
            //   8b4f04               | mov                 ecx, dword ptr [edi + 4]
            //   56                   | push                esi
            //   e8????????           |                     
            //   897708               | mov                 dword ptr [edi + 8], esi
            //   b301                 | mov                 bl, 1
            //   8ac3                 | mov                 al, bl

        $sequence_3 = { c0eb04 80e70f 6a37 5e 80fb09 0f4fc6 02c3 }
            // n = 7, score = 8600
            //   c0eb04               | shr                 bl, 4
            //   80e70f               | and                 bh, 0xf
            //   6a37                 | push                0x37
            //   5e                   | pop                 esi
            //   80fb09               | cmp                 bl, 9
            //   0f4fc6               | cmovg               eax, esi
            //   02c3                 | add                 al, bl

        $sequence_4 = { c3 8bce e8???????? 33c0 ebf1 56 }
            // n = 6, score = 8600
            //   c3                   | ret                 
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   ebf1                 | jmp                 0xfffffff3
            //   56                   | push                esi

        $sequence_5 = { 83c020 eb03 0fb6c0 8a0a 80f941 720d 80f95a }
            // n = 7, score = 8600
            //   83c020               | add                 eax, 0x20
            //   eb03                 | jmp                 5
            //   0fb6c0               | movzx               eax, al
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   80f941               | cmp                 cl, 0x41
            //   720d                 | jb                  0xf
            //   80f95a               | cmp                 cl, 0x5a

        $sequence_6 = { 037c2414 8b4c0a08 f3aa 8b442410 }
            // n = 4, score = 8600
            //   037c2414             | add                 edi, dword ptr [esp + 0x14]
            //   8b4c0a08             | mov                 ecx, dword ptr [edx + ecx + 8]
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]

        $sequence_7 = { 8d5750 8d14b2 8d0431 3bc3 }
            // n = 4, score = 8600
            //   8d5750               | lea                 edx, [edi + 0x50]
            //   8d14b2               | lea                 edx, [edx + esi*4]
            //   8d0431               | lea                 eax, [ecx + esi]
            //   3bc3                 | cmp                 eax, ebx

        $sequence_8 = { 8bd8 8d5002 2bdf d1fb 3bd5 }
            // n = 5, score = 8600
            //   8bd8                 | mov                 ebx, eax
            //   8d5002               | lea                 edx, [eax + 2]
            //   2bdf                 | sub                 ebx, edi
            //   d1fb                 | sar                 ebx, 1
            //   3bd5                 | cmp                 edx, ebp

        $sequence_9 = { 8b06 8d4c2424 33d2 89442428 8b4604 42 53 }
            // n = 7, score = 8600
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8d4c2424             | lea                 ecx, [esp + 0x24]
            //   33d2                 | xor                 edx, edx
            //   89442428             | mov                 dword ptr [esp + 0x28], eax
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   42                   | inc                 edx
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 417792
}