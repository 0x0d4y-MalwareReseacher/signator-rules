rule win_ragnarok_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.ragnarok."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarok"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1c00c 8db79979825a 03c2 81c224d14d5c 8945a8 8b45ac 8bc8 }
            // n = 7, score = 200
            //   c1c00c               | rol                 eax, 0xc
            //   8db79979825a         | lea                 esi, dword ptr [edi + 0x5a827999]
            //   03c2                 | add                 eax, edx
            //   81c224d14d5c         | add                 edx, 0x5c4dd124
            //   8945a8               | mov                 dword ptr [ebp - 0x58], eax
            //   8b45ac               | mov                 eax, dword ptr [ebp - 0x54]
            //   8bc8                 | mov                 ecx, eax

        $sequence_1 = { 8bf8 83c408 85ff 0f85c7010000 50 ff7508 }
            // n = 6, score = 200
            //   8bf8                 | mov                 edi, eax
            //   83c408               | add                 esp, 8
            //   85ff                 | test                edi, edi
            //   0f85c7010000         | jne                 0x1cd
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_2 = { 84c0 75f9 2bca 8bd3 8d7201 6690 }
            // n = 6, score = 200
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   2bca                 | sub                 ecx, edx
            //   8bd3                 | mov                 edx, ebx
            //   8d7201               | lea                 esi, dword ptr [edx + 1]
            //   6690                 | nop                 

        $sequence_3 = { 85ff 7e34 56 ff35???????? e8???????? 8b4010 }
            // n = 6, score = 200
            //   85ff                 | test                edi, edi
            //   7e34                 | jle                 0x36
            //   56                   | push                esi
            //   ff35????????         |                     
            //   e8????????           |                     
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]

        $sequence_4 = { 895ddc 895de0 885de4 e8???????? 8bf0 83c40c 85f6 }
            // n = 7, score = 200
            //   895ddc               | mov                 dword ptr [ebp - 0x24], ebx
            //   895de0               | mov                 dword ptr [ebp - 0x20], ebx
            //   885de4               | mov                 byte ptr [ebp - 0x1c], bl
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c40c               | add                 esp, 0xc
            //   85f6                 | test                esi, esi

        $sequence_5 = { 0fb6c9 c1e308 c1ea10 0fb689105c4300 33d9 8b4dfc }
            // n = 6, score = 200
            //   0fb6c9               | movzx               ecx, cl
            //   c1e308               | shl                 ebx, 8
            //   c1ea10               | shr                 edx, 0x10
            //   0fb689105c4300       | movzx               ecx, byte ptr [ecx + 0x435c10]
            //   33d9                 | xor                 ebx, ecx
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_6 = { 33148d10504300 8b4d08 c1e918 33148d10584300 8b4dfc 0fb6c9 33148d104c4300 }
            // n = 7, score = 200
            //   33148d10504300       | xor                 edx, dword ptr [ecx*4 + 0x435010]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   c1e918               | shr                 ecx, 0x18
            //   33148d10584300       | xor                 edx, dword ptr [ecx*4 + 0x435810]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   0fb6c9               | movzx               ecx, cl
            //   33148d104c4300       | xor                 edx, dword ptr [ecx*4 + 0x434c10]

        $sequence_7 = { eb1b 8b0c8d28754300 8a443928 a840 7508 0c02 88443928 }
            // n = 7, score = 200
            //   eb1b                 | jmp                 0x1d
            //   8b0c8d28754300       | mov                 ecx, dword ptr [ecx*4 + 0x437528]
            //   8a443928             | mov                 al, byte ptr [ecx + edi + 0x28]
            //   a840                 | test                al, 0x40
            //   7508                 | jne                 0xa
            //   0c02                 | or                  al, 2
            //   88443928             | mov                 byte ptr [ecx + edi + 0x28], al

        $sequence_8 = { c705????????01000000 c705????????01000000 6a04 58 6bc000 c780746d430002000000 }
            // n = 6, score = 200
            //   c705????????01000000     |     
            //   c705????????01000000     |     
            //   6a04                 | push                4
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0
            //   c780746d430002000000     | mov    dword ptr [eax + 0x436d74], 2

        $sequence_9 = { 8bc1 f7d0 c1c10a 0b459c 33c7 0345ec 03c2 }
            // n = 7, score = 200
            //   8bc1                 | mov                 eax, ecx
            //   f7d0                 | not                 eax
            //   c1c10a               | rol                 ecx, 0xa
            //   0b459c               | or                  eax, dword ptr [ebp - 0x64]
            //   33c7                 | xor                 eax, edi
            //   0345ec               | add                 eax, dword ptr [ebp - 0x14]
            //   03c2                 | add                 eax, edx

    condition:
        7 of them and filesize < 483328
}