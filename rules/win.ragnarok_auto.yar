rule win_ragnarok_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.ragnarok."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarok"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b7d28 33db c1fa06 6bc838 881f 8b049528754300 }
            // n = 6, score = 200
            //   8b7d28               | mov                 edi, dword ptr [ebp + 0x28]
            //   33db                 | xor                 ebx, ebx
            //   c1fa06               | sar                 edx, 6
            //   6bc838               | imul                ecx, eax, 0x38
            //   881f                 | mov                 byte ptr [edi], bl
            //   8b049528754300       | mov                 eax, dword ptr [edx*4 + 0x437528]

        $sequence_1 = { 8bca c1e918 0fb689104b4300 33d9 8bca c1e910 0fb6c9 }
            // n = 7, score = 200
            //   8bca                 | mov                 ecx, edx
            //   c1e918               | shr                 ecx, 0x18
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   33d9                 | xor                 ebx, ecx
            //   8bca                 | mov                 ecx, edx
            //   c1e910               | shr                 ecx, 0x10
            //   0fb6c9               | movzx               ecx, cl

        $sequence_2 = { e8???????? 83c002 03c7 50 e8???????? 83c410 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   83c002               | add                 eax, 2
            //   03c7                 | add                 eax, edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

        $sequence_3 = { 335008 8b4d0c c1e910 8955ec 0fb6d1 0fb6cb 8b1c9510544300 }
            // n = 7, score = 200
            //   335008               | xor                 edx, dword ptr [eax + 8]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   c1e910               | shr                 ecx, 0x10
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   0fb6d1               | movzx               edx, cl
            //   0fb6cb               | movzx               ecx, bl
            //   8b1c9510544300       | mov                 ebx, dword ptr [edx*4 + 0x435410]

        $sequence_4 = { 8d5701 8a4f01 47 84c9 }
            // n = 4, score = 200
            //   8d5701               | lea                 edx, [edi + 1]
            //   8a4f01               | mov                 cl, byte ptr [edi + 1]
            //   47                   | inc                 edi
            //   84c9                 | test                cl, cl

        $sequence_5 = { 234da8 03c2 894598 8b45b8 2345b4 0bc8 c145a80a }
            // n = 7, score = 200
            //   234da8               | and                 ecx, dword ptr [ebp - 0x58]
            //   03c2                 | add                 eax, edx
            //   894598               | mov                 dword ptr [ebp - 0x68], eax
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   2345b4               | and                 eax, dword ptr [ebp - 0x4c]
            //   0bc8                 | or                  ecx, eax
            //   c145a80a             | rol                 dword ptr [ebp - 0x58], 0xa

        $sequence_6 = { 8bca c1e908 0fb6c9 c1e308 0fb689104b4300 33d9 0fb6ca }
            // n = 7, score = 200
            //   8bca                 | mov                 ecx, edx
            //   c1e908               | shr                 ecx, 8
            //   0fb6c9               | movzx               ecx, cl
            //   c1e308               | shl                 ebx, 8
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   33d9                 | xor                 ebx, ecx
            //   0fb6ca               | movzx               ecx, dl

        $sequence_7 = { c1651008 c1e908 0fb6c9 0fb689104b4300 314d10 8b4d10 334dec }
            // n = 7, score = 200
            //   c1651008             | shl                 dword ptr [ebp + 0x10], 8
            //   c1e908               | shr                 ecx, 8
            //   0fb6c9               | movzx               ecx, cl
            //   0fb689104b4300       | movzx               ecx, byte ptr [ecx + 0x434b10]
            //   314d10               | xor                 dword ptr [ebp + 0x10], ecx
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   334dec               | xor                 ecx, dword ptr [ebp - 0x14]

        $sequence_8 = { 03b090c14200 03b40514ffffff 03f7 8bbde4feffff 01b5ecfeffff 8bd7 }
            // n = 6, score = 200
            //   03b090c14200         | add                 esi, dword ptr [eax + 0x42c190]
            //   03b40514ffffff       | add                 esi, dword ptr [ebp + eax - 0xec]
            //   03f7                 | add                 esi, edi
            //   8bbde4feffff         | mov                 edi, dword ptr [ebp - 0x11c]
            //   01b5ecfeffff         | add                 dword ptr [ebp - 0x114], esi
            //   8bd7                 | mov                 edx, edi

        $sequence_9 = { 8b4df4 0fb6c9 33148d105d4300 8bcb 335010 c1e910 8955f8 }
            // n = 7, score = 200
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   0fb6c9               | movzx               ecx, cl
            //   33148d105d4300       | xor                 edx, dword ptr [ecx*4 + 0x435d10]
            //   8bcb                 | mov                 ecx, ebx
            //   335010               | xor                 edx, dword ptr [eax + 0x10]
            //   c1e910               | shr                 ecx, 0x10
            //   8955f8               | mov                 dword ptr [ebp - 8], edx

    condition:
        7 of them and filesize < 483328
}