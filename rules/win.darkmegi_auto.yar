rule win_darkmegi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.darkmegi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.darkmegi"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 ff15???????? 8bf0 85f6 7514 57 ff15???????? }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7514                 | jne                 0x16
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_1 = { 85c0 7403 33c0 c3 8b4c240c 8b542408 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   8b542408             | mov                 edx, dword ptr [esp + 8]

        $sequence_2 = { e8???????? 8b0cf59c8cb402 5e 8908 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8b0cf59c8cb402       | mov                 ecx, dword ptr [esi*8 + 0x2b48c9c]
            //   5e                   | pop                 esi
            //   8908                 | mov                 dword ptr [eax], ecx

        $sequence_3 = { 8d442414 8d8c2484000000 50 6800100000 51 56 }
            // n = 6, score = 100
            //   8d442414             | lea                 eax, dword ptr [esp + 0x14]
            //   8d8c2484000000       | lea                 ecx, dword ptr [esp + 0x84]
            //   50                   | push                eax
            //   6800100000           | push                0x1000
            //   51                   | push                ecx
            //   56                   | push                esi

        $sequence_4 = { 51 ffd5 25ffff0000 897304 8903 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   ffd5                 | call                ebp
            //   25ffff0000           | and                 eax, 0xffff
            //   897304               | mov                 dword ptr [ebx + 4], esi
            //   8903                 | mov                 dword ptr [ebx], eax

        $sequence_5 = { 33c0 8dbc2461010000 33f6 f3ab 66ab }
            // n = 5, score = 100
            //   33c0                 | xor                 eax, eax
            //   8dbc2461010000       | lea                 edi, dword ptr [esp + 0x161]
            //   33f6                 | xor                 esi, esi
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax

        $sequence_6 = { 8944241c ff15???????? 50 ffd6 6689842498030000 }
            // n = 5, score = 100
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   6689842498030000     | mov                 word ptr [esp + 0x398], ax

        $sequence_7 = { 8d842474020000 51 50 6a00 6a00 ff15???????? 8d8c247c060000 }
            // n = 7, score = 100
            //   8d842474020000       | lea                 eax, dword ptr [esp + 0x274]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8d8c247c060000       | lea                 ecx, dword ptr [esp + 0x67c]

        $sequence_8 = { 81e1ffff0000 8d1440 8b449430 c6040100 8b442410 }
            // n = 5, score = 100
            //   81e1ffff0000         | and                 ecx, 0xffff
            //   8d1440               | lea                 edx, dword ptr [eax + eax*2]
            //   8b449430             | mov                 eax, dword ptr [esp + edx*4 + 0x30]
            //   c6040100             | mov                 byte ptr [ecx + eax], 0
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]

        $sequence_9 = { 5d 33c0 5b 81c474100000 c3 }
            // n = 5, score = 100
            //   5d                   | pop                 ebp
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   81c474100000         | add                 esp, 0x1074
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 90304
}