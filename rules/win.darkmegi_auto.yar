rule win_darkmegi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.darkmegi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.darkmegi"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 8d842474020000 51 50 6a00 6a00 ff15???????? }
            // n = 7, score = 100
            //   52                   | push                edx
            //   8d842474020000       | lea                 eax, dword ptr [esp + 0x274]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff15????????         |                     

        $sequence_1 = { 668b4808 51 ffd5 6685c0 7634 8b442410 8a0c37 }
            // n = 7, score = 100
            //   668b4808             | mov                 cx, word ptr [eax + 8]
            //   51                   | push                ecx
            //   ffd5                 | call                ebp
            //   6685c0               | test                ax, ax
            //   7634                 | jbe                 0x36
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8a0c37               | mov                 cl, byte ptr [edi + esi]

        $sequence_2 = { 8a10 8816 46 eb0f 0fb6d2 f6820196b40204 7403 }
            // n = 7, score = 100
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   8816                 | mov                 byte ptr [esi], dl
            //   46                   | inc                 esi
            //   eb0f                 | jmp                 0x11
            //   0fb6d2               | movzx               edx, dl
            //   f6820196b40204       | test                byte ptr [edx + 0x2b49601], 4
            //   7403                 | je                  5

        $sequence_3 = { 8d0440 8b8c8420010000 c6040a00 8b442410 }
            // n = 4, score = 100
            //   8d0440               | lea                 eax, dword ptr [eax + eax*2]
            //   8b8c8420010000       | mov                 ecx, dword ptr [esp + eax*4 + 0x120]
            //   c6040a00             | mov                 byte ptr [edx + ecx], 0
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]

        $sequence_4 = { 7540 8b442410 8d1440 8b449430 8b00 50 ff15???????? }
            // n = 7, score = 100
            //   7540                 | jne                 0x42
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8d1440               | lea                 edx, dword ptr [eax + eax*2]
            //   8b449430             | mov                 eax, dword ptr [esp + edx*4 + 0x30]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_5 = { 8d4c2420 89b43c28010000 8d9424a4030000 83c60a 51 52 56 }
            // n = 7, score = 100
            //   8d4c2420             | lea                 ecx, dword ptr [esp + 0x20]
            //   89b43c28010000       | mov                 dword ptr [esp + edi + 0x128], esi
            //   8d9424a4030000       | lea                 edx, dword ptr [esp + 0x3a4]
            //   83c60a               | add                 esi, 0xa
            //   51                   | push                ecx
            //   52                   | push                edx
            //   56                   | push                esi

        $sequence_6 = { 83c9ff 33c0 f2ae f7d1 83c110 }
            // n = 5, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   83c110               | add                 ecx, 0x10

        $sequence_7 = { 50 6a00 ff15???????? 8d4c2470 6a5c }
            // n = 5, score = 100
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8d4c2470             | lea                 ecx, dword ptr [esp + 0x70]
            //   6a5c                 | push                0x5c

        $sequence_8 = { 33c0 5b 81c47c0a0000 c3 8b1d???????? 57 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   81c47c0a0000         | add                 esp, 0xa7c
            //   c3                   | ret                 
            //   8b1d????????         |                     
            //   57                   | push                edi

        $sequence_9 = { 8b742414 803c2b2e 7517 8ac3 }
            // n = 4, score = 100
            //   8b742414             | mov                 esi, dword ptr [esp + 0x14]
            //   803c2b2e             | cmp                 byte ptr [ebx + ebp], 0x2e
            //   7517                 | jne                 0x19
            //   8ac3                 | mov                 al, bl

    condition:
        7 of them and filesize < 90304
}