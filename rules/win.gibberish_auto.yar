rule win_gibberish_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.gibberish."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gibberish"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? b904000000 6bd106 8b0410 8945c0 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   b904000000           | mov                 ecx, 4
            //   6bd106               | imul                edx, ecx, 6
            //   8b0410               | mov                 eax, dword ptr [eax + edx]
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax

        $sequence_1 = { ff15???????? c3 68???????? e8???????? 59 c3 68???????? }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   c3                   | ret                 
            //   68????????           |                     
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   c3                   | ret                 
            //   68????????           |                     

        $sequence_2 = { 8b4d0c 8901 33c0 40 e9???????? 8365c000 c745c461404200 }
            // n = 7, score = 100
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   e9????????           |                     
            //   8365c000             | and                 dword ptr [ebp - 0x40], 0
            //   c745c461404200       | mov                 dword ptr [ebp - 0x3c], 0x424061

        $sequence_3 = { 6a40 8d842498000000 6a00 50 e8???????? 8b8424e4000000 83c40c }
            // n = 7, score = 100
            //   6a40                 | push                0x40
            //   8d842498000000       | lea                 eax, dword ptr [esp + 0x98]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b8424e4000000       | mov                 eax, dword ptr [esp + 0xe4]
            //   83c40c               | add                 esp, 0xc

        $sequence_4 = { 8b4d08 68???????? e8???????? 8b4508 5d c20400 6a08 }
            // n = 7, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   68????????           |                     
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   6a08                 | push                8

        $sequence_5 = { 53 8bd6 bbffffff7f 8b0c951cbd4700 330c9518bd4700 23cb 330c9518bd4700 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   8bd6                 | mov                 edx, esi
            //   bbffffff7f           | mov                 ebx, 0x7fffffff
            //   8b0c951cbd4700       | mov                 ecx, dword ptr [edx*4 + 0x47bd1c]
            //   330c9518bd4700       | xor                 ecx, dword ptr [edx*4 + 0x47bd18]
            //   23cb                 | and                 ecx, ebx
            //   330c9518bd4700       | xor                 ecx, dword ptr [edx*4 + 0x47bd18]

        $sequence_6 = { 037c241c 83ea10 03742424 0f1100 03442420 836c242801 89442418 }
            // n = 7, score = 100
            //   037c241c             | add                 edi, dword ptr [esp + 0x1c]
            //   83ea10               | sub                 edx, 0x10
            //   03742424             | add                 esi, dword ptr [esp + 0x24]
            //   0f1100               | movups              xmmword ptr [eax], xmm0
            //   03442420             | add                 eax, dword ptr [esp + 0x20]
            //   836c242801           | sub                 dword ptr [esp + 0x28], 1
            //   89442418             | mov                 dword ptr [esp + 0x18], eax

        $sequence_7 = { c745fc02000000 8d4f0c 50 e8???????? 807dec00 8975fc }
            // n = 6, score = 100
            //   c745fc02000000       | mov                 dword ptr [ebp - 4], 2
            //   8d4f0c               | lea                 ecx, dword ptr [edi + 0xc]
            //   50                   | push                eax
            //   e8????????           |                     
            //   807dec00             | cmp                 byte ptr [ebp - 0x14], 0
            //   8975fc               | mov                 dword ptr [ebp - 4], esi

        $sequence_8 = { 03b42490000000 03c6 c1ca0d 8984248c000000 8bc3 c1c00a 33d0 }
            // n = 7, score = 100
            //   03b42490000000       | add                 esi, dword ptr [esp + 0x90]
            //   03c6                 | add                 eax, esi
            //   c1ca0d               | ror                 edx, 0xd
            //   8984248c000000       | mov                 dword ptr [esp + 0x8c], eax
            //   8bc3                 | mov                 eax, ebx
            //   c1c00a               | rol                 eax, 0xa
            //   33d0                 | xor                 edx, eax

        $sequence_9 = { 50 e8???????? 83c404 3345e4 8945e4 8b4dd0 034dd4 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   3345e4               | xor                 eax, dword ptr [ebp - 0x1c]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8b4dd0               | mov                 ecx, dword ptr [ebp - 0x30]
            //   034dd4               | add                 ecx, dword ptr [ebp - 0x2c]

    condition:
        7 of them and filesize < 1068032
}