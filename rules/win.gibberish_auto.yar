rule win_gibberish_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.gibberish."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gibberish"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 660f28a090494600 660f28b880454600 660f54f0 660f5cc6 660f59f4 660f5cf2 f20f58fe }
            // n = 7, score = 100
            //   660f28a090494600     | movapd              xmm4, xmmword ptr [eax + 0x464990]
            //   660f28b880454600     | movapd              xmm7, xmmword ptr [eax + 0x464580]
            //   660f54f0             | andpd               xmm6, xmm0
            //   660f5cc6             | subpd               xmm0, xmm6
            //   660f59f4             | mulpd               xmm6, xmm4
            //   660f5cf2             | subpd               xmm6, xmm2
            //   f20f58fe             | addsd               xmm7, xmm6

        $sequence_1 = { 50 e8???????? 0fb6f0 8b442434 03f6 57 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   0fb6f0               | movzx               esi, al
            //   8b442434             | mov                 eax, dword ptr [esp + 0x34]
            //   03f6                 | add                 esi, esi
            //   57                   | push                edi
            //   50                   | push                eax

        $sequence_2 = { 743c 8b4c2464 8bd1 8b74244c 8bc1 c1c807 c1c20e }
            // n = 7, score = 100
            //   743c                 | je                  0x3e
            //   8b4c2464             | mov                 ecx, dword ptr [esp + 0x64]
            //   8bd1                 | mov                 edx, ecx
            //   8b74244c             | mov                 esi, dword ptr [esp + 0x4c]
            //   8bc1                 | mov                 eax, ecx
            //   c1c807               | ror                 eax, 7
            //   c1c20e               | rol                 edx, 0xe

        $sequence_3 = { 8b4508 5d c20400 6a08 58 c3 }
            // n = 6, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   6a08                 | push                8
            //   58                   | pop                 eax
            //   c3                   | ret                 

        $sequence_4 = { 8b4d08 68???????? e8???????? 8b4508 5d c20400 6a08 }
            // n = 7, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   68????????           |                     
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   6a08                 | push                8

        $sequence_5 = { e8???????? c9 c3 83790400 740c 6a30 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   c9                   | leave               
            //   c3                   | ret                 
            //   83790400             | cmp                 dword ptr [ecx + 4], 0
            //   740c                 | je                  0xe
            //   6a30                 | push                0x30

        $sequence_6 = { 8b02 51 8bca ff10 8b4df0 89412c 8bc1 }
            // n = 7, score = 100
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   51                   | push                ecx
            //   8bca                 | mov                 ecx, edx
            //   ff10                 | call                dword ptr [eax]
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   89412c               | mov                 dword ptr [ecx + 0x2c], eax
            //   8bc1                 | mov                 eax, ecx

        $sequence_7 = { 52 e8???????? 83c404 3345f4 8945f4 8b45f4 0345f8 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   3345f4               | xor                 eax, dword ptr [ebp - 0xc]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   0345f8               | add                 eax, dword ptr [ebp - 8]

        $sequence_8 = { 660fefa424b4010000 660fefc3 660fefe7 660f7f8424a4000000 660f7fa424b4000000 660f6fd8 }
            // n = 6, score = 100
            //   660fefa424b4010000     | pxor    xmm4, xmmword ptr [esp + 0x1b4]
            //   660fefc3             | pxor                xmm0, xmm3
            //   660fefe7             | pxor                xmm4, xmm7
            //   660f7f8424a4000000     | movdqa    xmmword ptr [esp + 0xa4], xmm0
            //   660f7fa424b4000000     | movdqa    xmmword ptr [esp + 0xb4], xmm4
            //   660f6fd8             | movdqa              xmm3, xmm0

        $sequence_9 = { 0f1045d8 0f1145c8 8d4da8 e8???????? 0f1045c8 f30f7e4d9c 8b4584 }
            // n = 7, score = 100
            //   0f1045d8             | movups              xmm0, xmmword ptr [ebp - 0x28]
            //   0f1145c8             | movups              xmmword ptr [ebp - 0x38], xmm0
            //   8d4da8               | lea                 ecx, dword ptr [ebp - 0x58]
            //   e8????????           |                     
            //   0f1045c8             | movups              xmm0, xmmword ptr [ebp - 0x38]
            //   f30f7e4d9c           | movq                xmm1, qword ptr [ebp - 0x64]
            //   8b4584               | mov                 eax, dword ptr [ebp - 0x7c]

    condition:
        7 of them and filesize < 1068032
}