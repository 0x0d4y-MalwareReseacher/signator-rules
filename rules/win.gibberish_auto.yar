rule win_gibberish_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.gibberish."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gibberish"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 89462c eb69 83f820 7564 8b4e2c 8bc1 c1e818 }
            // n = 7, score = 100
            //   89462c               | mov                 dword ptr [esi + 0x2c], eax
            //   eb69                 | jmp                 0x6b
            //   83f820               | cmp                 eax, 0x20
            //   7564                 | jne                 0x66
            //   8b4e2c               | mov                 ecx, dword ptr [esi + 0x2c]
            //   8bc1                 | mov                 eax, ecx
            //   c1e818               | shr                 eax, 0x18

        $sequence_1 = { 8bf8 897df8 85ff 0f84ef000000 807dea02 b800008000 b9???????? }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   897df8               | mov                 dword ptr [ebp - 8], edi
            //   85ff                 | test                edi, edi
            //   0f84ef000000         | je                  0xf5
            //   807dea02             | cmp                 byte ptr [ebp - 0x16], 2
            //   b800008000           | mov                 eax, 0x800000
            //   b9????????           |                     

        $sequence_2 = { 743c 8b4c2464 8bd1 8b74244c 8bc1 c1c807 c1c20e }
            // n = 7, score = 100
            //   743c                 | je                  0x3e
            //   8b4c2464             | mov                 ecx, dword ptr [esp + 0x64]
            //   8bd1                 | mov                 edx, ecx
            //   8b74244c             | mov                 esi, dword ptr [esp + 0x4c]
            //   8bc1                 | mov                 eax, ecx
            //   c1c807               | ror                 eax, 7
            //   c1c20e               | rol                 edx, 0xe

        $sequence_3 = { 0f57c0 33ff 57 660f138588feffff ffb58cfeffff ffb588feffff 56 }
            // n = 7, score = 100
            //   0f57c0               | xorps               xmm0, xmm0
            //   33ff                 | xor                 edi, edi
            //   57                   | push                edi
            //   660f138588feffff     | movlpd              qword ptr [ebp - 0x178], xmm0
            //   ffb58cfeffff         | push                dword ptr [ebp - 0x174]
            //   ffb588feffff         | push                dword ptr [ebp - 0x178]
            //   56                   | push                esi

        $sequence_4 = { c745d0e4964500 c745d498974500 8945dc 8975e0 660f1345e8 8b07 8d4dc8 }
            // n = 7, score = 100
            //   c745d0e4964500       | mov                 dword ptr [ebp - 0x30], 0x4596e4
            //   c745d498974500       | mov                 dword ptr [ebp - 0x2c], 0x459798
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   660f1345e8           | movlpd              qword ptr [ebp - 0x18], xmm0
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   8d4dc8               | lea                 ecx, [ebp - 0x38]

        $sequence_5 = { 8b0f 89450c 395508 750a e8???????? 8b750c eb1b }
            // n = 7, score = 100
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   395508               | cmp                 dword ptr [ebp + 8], edx
            //   750a                 | jne                 0xc
            //   e8????????           |                     
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   eb1b                 | jmp                 0x1d

        $sequence_6 = { c1c90d 33c8 8b442410 c1c802 33c8 8b442410 33442420 }
            // n = 7, score = 100
            //   c1c90d               | ror                 ecx, 0xd
            //   33c8                 | xor                 ecx, eax
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   c1c802               | ror                 eax, 2
            //   33c8                 | xor                 ecx, eax
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   33442420             | xor                 eax, dword ptr [esp + 0x20]

        $sequence_7 = { f30f7ef6 0f28cd 660fdbf2 b802000000 0f28542440 660fd2d0 f30f7e442460 }
            // n = 7, score = 100
            //   f30f7ef6             | movq                xmm6, xmm6
            //   0f28cd               | movaps              xmm1, xmm5
            //   660fdbf2             | pand                xmm6, xmm2
            //   b802000000           | mov                 eax, 2
            //   0f28542440           | movaps              xmm2, xmmword ptr [esp + 0x40]
            //   660fd2d0             | psrld               xmm2, xmm0
            //   f30f7e442460         | movq                xmm0, qword ptr [esp + 0x60]

        $sequence_8 = { 0fb690c8a94500 8bc1 c1e808 0fb6c0 c1e208 0fb680c8a94500 }
            // n = 6, score = 100
            //   0fb690c8a94500       | movzx               edx, byte ptr [eax + 0x45a9c8]
            //   8bc1                 | mov                 eax, ecx
            //   c1e808               | shr                 eax, 8
            //   0fb6c0               | movzx               eax, al
            //   c1e208               | shl                 edx, 8
            //   0fb680c8a94500       | movzx               eax, byte ptr [eax + 0x45a9c8]

        $sequence_9 = { 83ff10 8b7dd8 0f43cf 2bc2 3bf0 7729 }
            // n = 6, score = 100
            //   83ff10               | cmp                 edi, 0x10
            //   8b7dd8               | mov                 edi, dword ptr [ebp - 0x28]
            //   0f43cf               | cmovae              ecx, edi
            //   2bc2                 | sub                 eax, edx
            //   3bf0                 | cmp                 esi, eax
            //   7729                 | ja                  0x2b

    condition:
        7 of them and filesize < 1068032
}