rule win_newsreels_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.newsreels."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.newsreels"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc8 55 8bd9 56 57 c1e902 }
            // n = 6, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   55                   | push                ebp
            //   8bd9                 | mov                 ebx, ecx
            //   56                   | push                esi
            //   57                   | push                edi
            //   c1e902               | shr                 ecx, 2

        $sequence_1 = { 8d542448 c744244844000000 52 ff15???????? }
            // n = 4, score = 100
            //   8d542448             | lea                 edx, [esp + 0x48]
            //   c744244844000000     | mov                 dword ptr [esp + 0x48], 0x44
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_2 = { f3a4 0f8558040000 bd88130000 8d842490010000 682c010000 50 e8???????? }
            // n = 7, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   0f8558040000         | jne                 0x45e
            //   bd88130000           | mov                 ebp, 0x1388
            //   8d842490010000       | lea                 eax, [esp + 0x190]
            //   682c010000           | push                0x12c
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_3 = { 8d9424c0040000 885808 8b3d???????? 33c0 f2ae }
            // n = 5, score = 100
            //   8d9424c0040000       | lea                 edx, [esp + 0x4c0]
            //   885808               | mov                 byte ptr [eax + 8], bl
            //   8b3d????????         |                     
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]

        $sequence_4 = { 8d44241c 52 50 66895c2468 c744246401010000 895c2424 }
            // n = 6, score = 100
            //   8d44241c             | lea                 eax, [esp + 0x1c]
            //   52                   | push                edx
            //   50                   | push                eax
            //   66895c2468           | mov                 word ptr [esp + 0x68], bx
            //   c744246401010000     | mov                 dword ptr [esp + 0x64], 0x101
            //   895c2424             | mov                 dword ptr [esp + 0x24], ebx

        $sequence_5 = { 50 e8???????? 8b4c2428 8b54242c 890e 895604 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   8b54242c             | mov                 edx, dword ptr [esp + 0x2c]
            //   890e                 | mov                 dword ptr [esi], ecx
            //   895604               | mov                 dword ptr [esi + 4], edx

        $sequence_6 = { 8d4c2420 6a01 51 e8???????? 53 }
            // n = 5, score = 100
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   6a01                 | push                1
            //   51                   | push                ecx
            //   e8????????           |                     
            //   53                   | push                ebx

        $sequence_7 = { 0bd0 895614 8b561c 8d040a 83f808 }
            // n = 5, score = 100
            //   0bd0                 | or                  edx, eax
            //   895614               | mov                 dword ptr [esi + 0x14], edx
            //   8b561c               | mov                 edx, dword ptr [esi + 0x1c]
            //   8d040a               | lea                 eax, [edx + ecx]
            //   83f808               | cmp                 eax, 8

        $sequence_8 = { 68???????? 8d942494000000 6804010000 52 e8???????? 8dbc249c000000 }
            // n = 6, score = 100
            //   68????????           |                     
            //   8d942494000000       | lea                 edx, [esp + 0x94]
            //   6804010000           | push                0x104
            //   52                   | push                edx
            //   e8????????           |                     
            //   8dbc249c000000       | lea                 edi, [esp + 0x9c]

        $sequence_9 = { 5b c20400 6685ff 7507 bd01000000 eb07 }
            // n = 6, score = 100
            //   5b                   | pop                 ebx
            //   c20400               | ret                 4
            //   6685ff               | test                di, di
            //   7507                 | jne                 9
            //   bd01000000           | mov                 ebp, 1
            //   eb07                 | jmp                 9

    condition:
        7 of them and filesize < 65536
}