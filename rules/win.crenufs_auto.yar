rule win_crenufs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.crenufs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crenufs"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf8 e8???????? 8be8 8d4618 83c408 c744242000000000 89442424 }
            // n = 7, score = 200
            //   8bf8                 | mov                 edi, eax
            //   e8????????           |                     
            //   8be8                 | mov                 ebp, eax
            //   8d4618               | lea                 eax, [esi + 0x18]
            //   83c408               | add                 esp, 8
            //   c744242000000000     | mov                 dword ptr [esp + 0x20], 0
            //   89442424             | mov                 dword ptr [esp + 0x24], eax

        $sequence_1 = { 6a00 51 8d560c 6a04 }
            // n = 4, score = 200
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   8d560c               | lea                 edx, [esi + 0xc]
            //   6a04                 | push                4

        $sequence_2 = { 83c40c 8945c4 8d45c0 50 c645c037 66c745c80001 e8???????? }
            // n = 7, score = 200
            //   83c40c               | add                 esp, 0xc
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax
            //   8d45c0               | lea                 eax, [ebp - 0x40]
            //   50                   | push                eax
            //   c645c037             | mov                 byte ptr [ebp - 0x40], 0x37
            //   66c745c80001         | mov                 word ptr [ebp - 0x38], 0x100
            //   e8????????           |                     

        $sequence_3 = { 3bf9 7509 8b4514 8b4c2414 2bc1 8d542410 6a00 }
            // n = 7, score = 200
            //   3bf9                 | cmp                 edi, ecx
            //   7509                 | jne                 0xb
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   2bc1                 | sub                 eax, ecx
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   6a00                 | push                0

        $sequence_4 = { 8b0d???????? 8945ec 3b01 7431 57 e8???????? 0345ec }
            // n = 7, score = 200
            //   8b0d????????         |                     
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   3b01                 | cmp                 eax, dword ptr [ecx]
            //   7431                 | je                  0x33
            //   57                   | push                edi
            //   e8????????           |                     
            //   0345ec               | add                 eax, dword ptr [ebp - 0x14]

        $sequence_5 = { 894a04 894a08 894a0c 51 50 894a10 894c2418 }
            // n = 7, score = 200
            //   894a04               | mov                 dword ptr [edx + 4], ecx
            //   894a08               | mov                 dword ptr [edx + 8], ecx
            //   894a0c               | mov                 dword ptr [edx + 0xc], ecx
            //   51                   | push                ecx
            //   50                   | push                eax
            //   894a10               | mov                 dword ptr [edx + 0x10], ecx
            //   894c2418             | mov                 dword ptr [esp + 0x18], ecx

        $sequence_6 = { 50 e8???????? 8a45f3 59 59 8845b0 53 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   8a45f3               | mov                 al, byte ptr [ebp - 0xd]
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8845b0               | mov                 byte ptr [ebp - 0x50], al
            //   53                   | push                ebx

        $sequence_7 = { c7421888c84000 e9???????? 8b442410 c7436800000000 }
            // n = 4, score = 200
            //   c7421888c84000       | mov                 dword ptr [edx + 0x18], 0x40c888
            //   e9????????           |                     
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   c7436800000000       | mov                 dword ptr [ebx + 0x68], 0

        $sequence_8 = { 33d3 c1e808 8b1495e08f4000 33c2 }
            // n = 4, score = 200
            //   33d3                 | xor                 edx, ebx
            //   c1e808               | shr                 eax, 8
            //   8b1495e08f4000       | mov                 edx, dword ptr [edx*4 + 0x408fe0]
            //   33c2                 | xor                 eax, edx

        $sequence_9 = { 84c0 742b 8b7c243c 8bcd 8bd1 be???????? c1e902 }
            // n = 7, score = 200
            //   84c0                 | test                al, al
            //   742b                 | je                  0x2d
            //   8b7c243c             | mov                 edi, dword ptr [esp + 0x3c]
            //   8bcd                 | mov                 ecx, ebp
            //   8bd1                 | mov                 edx, ecx
            //   be????????           |                     
            //   c1e902               | shr                 ecx, 2

    condition:
        7 of them and filesize < 106496
}