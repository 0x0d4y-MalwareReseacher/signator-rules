rule win_remsec_strider_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.remsec_strider."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remsec_strider"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 8bf1 6808040000 8d4614 6a00 }
            // n = 5, score = 200
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   6808040000           | push                0x408
            //   8d4614               | lea                 eax, [esi + 0x14]
            //   6a00                 | push                0

        $sequence_1 = { 5e e9???????? ff4610 33c0 }
            // n = 4, score = 200
            //   5e                   | pop                 esi
            //   e9????????           |                     
            //   ff4610               | inc                 dword ptr [esi + 0x10]
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { ffb648020000 e8???????? 59 59 33c0 5e }
            // n = 6, score = 200
            //   ffb648020000         | push                dword ptr [esi + 0x248]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi

        $sequence_3 = { 7407 50 ff15???????? 83661000 8bce 5e e9???????? }
            // n = 7, score = 200
            //   7407                 | je                  9
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83661000             | and                 dword ptr [esi + 0x10], 0
            //   8bce                 | mov                 ecx, esi
            //   5e                   | pop                 esi
            //   e9????????           |                     

        $sequence_4 = { 83c010 c3 b8???????? c3 }
            // n = 4, score = 200
            //   83c010               | add                 eax, 0x10
            //   c3                   | ret                 
            //   b8????????           |                     
            //   c3                   | ret                 

        $sequence_5 = { 894808 83460810 58 5e 8be5 5d }
            // n = 6, score = 200
            //   894808               | mov                 dword ptr [eax + 8], ecx
            //   83460810             | add                 dword ptr [esi + 8], 0x10
            //   58                   | pop                 eax
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp

        $sequence_6 = { 56 ff5058 59 6a01 }
            // n = 4, score = 200
            //   56                   | push                esi
            //   ff5058               | call                dword ptr [eax + 0x58]
            //   59                   | pop                 ecx
            //   6a01                 | push                1

        $sequence_7 = { e8???????? 85c0 7f05 83c8ff eb0e }
            // n = 5, score = 200
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7f05                 | jg                  7
            //   83c8ff               | or                  eax, 0xffffffff
            //   eb0e                 | jmp                 0x10

        $sequence_8 = { 57 ffd0 85c0 7509 834dfcff e9???????? }
            // n = 6, score = 200
            //   57                   | push                edi
            //   ffd0                 | call                eax
            //   85c0                 | test                eax, eax
            //   7509                 | jne                 0xb
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff
            //   e9????????           |                     

        $sequence_9 = { c20800 33c0 40 83f920 7f22 741c 49 }
            // n = 7, score = 200
            //   c20800               | ret                 8
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   83f920               | cmp                 ecx, 0x20
            //   7f22                 | jg                  0x24
            //   741c                 | je                  0x1e
            //   49                   | dec                 ecx

    condition:
        7 of them and filesize < 344064
}