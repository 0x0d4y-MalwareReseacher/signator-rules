rule win_ddkong_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.ddkong."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ddkong"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4588 57 50 68???????? c6458852 c6458965 }
            // n = 6, score = 100
            //   8d4588               | lea                 eax, dword ptr [ebp - 0x78]
            //   57                   | push                edi
            //   50                   | push                eax
            //   68????????           |                     
            //   c6458852             | mov                 byte ptr [ebp - 0x78], 0x52
            //   c6458965             | mov                 byte ptr [ebp - 0x77], 0x65

        $sequence_1 = { 8d45f0 50 c645d165 c645d274 c645d345 }
            // n = 5, score = 100
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   50                   | push                eax
            //   c645d165             | mov                 byte ptr [ebp - 0x2f], 0x65
            //   c645d274             | mov                 byte ptr [ebp - 0x2e], 0x74
            //   c645d345             | mov                 byte ptr [ebp - 0x2d], 0x45

        $sequence_2 = { c645c069 c645c16e c645c267 c645c373 c645c441 }
            // n = 5, score = 100
            //   c645c069             | mov                 byte ptr [ebp - 0x40], 0x69
            //   c645c16e             | mov                 byte ptr [ebp - 0x3f], 0x6e
            //   c645c267             | mov                 byte ptr [ebp - 0x3e], 0x67
            //   c645c373             | mov                 byte ptr [ebp - 0x3d], 0x73
            //   c645c441             | mov                 byte ptr [ebp - 0x3c], 0x41

        $sequence_3 = { 8965f0 743e 48 7537 8b4508 }
            // n = 5, score = 100
            //   8965f0               | mov                 dword ptr [ebp - 0x10], esp
            //   743e                 | je                  0x40
            //   48                   | dec                 eax
            //   7537                 | jne                 0x39
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_4 = { c78570feffff44000000 6a10 59 33c0 8dbd74feffff }
            // n = 5, score = 100
            //   c78570feffff44000000     | mov    dword ptr [ebp - 0x190], 0x44
            //   6a10                 | push                0x10
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   8dbd74feffff         | lea                 edi, dword ptr [ebp - 0x18c]

        $sequence_5 = { 53 e8???????? 83c408 6800800000 6a00 53 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   6800800000           | push                0x8000
            //   6a00                 | push                0
            //   53                   | push                ebx

        $sequence_6 = { c645ca65 c645cb61 c645cc74 c645cd65 c645ce54 }
            // n = 5, score = 100
            //   c645ca65             | mov                 byte ptr [ebp - 0x36], 0x65
            //   c645cb61             | mov                 byte ptr [ebp - 0x35], 0x61
            //   c645cc74             | mov                 byte ptr [ebp - 0x34], 0x74
            //   c645cd65             | mov                 byte ptr [ebp - 0x33], 0x65
            //   c645ce54             | mov                 byte ptr [ebp - 0x32], 0x54

        $sequence_7 = { 0f8450010000 8d8524ffffff 50 6a01 }
            // n = 4, score = 100
            //   0f8450010000         | je                  0x156
            //   8d8524ffffff         | lea                 eax, dword ptr [ebp - 0xdc]
            //   50                   | push                eax
            //   6a01                 | push                1

        $sequence_8 = { 85c9 7426 6681394d5a 751f 8b413c 03c1 }
            // n = 6, score = 100
            //   85c9                 | test                ecx, ecx
            //   7426                 | je                  0x28
            //   6681394d5a           | cmp                 word ptr [ecx], 0x5a4d
            //   751f                 | jne                 0x21
            //   8b413c               | mov                 eax, dword ptr [ecx + 0x3c]
            //   03c1                 | add                 eax, ecx

        $sequence_9 = { c68542ffffff72 c68543ffffff65 c68544ffffff63 c68545ffffff74 }
            // n = 4, score = 100
            //   c68542ffffff72       | mov                 byte ptr [ebp - 0xbe], 0x72
            //   c68543ffffff65       | mov                 byte ptr [ebp - 0xbd], 0x65
            //   c68544ffffff63       | mov                 byte ptr [ebp - 0xbc], 0x63
            //   c68545ffffff74       | mov                 byte ptr [ebp - 0xbb], 0x74

    condition:
        7 of them and filesize < 81920
}