rule win_polyglot_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.polyglot_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.polyglot_ransom"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945ec ffd6 8945e0 895dac c745a860764500 8d4dc8 c645fc01 }
            // n = 7, score = 100
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   ffd6                 | call                esi
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   895dac               | mov                 dword ptr [ebp - 0x54], ebx
            //   c745a860764500       | mov                 dword ptr [ebp - 0x58], 0x457660
            //   8d4dc8               | lea                 ecx, [ebp - 0x38]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1

        $sequence_1 = { eb03 c60700 8b4dfc 5e 33cd 5b e8???????? }
            // n = 7, score = 100
            //   eb03                 | jmp                 5
            //   c60700               | mov                 byte ptr [edi], 0
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   5e                   | pop                 esi
            //   33cd                 | xor                 ecx, ebp
            //   5b                   | pop                 ebx
            //   e8????????           |                     

        $sequence_2 = { 50 e8???????? 33ff 83c41c 3bc7 7405 83f8ff }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   33ff                 | xor                 edi, edi
            //   83c41c               | add                 esp, 0x1c
            //   3bc7                 | cmp                 eax, edi
            //   7405                 | je                  7
            //   83f8ff               | cmp                 eax, -1

        $sequence_3 = { e9???????? 55 8bec 837d0803 56 8bf1 750e }
            // n = 7, score = 100
            //   e9????????           |                     
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   837d0803             | cmp                 dword ptr [ebp + 8], 3
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   750e                 | jne                 0x10

        $sequence_4 = { 23c6 8b0485d8154600 0fb6cf 8b0c8dd8094600 81e100ff0000 250000ff00 33c1 }
            // n = 7, score = 100
            //   23c6                 | and                 eax, esi
            //   8b0485d8154600       | mov                 eax, dword ptr [eax*4 + 0x4615d8]
            //   0fb6cf               | movzx               ecx, bh
            //   8b0c8dd8094600       | mov                 ecx, dword ptr [ecx*4 + 0x4609d8]
            //   81e100ff0000         | and                 ecx, 0xff00
            //   250000ff00           | and                 eax, 0xff0000
            //   33c1                 | xor                 eax, ecx

        $sequence_5 = { e8???????? e9???????? 8b7508 56 8d4de8 e8???????? 8365fc00 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   e9????????           |                     
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   e8????????           |                     
            //   8365fc00             | and                 dword ptr [ebp - 4], 0

        $sequence_6 = { 59 39bd4c81ffff 59 740c ffb54c81ffff e8???????? 59 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   39bd4c81ffff         | cmp                 dword ptr [ebp - 0x7eb4], edi
            //   59                   | pop                 ecx
            //   740c                 | je                  0xe
            //   ffb54c81ffff         | push                dword ptr [ebp - 0x7eb4]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_7 = { 8d85fcfdffff 50 57 ffd6 53 8d85fcefffff 50 }
            // n = 7, score = 100
            //   8d85fcfdffff         | lea                 eax, [ebp - 0x204]
            //   50                   | push                eax
            //   57                   | push                edi
            //   ffd6                 | call                esi
            //   53                   | push                ebx
            //   8d85fcefffff         | lea                 eax, [ebp - 0x1004]
            //   50                   | push                eax

        $sequence_8 = { 8d4510 50 8d45cc 50 8d45dc e8???????? 83c42c }
            // n = 7, score = 100
            //   8d4510               | lea                 eax, [ebp + 0x10]
            //   50                   | push                eax
            //   8d45cc               | lea                 eax, [ebp - 0x34]
            //   50                   | push                eax
            //   8d45dc               | lea                 eax, [ebp - 0x24]
            //   e8????????           |                     
            //   83c42c               | add                 esp, 0x2c

        $sequence_9 = { 6818020000 b8???????? e8???????? 8b4d08 8b450c 8365fc00 51 }
            // n = 7, score = 100
            //   6818020000           | push                0x218
            //   b8????????           |                     
            //   e8????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 1392640
}