rule win_polyglot_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.polyglot_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.polyglot_ransom"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4e14 6bc030 8b440804 8b54240c 8b4e08 8a12 881408 }
            // n = 7, score = 100
            //   8b4e14               | mov                 ecx, dword ptr [esi + 0x14]
            //   6bc030               | imul                eax, eax, 0x30
            //   8b440804             | mov                 eax, dword ptr [eax + ecx + 4]
            //   8b54240c             | mov                 edx, dword ptr [esp + 0xc]
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   8a12                 | mov                 dl, byte ptr [edx]
            //   881408               | mov                 byte ptr [eax + ecx], dl

        $sequence_1 = { 61 697420666f722074 7261 6e 7361 6374696f 6e }
            // n = 7, score = 100
            //   61                   | popal               
            //   697420666f722074     | imul                esi, dword ptr [eax + 0x66], 0x7420726f
            //   7261                 | jb                  0x63
            //   6e                   | outsb               dx, byte ptr [esi]
            //   7361                 | jae                 0x63
            //   6374696f             | arpl                word ptr [ecx + ebp*2 + 0x6f], si
            //   6e                   | outsb               dx, byte ptr [esi]

        $sequence_2 = { 59 59 7403 897dfc 8b5e38 8d45ac 50 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   7403                 | je                  5
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   8b5e38               | mov                 ebx, dword ptr [esi + 0x38]
            //   8d45ac               | lea                 eax, [ebp - 0x54]
            //   50                   | push                eax

        $sequence_3 = { 42 4e 75f6 85f6 7505 b857000780 8b542410 }
            // n = 7, score = 100
            //   42                   | inc                 edx
            //   4e                   | dec                 esi
            //   75f6                 | jne                 0xfffffff8
            //   85f6                 | test                esi, esi
            //   7505                 | jne                 7
            //   b857000780           | mov                 eax, 0x80070057
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]

        $sequence_4 = { 59 753b 33db 33f6 8d45e0 50 e8???????? }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   753b                 | jne                 0x3d
            //   33db                 | xor                 ebx, ebx
            //   33f6                 | xor                 esi, esi
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_5 = { 25ff00ff00 0b450c 33d2 8901 8b4dec c1e918 8ab1d8294600 }
            // n = 7, score = 100
            //   25ff00ff00           | and                 eax, 0xff00ff
            //   0b450c               | or                  eax, dword ptr [ebp + 0xc]
            //   33d2                 | xor                 edx, edx
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   c1e918               | shr                 ecx, 0x18
            //   8ab1d8294600         | mov                 dh, byte ptr [ecx + 0x4629d8]

        $sequence_6 = { 8bc6 e8???????? 85c0 59 59 7403 83cfff }
            // n = 7, score = 100
            //   8bc6                 | mov                 eax, esi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   7403                 | je                  5
            //   83cfff               | or                  edi, 0xffffffff

        $sequence_7 = { 3bc2 8945c0 0f8456ffffff 83f807 0f879a070000 ff24851a374400 33c0 }
            // n = 7, score = 100
            //   3bc2                 | cmp                 eax, edx
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax
            //   0f8456ffffff         | je                  0xffffff5c
            //   83f807               | cmp                 eax, 7
            //   0f879a070000         | ja                  0x7a0
            //   ff24851a374400       | jmp                 dword ptr [eax*4 + 0x44371a]
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { d0bdd0bad183 2e0d0a3c2f73 7061 6e 3e0d0a3c7370 61 6e }
            // n = 7, score = 100
            //   d0bdd0bad183         | sar                 byte ptr [ebp - 0x7c2e4530], 1
            //   2e0d0a3c2f73         | or                  eax, 0x732f3c0a
            //   7061                 | jo                  0x63
            //   6e                   | outsb               dx, byte ptr [esi]
            //   3e0d0a3c7370         | or                  eax, 0x70733c0a
            //   61                   | popal               
            //   6e                   | outsb               dx, byte ptr [esi]

        $sequence_9 = { d0bed0bcd183 20d0 b1d1 80d0b0 d183d0b7d0b5 d180d1962e20 d092d0bed0bd }
            // n = 7, score = 100
            //   d0bed0bcd183         | sar                 byte ptr [esi - 0x7c2e4330], 1
            //   20d0                 | and                 al, dl
            //   b1d1                 | mov                 cl, 0xd1
            //   80d0b0               | adc                 al, 0xb0
            //   d183d0b7d0b5         | rol                 dword ptr [ebx - 0x4a2f4830], 1
            //   d180d1962e20         | rol                 dword ptr [eax + 0x202e96d1], 1
            //   d092d0bed0bd         | rcl                 byte ptr [edx - 0x422f4130], 1

    condition:
        7 of them and filesize < 1392640
}