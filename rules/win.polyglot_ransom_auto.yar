rule win_polyglot_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.polyglot_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.polyglot_ransom"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 203d???????? 7374 5f 7365 61 7263 685f657327 }
            // n = 7, score = 100
            //   203d????????         |                     
            //   7374                 | jae                 0x76
            //   5f                   | pop                 edi
            //   7365                 | jae                 0x67
            //   61                   | popal               
            //   7263                 | jb                  0x65
            //   685f657327           | push                0x2773655f

        $sequence_1 = { 59 8d4dc8 e8???????? 8d4da8 51 50 898544ffffff }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   8d4dc8               | lea                 ecx, dword ptr [ebp - 0x38]
            //   e8????????           |                     
            //   8d4da8               | lea                 ecx, dword ptr [ebp - 0x58]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   898544ffffff         | mov                 dword ptr [ebp - 0xbc], eax

        $sequence_2 = { 59 740f 68401f0000 57 8bc8 e8???????? eb02 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   740f                 | je                  0x11
            //   68401f0000           | push                0x1f40
            //   57                   | push                edi
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   eb02                 | jmp                 4

        $sequence_3 = { 40 50 89460c e8???????? ff760c 894608 53 }
            // n = 7, score = 100
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   e8????????           |                     
            //   ff760c               | push                dword ptr [esi + 0xc]
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   53                   | push                ebx

        $sequence_4 = { 7474 6f 6e 3130 207269 6768745f6275 7474 }
            // n = 7, score = 100
            //   7474                 | je                  0x76
            //   6f                   | outsd               dx, dword ptr [esi]
            //   6e                   | outsb               dx, byte ptr [esi]
            //   3130                 | xor                 dword ptr [eax], esi
            //   207269               | and                 byte ptr [edx + 0x69], dh
            //   6768745f6275         | push                0x75625f74
            //   7474                 | je                  0x76

        $sequence_5 = { 56 57 53 e8???????? 83c40c 6a10 8d85e482ffff }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   6a10                 | push                0x10
            //   8d85e482ffff         | lea                 eax, dword ptr [ebp - 0x7d1c]

        $sequence_6 = { 2f 3e50 7265 6d 657265 2027 45 }
            // n = 7, score = 100
            //   2f                   | das                 
            //   3e50                 | push                eax
            //   7265                 | jb                  0x67
            //   6d                   | insd                dword ptr es:[edi], dx
            //   657265               | jb                  0x68
            //   2027                 | and                 byte ptr [edi], ah
            //   45                   | inc                 ebp

        $sequence_7 = { 397db0 7e10 0fb74c7d24 e8???????? 47 3b7db0 7cf0 }
            // n = 7, score = 100
            //   397db0               | cmp                 dword ptr [ebp - 0x50], edi
            //   7e10                 | jle                 0x12
            //   0fb74c7d24           | movzx               ecx, word ptr [ebp + edi*2 + 0x24]
            //   e8????????           |                     
            //   47                   | inc                 edi
            //   3b7db0               | cmp                 edi, dword ptr [ebp - 0x50]
            //   7cf0                 | jl                  0xfffffff2

        $sequence_8 = { ff7620 8d4dc0 e8???????? 6a5a ff75c8 c645fc02 ff15???????? }
            // n = 7, score = 100
            //   ff7620               | push                dword ptr [esi + 0x20]
            //   8d4dc0               | lea                 ecx, dword ptr [ebp - 0x40]
            //   e8????????           |                     
            //   6a5a                 | push                0x5a
            //   ff75c8               | push                dword ptr [ebp - 0x38]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   ff15????????         |                     

        $sequence_9 = { 56 ffb584fcffff 8d85ecfeffff ffb594fcffff 8d9554fcffff 6a08 50 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ffb584fcffff         | push                dword ptr [ebp - 0x37c]
            //   8d85ecfeffff         | lea                 eax, dword ptr [ebp - 0x114]
            //   ffb594fcffff         | push                dword ptr [ebp - 0x36c]
            //   8d9554fcffff         | lea                 edx, dword ptr [ebp - 0x3ac]
            //   6a08                 | push                8
            //   50                   | push                eax

    condition:
        7 of them and filesize < 1392640
}