rule win_grok_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.grok."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.grok"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bfe 7c6d e8???????? 8bf8 3bfe 7c62 }
            // n = 6, score = 400
            //   3bfe                 | cmp                 edi, esi
            //   7c6d                 | jl                  0x6f
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   3bfe                 | cmp                 edi, esi
            //   7c62                 | jl                  0x64

        $sequence_1 = { 8a4801 888df2fdffff 8b95f8fdffff 3a4a01 7523 8385f4fdffff02 8385f8fdffff02 }
            // n = 7, score = 400
            //   8a4801               | mov                 cl, byte ptr [eax + 1]
            //   888df2fdffff         | mov                 byte ptr [ebp - 0x20e], cl
            //   8b95f8fdffff         | mov                 edx, dword ptr [ebp - 0x208]
            //   3a4a01               | cmp                 cl, byte ptr [edx + 1]
            //   7523                 | jne                 0x25
            //   8385f4fdffff02       | add                 dword ptr [ebp - 0x20c], 2
            //   8385f8fdffff02       | add                 dword ptr [ebp - 0x208], 2

        $sequence_2 = { 3bf3 750d 8b0d???????? bf010000c0 eb4c 56 ff15???????? }
            // n = 7, score = 400
            //   3bf3                 | cmp                 esi, ebx
            //   750d                 | jne                 0xf
            //   8b0d????????         |                     
            //   bf010000c0           | mov                 edi, 0xc0000001
            //   eb4c                 | jmp                 0x4e
            //   56                   | push                esi
            //   ff15????????         |                     

        $sequence_3 = { ab ab ab 895df8 895dfc 0f84e6000000 8b4514 }
            // n = 7, score = 400
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   895df8               | mov                 dword ptr [ebp - 8], ebx
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   0f84e6000000         | je                  0xec
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]

        $sequence_4 = { 8975fc 8145fce4010000 ff75fc 8bce 8945f4 ff91d4010000 8bfe }
            // n = 7, score = 400
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   8145fce4010000       | add                 dword ptr [ebp - 4], 0x1e4
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   8bce                 | mov                 ecx, esi
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   ff91d4010000         | call                dword ptr [ecx + 0x1d4]
            //   8bfe                 | mov                 edi, esi

        $sequence_5 = { c6852dfeffff61 c6852efeffff6c c6852ffeffff5f c68530feffff75 c68531feffff6e c68532feffff77 c68533feffff69 }
            // n = 7, score = 400
            //   c6852dfeffff61       | mov                 byte ptr [ebp - 0x1d3], 0x61
            //   c6852efeffff6c       | mov                 byte ptr [ebp - 0x1d2], 0x6c
            //   c6852ffeffff5f       | mov                 byte ptr [ebp - 0x1d1], 0x5f
            //   c68530feffff75       | mov                 byte ptr [ebp - 0x1d0], 0x75
            //   c68531feffff6e       | mov                 byte ptr [ebp - 0x1cf], 0x6e
            //   c68532feffff77       | mov                 byte ptr [ebp - 0x1ce], 0x77
            //   c68533feffff69       | mov                 byte ptr [ebp - 0x1cd], 0x69

        $sequence_6 = { 8d7c06fc 57 e8???????? 84c0 7505 8975e4 }
            // n = 6, score = 400
            //   8d7c06fc             | lea                 edi, [esi + eax - 4]
            //   57                   | push                edi
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7505                 | jne                 7
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi

        $sequence_7 = { ff30 ffd6 893d???????? 33c0 5e 5f 5b }
            // n = 7, score = 400
            //   ff30                 | push                dword ptr [eax]
            //   ffd6                 | call                esi
            //   893d????????         |                     
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx

        $sequence_8 = { ffd7 8b0d???????? 8981d8010000 a1???????? 3998d8010000 74cc }
            // n = 6, score = 400
            //   ffd7                 | call                edi
            //   8b0d????????         |                     
            //   8981d8010000         | mov                 dword ptr [ecx + 0x1d8], eax
            //   a1????????           |                     
            //   3998d8010000         | cmp                 dword ptr [eax + 0x1d8], ebx
            //   74cc                 | je                  0xffffffce

        $sequence_9 = { c68555feffff77 c68556feffff69 c68557feffff6e c68558feffff64 c68559feffff32 c6855afeffff00 }
            // n = 6, score = 400
            //   c68555feffff77       | mov                 byte ptr [ebp - 0x1ab], 0x77
            //   c68556feffff69       | mov                 byte ptr [ebp - 0x1aa], 0x69
            //   c68557feffff6e       | mov                 byte ptr [ebp - 0x1a9], 0x6e
            //   c68558feffff64       | mov                 byte ptr [ebp - 0x1a8], 0x64
            //   c68559feffff32       | mov                 byte ptr [ebp - 0x1a7], 0x32
            //   c6855afeffff00       | mov                 byte ptr [ebp - 0x1a6], 0

    condition:
        7 of them and filesize < 84992
}