rule win_cerbu_miner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.cerbu_miner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cerbu_miner"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6641 3bdd 0f8289010000 b86a060000 663bd8 730b 0fb7cb }
            // n = 7, score = 100
            //   6641                 | inc                 cx
            //   3bdd                 | cmp                 ebx, ebp
            //   0f8289010000         | jb                  0x18f
            //   b86a060000           | mov                 eax, 0x66a
            //   663bd8               | cmp                 bx, ax
            //   730b                 | jae                 0xd
            //   0fb7cb               | movzx               ecx, bx

        $sequence_1 = { c744243002000000 4c 8d4c2478 48 8bc8 44 89642428 }
            // n = 7, score = 100
            //   c744243002000000     | mov                 dword ptr [esp + 0x30], 2
            //   4c                   | dec                 esp
            //   8d4c2478             | lea                 ecx, dword ptr [esp + 0x78]
            //   48                   | dec                 eax
            //   8bc8                 | mov                 ecx, eax
            //   44                   | inc                 esp
            //   89642428             | mov                 dword ptr [esp + 0x28], esp

        $sequence_2 = { 0f8237ffffff e9???????? b90d000000 6689842488000000 66890b 33d2 4b }
            // n = 7, score = 100
            //   0f8237ffffff         | jb                  0xffffff3d
            //   e9????????           |                     
            //   b90d000000           | mov                 ecx, 0xd
            //   6689842488000000     | mov                 word ptr [esp + 0x88], ax
            //   66890b               | mov                 word ptr [ebx], cx
            //   33d2                 | xor                 edx, edx
            //   4b                   | dec                 ebx

        $sequence_3 = { 8bca 44 889424a0000000 41 2bc8 741a 41 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   44                   | inc                 esp
            //   889424a0000000       | mov                 byte ptr [esp + 0xa0], dl
            //   41                   | inc                 ecx
            //   2bc8                 | sub                 ecx, eax
            //   741a                 | je                  0x1c
            //   41                   | inc                 ecx

        $sequence_4 = { f6473801 7402 eb18 48 8bcf ff15???????? f6473801 }
            // n = 7, score = 100
            //   f6473801             | test                byte ptr [edi + 0x38], 1
            //   7402                 | je                  4
            //   eb18                 | jmp                 0x1a
            //   48                   | dec                 eax
            //   8bcf                 | mov                 ecx, edi
            //   ff15????????         |                     
            //   f6473801             | test                byte ptr [edi + 0x38], 1

        $sequence_5 = { 8d5001 ff15???????? 85c0 756a ff15???????? 85c0 7f08 }
            // n = 7, score = 100
            //   8d5001               | lea                 edx, dword ptr [eax + 1]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   756a                 | jne                 0x6c
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7f08                 | jg                  0xa

        $sequence_6 = { 8bc5 49 0bc7 4c 33de 4c 33f0 }
            // n = 7, score = 100
            //   8bc5                 | mov                 eax, ebp
            //   49                   | dec                 ecx
            //   0bc7                 | or                  eax, edi
            //   4c                   | dec                 esp
            //   33de                 | xor                 ebx, esi
            //   4c                   | dec                 esp
            //   33f0                 | xor                 esi, eax

        $sequence_7 = { 8b7334 2b7350 2bf7 f6c20c 7515 4c 8d4b28 }
            // n = 7, score = 100
            //   8b7334               | mov                 esi, dword ptr [ebx + 0x34]
            //   2b7350               | sub                 esi, dword ptr [ebx + 0x50]
            //   2bf7                 | sub                 esi, edi
            //   f6c20c               | test                dl, 0xc
            //   7515                 | jne                 0x17
            //   4c                   | dec                 esp
            //   8d4b28               | lea                 ecx, dword ptr [ebx + 0x28]

        $sequence_8 = { e8???????? 48 8b742438 49 894608 32c0 48 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   48                   | dec                 eax
            //   8b742438             | mov                 esi, dword ptr [esp + 0x38]
            //   49                   | dec                 ecx
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   32c0                 | xor                 al, al
            //   48                   | dec                 eax

        $sequence_9 = { 8bf8 e8???????? ff4030 83ffff 0f84f6000000 41 3bfc }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   e8????????           |                     
            //   ff4030               | inc                 dword ptr [eax + 0x30]
            //   83ffff               | cmp                 edi, -1
            //   0f84f6000000         | je                  0xfc
            //   41                   | inc                 ecx
            //   3bfc                 | cmp                 edi, esp

    condition:
        7 of them and filesize < 1040384
}