rule win_cerbu_miner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.cerbu_miner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cerbu_miner"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1e90c f6c101 740a 48 8b06 48 83780800 }
            // n = 7, score = 100
            //   c1e90c               | shr                 ecx, 0xc
            //   f6c101               | test                cl, 1
            //   740a                 | je                  0xc
            //   48                   | dec                 eax
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   48                   | dec                 eax
            //   83780800             | cmp                 dword ptr [eax + 8], 0

        $sequence_1 = { e8???????? 4c 8d9c24e0000000 48 8bc7 49 8b5b10 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   4c                   | dec                 esp
            //   8d9c24e0000000       | lea                 ebx, [esp + 0xe0]
            //   48                   | dec                 eax
            //   8bc7                 | mov                 eax, edi
            //   49                   | dec                 ecx
            //   8b5b10               | mov                 ebx, dword ptr [ebx + 0x10]

        $sequence_2 = { 8bf9 4d 8bd0 48 8bf1 48 894c2440 }
            // n = 7, score = 100
            //   8bf9                 | mov                 edi, ecx
            //   4d                   | dec                 ebp
            //   8bd0                 | mov                 edx, eax
            //   48                   | dec                 eax
            //   8bf1                 | mov                 esi, ecx
            //   48                   | dec                 eax
            //   894c2440             | mov                 dword ptr [esp + 0x40], ecx

        $sequence_3 = { 8d4c2468 f20f11442468 0f28f8 e8???????? 6683f8ff 7504 f20f58f7 }
            // n = 7, score = 100
            //   8d4c2468             | lea                 ecx, [esp + 0x68]
            //   f20f11442468         | movsd               qword ptr [esp + 0x68], xmm0
            //   0f28f8               | movaps              xmm7, xmm0
            //   e8????????           |                     
            //   6683f8ff             | cmp                 ax, -1
            //   7504                 | jne                 6
            //   f20f58f7             | addsd               xmm6, xmm7

        $sequence_4 = { c3 48 895c2430 49 8d5107 49 8d5807 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   48                   | dec                 eax
            //   895c2430             | mov                 dword ptr [esp + 0x30], ebx
            //   49                   | dec                 ecx
            //   8d5107               | lea                 edx, [ecx + 7]
            //   49                   | dec                 ecx
            //   8d5807               | lea                 ebx, [eax + 7]

        $sequence_5 = { e8???????? 40 84f6 7505 e8???????? 33d2 b101 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   40                   | inc                 eax
            //   84f6                 | test                dh, dh
            //   7505                 | jne                 7
            //   e8????????           |                     
            //   33d2                 | xor                 edx, edx
            //   b101                 | mov                 cl, 1

        $sequence_6 = { 4c 894910 49 8b11 49 894908 807a1900 }
            // n = 7, score = 100
            //   4c                   | dec                 esp
            //   894910               | mov                 dword ptr [ecx + 0x10], ecx
            //   49                   | dec                 ecx
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   49                   | dec                 ecx
            //   894908               | mov                 dword ptr [ecx + 8], ecx
            //   807a1900             | cmp                 byte ptr [edx + 0x19], 0

        $sequence_7 = { 8bc8 eb0a 4c 8b8f00040000 49 d1e9 48 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   eb0a                 | jmp                 0xc
            //   4c                   | dec                 esp
            //   8b8f00040000         | mov                 ecx, dword ptr [edi + 0x400]
            //   49                   | dec                 ecx
            //   d1e9                 | shr                 ecx, 1
            //   48                   | dec                 eax

        $sequence_8 = { 8d4b48 45 33c9 48 8d155affffff 48 83c420 }
            // n = 7, score = 100
            //   8d4b48               | lea                 ecx, [ebx + 0x48]
            //   45                   | inc                 ebp
            //   33c9                 | xor                 ecx, ecx
            //   48                   | dec                 eax
            //   8d155affffff         | lea                 edx, [0xffffff5a]
            //   48                   | dec                 eax
            //   83c420               | add                 esp, 0x20

        $sequence_9 = { e8???????? 8918 41 8b07 85c0 743b f6455801 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8918                 | mov                 dword ptr [eax], ebx
            //   41                   | inc                 ecx
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   85c0                 | test                eax, eax
            //   743b                 | je                  0x3d
            //   f6455801             | test                byte ptr [ebp + 0x58], 1

    condition:
        7 of them and filesize < 1040384
}