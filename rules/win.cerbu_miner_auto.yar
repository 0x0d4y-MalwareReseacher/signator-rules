rule win_cerbu_miner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.cerbu_miner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cerbu_miner"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 48 8bf8 48 85c0 0f8426010000 48 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   48                   | dec                 eax
            //   8bf8                 | mov                 edi, eax
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax
            //   0f8426010000         | je                  0x12c
            //   48                   | dec                 eax

        $sequence_1 = { 83632800 48 837f2800 48 8b7730 0f84b5000000 48 }
            // n = 7, score = 100
            //   83632800             | and                 dword ptr [ebx + 0x28], 0
            //   48                   | dec                 eax
            //   837f2800             | cmp                 dword ptr [edi + 0x28], 0
            //   48                   | dec                 eax
            //   8b7730               | mov                 esi, dword ptr [edi + 0x30]
            //   0f84b5000000         | je                  0xbb
            //   48                   | dec                 eax

        $sequence_2 = { 8bec 44 3be0 44 0f47e8 44 896c2448 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   44                   | inc                 esp
            //   3be0                 | cmp                 esp, eax
            //   44                   | inc                 esp
            //   0f47e8               | cmova               ebp, eax
            //   44                   | inc                 esp
            //   896c2448             | mov                 dword ptr [esp + 0x48], ebp

        $sequence_3 = { 41 0fb6f9 41 0fb6eb eb25 8d41a6 6683f807 }
            // n = 7, score = 100
            //   41                   | inc                 ecx
            //   0fb6f9               | movzx               edi, cl
            //   41                   | inc                 ecx
            //   0fb6eb               | movzx               ebp, bl
            //   eb25                 | jmp                 0x27
            //   8d41a6               | lea                 eax, [ecx - 0x5a]
            //   6683f807             | cmp                 ax, 7

        $sequence_4 = { ff4328 48 8b4318 8a08 48 ffc0 884b41 }
            // n = 7, score = 100
            //   ff4328               | inc                 dword ptr [ebx + 0x28]
            //   48                   | dec                 eax
            //   8b4318               | mov                 eax, dword ptr [ebx + 0x18]
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   48                   | dec                 eax
            //   ffc0                 | inc                 eax
            //   884b41               | mov                 byte ptr [ebx + 0x41], cl

        $sequence_5 = { ff15???????? 48 3305???????? 48 8d15a23efeff 48 8bcb }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   48                   | dec                 eax
            //   3305????????         |                     
            //   48                   | dec                 eax
            //   8d15a23efeff         | lea                 edx, [0xfffe3ea2]
            //   48                   | dec                 eax
            //   8bcb                 | mov                 ecx, ebx

        $sequence_6 = { 48 894108 48 8b7918 48 83bf700b000000 742f }
            // n = 7, score = 100
            //   48                   | dec                 eax
            //   894108               | mov                 dword ptr [ecx + 8], eax
            //   48                   | dec                 eax
            //   8b7918               | mov                 edi, dword ptr [ecx + 0x18]
            //   48                   | dec                 eax
            //   83bf700b000000       | cmp                 dword ptr [edi + 0xb70], 0
            //   742f                 | je                  0x31

        $sequence_7 = { 8bcc 4d 2bcf 0fb602 41 0fb60c11 41 }
            // n = 7, score = 100
            //   8bcc                 | mov                 ecx, esp
            //   4d                   | dec                 ebp
            //   2bcf                 | sub                 ecx, edi
            //   0fb602               | movzx               eax, byte ptr [edx]
            //   41                   | inc                 ecx
            //   0fb60c11             | movzx               ecx, byte ptr [ecx + edx]
            //   41                   | inc                 ecx

        $sequence_8 = { ffc0 eb02 33c0 2bf8 42 8d040a 44 }
            // n = 7, score = 100
            //   ffc0                 | inc                 eax
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   2bf8                 | sub                 edi, eax
            //   42                   | inc                 edx
            //   8d040a               | lea                 eax, [edx + ecx]
            //   44                   | inc                 esp

        $sequence_9 = { ffc3 48 2b4728 48 c1f803 48 3bd8 }
            // n = 7, score = 100
            //   ffc3                 | inc                 ebx
            //   48                   | dec                 eax
            //   2b4728               | sub                 eax, dword ptr [edi + 0x28]
            //   48                   | dec                 eax
            //   c1f803               | sar                 eax, 3
            //   48                   | dec                 eax
            //   3bd8                 | cmp                 ebx, eax

    condition:
        7 of them and filesize < 1040384
}