rule win_darkloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.darkloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.darkloader"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4801 51 e8???????? ff7510 53 56 68???????? }
            // n = 7, score = 100
            //   8d4801               | lea                 ecx, [eax + 1]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   68????????           |                     

        $sequence_1 = { c604f5e460001001 46 3bf0 7cd7 c605????????01 5e }
            // n = 6, score = 100
            //   c604f5e460001001     | mov                 byte ptr [esi*8 + 0x100060e4], 1
            //   46                   | inc                 esi
            //   3bf0                 | cmp                 esi, eax
            //   7cd7                 | jl                  0xffffffd9
            //   c605????????01       |                     
            //   5e                   | pop                 esi

        $sequence_2 = { 56 ff742408 ff15???????? ff742410 33f6 }
            // n = 5, score = 100
            //   56                   | push                esi
            //   ff742408             | push                dword ptr [esp + 8]
            //   ff15????????         |                     
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   33f6                 | xor                 esi, esi

        $sequence_3 = { 7447 3c2e 7443 3c7e 743f }
            // n = 5, score = 100
            //   7447                 | je                  0x49
            //   3c2e                 | cmp                 al, 0x2e
            //   7443                 | je                  0x45
            //   3c7e                 | cmp                 al, 0x7e
            //   743f                 | je                  0x41

        $sequence_4 = { 8b01 ff90d0000000 83f809 7555 }
            // n = 4, score = 100
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff90d0000000         | call                dword ptr [eax + 0xd0]
            //   83f809               | cmp                 eax, 9
            //   7555                 | jne                 0x57

        $sequence_5 = { 8b0d???????? ff15???????? 68???????? 56 ffd7 }
            // n = 5, score = 100
            //   8b0d????????         |                     
            //   ff15????????         |                     
            //   68????????           |                     
            //   56                   | push                esi
            //   ffd7                 | call                edi

        $sequence_6 = { 56 6a04 68???????? ffd3 }
            // n = 4, score = 100
            //   56                   | push                esi
            //   6a04                 | push                4
            //   68????????           |                     
            //   ffd3                 | call                ebx

        $sequence_7 = { 55 8b6c2424 56 57 8d4d01 8a4500 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   8b6c2424             | mov                 ebp, dword ptr [esp + 0x24]
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d4d01               | lea                 ecx, [ebp + 1]
            //   8a4500               | mov                 al, byte ptr [ebp]

        $sequence_8 = { 8bec 81ec04040000 33c9 8d45fc 51 51 }
            // n = 6, score = 100
            //   8bec                 | mov                 ebp, esp
            //   81ec04040000         | sub                 esp, 0x404
            //   33c9                 | xor                 ecx, ecx
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   51                   | push                ecx
            //   51                   | push                ecx

        $sequence_9 = { ffd6 57 55 6a01 53 ff15???????? 57 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   57                   | push                edi
            //   55                   | push                ebp
            //   6a01                 | push                1
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   57                   | push                edi

    condition:
        7 of them and filesize < 124928
}