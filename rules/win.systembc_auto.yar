rule win_systembc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.systembc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.systembc"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 668b9554f9ffff 6a00 6a00 6a03 6a00 6a00 }
            // n = 6, score = 800
            //   668b9554f9ffff       | mov                 dx, word ptr [ebp - 0x6ac]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a03                 | push                3
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_1 = { 6800020000 e8???????? 57 e8???????? 8d3c38 66b85c00 }
            // n = 6, score = 800
            //   6800020000           | push                0x200
            //   e8????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     
            //   8d3c38               | lea                 edi, dword ptr [eax + edi]
            //   66b85c00             | mov                 ax, 0x5c

        $sequence_2 = { ff75fc e8???????? ff75fc e8???????? 5e 5f }
            // n = 6, score = 800
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   e8????????           |                     
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   e8????????           |                     
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_3 = { 4f 8bc7 5e 5f }
            // n = 4, score = 800
            //   4f                   | dec                 edi
            //   8bc7                 | mov                 eax, edi
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_4 = { 8b85f4feffff eb03 8b4618 5e 5f 5b c9 }
            // n = 7, score = 800
            //   8b85f4feffff         | mov                 eax, dword ptr [ebp - 0x10c]
            //   eb03                 | jmp                 5
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx
            //   c9                   | leave               

        $sequence_5 = { 8b450c ab 8b4514 ab }
            // n = 4, score = 800
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_6 = { 74f4 368a942900fcffff 02043b 02c2 368ab42800fcffff 3688b42900fcffff 3688942800fcffff }
            // n = 7, score = 800
            //   74f4                 | je                  0xfffffff6
            //   368a942900fcffff     | mov                 dl, byte ptr ss:[ecx + ebp - 0x400]
            //   02043b               | add                 al, byte ptr [ebx + edi]
            //   02c2                 | add                 al, dl
            //   368ab42800fcffff     | mov                 dh, byte ptr ss:[eax + ebp - 0x400]
            //   3688b42900fcffff     | mov                 byte ptr ss:[ecx + ebp - 0x400], dh
            //   3688942800fcffff     | mov                 byte ptr ss:[eax + ebp - 0x400], dl

        $sequence_7 = { e8???????? 8d5804 6a18 e8???????? 83c061 aa }
            // n = 6, score = 800
            //   e8????????           |                     
            //   8d5804               | lea                 ebx, dword ptr [eax + 4]
            //   6a18                 | push                0x18
            //   e8????????           |                     
            //   83c061               | add                 eax, 0x61
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_8 = { eb08 43 3b5dfc 7296 }
            // n = 4, score = 800
            //   eb08                 | jmp                 0xa
            //   43                   | inc                 ebx
            //   3b5dfc               | cmp                 ebx, dword ptr [ebp - 4]
            //   7296                 | jb                  0xffffff98

        $sequence_9 = { 8b4618 5e 5f 5b c9 c20400 }
            // n = 6, score = 800
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c20400               | ret                 4

    condition:
        7 of them and filesize < 57344
}