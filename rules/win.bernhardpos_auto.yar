rule win_bernhardpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.bernhardpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bernhardpos"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f840a010000 8d85ecfbffff 50 682a020000 68???????? 8b8df0fbffff }
            // n = 6, score = 200
            //   0f840a010000         | je                  0x110
            //   8d85ecfbffff         | lea                 eax, [ebp - 0x414]
            //   50                   | push                eax
            //   682a020000           | push                0x22a
            //   68????????           |                     
            //   8b8df0fbffff         | mov                 ecx, dword ptr [ebp - 0x410]

        $sequence_1 = { 8b4d08 03483c 894df4 b808000000 }
            // n = 4, score = 200
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   03483c               | add                 ecx, dword ptr [eax + 0x3c]
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   b808000000           | mov                 eax, 8

        $sequence_2 = { 817dfcffffff6f 7407 33c0 e9???????? }
            // n = 4, score = 200
            //   817dfcffffff6f       | cmp                 dword ptr [ebp - 4], 0x6fffffff
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     

        $sequence_3 = { 83c063 83e863 5f 5e }
            // n = 4, score = 200
            //   83c063               | add                 eax, 0x63
            //   83e863               | sub                 eax, 0x63
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_4 = { 6a00 68ffff1f00 8d85bcfbffff 50 }
            // n = 4, score = 200
            //   6a00                 | push                0
            //   68ffff1f00           | push                0x1fffff
            //   8d85bcfbffff         | lea                 eax, [ebp - 0x444]
            //   50                   | push                eax

        $sequence_5 = { 833d????????00 0f84b3000000 6a24 8d85c0fbffff 50 e8???????? 83c408 }
            // n = 7, score = 200
            //   833d????????00       |                     
            //   0f84b3000000         | je                  0xb9
            //   6a24                 | push                0x24
            //   8d85c0fbffff         | lea                 eax, [ebp - 0x440]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_6 = { 83e863 5f 5e 5b }
            // n = 4, score = 200
            //   83e863               | sub                 eax, 0x63
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_7 = { e8???????? 83c408 c785e8fbffff00000000 c785e4fbffff00000000 c785c0fbffff24000000 }
            // n = 5, score = 200
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   c785e8fbffff00000000     | mov    dword ptr [ebp - 0x418], 0
            //   c785e4fbffff00000000     | mov    dword ptr [ebp - 0x41c], 0
            //   c785c0fbffff24000000     | mov    dword ptr [ebp - 0x440], 0x24

        $sequence_8 = { eb2c 33c0 eb2d 33c0 eb29 }
            // n = 5, score = 200
            //   eb2c                 | jmp                 0x2e
            //   33c0                 | xor                 eax, eax
            //   eb2d                 | jmp                 0x2f
            //   33c0                 | xor                 eax, eax
            //   eb29                 | jmp                 0x2b

        $sequence_9 = { e8???????? 83c404 6a01 8d85d0feffff 50 ff15???????? }
            // n = 6, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   6a01                 | push                1
            //   8d85d0feffff         | lea                 eax, [ebp - 0x130]
            //   50                   | push                eax
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 368640
}