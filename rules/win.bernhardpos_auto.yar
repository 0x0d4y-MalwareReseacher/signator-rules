rule win_bernhardpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.bernhardpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bernhardpos"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c745f801000000 eb02 ebc1 837df800 0f8496000000 8b45fc }
            // n = 6, score = 200
            //   c745f801000000       | mov                 dword ptr [ebp - 8], 1
            //   eb02                 | jmp                 4
            //   ebc1                 | jmp                 0xffffffc3
            //   837df800             | cmp                 dword ptr [ebp - 8], 0
            //   0f8496000000         | je                  0x9c
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_1 = { 50 e8???????? 83c40c 8d8570feffff 50 ff15???????? }
            // n = 6, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d8570feffff         | lea                 eax, [ebp - 0x190]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_2 = { 0fbe5415f8 33ca 8b4508 0345f4 8808 ebc7 5f }
            // n = 7, score = 200
            //   0fbe5415f8           | movsx               edx, byte ptr [ebp + edx - 8]
            //   33ca                 | xor                 ecx, edx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0345f4               | add                 eax, dword ptr [ebp - 0xc]
            //   8808                 | mov                 byte ptr [eax], cl
            //   ebc7                 | jmp                 0xffffffc9
            //   5f                   | pop                 edi

        $sequence_3 = { 8b4508 0345fc 0fbe08 83f944 }
            // n = 4, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   0fbe08               | movsx               ecx, byte ptr [eax]
            //   83f944               | cmp                 ecx, 0x44

        $sequence_4 = { 6bc800 81c1???????? 898d58feffff 6a65 ff15???????? 8b8d58feffff 668901 }
            // n = 7, score = 200
            //   6bc800               | imul                ecx, eax, 0
            //   81c1????????         |                     
            //   898d58feffff         | mov                 dword ptr [ebp - 0x1a8], ecx
            //   6a65                 | push                0x65
            //   ff15????????         |                     
            //   8b8d58feffff         | mov                 ecx, dword ptr [ebp - 0x1a8]
            //   668901               | mov                 word ptr [ecx], ax

        $sequence_5 = { 668b0d???????? 66894dfc 8a15???????? 8855fe 8d45f8 50 ff15???????? }
            // n = 7, score = 200
            //   668b0d????????       |                     
            //   66894dfc             | mov                 word ptr [ebp - 4], cx
            //   8a15????????         |                     
            //   8855fe               | mov                 byte ptr [ebp - 2], dl
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_6 = { 83c408 b801000000 6bc800 81c1???????? }
            // n = 4, score = 200
            //   83c408               | add                 esp, 8
            //   b801000000           | mov                 eax, 1
            //   6bc800               | imul                ecx, eax, 0
            //   81c1????????         |                     

        $sequence_7 = { 8b8508feffff 5f 5e 5b 8be5 }
            // n = 5, score = 200
            //   8b8508feffff         | mov                 eax, dword ptr [ebp - 0x1f8]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp

        $sequence_8 = { 8b8df0fbffff 51 8b55f4 52 ff15???????? 8d85ecfbffff }
            // n = 6, score = 200
            //   8b8df0fbffff         | mov                 ecx, dword ptr [ebp - 0x410]
            //   51                   | push                ecx
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8d85ecfbffff         | lea                 eax, [ebp - 0x414]

        $sequence_9 = { 53 56 57 a1???????? 8945e8 }
            // n = 5, score = 200
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   a1????????           |                     
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax

    condition:
        7 of them and filesize < 368640
}