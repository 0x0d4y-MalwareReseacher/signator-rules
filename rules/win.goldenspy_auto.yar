rule win_goldenspy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.goldenspy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.goldenspy"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b8ee4000000 8908 83bec400000000 c786d400000000000000 c786d800000000000000 c786dc00000000000000 }
            // n = 6, score = 100
            //   8b8ee4000000         | mov                 ecx, dword ptr [esi + 0xe4]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   83bec400000000       | cmp                 dword ptr [esi + 0xc4], 0
            //   c786d400000000000000     | mov    dword ptr [esi + 0xd4], 0
            //   c786d800000000000000     | mov    dword ptr [esi + 0xd8], 0
            //   c786dc00000000000000     | mov    dword ptr [esi + 0xdc], 0

        $sequence_1 = { e8???????? 83bdccfeffff10 8d85b8feffff ffb5c8feffff 8b95e0feffff 8d8dd0feffff 0f43c7 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83bdccfeffff10       | cmp                 dword ptr [ebp - 0x134], 0x10
            //   8d85b8feffff         | lea                 eax, [ebp - 0x148]
            //   ffb5c8feffff         | push                dword ptr [ebp - 0x138]
            //   8b95e0feffff         | mov                 edx, dword ptr [ebp - 0x120]
            //   8d8dd0feffff         | lea                 ecx, [ebp - 0x130]
            //   0f43c7               | cmovae              eax, edi

        $sequence_2 = { 8d8d64ffffff e8???????? 8d8d54ffffff e8???????? 8bc6 8b4df4 64890d00000000 }
            // n = 7, score = 100
            //   8d8d64ffffff         | lea                 ecx, [ebp - 0x9c]
            //   e8????????           |                     
            //   8d8d54ffffff         | lea                 ecx, [ebp - 0xac]
            //   e8????????           |                     
            //   8bc6                 | mov                 eax, esi
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx

        $sequence_3 = { 8d8b8c000000 83e001 50 57 ff7610 e8???????? }
            // n = 6, score = 100
            //   8d8b8c000000         | lea                 ecx, [ebx + 0x8c]
            //   83e001               | and                 eax, 1
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff7610               | push                dword ptr [esi + 0x10]
            //   e8????????           |                     

        $sequence_4 = { 75f9 2bca 8d854cfeffff 51 50 8d4dc0 e8???????? }
            // n = 7, score = 100
            //   75f9                 | jne                 0xfffffffb
            //   2bca                 | sub                 ecx, edx
            //   8d854cfeffff         | lea                 eax, [ebp - 0x1b4]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   e8????????           |                     

        $sequence_5 = { 8bcf ff75b8 53 e8???????? c645fc07 8b55d4 }
            // n = 6, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   ff75b8               | push                dword ptr [ebp - 0x48]
            //   53                   | push                ebx
            //   e8????????           |                     
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]

        $sequence_6 = { 8bf1 e8???????? 8bf8 8b44240c 85c0 751b 53 }
            // n = 7, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]
            //   85c0                 | test                eax, eax
            //   751b                 | jne                 0x1d
            //   53                   | push                ebx

        $sequence_7 = { e8???????? 6a08 57 e8???????? 83c410 eb17 f7460800010000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   6a08                 | push                8
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   eb17                 | jmp                 0x19
            //   f7460800010000       | test                dword ptr [esi + 8], 0x100

        $sequence_8 = { e8???????? 8bc8 e8???????? 8d4de0 c645fc13 e8???????? 8d85d4feffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8d4de0               | lea                 ecx, [ebp - 0x20]
            //   c645fc13             | mov                 byte ptr [ebp - 4], 0x13
            //   e8????????           |                     
            //   8d85d4feffff         | lea                 eax, [ebp - 0x12c]

        $sequence_9 = { 8d45f4 50 e8???????? 0f1f00 c49d4100769d 41 007c9d41 }
            // n = 7, score = 100
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   e8????????           |                     
            //   0f1f00               | nop                 dword ptr [eax]
            //   c49d4100769d         | les                 ebx, ptr [ebp - 0x6289ffbf]
            //   41                   | inc                 ecx
            //   007c9d41             | add                 byte ptr [ebp + ebx*4 + 0x41], bh

    condition:
        7 of them and filesize < 1081344
}