rule win_badnews_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.badnews."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.badnews"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 83c404 68???????? 6804010000 ff15???????? }
            // n = 6, score = 1000
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   6804010000           | push                0x104
            //   ff15????????         |                     

        $sequence_1 = { c78534ffffff47657457 c78538ffffff696e646f c7853cffffff77546578 66c78540ffffff7457 }
            // n = 4, score = 900
            //   c78534ffffff47657457     | mov    dword ptr [ebp - 0xcc], 0x57746547
            //   c78538ffffff696e646f     | mov    dword ptr [ebp - 0xc8], 0x6f646e69
            //   c7853cffffff77546578     | mov    dword ptr [ebp - 0xc4], 0x78655477
            //   66c78540ffffff7457     | mov    word ptr [ebp - 0xc0], 0x5774

        $sequence_2 = { c705????????55736572 c705????????33322e64 66c705????????6c6c c605????????00 }
            // n = 4, score = 900
            //   c705????????55736572     |     
            //   c705????????33322e64     |     
            //   66c705????????6c6c     |     
            //   c605????????00       |                     

        $sequence_3 = { 55 8bec 8b450c 3d01020000 }
            // n = 4, score = 900
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   3d01020000           | cmp                 eax, 0x201

        $sequence_4 = { 8945fc 53 56 57 8d8534ffffff }
            // n = 5, score = 900
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d8534ffffff         | lea                 eax, [ebp - 0xcc]

        $sequence_5 = { eb02 33c9 c0e004 02c1 3423 }
            // n = 5, score = 900
            //   eb02                 | jmp                 4
            //   33c9                 | xor                 ecx, ecx
            //   c0e004               | shl                 al, 4
            //   02c1                 | add                 al, cl
            //   3423                 | xor                 al, 0x23

        $sequence_6 = { 6a00 d1f9 68???????? 03c9 51 }
            // n = 5, score = 800
            //   6a00                 | push                0
            //   d1f9                 | sar                 ecx, 1
            //   68????????           |                     
            //   03c9                 | add                 ecx, ecx
            //   51                   | push                ecx

        $sequence_7 = { 68???????? 6a1a 68???????? 57 }
            // n = 4, score = 800
            //   68????????           |                     
            //   6a1a                 | push                0x1a
            //   68????????           |                     
            //   57                   | push                edi

        $sequence_8 = { ffd3 85c0 7403 83c608 }
            // n = 4, score = 700
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   83c608               | add                 esi, 8

        $sequence_9 = { ff15???????? 85c0 7405 83c004 eb02 }
            // n = 5, score = 700
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7405                 | je                  7
            //   83c004               | add                 eax, 4
            //   eb02                 | jmp                 4

        $sequence_10 = { 57 6a00 6880000000 6a04 6a00 6a01 6a04 }
            // n = 7, score = 700
            //   57                   | push                edi
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a04                 | push                4
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a04                 | push                4

        $sequence_11 = { 8bf0 56 ff15???????? 50 6a40 }
            // n = 5, score = 700
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   50                   | push                eax
            //   6a40                 | push                0x40

        $sequence_12 = { 68???????? ff15???????? b8???????? 83c424 }
            // n = 4, score = 500
            //   68????????           |                     
            //   ff15????????         |                     
            //   b8????????           |                     
            //   83c424               | add                 esp, 0x24

        $sequence_13 = { cc 56 33f6 ffb6309f0110 ff15???????? }
            // n = 5, score = 100
            //   cc                   | int3                
            //   56                   | push                esi
            //   33f6                 | xor                 esi, esi
            //   ffb6309f0110         | push                dword ptr [esi + 0x10019f30]
            //   ff15????????         |                     

        $sequence_14 = { 33c0 668945f9 33d2 8a01 41 84c0 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   668945f9             | mov                 word ptr [ebp - 7], ax
            //   33d2                 | xor                 edx, edx
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx
            //   84c0                 | test                al, al

        $sequence_15 = { 83e61f c1e606 8b0cbdd0a70110 f6440e0401 }
            // n = 4, score = 100
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   8b0cbdd0a70110       | mov                 ecx, dword ptr [edi*4 + 0x1001a7d0]
            //   f6440e0401           | test                byte ptr [esi + ecx + 4], 1

        $sequence_16 = { c745e4f0b10110 a1???????? eb1a c745e4ecb10110 a1???????? eb0c }
            // n = 6, score = 100
            //   c745e4f0b10110       | mov                 dword ptr [ebp - 0x1c], 0x1001b1f0
            //   a1????????           |                     
            //   eb1a                 | jmp                 0x1c
            //   c745e4ecb10110       | mov                 dword ptr [ebp - 0x1c], 0x1001b1ec
            //   a1????????           |                     
            //   eb0c                 | jmp                 0xe

        $sequence_17 = { 47 84c0 75f8 8bca 8d8538fbffff c1e902 }
            // n = 6, score = 100
            //   47                   | inc                 edi
            //   84c0                 | test                al, al
            //   75f8                 | jne                 0xfffffffa
            //   8bca                 | mov                 ecx, edx
            //   8d8538fbffff         | lea                 eax, [ebp - 0x4c8]
            //   c1e902               | shr                 ecx, 2

        $sequence_18 = { 895ddc 8b148dd0a70110 8a441a04 a801 }
            // n = 4, score = 100
            //   895ddc               | mov                 dword ptr [ebp - 0x24], ebx
            //   8b148dd0a70110       | mov                 edx, dword ptr [ecx*4 + 0x1001a7d0]
            //   8a441a04             | mov                 al, byte ptr [edx + ebx + 4]
            //   a801                 | test                al, 1

        $sequence_19 = { 75f9 2bce 3bd1 72e4 660f6f05???????? 68???????? f30f7f8558fbffff }
            // n = 7, score = 100
            //   75f9                 | jne                 0xfffffffb
            //   2bce                 | sub                 ecx, esi
            //   3bd1                 | cmp                 edx, ecx
            //   72e4                 | jb                  0xffffffe6
            //   660f6f05????????     |                     
            //   68????????           |                     
            //   f30f7f8558fbffff     | movdqu              xmmword ptr [ebp - 0x4a8], xmm0

        $sequence_20 = { 6a00 50 e8???????? 83c430 8db528feffff bb03000000 }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30
            //   8db528feffff         | lea                 esi, [ebp - 0x1d8]
            //   bb03000000           | mov                 ebx, 3

    condition:
        7 of them and filesize < 612352
}