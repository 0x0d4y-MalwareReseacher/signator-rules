rule win_badnews_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.badnews."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.badnews"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 83c404 68???????? 6804010000 ff15???????? }
            // n = 6, score = 1000
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   6804010000           | push                0x104
            //   ff15????????         |                     

        $sequence_1 = { 55 8bec 8b450c 3d01020000 }
            // n = 4, score = 900
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   3d01020000           | cmp                 eax, 0x201

        $sequence_2 = { c78534ffffff47657457 c78538ffffff696e646f c7853cffffff77546578 66c78540ffffff7457 }
            // n = 4, score = 900
            //   c78534ffffff47657457     | mov    dword ptr [ebp - 0xcc], 0x57746547
            //   c78538ffffff696e646f     | mov    dword ptr [ebp - 0xc8], 0x6f646e69
            //   c7853cffffff77546578     | mov    dword ptr [ebp - 0xc4], 0x78655477
            //   66c78540ffffff7457     | mov    word ptr [ebp - 0xc0], 0x5774

        $sequence_3 = { c705????????33322e64 66c705????????6c6c c605????????00 ff15???????? }
            // n = 4, score = 900
            //   c705????????33322e64     |     
            //   66c705????????6c6c     |     
            //   c605????????00       |                     
            //   ff15????????         |                     

        $sequence_4 = { 33c5 8945fc 53 56 57 8d8534ffffff }
            // n = 6, score = 900
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d8534ffffff         | lea                 eax, [ebp - 0xcc]

        $sequence_5 = { eb02 33c9 c0e004 02c1 3423 }
            // n = 5, score = 900
            //   eb02                 | jmp                 4
            //   33c9                 | xor                 ecx, ecx
            //   c0e004               | shl                 al, 4
            //   02c1                 | add                 al, cl
            //   3423                 | xor                 al, 0x23

        $sequence_6 = { 6a00 d1f9 68???????? 03c9 }
            // n = 4, score = 800
            //   6a00                 | push                0
            //   d1f9                 | sar                 ecx, 1
            //   68????????           |                     
            //   03c9                 | add                 ecx, ecx

        $sequence_7 = { 68???????? 6a1a 68???????? 57 }
            // n = 4, score = 800
            //   68????????           |                     
            //   6a1a                 | push                0x1a
            //   68????????           |                     
            //   57                   | push                edi

        $sequence_8 = { 57 6a00 6880000000 6a04 6a00 6a01 6a04 }
            // n = 7, score = 700
            //   57                   | push                edi
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a04                 | push                4
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a04                 | push                4

        $sequence_9 = { 56 ffd3 85c0 7403 83c608 }
            // n = 5, score = 700
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   83c608               | add                 esi, 8

        $sequence_10 = { 8bf0 56 ff15???????? 50 6a40 }
            // n = 5, score = 700
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   50                   | push                eax
            //   6a40                 | push                0x40

        $sequence_11 = { ff15???????? 85c0 7405 83c004 }
            // n = 4, score = 700
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7405                 | je                  7
            //   83c004               | add                 eax, 4

        $sequence_12 = { 68???????? ff15???????? b8???????? 83c424 }
            // n = 4, score = 500
            //   68????????           |                     
            //   ff15????????         |                     
            //   b8????????           |                     
            //   83c424               | add                 esp, 0x24

        $sequence_13 = { f30f6f05???????? 53 56 57 6a53 8885d4fdffff 8d85d5fdffff }
            // n = 7, score = 100
            //   f30f6f05????????     |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6a53                 | push                0x53
            //   8885d4fdffff         | mov                 byte ptr [ebp - 0x22c], al
            //   8d85d5fdffff         | lea                 eax, [ebp - 0x22b]

        $sequence_14 = { 737b 8bde c1fb05 8bfe 83e71f c1e706 8b049dd0a70110 }
            // n = 7, score = 100
            //   737b                 | jae                 0x7d
            //   8bde                 | mov                 ebx, esi
            //   c1fb05               | sar                 ebx, 5
            //   8bfe                 | mov                 edi, esi
            //   83e71f               | and                 edi, 0x1f
            //   c1e706               | shl                 edi, 6
            //   8b049dd0a70110       | mov                 eax, dword ptr [ebx*4 + 0x1001a7d0]

        $sequence_15 = { 894df4 895ddc 8b148dd0a70110 8a441a04 }
            // n = 4, score = 100
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   895ddc               | mov                 dword ptr [ebp - 0x24], ebx
            //   8b148dd0a70110       | mov                 edx, dword ptr [ecx*4 + 0x1001a7d0]
            //   8a441a04             | mov                 al, byte ptr [edx + ebx + 4]

        $sequence_16 = { 8a4701 47 84c0 75f8 8bca 8d852cfdffff c1e902 }
            // n = 7, score = 100
            //   8a4701               | mov                 al, byte ptr [edi + 1]
            //   47                   | inc                 edi
            //   84c0                 | test                al, al
            //   75f8                 | jne                 0xfffffffa
            //   8bca                 | mov                 ecx, edx
            //   8d852cfdffff         | lea                 eax, [ebp - 0x2d4]
            //   c1e902               | shr                 ecx, 2

        $sequence_17 = { 2bc7 3bd0 72e5 83c664 }
            // n = 4, score = 100
            //   2bc7                 | sub                 eax, edi
            //   3bd0                 | cmp                 edx, eax
            //   72e5                 | jb                  0xffffffe7
            //   83c664               | add                 esi, 0x64

        $sequence_18 = { 8b049dd0a70110 0fbe443804 83e001 750d }
            // n = 4, score = 100
            //   8b049dd0a70110       | mov                 eax, dword ptr [ebx*4 + 0x1001a7d0]
            //   0fbe443804           | movsx               eax, byte ptr [eax + edi + 4]
            //   83e001               | and                 eax, 1
            //   750d                 | jne                 0xf

        $sequence_19 = { 57 8b3c9dd0a70110 8a4c3704 0fb6c1 2580000000 }
            // n = 5, score = 100
            //   57                   | push                edi
            //   8b3c9dd0a70110       | mov                 edi, dword ptr [ebx*4 + 0x1001a7d0]
            //   8a4c3704             | mov                 cl, byte ptr [edi + esi + 4]
            //   0fb6c1               | movzx               eax, cl
            //   2580000000           | and                 eax, 0x80

        $sequence_20 = { 8b3c9dd0a70110 85ff 0f84be000000 897de0 }
            // n = 4, score = 100
            //   8b3c9dd0a70110       | mov                 edi, dword ptr [ebx*4 + 0x1001a7d0]
            //   85ff                 | test                edi, edi
            //   0f84be000000         | je                  0xc4
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi

    condition:
        7 of them and filesize < 612352
}