rule win_badnews_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.badnews."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.badnews"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 83c404 68???????? 6804010000 ff15???????? }
            // n = 6, score = 1000
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   6804010000           | push                0x104
            //   ff15????????         |                     

        $sequence_1 = { 33c5 8945fc 53 56 57 8d8534ffffff }
            // n = 6, score = 900
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d8534ffffff         | lea                 eax, [ebp - 0xcc]

        $sequence_2 = { eb02 33c9 c0e004 02c1 3423 c0c003 }
            // n = 6, score = 900
            //   eb02                 | jmp                 4
            //   33c9                 | xor                 ecx, ecx
            //   c0e004               | shl                 al, 4
            //   02c1                 | add                 al, cl
            //   3423                 | xor                 al, 0x23
            //   c0c003               | rol                 al, 3

        $sequence_3 = { c78534ffffff47657457 c78538ffffff696e646f c7853cffffff77546578 66c78540ffffff7457 }
            // n = 4, score = 900
            //   c78534ffffff47657457     | mov    dword ptr [ebp - 0xcc], 0x57746547
            //   c78538ffffff696e646f     | mov    dword ptr [ebp - 0xc8], 0x6f646e69
            //   c7853cffffff77546578     | mov    dword ptr [ebp - 0xc4], 0x78655477
            //   66c78540ffffff7457     | mov    word ptr [ebp - 0xc0], 0x5774

        $sequence_4 = { c705????????55736572 c705????????33322e64 66c705????????6c6c c605????????00 }
            // n = 4, score = 900
            //   c705????????55736572     |     
            //   c705????????33322e64     |     
            //   66c705????????6c6c     |     
            //   c605????????00       |                     

        $sequence_5 = { 55 8bec 8b450c 3d01020000 }
            // n = 4, score = 900
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   3d01020000           | cmp                 eax, 0x201

        $sequence_6 = { 6a00 d1f9 68???????? 03c9 51 }
            // n = 5, score = 800
            //   6a00                 | push                0
            //   d1f9                 | sar                 ecx, 1
            //   68????????           |                     
            //   03c9                 | add                 ecx, ecx
            //   51                   | push                ecx

        $sequence_7 = { 68???????? 6a1a 68???????? 57 }
            // n = 4, score = 800
            //   68????????           |                     
            //   6a1a                 | push                0x1a
            //   68????????           |                     
            //   57                   | push                edi

        $sequence_8 = { 57 6a00 6880000000 6a04 6a00 6a01 6a04 }
            // n = 7, score = 700
            //   57                   | push                edi
            //   6a00                 | push                0
            //   6880000000           | push                0x80
            //   6a04                 | push                4
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a04                 | push                4

        $sequence_9 = { ffd3 85c0 7403 83c608 }
            // n = 4, score = 700
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   83c608               | add                 esi, 8

        $sequence_10 = { 8bf0 56 ff15???????? 50 6a40 }
            // n = 5, score = 700
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   50                   | push                eax
            //   6a40                 | push                0x40

        $sequence_11 = { ff15???????? 85c0 7405 83c004 }
            // n = 4, score = 700
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7405                 | je                  7
            //   83c004               | add                 eax, 4

        $sequence_12 = { ff15???????? b8???????? 83c424 8d5002 668b08 83c002 }
            // n = 6, score = 500
            //   ff15????????         |                     
            //   b8????????           |                     
            //   83c424               | add                 esp, 0x24
            //   8d5002               | lea                 edx, [eax + 2]
            //   668b08               | mov                 cx, word ptr [eax]
            //   83c002               | add                 eax, 2

        $sequence_13 = { 8d0c457cab0110 8bc1 2d???????? d1f8 }
            // n = 4, score = 100
            //   8d0c457cab0110       | lea                 ecx, [eax*2 + 0x1001ab7c]
            //   8bc1                 | mov                 eax, ecx
            //   2d????????           |                     
            //   d1f8                 | sar                 eax, 1

        $sequence_14 = { 8bce 894de4 83f905 7d10 668b444b0c 6689044dd8a80110 }
            // n = 6, score = 100
            //   8bce                 | mov                 ecx, esi
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   83f905               | cmp                 ecx, 5
            //   7d10                 | jge                 0x12
            //   668b444b0c           | mov                 ax, word ptr [ebx + ecx*2 + 0xc]
            //   6689044dd8a80110     | mov                 word ptr [ecx*2 + 0x1001a8d8], ax

        $sequence_15 = { c1e106 8b0485d0a70110 804c080420 8b4d14 8b75f8 ba000000c0 }
            // n = 6, score = 100
            //   c1e106               | shl                 ecx, 6
            //   8b0485d0a70110       | mov                 eax, dword ptr [eax*4 + 0x1001a7d0]
            //   804c080420           | or                  byte ptr [eax + ecx + 4], 0x20
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   ba000000c0           | mov                 edx, 0xc0000000

        $sequence_16 = { a802 751b 6a02 8d8554ffffff 50 }
            // n = 5, score = 100
            //   a802                 | test                al, 2
            //   751b                 | jne                 0x1d
            //   6a02                 | push                2
            //   8d8554ffffff         | lea                 eax, [ebp - 0xac]
            //   50                   | push                eax

        $sequence_17 = { 68???????? 50 e8???????? 83c408 8bf8 85db 7525 }
            // n = 7, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8bf8                 | mov                 edi, eax
            //   85db                 | test                ebx, ebx
            //   7525                 | jne                 0x27

        $sequence_18 = { 88441905 8b45f4 83fa02 7c11 8b0c85d0a70110 8a06 }
            // n = 6, score = 100
            //   88441905             | mov                 byte ptr [ecx + ebx + 5], al
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83fa02               | cmp                 edx, 2
            //   7c11                 | jl                  0x13
            //   8b0c85d0a70110       | mov                 ecx, dword ptr [eax*4 + 0x1001a7d0]
            //   8a06                 | mov                 al, byte ptr [esi]

        $sequence_19 = { c1f805 8bf7 83e61f c1e606 033485d0a70110 33db }
            // n = 6, score = 100
            //   c1f805               | sar                 eax, 5
            //   8bf7                 | mov                 esi, edi
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   033485d0a70110       | add                 esi, dword ptr [eax*4 + 0x1001a7d0]
            //   33db                 | xor                 ebx, ebx

        $sequence_20 = { 2c37 0fb6c0 57 50 e8???????? 83c40c 4e }
            // n = 7, score = 100
            //   2c37                 | sub                 al, 0x37
            //   0fb6c0               | movzx               eax, al
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   4e                   | dec                 esi

    condition:
        7 of them and filesize < 612352
}