rule win_moure_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.moure."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.moure"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 007604 00d7 83c40c 85c0 74e7 00750c }
            // n = 6, score = 100
            //   007604               | add                 byte ptr [esi + 4], dh
            //   00d7                 | add                 bh, dl
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   74e7                 | je                  0xffffffe9
            //   00750c               | add                 byte ptr [ebp + 0xc], dh

        $sequence_1 = { 8bc8 00cc cc 8b00 55 8bec 8b4508 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   00cc                 | add                 ah, cl
            //   cc                   | int3                
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_2 = { 59 81c1f8ffffff 2be1 59 5b 53 4b }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   81c1f8ffffff         | add                 ecx, 0xfffffff8
            //   2be1                 | sub                 esp, ecx
            //   59                   | pop                 ecx
            //   5b                   | pop                 ebx
            //   53                   | push                ebx
            //   4b                   | dec                 ebx

        $sequence_3 = { 2be0 58 8b9b80000000 035d08 56 }
            // n = 5, score = 100
            //   2be0                 | sub                 esp, eax
            //   58                   | pop                 eax
            //   8b9b80000000         | mov                 ebx, dword ptr [ebx + 0x80]
            //   035d08               | add                 ebx, dword ptr [ebp + 8]
            //   56                   | push                esi

        $sequence_4 = { 56 689c604000 e8???????? ef }
            // n = 4, score = 100
            //   56                   | push                esi
            //   689c604000           | push                0x40609c
            //   e8????????           |                     
            //   ef                   | out                 dx, eax

        $sequence_5 = { ff15???????? 85c0 0f8484000000 0075dc 0075d8 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8484000000         | je                  0x8a
            //   0075dc               | add                 byte ptr [ebp - 0x24], dh
            //   0075d8               | add                 byte ptr [ebp - 0x28], dh

        $sequence_6 = { 7518 007508 50 e8???????? 57 8bce }
            // n = 6, score = 100
            //   7518                 | jne                 0x1a
            //   007508               | add                 byte ptr [ebp + 8], dh
            //   50                   | push                eax
            //   e8????????           |                     
            //   57                   | push                edi
            //   8bce                 | mov                 ecx, esi

        $sequence_7 = { a892 b4bf bfc5803416 7389 }
            // n = 4, score = 100
            //   a892                 | test                al, 0x92
            //   b4bf                 | mov                 ah, 0xbf
            //   bfc5803416           | mov                 edi, 0x163480c5
            //   7389                 | jae                 0xffffff8b

        $sequence_8 = { 56 6a1f 007014 007010 e8???????? a1???????? eb05 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   6a1f                 | push                0x1f
            //   007014               | add                 byte ptr [eax + 0x14], dh
            //   007010               | add                 byte ptr [eax + 0x10], dh
            //   e8????????           |                     
            //   a1????????           |                     
            //   eb05                 | jmp                 7

        $sequence_9 = { 81c8ffffffff f7d0 81c0f8ffffff 2be0 58 2d1a2978a0 }
            // n = 6, score = 100
            //   81c8ffffffff         | or                  eax, 0xffffffff
            //   f7d0                 | not                 eax
            //   81c0f8ffffff         | add                 eax, 0xfffffff8
            //   2be0                 | sub                 esp, eax
            //   58                   | pop                 eax
            //   2d1a2978a0           | sub                 eax, 0xa078291a

    condition:
        7 of them and filesize < 188416
}