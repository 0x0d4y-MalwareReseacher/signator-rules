rule win_moure_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.moure."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.moure"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2be2 5a 037d08 50 33c3 40 }
            // n = 6, score = 100
            //   2be2                 | sub                 esp, edx
            //   5a                   | pop                 edx
            //   037d08               | add                 edi, dword ptr [ebp + 8]
            //   50                   | push                eax
            //   33c3                 | xor                 eax, ebx
            //   40                   | inc                 eax

        $sequence_1 = { 53 e8???????? a7 8d00 808b970097edc4 c27eb1 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   e8????????           |                     
            //   a7                   | cmpsd               dword ptr [esi], dword ptr es:[edi]
            //   8d00                 | lea                 eax, dword ptr [eax]
            //   808b970097edc4       | or                  byte ptr [ebx - 0x1268ff69], 0xc4
            //   c27eb1               | ret                 0xb17e

        $sequence_2 = { 5b 81c3ff1a0200 33f4 8db4026ccc2628 295c2408 c1e632 }
            // n = 6, score = 100
            //   5b                   | pop                 ebx
            //   81c3ff1a0200         | add                 ebx, 0x21aff
            //   33f4                 | xor                 esi, esp
            //   8db4026ccc2628       | lea                 esi, dword ptr [edx + eax + 0x2826cc6c]
            //   295c2408             | sub                 dword ptr [esp + 8], ebx
            //   c1e632               | shl                 esi, 0x32

        $sequence_3 = { 8bf1 c706d8cb0001 e8???????? f6450801 7407 56 e8???????? }
            // n = 7, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   c706d8cb0001         | mov                 dword ptr [esi], 0x100cbd8
            //   e8????????           |                     
            //   f6450801             | test                byte ptr [ebp + 8], 1
            //   7407                 | je                  9
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_4 = { 6b866b8710cd44 7e10 cd44 5e 10a8b9b6bfbf }
            // n = 5, score = 100
            //   6b866b8710cd44       | imul                eax, dword ptr [esi - 0x32ef7895], 0x44
            //   7e10                 | jle                 0x12
            //   cd44                 | int                 0x44
            //   5e                   | pop                 esi
            //   10a8b9b6bfbf         | adc                 byte ptr [eax - 0x40404947], ch

        $sequence_5 = { 007520 51 56 57 53 007508 e8???????? }
            // n = 7, score = 100
            //   007520               | add                 byte ptr [ebp + 0x20], dh
            //   51                   | push                ecx
            //   56                   | push                esi
            //   57                   | push                edi
            //   53                   | push                ebx
            //   007508               | add                 byte ptr [ebp + 8], dh
            //   e8????????           |                     

        $sequence_6 = { 59 024c9002 c1e108 57 47 4f }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   024c9002             | add                 cl, byte ptr [eax + edx*4 + 2]
            //   c1e108               | shl                 ecx, 8
            //   57                   | push                edi
            //   47                   | inc                 edi
            //   4f                   | dec                 edi

        $sequence_7 = { 2be1 59 83f800 0f8494000000 83fa00 0f848b000000 51 }
            // n = 7, score = 100
            //   2be1                 | sub                 esp, ecx
            //   59                   | pop                 ecx
            //   83f800               | cmp                 eax, 0
            //   0f8494000000         | je                  0x9a
            //   83fa00               | cmp                 edx, 0
            //   0f848b000000         | je                  0x91
            //   51                   | push                ecx

        $sequence_8 = { e8???????? 007508 8365fc00 8bce e8???????? 84c0 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   007508               | add                 byte ptr [ebp + 8], dh
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   84c0                 | test                al, al

        $sequence_9 = { 85c0 7419 8b08 85c9 7508 895004 33c0 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7419                 | je                  0x1b
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   85c9                 | test                ecx, ecx
            //   7508                 | jne                 0xa
            //   895004               | mov                 dword ptr [eax + 4], edx
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 188416
}