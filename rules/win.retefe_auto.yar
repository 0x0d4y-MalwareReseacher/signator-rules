rule win_retefe_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.retefe."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.retefe"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 8bf8 ffd6 85c0 }
            // n = 4, score = 1200
            //   51                   | push                ecx
            //   8bf8                 | mov                 edi, eax
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax

        $sequence_1 = { 6a00 6a01 ff15???????? 8bf0 85f6 7410 6a09 }
            // n = 7, score = 1200
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7410                 | je                  0x12
            //   6a09                 | push                9

        $sequence_2 = { 68f5000000 50 ff15???????? b801000000 }
            // n = 4, score = 1200
            //   68f5000000           | push                0xf5
            //   50                   | push                eax
            //   ff15????????         |                     
            //   b801000000           | mov                 eax, 1

        $sequence_3 = { 750b b801000000 0fafc6 5e 5d }
            // n = 5, score = 800
            //   750b                 | jne                 0xd
            //   b801000000           | mov                 eax, 1
            //   0fafc6               | imul                eax, esi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_4 = { 6ac0 6a2c 6adb 6a52 6ada 6a2c }
            // n = 6, score = 800
            //   6ac0                 | push                -0x40
            //   6a2c                 | push                0x2c
            //   6adb                 | push                -0x25
            //   6a52                 | push                0x52
            //   6ada                 | push                -0x26
            //   6a2c                 | push                0x2c

        $sequence_5 = { 8903 8d8de4feffff c645fc01 e8???????? }
            // n = 4, score = 800
            //   8903                 | mov                 dword ptr [ebx], eax
            //   8d8de4feffff         | lea                 ecx, [ebp - 0x11c]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   e8????????           |                     

        $sequence_6 = { 6a77 6a92 6a4f 6a82 6a74 }
            // n = 5, score = 800
            //   6a77                 | push                0x77
            //   6a92                 | push                -0x6e
            //   6a4f                 | push                0x4f
            //   6a82                 | push                -0x7e
            //   6a74                 | push                0x74

        $sequence_7 = { 6a9e 6af4 6a1a 6a54 6a92 6ae0 }
            // n = 6, score = 800
            //   6a9e                 | push                -0x62
            //   6af4                 | push                -0xc
            //   6a1a                 | push                0x1a
            //   6a54                 | push                0x54
            //   6a92                 | push                -0x6e
            //   6ae0                 | push                -0x20

        $sequence_8 = { 880c10 8b4e04 40 3b4104 }
            // n = 4, score = 800
            //   880c10               | mov                 byte ptr [eax + edx], cl
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   40                   | inc                 eax
            //   3b4104               | cmp                 eax, dword ptr [ecx + 4]

        $sequence_9 = { e8???????? 6a08 e8???????? 894604 83c404 8bc6 e8???????? }
            // n = 7, score = 800
            //   e8????????           |                     
            //   6a08                 | push                8
            //   e8????????           |                     
            //   894604               | mov                 dword ptr [esi + 4], eax
            //   83c404               | add                 esp, 4
            //   8bc6                 | mov                 eax, esi
            //   e8????????           |                     

        $sequence_10 = { e8???????? 8b4e04 8901 8b4e04 33c0 83c404 394104 }
            // n = 7, score = 800
            //   e8????????           |                     
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   33c0                 | xor                 eax, eax
            //   83c404               | add                 esp, 4
            //   394104               | cmp                 dword ptr [ecx + 4], eax

        $sequence_11 = { 8d85f4feffff 8bce e8???????? 8b4614 }
            // n = 4, score = 600
            //   8d85f4feffff         | lea                 eax, [ebp - 0x10c]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8b4614               | mov                 eax, dword ptr [esi + 0x14]

        $sequence_12 = { 2bfe 0fbe06 50 e8???????? 88043e }
            // n = 5, score = 600
            //   2bfe                 | sub                 edi, esi
            //   0fbe06               | movsx               eax, byte ptr [esi]
            //   50                   | push                eax
            //   e8????????           |                     
            //   88043e               | mov                 byte ptr [esi + edi], al

        $sequence_13 = { 3bb4242c200000 740f 56 ffb42430200000 }
            // n = 4, score = 100
            //   3bb4242c200000       | cmp                 esi, dword ptr [esp + 0x202c]
            //   740f                 | je                  0x11
            //   56                   | push                esi
            //   ffb42430200000       | push                dword ptr [esp + 0x2030]

        $sequence_14 = { 8b6c2414 85ed 7409 6a2d }
            // n = 4, score = 100
            //   8b6c2414             | mov                 ebp, dword ptr [esp + 0x14]
            //   85ed                 | test                ebp, ebp
            //   7409                 | je                  0xb
            //   6a2d                 | push                0x2d

        $sequence_15 = { 0f95c2 807d1000 7433 85c0 }
            // n = 4, score = 100
            //   0f95c2               | setne               dl
            //   807d1000             | cmp                 byte ptr [ebp + 0x10], 0
            //   7433                 | je                  0x35
            //   85c0                 | test                eax, eax

        $sequence_16 = { e9???????? a0???????? c3 807c240400 }
            // n = 4, score = 100
            //   e9????????           |                     
            //   a0????????           |                     
            //   c3                   | ret                 
            //   807c240400           | cmp                 byte ptr [esp + 4], 0

        $sequence_17 = { 6a2c 3ad9 5b 7512 0fb706 }
            // n = 5, score = 100
            //   6a2c                 | push                0x2c
            //   3ad9                 | cmp                 bl, cl
            //   5b                   | pop                 ebx
            //   7512                 | jne                 0x14
            //   0fb706               | movzx               eax, word ptr [esi]

        $sequence_18 = { 885a03 5b 85f6 7410 8bc1 83e003 }
            // n = 6, score = 100
            //   885a03               | mov                 byte ptr [edx + 3], bl
            //   5b                   | pop                 ebx
            //   85f6                 | test                esi, esi
            //   7410                 | je                  0x12
            //   8bc1                 | mov                 eax, ecx
            //   83e003               | and                 eax, 3

        $sequence_19 = { 30042f 41 47 3b7c2418 72d1 }
            // n = 5, score = 100
            //   30042f               | xor                 byte ptr [edi + ebp], al
            //   41                   | inc                 ecx
            //   47                   | inc                 edi
            //   3b7c2418             | cmp                 edi, dword ptr [esp + 0x18]
            //   72d1                 | jb                  0xffffffd3

        $sequence_20 = { 3905???????? 0f858a0d0000 ff7508 e8???????? 59 a3???????? }
            // n = 6, score = 100
            //   3905????????         |                     
            //   0f858a0d0000         | jne                 0xd90
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   a3????????           |                     

        $sequence_21 = { ff15???????? 85c0 7909 0f57c0 660f13442418 ff742418 ff15???????? }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7909                 | jns                 0xb
            //   0f57c0               | xorps               xmm0, xmm0
            //   660f13442418         | movlpd              qword ptr [esp + 0x18], xmm0
            //   ff742418             | push                dword ptr [esp + 0x18]
            //   ff15????????         |                     

        $sequence_22 = { 8b08 ff5114 c745fcffffffff 8bf0 8b5508 83c9ff }
            // n = 6, score = 100
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   ff5114               | call                dword ptr [ecx + 0x14]
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8bf0                 | mov                 esi, eax
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_23 = { 8b4604 50 8b08 ff511c 33c0 5f }
            // n = 6, score = 100
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   50                   | push                eax
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   ff511c               | call                dword ptr [ecx + 0x1c]
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi

        $sequence_24 = { 33c5 8945fc ff15???????? 6a00 }
            // n = 4, score = 100
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   ff15????????         |                     
            //   6a00                 | push                0

        $sequence_25 = { f6c102 7409 b82b800280 5d }
            // n = 4, score = 100
            //   f6c102               | test                cl, 2
            //   7409                 | je                  0xb
            //   b82b800280           | mov                 eax, 0x8002802b
            //   5d                   | pop                 ebp

        $sequence_26 = { 59 8bcf 83e73f c1f906 6bd730 8b0c8da0bf4200 }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   8bcf                 | mov                 ecx, edi
            //   83e73f               | and                 edi, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bd730               | imul                edx, edi, 0x30
            //   8b0c8da0bf4200       | mov                 ecx, dword ptr [ecx*4 + 0x42bfa0]

        $sequence_27 = { ff35???????? 8d85e0efffff 50 e8???????? }
            // n = 4, score = 100
            //   ff35????????         |                     
            //   8d85e0efffff         | lea                 eax, [ebp - 0x1020]
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 843776
}