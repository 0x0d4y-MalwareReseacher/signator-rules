rule win_fatal_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.fatal_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fatal_rat"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 59 7426 57 8d45a0 53 50 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   59                   | pop                 ecx
            //   7426                 | je                  0x28
            //   57                   | push                edi
            //   8d45a0               | lea                 eax, [ebp - 0x60]
            //   53                   | push                ebx
            //   50                   | push                eax

        $sequence_1 = { 53 50 53 53 53 53 681c000900 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   50                   | push                eax
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   681c000900           | push                0x9001c

        $sequence_2 = { c645fc01 51 8bc8 ff15???????? 50 ff15???????? 8d4dd0 }
            // n = 7, score = 100
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   51                   | push                ecx
            //   8bc8                 | mov                 ecx, eax
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]

        $sequence_3 = { 6a01 50 ff15???????? 894608 8bc6 5e 5d }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ff15????????         |                     
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_4 = { 80241e00 8bc7 5e eb02 8bc7 5f 5b }
            // n = 7, score = 100
            //   80241e00             | and                 byte ptr [esi + ebx], 0
            //   8bc7                 | mov                 eax, edi
            //   5e                   | pop                 esi
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx

        $sequence_5 = { 8d4dfc 51 6a28 50 ff15???????? 85c0 0f8482000000 }
            // n = 7, score = 100
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   51                   | push                ecx
            //   6a28                 | push                0x28
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8482000000         | je                  0x88

        $sequence_6 = { 8945ec 40 4b 48 43 8d85c0feffff }
            // n = 6, score = 100
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   40                   | inc                 eax
            //   4b                   | dec                 ebx
            //   48                   | dec                 eax
            //   43                   | inc                 ebx
            //   8d85c0feffff         | lea                 eax, [ebp - 0x140]

        $sequence_7 = { 740f 807d0b00 7509 66c7856cfcffff0900 668b856cfcffff 66898594fcffff }
            // n = 6, score = 100
            //   740f                 | je                  0x11
            //   807d0b00             | cmp                 byte ptr [ebp + 0xb], 0
            //   7509                 | jne                 0xb
            //   66c7856cfcffff0900     | mov    word ptr [ebp - 0x394], 9
            //   668b856cfcffff       | mov                 ax, word ptr [ebp - 0x394]
            //   66898594fcffff       | mov                 word ptr [ebp - 0x36c], ax

        $sequence_8 = { 33c2 33d2 89442418 8ad4 8a4c241a 8b0c8db0e10110 }
            // n = 6, score = 100
            //   33c2                 | xor                 eax, edx
            //   33d2                 | xor                 edx, edx
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   8ad4                 | mov                 dl, ah
            //   8a4c241a             | mov                 cl, byte ptr [esp + 0x1a]
            //   8b0c8db0e10110       | mov                 ecx, dword ptr [ecx*4 + 0x1001e1b0]

        $sequence_9 = { 8d85a4feffff 53 50 ff15???????? 6a40 }
            // n = 5, score = 100
            //   8d85a4feffff         | lea                 eax, [ebp - 0x15c]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6a40                 | push                0x40

    condition:
        7 of them and filesize < 344064
}