rule win_lockergoga_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.lockergoga."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lockergoga"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 83c410 85c0 8d4628 7905 b8???????? }
            // n = 6, score = 400
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   8d4628               | lea                 eax, [esi + 0x28]
            //   7905                 | jns                 7
            //   b8????????           |                     

        $sequence_1 = { 8d4e38 33d2 895584 8955b8 3bc8 7413 83781410 }
            // n = 7, score = 400
            //   8d4e38               | lea                 ecx, [esi + 0x38]
            //   33d2                 | xor                 edx, edx
            //   895584               | mov                 dword ptr [ebp - 0x7c], edx
            //   8955b8               | mov                 dword ptr [ebp - 0x48], edx
            //   3bc8                 | cmp                 ecx, eax
            //   7413                 | je                  0x15
            //   83781410             | cmp                 dword ptr [eax + 0x14], 0x10

        $sequence_2 = { 33c8 8bc6 c1e803 33c8 8b45b8 03ca }
            // n = 6, score = 400
            //   33c8                 | xor                 ecx, eax
            //   8bc6                 | mov                 eax, esi
            //   c1e803               | shr                 eax, 3
            //   33c8                 | xor                 ecx, eax
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   03ca                 | add                 ecx, edx

        $sequence_3 = { 8b06 8bce ff5008 8b8d60ffffff 8d8504ffffff 50 c645fc03 }
            // n = 7, score = 400
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8bce                 | mov                 ecx, esi
            //   ff5008               | call                dword ptr [eax + 8]
            //   8b8d60ffffff         | mov                 ecx, dword ptr [ebp - 0xa0]
            //   8d8504ffffff         | lea                 eax, [ebp - 0xfc]
            //   50                   | push                eax
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3

        $sequence_4 = { c60000 660fd645d0 837dd410 8d4dc0 ff75d0 660f7ec8 c645fc07 }
            // n = 7, score = 400
            //   c60000               | mov                 byte ptr [eax], 0
            //   660fd645d0           | movq                qword ptr [ebp - 0x30], xmm0
            //   837dd410             | cmp                 dword ptr [ebp - 0x2c], 0x10
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   ff75d0               | push                dword ptr [ebp - 0x30]
            //   660f7ec8             | movd                eax, xmm1
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7

        $sequence_5 = { 897df0 e8???????? 8b4618 8d4f1c 894718 8d461c 50 }
            // n = 7, score = 400
            //   897df0               | mov                 dword ptr [ebp - 0x10], edi
            //   e8????????           |                     
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   8d4f1c               | lea                 ecx, [edi + 0x1c]
            //   894718               | mov                 dword ptr [edi + 0x18], eax
            //   8d461c               | lea                 eax, [esi + 0x1c]
            //   50                   | push                eax

        $sequence_6 = { 3bf1 7202 8bf1 ff751c 8b4d08 8b5214 6a00 }
            // n = 7, score = 400
            //   3bf1                 | cmp                 esi, ecx
            //   7202                 | jb                  4
            //   8bf1                 | mov                 esi, ecx
            //   ff751c               | push                dword ptr [ebp + 0x1c]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b5214               | mov                 edx, dword ptr [edx + 0x14]
            //   6a00                 | push                0

        $sequence_7 = { c7471c00000000 894718 8b45a4 8bfa 3bc1 c745fc04000000 52 }
            // n = 7, score = 400
            //   c7471c00000000       | mov                 dword ptr [edi + 0x1c], 0
            //   894718               | mov                 dword ptr [edi + 0x18], eax
            //   8b45a4               | mov                 eax, dword ptr [ebp - 0x5c]
            //   8bfa                 | mov                 edi, edx
            //   3bc1                 | cmp                 eax, ecx
            //   c745fc04000000       | mov                 dword ptr [ebp - 4], 4
            //   52                   | push                edx

        $sequence_8 = { 50 8d45f4 64a300000000 8bd9 895d8c 8b7d08 }
            // n = 6, score = 400
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8bd9                 | mov                 ebx, ecx
            //   895d8c               | mov                 dword ptr [ebp - 0x74], ebx
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

        $sequence_9 = { c745d000000000 e8???????? 8945c0 8d4dc0 83c404 c70000000000 c7400400000000 }
            // n = 7, score = 400
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   e8????????           |                     
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   83c404               | add                 esp, 4
            //   c70000000000         | mov                 dword ptr [eax], 0
            //   c7400400000000       | mov                 dword ptr [eax + 4], 0

    condition:
        7 of them and filesize < 2588672
}