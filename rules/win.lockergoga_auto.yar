rule win_lockergoga_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.lockergoga."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lockergoga"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4da4 e9???????? 8d4dd4 e9???????? 8d8d20ffffff e9???????? }
            // n = 6, score = 400
            //   8d4da4               | lea                 ecx, dword ptr [ebp - 0x5c]
            //   e9????????           |                     
            //   8d4dd4               | lea                 ecx, dword ptr [ebp - 0x2c]
            //   e9????????           |                     
            //   8d8d20ffffff         | lea                 ecx, dword ptr [ebp - 0xe0]
            //   e9????????           |                     

        $sequence_1 = { 8945f0 56 57 50 8d45f4 64a300000000 8b5510 }
            // n = 7, score = 400
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   56                   | push                esi
            //   57                   | push                edi
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]

        $sequence_2 = { c68520ffffff00 c78524ffffff00000000 c78528ffffff00000000 c70700000000 c7851cffffff00000000 85c9 7406 }
            // n = 7, score = 400
            //   c68520ffffff00       | mov                 byte ptr [ebp - 0xe0], 0
            //   c78524ffffff00000000     | mov    dword ptr [ebp - 0xdc], 0
            //   c78528ffffff00000000     | mov    dword ptr [ebp - 0xd8], 0
            //   c70700000000         | mov                 dword ptr [edi], 0
            //   c7851cffffff00000000     | mov    dword ptr [ebp - 0xe4], 0
            //   85c9                 | test                ecx, ecx
            //   7406                 | je                  8

        $sequence_3 = { 897e04 c6460800 e8???????? 83c408 8945b8 8d4dc0 c745d000000000 }
            // n = 7, score = 400
            //   897e04               | mov                 dword ptr [esi + 4], edi
            //   c6460800             | mov                 byte ptr [esi + 8], 0
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   8d4dc0               | lea                 ecx, dword ptr [ebp - 0x40]
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0

        $sequence_4 = { 83f804 7524 8b4584 8a4c07ff 80f901 0f8213010000 0fb6c9 }
            // n = 7, score = 400
            //   83f804               | cmp                 eax, 4
            //   7524                 | jne                 0x26
            //   8b4584               | mov                 eax, dword ptr [ebp - 0x7c]
            //   8a4c07ff             | mov                 cl, byte ptr [edi + eax - 1]
            //   80f901               | cmp                 cl, 1
            //   0f8213010000         | jb                  0x119
            //   0fb6c9               | movzx               ecx, cl

        $sequence_5 = { ff750c 8b500c 8b45b0 83c0e8 03c7 50 ffd2 }
            // n = 7, score = 400
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8b500c               | mov                 edx, dword ptr [eax + 0xc]
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]
            //   83c0e8               | add                 eax, -0x18
            //   03c7                 | add                 eax, edi
            //   50                   | push                eax
            //   ffd2                 | call                edx

        $sequence_6 = { e8???????? 6a22 8bce e8???????? 837f1000 7409 6a20 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   6a22                 | push                0x22
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   837f1000             | cmp                 dword ptr [edi + 0x10], 0
            //   7409                 | je                  0xb
            //   6a20                 | push                0x20

        $sequence_7 = { e8???????? 894594 c7459800000000 8b4598 8945c0 8365bc00 eb09 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   894594               | mov                 dword ptr [ebp - 0x6c], eax
            //   c7459800000000       | mov                 dword ptr [ebp - 0x68], 0
            //   8b4598               | mov                 eax, dword ptr [ebp - 0x68]
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax
            //   8365bc00             | and                 dword ptr [ebp - 0x44], 0
            //   eb09                 | jmp                 0xb

        $sequence_8 = { ff5020 0fb6c0 85c0 752e 8b45f4 8b400c 89857cffffff }
            // n = 7, score = 400
            //   ff5020               | call                dword ptr [eax + 0x20]
            //   0fb6c0               | movzx               eax, al
            //   85c0                 | test                eax, eax
            //   752e                 | jne                 0x30
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   89857cffffff         | mov                 dword ptr [ebp - 0x84], eax

        $sequence_9 = { c1e81f 03c2 7458 2b4db0 b893244992 f7e9 03d1 }
            // n = 7, score = 400
            //   c1e81f               | shr                 eax, 0x1f
            //   03c2                 | add                 eax, edx
            //   7458                 | je                  0x5a
            //   2b4db0               | sub                 ecx, dword ptr [ebp - 0x50]
            //   b893244992           | mov                 eax, 0x92492493
            //   f7e9                 | imul                ecx
            //   03d1                 | add                 edx, ecx

    condition:
        7 of them and filesize < 2588672
}