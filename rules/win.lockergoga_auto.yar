rule win_lockergoga_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.lockergoga."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lockergoga"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b03 8bf0 8b7638 8d4dd8 e8???????? 6a0e 8d4dd8 }
            // n = 7, score = 400
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8bf0                 | mov                 esi, eax
            //   8b7638               | mov                 esi, dword ptr [esi + 0x38]
            //   8d4dd8               | lea                 ecx, dword ptr [ebp - 0x28]
            //   e8????????           |                     
            //   6a0e                 | push                0xe
            //   8d4dd8               | lea                 ecx, dword ptr [ebp - 0x28]

        $sequence_1 = { c20400 8d442414 897c240c 50 8d442410 8bcb 50 }
            // n = 7, score = 400
            //   c20400               | ret                 4
            //   8d442414             | lea                 eax, dword ptr [esp + 0x14]
            //   897c240c             | mov                 dword ptr [esp + 0xc], edi
            //   50                   | push                eax
            //   8d442410             | lea                 eax, dword ptr [esp + 0x10]
            //   8bcb                 | mov                 ecx, ebx
            //   50                   | push                eax

        $sequence_2 = { e8???????? 8be5 5d c20800 8b5584 3bda 0f8531010000 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   8b5584               | mov                 edx, dword ptr [ebp - 0x7c]
            //   3bda                 | cmp                 ebx, edx
            //   0f8531010000         | jne                 0x137

        $sequence_3 = { ff75f8 8bce ff55f4 8b3b 8bd7 85ff 75a4 }
            // n = 7, score = 400
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   8bce                 | mov                 ecx, esi
            //   ff55f4               | call                dword ptr [ebp - 0xc]
            //   8b3b                 | mov                 edi, dword ptr [ebx]
            //   8bd7                 | mov                 edx, edi
            //   85ff                 | test                edi, edi
            //   75a4                 | jne                 0xffffffa6

        $sequence_4 = { e8???????? 8d4dd4 c745fc05000000 e8???????? 8d4db8 c645fc00 }
            // n = 6, score = 400
            //   e8????????           |                     
            //   8d4dd4               | lea                 ecx, dword ptr [ebp - 0x2c]
            //   c745fc05000000       | mov                 dword ptr [ebp - 4], 5
            //   e8????????           |                     
            //   8d4db8               | lea                 ecx, dword ptr [ebp - 0x48]
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0

        $sequence_5 = { 33d0 8bc1 c1e803 8bce 33d0 c1c10f 0355d0 }
            // n = 7, score = 400
            //   33d0                 | xor                 edx, eax
            //   8bc1                 | mov                 eax, ecx
            //   c1e803               | shr                 eax, 3
            //   8bce                 | mov                 ecx, esi
            //   33d0                 | xor                 edx, eax
            //   c1c10f               | rol                 ecx, 0xf
            //   0355d0               | add                 edx, dword ptr [ebp - 0x30]

        $sequence_6 = { e9???????? 8d8d1cffffff e9???????? 8b542408 8d420c 8b8a08ffffff 33c8 }
            // n = 7, score = 400
            //   e9????????           |                     
            //   8d8d1cffffff         | lea                 ecx, dword ptr [ebp - 0xe4]
            //   e9????????           |                     
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   8d420c               | lea                 eax, dword ptr [edx + 0xc]
            //   8b8a08ffffff         | mov                 ecx, dword ptr [edx - 0xf8]
            //   33c8                 | xor                 ecx, eax

        $sequence_7 = { 8b4dd4 8d04d0 8945e0 8b460c 03c1 a801 7513 }
            // n = 7, score = 400
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   8d04d0               | lea                 eax, dword ptr [eax + edx*8]
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   03c1                 | add                 eax, ecx
            //   a801                 | test                al, 1
            //   7513                 | jne                 0x15

        $sequence_8 = { e8???????? 85c0 75ad 8d4d84 e8???????? 8b4df4 64890d00000000 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   75ad                 | jne                 0xffffffaf
            //   8d4d84               | lea                 ecx, dword ptr [ebp - 0x7c]
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx

        $sequence_9 = { e8???????? 83c404 898534ffffff 8bf8 897dec 8b0b 56 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   898534ffffff         | mov                 dword ptr [ebp - 0xcc], eax
            //   8bf8                 | mov                 edi, eax
            //   897dec               | mov                 dword ptr [ebp - 0x14], edi
            //   8b0b                 | mov                 ecx, dword ptr [ebx]
            //   56                   | push                esi

    condition:
        7 of them and filesize < 2588672
}