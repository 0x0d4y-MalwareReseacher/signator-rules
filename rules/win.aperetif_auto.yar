rule win_aperetif_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.aperetif."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.aperetif"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d0442 0bf8 eb37 3d46080000 7324 8d78ba 33c9 }
            // n = 7, score = 100
            //   8d0442               | lea                 eax, [edx + eax*2]
            //   0bf8                 | or                  edi, eax
            //   eb37                 | jmp                 0x39
            //   3d46080000           | cmp                 eax, 0x846
            //   7324                 | jae                 0x26
            //   8d78ba               | lea                 edi, [eax - 0x46]
            //   33c9                 | xor                 ecx, ecx

        $sequence_1 = { c1e906 0fb6c9 3be9 0f8dcdfeffff 8d0ced00000000 894c2410 8d4d01 }
            // n = 7, score = 100
            //   c1e906               | shr                 ecx, 6
            //   0fb6c9               | movzx               ecx, cl
            //   3be9                 | cmp                 ebp, ecx
            //   0f8dcdfeffff         | jge                 0xfffffed3
            //   8d0ced00000000       | lea                 ecx, [ebp*8]
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx
            //   8d4d01               | lea                 ecx, [ebp + 1]

        $sequence_2 = { f20f10542434 dd5c2410 f20f104c2410 f20f59c1 f20f58c2 f20f11442434 8d742464 }
            // n = 7, score = 100
            //   f20f10542434         | movsd               xmm2, qword ptr [esp + 0x34]
            //   dd5c2410             | fstp                qword ptr [esp + 0x10]
            //   f20f104c2410         | movsd               xmm1, qword ptr [esp + 0x10]
            //   f20f59c1             | mulsd               xmm0, xmm1
            //   f20f58c2             | addsd               xmm0, xmm2
            //   f20f11442434         | movsd               qword ptr [esp + 0x34], xmm0
            //   8d742464             | lea                 esi, [esp + 0x64]

        $sequence_3 = { e9???????? 8b835c130000 89442414 83e0df 89835c130000 8b4e04 8b16 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8b835c130000         | mov                 eax, dword ptr [ebx + 0x135c]
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   83e0df               | and                 eax, 0xffffffdf
            //   89835c130000         | mov                 dword ptr [ebx + 0x135c], eax
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   8b16                 | mov                 edx, dword ptr [esi]

        $sequence_4 = { eb0f 85c0 b971000000 ba2a000000 0f45ca 894f04 6a00 }
            // n = 7, score = 100
            //   eb0f                 | jmp                 0x11
            //   85c0                 | test                eax, eax
            //   b971000000           | mov                 ecx, 0x71
            //   ba2a000000           | mov                 edx, 0x2a
            //   0f45ca               | cmovne              ecx, edx
            //   894f04               | mov                 dword ptr [edi + 4], ecx
            //   6a00                 | push                0

        $sequence_5 = { e9???????? 0f57c0 0f1145d0 33ff c6869502000000 33c0 897de0 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   0f57c0               | xorps               xmm0, xmm0
            //   0f1145d0             | movups              xmmword ptr [ebp - 0x30], xmm0
            //   33ff                 | xor                 edi, edi
            //   c6869502000000       | mov                 byte ptr [esi + 0x295], 0
            //   33c0                 | xor                 eax, eax
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi

        $sequence_6 = { eb02 33ed c744240c01000000 c744241000000000 c744241400000000 c74424189ec9ff7e 85f6 }
            // n = 7, score = 100
            //   eb02                 | jmp                 4
            //   33ed                 | xor                 ebp, ebp
            //   c744240c01000000     | mov                 dword ptr [esp + 0xc], 1
            //   c744241000000000     | mov                 dword ptr [esp + 0x10], 0
            //   c744241400000000     | mov                 dword ptr [esp + 0x14], 0
            //   c74424189ec9ff7e     | mov                 dword ptr [esp + 0x18], 0x7effc99e
            //   85f6                 | test                esi, esi

        $sequence_7 = { 8b8c24ec080000 890c24 c744243000000000 c744242c00000000 53 8b9c2404090000 55 }
            // n = 7, score = 100
            //   8b8c24ec080000       | mov                 ecx, dword ptr [esp + 0x8ec]
            //   890c24               | mov                 dword ptr [esp], ecx
            //   c744243000000000     | mov                 dword ptr [esp + 0x30], 0
            //   c744242c00000000     | mov                 dword ptr [esp + 0x2c], 0
            //   53                   | push                ebx
            //   8b9c2404090000       | mov                 ebx, dword ptr [esp + 0x904]
            //   55                   | push                ebp

        $sequence_8 = { ffd0 83c414 85c0 0f84c6010000 ff7624 ff74241c 55 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   83c414               | add                 esp, 0x14
            //   85c0                 | test                eax, eax
            //   0f84c6010000         | je                  0x1cc
            //   ff7624               | push                dword ptr [esi + 0x24]
            //   ff74241c             | push                dword ptr [esp + 0x1c]
            //   55                   | push                ebp

        $sequence_9 = { eb12 85f6 74d2 b301 ebd0 8b02 8bca }
            // n = 7, score = 100
            //   eb12                 | jmp                 0x14
            //   85f6                 | test                esi, esi
            //   74d2                 | je                  0xffffffd4
            //   b301                 | mov                 bl, 1
            //   ebd0                 | jmp                 0xffffffd2
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8bca                 | mov                 ecx, edx

    condition:
        7 of them and filesize < 10500096
}