rule win_goggles_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.goggles."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.goggles"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c404 83f804 0f8cbd000000 8bc8 c1e902 }
            // n = 5, score = 100
            //   83c404               | add                 esp, 4
            //   83f804               | cmp                 eax, 4
            //   0f8cbd000000         | jl                  0xc3
            //   8bc8                 | mov                 ecx, eax
            //   c1e902               | shr                 ecx, 2

        $sequence_1 = { eb43 83f802 753e 0fbe0437 50 68???????? }
            // n = 6, score = 100
            //   eb43                 | jmp                 0x45
            //   83f802               | cmp                 eax, 2
            //   753e                 | jne                 0x40
            //   0fbe0437             | movsx               eax, byte ptr [edi + esi]
            //   50                   | push                eax
            //   68????????           |                     

        $sequence_2 = { ff15???????? 8d8c2480020000 89442420 51 6804010000 ff15???????? 6a2f }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8d8c2480020000       | lea                 ecx, [esp + 0x280]
            //   89442420             | mov                 dword ptr [esp + 0x20], eax
            //   51                   | push                ecx
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   6a2f                 | push                0x2f

        $sequence_3 = { 83c9ff 8d7c244c f2ae f7d1 2bf9 }
            // n = 5, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   8d7c244c             | lea                 edi, [esp + 0x4c]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx

        $sequence_4 = { 83c9ff 33c0 57 8bfa f2ae 8b442418 f7d1 }
            // n = 7, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   57                   | push                edi
            //   8bfa                 | mov                 edi, edx
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   f7d1                 | not                 ecx

        $sequence_5 = { f3a5 8bcd 8d94247c010000 83e103 f3a4 bf???????? 83c9ff }
            // n = 7, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bcd                 | mov                 ecx, ebp
            //   8d94247c010000       | lea                 edx, [esp + 0x17c]
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_6 = { 40 f6d2 8854041b 3bc5 7cf1 }
            // n = 5, score = 100
            //   40                   | inc                 eax
            //   f6d2                 | not                 dl
            //   8854041b             | mov                 byte ptr [esp + eax + 0x1b], dl
            //   3bc5                 | cmp                 eax, ebp
            //   7cf1                 | jl                  0xfffffff3

        $sequence_7 = { 8be8 2bd6 56 57 03ea ffd3 57 }
            // n = 7, score = 100
            //   8be8                 | mov                 ebp, eax
            //   2bd6                 | sub                 edx, esi
            //   56                   | push                esi
            //   57                   | push                edi
            //   03ea                 | add                 ebp, edx
            //   ffd3                 | call                ebx
            //   57                   | push                edi

        $sequence_8 = { 83c414 ebc7 8b3d???????? 55 ffd7 }
            // n = 5, score = 100
            //   83c414               | add                 esp, 0x14
            //   ebc7                 | jmp                 0xffffffc9
            //   8b3d????????         |                     
            //   55                   | push                ebp
            //   ffd7                 | call                edi

        $sequence_9 = { 51 6800040000 52 53 ffd7 85c0 }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   6800040000           | push                0x400
            //   52                   | push                edx
            //   53                   | push                ebx
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax

    condition:
        7 of them and filesize < 57344
}