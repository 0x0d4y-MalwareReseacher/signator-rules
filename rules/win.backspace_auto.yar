rule win_backspace_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.backspace."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.backspace"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 889d55ffffff 889d56ffffff 889d57ffffff 889d58ffffff c68559ffffff1a c6855affffff1b c6855bffffff1c }
            // n = 7, score = 100
            //   889d55ffffff         | mov                 byte ptr [ebp - 0xab], bl
            //   889d56ffffff         | mov                 byte ptr [ebp - 0xaa], bl
            //   889d57ffffff         | mov                 byte ptr [ebp - 0xa9], bl
            //   889d58ffffff         | mov                 byte ptr [ebp - 0xa8], bl
            //   c68559ffffff1a       | mov                 byte ptr [ebp - 0xa7], 0x1a
            //   c6855affffff1b       | mov                 byte ptr [ebp - 0xa6], 0x1b
            //   c6855bffffff1c       | mov                 byte ptr [ebp - 0xa5], 0x1c

        $sequence_1 = { e8???????? 83f802 59 7212 a1???????? ff05???????? 893c850cb54000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83f802               | cmp                 eax, 2
            //   59                   | pop                 ecx
            //   7212                 | jb                  0x14
            //   a1????????           |                     
            //   ff05????????         |                     
            //   893c850cb54000       | mov                 dword ptr [eax*4 + 0x40b50c], edi

        $sequence_2 = { 50 e8???????? 8d740301 8d85f4feffff 68???????? 50 e8???????? }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d740301             | lea                 esi, [ebx + eax + 1]
            //   8d85f4feffff         | lea                 eax, [ebp - 0x10c]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_3 = { 68???????? 8bf8 ff750c 897df8 ffd6 83c410 8985ecfeffff }
            // n = 7, score = 100
            //   68????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   897df8               | mov                 dword ptr [ebp - 8], edi
            //   ffd6                 | call                esi
            //   83c410               | add                 esp, 0x10
            //   8985ecfeffff         | mov                 dword ptr [ebp - 0x114], eax

        $sequence_4 = { 0fb6450b 83c410 ff85f0feffff 8a8405f8feffff 88450f e9???????? }
            // n = 6, score = 100
            //   0fb6450b             | movzx               eax, byte ptr [ebp + 0xb]
            //   83c410               | add                 esp, 0x10
            //   ff85f0feffff         | inc                 dword ptr [ebp - 0x110]
            //   8a8405f8feffff       | mov                 al, byte ptr [ebp + eax - 0x108]
            //   88450f               | mov                 byte ptr [ebp + 0xf], al
            //   e9????????           |                     

        $sequence_5 = { 8d85f8fdffff 6a01 50 68???????? 56 e8???????? }
            // n = 6, score = 100
            //   8d85f8fdffff         | lea                 eax, [ebp - 0x208]
            //   6a01                 | push                1
            //   50                   | push                eax
            //   68????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_6 = { ffd6 8bd8 8b450c 6a00 6a01 6a02 }
            // n = 6, score = 100
            //   ffd6                 | call                esi
            //   8bd8                 | mov                 ebx, eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a02                 | push                2

        $sequence_7 = { 90 732d 90 b302 }
            // n = 4, score = 100
            //   90                   | nop                 
            //   732d                 | jae                 0x2f
            //   90                   | nop                 
            //   b302                 | mov                 bl, 2

        $sequence_8 = { 56 ff7508 ff15???????? 85c0 7474 83f8ff 7520 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7474                 | je                  0x76
            //   83f8ff               | cmp                 eax, -1
            //   7520                 | jne                 0x22

        $sequence_9 = { 49 75e8 61 c20800 60 }
            // n = 5, score = 100
            //   49                   | dec                 ecx
            //   75e8                 | jne                 0xffffffea
            //   61                   | popal               
            //   c20800               | ret                 8
            //   60                   | pushal              

    condition:
        7 of them and filesize < 131072
}