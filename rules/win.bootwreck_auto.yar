rule win_bootwreck_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.bootwreck."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bootwreck"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { bc8278f75b 302e da39 7d03 624f3c 60 }
            // n = 6, score = 100
            //   bc8278f75b           | mov                 esp, 0x5bf77882
            //   302e                 | xor                 byte ptr [esi], ch
            //   da39                 | fidivr              dword ptr [ecx]
            //   7d03                 | jge                 5
            //   624f3c               | bound               ecx, qword ptr [edi + 0x3c]
            //   60                   | pushal              

        $sequence_1 = { 44 368416 92 0105???????? 6505368d7a76 9e }
            // n = 6, score = 100
            //   44                   | inc                 esp
            //   368416               | test                byte ptr ss:[esi], dl
            //   92                   | xchg                eax, edx
            //   0105????????         |                     
            //   6505368d7a76         | add                 eax, 0x767a8d36
            //   9e                   | sahf                

        $sequence_2 = { b35f 8d1c8d38d4530d 60 8b5c2420 ff3424 8d642428 0f8ad48e0600 }
            // n = 7, score = 100
            //   b35f                 | mov                 bl, 0x5f
            //   8d1c8d38d4530d       | lea                 ebx, dword ptr [ecx*4 + 0xd53d438]
            //   60                   | pushal              
            //   8b5c2420             | mov                 ebx, dword ptr [esp + 0x20]
            //   ff3424               | push                dword ptr [esp]
            //   8d642428             | lea                 esp, dword ptr [esp + 0x28]
            //   0f8ad48e0600         | jp                  0x68eda

        $sequence_3 = { 668974240c e9???????? 9c 8944242c c60424c1 66894c2408 e8???????? }
            // n = 7, score = 100
            //   668974240c           | mov                 word ptr [esp + 0xc], si
            //   e9????????           |                     
            //   9c                   | pushfd              
            //   8944242c             | mov                 dword ptr [esp + 0x2c], eax
            //   c60424c1             | mov                 byte ptr [esp], 0xc1
            //   66894c2408           | mov                 word ptr [esp + 8], cx
            //   e8????????           |                     

        $sequence_4 = { ff4594 8b4594 3b45a0 7cae ff459c 8b45a4 39459c }
            // n = 7, score = 100
            //   ff4594               | inc                 dword ptr [ebp - 0x6c]
            //   8b4594               | mov                 eax, dword ptr [ebp - 0x6c]
            //   3b45a0               | cmp                 eax, dword ptr [ebp - 0x60]
            //   7cae                 | jl                  0xffffffb0
            //   ff459c               | inc                 dword ptr [ebp - 0x64]
            //   8b45a4               | mov                 eax, dword ptr [ebp - 0x5c]
            //   39459c               | cmp                 dword ptr [ebp - 0x64], eax

        $sequence_5 = { 9c e8???????? 1d20af4ee5 ac 8b0a c9 b07f }
            // n = 7, score = 100
            //   9c                   | pushfd              
            //   e8????????           |                     
            //   1d20af4ee5           | sbb                 eax, 0xe54eaf20
            //   ac                   | lodsb               al, byte ptr [esi]
            //   8b0a                 | mov                 ecx, dword ptr [edx]
            //   c9                   | leave               
            //   b07f                 | mov                 al, 0x7f

        $sequence_6 = { 8d64243c e8???????? 660fcf 66bf2fed 5f 660fb6e9 6687f5 }
            // n = 7, score = 100
            //   8d64243c             | lea                 esp, dword ptr [esp + 0x3c]
            //   e8????????           |                     
            //   660fcf               | bswap               di
            //   66bf2fed             | mov                 di, 0xed2f
            //   5f                   | pop                 edi
            //   660fb6e9             | movzx               bp, cl
            //   6687f5               | xchg                bp, si

        $sequence_7 = { ff7514 ff7510 ff750c ff7508 ff751c 55 e8???????? }
            // n = 7, score = 100
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff751c               | push                dword ptr [ebp + 0x1c]
            //   55                   | push                ebp
            //   e8????????           |                     

        $sequence_8 = { 80d983 660fa5e1 0fb6c8 f8 ff3424 9c }
            // n = 6, score = 100
            //   80d983               | sbb                 cl, 0x83
            //   660fa5e1             | shld                cx, sp, cl
            //   0fb6c8               | movzx               ecx, al
            //   f8                   | clc                 
            //   ff3424               | push                dword ptr [esp]
            //   9c                   | pushfd              

        $sequence_9 = { 0a6a01 e8???????? 59 33c0 5f 5e }
            // n = 6, score = 100
            //   0a6a01               | or                  ch, byte ptr [edx + 1]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

    condition:
        7 of them and filesize < 10821632
}