rule win_ismagent_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.ismagent."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ismagent"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 41 84c0 75f9 ff742448 2bca }
            // n = 5, score = 200
            //   41                   | inc                 ecx
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   ff742448             | push                dword ptr [esp + 0x48]
            //   2bca                 | sub                 ecx, edx

        $sequence_1 = { 50 0fb685d0f3ffff 50 0fb785cef3ffff }
            // n = 4, score = 200
            //   50                   | push                eax
            //   0fb685d0f3ffff       | movzx               eax, byte ptr [ebp - 0xc30]
            //   50                   | push                eax
            //   0fb785cef3ffff       | movzx               eax, word ptr [ebp - 0xc32]

        $sequence_2 = { 85c0 756d b9???????? 8bd6 2bd1 0f1f840000000000 8a01 }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   756d                 | jne                 0x6f
            //   b9????????           |                     
            //   8bd6                 | mov                 edx, esi
            //   2bd1                 | sub                 edx, ecx
            //   0f1f840000000000     | nop                 dword ptr [eax + eax]
            //   8a01                 | mov                 al, byte ptr [ecx]

        $sequence_3 = { 741b 8d4f04 51 e8???????? 83c404 8944242c c60700 }
            // n = 7, score = 200
            //   741b                 | je                  0x1d
            //   8d4f04               | lea                 ecx, dword ptr [edi + 4]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8944242c             | mov                 dword ptr [esp + 0x2c], eax
            //   c60700               | mov                 byte ptr [edi], 0

        $sequence_4 = { 84c0 75f9 8dbda8fbffff 2bd6 4f 8a4701 }
            // n = 6, score = 200
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   8dbda8fbffff         | lea                 edi, dword ptr [ebp - 0x458]
            //   2bd6                 | sub                 edx, esi
            //   4f                   | dec                 edi
            //   8a4701               | mov                 al, byte ptr [edi + 1]

        $sequence_5 = { 8b45e0 8d4e0c 6a06 8d903c334200 5f 668b02 8d5202 }
            // n = 7, score = 200
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8d4e0c               | lea                 ecx, dword ptr [esi + 0xc]
            //   6a06                 | push                6
            //   8d903c334200         | lea                 edx, dword ptr [eax + 0x42333c]
            //   5f                   | pop                 edi
            //   668b02               | mov                 ax, word ptr [edx]
            //   8d5202               | lea                 edx, dword ptr [edx + 2]

        $sequence_6 = { 8944242c c60700 c744241c01000000 68e8030000 8d4e03 51 8d8424580b0000 }
            // n = 7, score = 200
            //   8944242c             | mov                 dword ptr [esp + 0x2c], eax
            //   c60700               | mov                 byte ptr [edi], 0
            //   c744241c01000000     | mov                 dword ptr [esp + 0x1c], 1
            //   68e8030000           | push                0x3e8
            //   8d4e03               | lea                 ecx, dword ptr [esi + 3]
            //   51                   | push                ecx
            //   8d8424580b0000       | lea                 eax, dword ptr [esp + 0xb58]

        $sequence_7 = { 85f6 7420 6bc618 57 8db858434200 57 ff15???????? }
            // n = 7, score = 200
            //   85f6                 | test                esi, esi
            //   7420                 | je                  0x22
            //   6bc618               | imul                eax, esi, 0x18
            //   57                   | push                edi
            //   8db858434200         | lea                 edi, dword ptr [eax + 0x424358]
            //   57                   | push                edi
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 327680
}