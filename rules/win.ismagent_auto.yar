rule win_ismagent_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.ismagent."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ismagent"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6bc830 8b049548404200 c644082801 897de4 }
            // n = 4, score = 200
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b049548404200       | mov                 eax, dword ptr [edx*4 + 0x424048]
            //   c644082801           | mov                 byte ptr [eax + ecx + 0x28], 1
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi

        $sequence_1 = { 8b542424 c744241c02000000 8901 eb0f 8b4c2414 }
            // n = 5, score = 200
            //   8b542424             | mov                 edx, dword ptr [esp + 0x24]
            //   c744241c02000000     | mov                 dword ptr [esp + 0x1c], 2
            //   8901                 | mov                 dword ptr [ecx], eax
            //   eb0f                 | jmp                 0x11
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]

        $sequence_2 = { b8388c0000 e8???????? a1???????? 33c4 }
            // n = 4, score = 200
            //   b8388c0000           | mov                 eax, 0x8c38
            //   e8????????           |                     
            //   a1????????           |                     
            //   33c4                 | xor                 eax, esp

        $sequence_3 = { e9???????? ff15???????? e9???????? 837c242800 }
            // n = 4, score = 200
            //   e9????????           |                     
            //   ff15????????         |                     
            //   e9????????           |                     
            //   837c242800           | cmp                 dword ptr [esp + 0x28], 0

        $sequence_4 = { 3bd9 0f8230ffffff eb1f 8b4df0 8b0c8d48404200 8a443928 a840 }
            // n = 7, score = 200
            //   3bd9                 | cmp                 ebx, ecx
            //   0f8230ffffff         | jb                  0xffffff36
            //   eb1f                 | jmp                 0x21
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b0c8d48404200       | mov                 ecx, dword ptr [ecx*4 + 0x424048]
            //   8a443928             | mov                 al, byte ptr [ecx + edi + 0x28]
            //   a840                 | test                al, 0x40

        $sequence_5 = { 6a01 e8???????? 8bf0 68???????? 68???????? 89742450 e8???????? }
            // n = 7, score = 200
            //   6a01                 | push                1
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   68????????           |                     
            //   68????????           |                     
            //   89742450             | mov                 dword ptr [esp + 0x50], esi
            //   e8????????           |                     

        $sequence_6 = { 88441628 eb12 0c80 88441628 8b0cbd48404200 c644112900 }
            // n = 6, score = 200
            //   88441628             | mov                 byte ptr [esi + edx + 0x28], al
            //   eb12                 | jmp                 0x14
            //   0c80                 | or                  al, 0x80
            //   88441628             | mov                 byte ptr [esi + edx + 0x28], al
            //   8b0cbd48404200       | mov                 ecx, dword ptr [edi*4 + 0x424048]
            //   c644112900           | mov                 byte ptr [ecx + edx + 0x29], 0

        $sequence_7 = { 8bfe 83e03f c1ff06 6bd830 8b04bd48404200 f644032801 7444 }
            // n = 7, score = 200
            //   8bfe                 | mov                 edi, esi
            //   83e03f               | and                 eax, 0x3f
            //   c1ff06               | sar                 edi, 6
            //   6bd830               | imul                ebx, eax, 0x30
            //   8b04bd48404200       | mov                 eax, dword ptr [edi*4 + 0x424048]
            //   f644032801           | test                byte ptr [ebx + eax + 0x28], 1
            //   7444                 | je                  0x46

    condition:
        7 of them and filesize < 327680
}