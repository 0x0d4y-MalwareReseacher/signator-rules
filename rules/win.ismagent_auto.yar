rule win_ismagent_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.ismagent."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ismagent"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f3a4 7439 68???????? ff742460 }
            // n = 4, score = 200
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   7439                 | je                  0x3b
            //   68????????           |                     
            //   ff742460             | push                dword ptr [esp + 0x60]

        $sequence_1 = { 0fb685d7f3ffff 50 0fb685d6f3ffff 50 }
            // n = 4, score = 200
            //   0fb685d7f3ffff       | movzx               eax, byte ptr [ebp - 0xc29]
            //   50                   | push                eax
            //   0fb685d6f3ffff       | movzx               eax, byte ptr [ebp - 0xc2a]
            //   50                   | push                eax

        $sequence_2 = { 85c0 751f 33c9 660f1f840000000000 8a81a00a4200 8d4901 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   751f                 | jne                 0x21
            //   33c9                 | xor                 ecx, ecx
            //   660f1f840000000000     | nop    word ptr [eax + eax]
            //   8a81a00a4200         | mov                 al, byte ptr [ecx + 0x420aa0]
            //   8d4901               | lea                 ecx, dword ptr [ecx + 1]

        $sequence_3 = { 8dbc2408170000 2bd6 4f 8a4701 47 84c0 }
            // n = 6, score = 200
            //   8dbc2408170000       | lea                 edi, dword ptr [esp + 0x1708]
            //   2bd6                 | sub                 edx, esi
            //   4f                   | dec                 edi
            //   8a4701               | mov                 al, byte ptr [edi + 1]
            //   47                   | inc                 edi
            //   84c0                 | test                al, al

        $sequence_4 = { 8bc7 894de4 399838334200 0f84ea000000 41 }
            // n = 5, score = 200
            //   8bc7                 | mov                 eax, edi
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   399838334200         | cmp                 dword ptr [eax + 0x423338], ebx
            //   0f84ea000000         | je                  0xf0
            //   41                   | inc                 ecx

        $sequence_5 = { 8b049548404200 c644012801 8b049548404200 897c0118 8bfe }
            // n = 5, score = 200
            //   8b049548404200       | mov                 eax, dword ptr [edx*4 + 0x424048]
            //   c644012801           | mov                 byte ptr [ecx + eax + 0x28], 1
            //   8b049548404200       | mov                 eax, dword ptr [edx*4 + 0x424048]
            //   897c0118             | mov                 dword ptr [ecx + eax + 0x18], edi
            //   8bfe                 | mov                 edi, esi

        $sequence_6 = { c745e004fe4100 e9???????? c745dc02000000 c745e004fe4100 8b4508 8bcf 8b7510 }
            // n = 7, score = 200
            //   c745e004fe4100       | mov                 dword ptr [ebp - 0x20], 0x41fe04
            //   e9????????           |                     
            //   c745dc02000000       | mov                 dword ptr [ebp - 0x24], 2
            //   c745e004fe4100       | mov                 dword ptr [ebp - 0x20], 0x41fe04
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8bcf                 | mov                 ecx, edi
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]

        $sequence_7 = { 59 eb33 8b7dd0 8b45e4 8b4de8 8b048548404200 }
            // n = 6, score = 200
            //   59                   | pop                 ecx
            //   eb33                 | jmp                 0x35
            //   8b7dd0               | mov                 edi, dword ptr [ebp - 0x30]
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   8b048548404200       | mov                 eax, dword ptr [eax*4 + 0x424048]

    condition:
        7 of them and filesize < 327680
}