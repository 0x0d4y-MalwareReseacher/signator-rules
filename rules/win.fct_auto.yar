rule win_fct_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.fct."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fct"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bc2 772c 8d3400 898544fdffff 83fa08 }
            // n = 5, score = 100
            //   3bc2                 | cmp                 eax, edx
            //   772c                 | ja                  0x2e
            //   8d3400               | lea                 esi, dword ptr [eax + eax]
            //   898544fdffff         | mov                 dword ptr [ebp - 0x2bc], eax
            //   83fa08               | cmp                 edx, 8

        $sequence_1 = { e8???????? c645fc02 8b75ec 8bc6 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   8bc6                 | mov                 eax, esi

        $sequence_2 = { 33c0 8b9d30fdffff ba07000000 66898534fdffff 83cb01 }
            // n = 5, score = 100
            //   33c0                 | xor                 eax, eax
            //   8b9d30fdffff         | mov                 ebx, dword ptr [ebp - 0x2d0]
            //   ba07000000           | mov                 edx, 7
            //   66898534fdffff       | mov                 word ptr [ebp - 0x2cc], ax
            //   83cb01               | or                  ebx, 1

        $sequence_3 = { e8???????? c645fc02 8b75ec 8bc6 8b55e8 2bc2 83f801 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   8bc6                 | mov                 eax, esi
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   2bc2                 | sub                 eax, edx
            //   83f801               | cmp                 eax, 1

        $sequence_4 = { 8d8d34fdffff 8d45d8 0f438d34fdffff 837dec08 51 }
            // n = 5, score = 100
            //   8d8d34fdffff         | lea                 ecx, dword ptr [ebp - 0x2cc]
            //   8d45d8               | lea                 eax, dword ptr [ebp - 0x28]
            //   0f438d34fdffff       | cmovae              ecx, dword ptr [ebp - 0x2cc]
            //   837dec08             | cmp                 dword ptr [ebp - 0x14], 8
            //   51                   | push                ecx

        $sequence_5 = { c1f906 6bd038 8b45fc 03148d50614100 8b00 }
            // n = 5, score = 100
            //   c1f906               | sar                 ecx, 6
            //   6bd038               | imul                edx, eax, 0x38
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   03148d50614100       | add                 edx, dword ptr [ecx*4 + 0x416150]
            //   8b00                 | mov                 eax, dword ptr [eax]

        $sequence_6 = { 8975fc 8bfe a1???????? 897de0 394508 7c1f 3934bd50614100 }
            // n = 7, score = 100
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   8bfe                 | mov                 edi, esi
            //   a1????????           |                     
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi
            //   394508               | cmp                 dword ptr [ebp + 8], eax
            //   7c1f                 | jl                  0x21
            //   3934bd50614100       | cmp                 dword ptr [edi*4 + 0x416150], esi

        $sequence_7 = { 0bc8 81f900100000 7225 8d4123 3bc1 0f8692000000 50 }
            // n = 7, score = 100
            //   0bc8                 | or                  ecx, eax
            //   81f900100000         | cmp                 ecx, 0x1000
            //   7225                 | jb                  0x27
            //   8d4123               | lea                 eax, dword ptr [ecx + 0x23]
            //   3bc1                 | cmp                 eax, ecx
            //   0f8692000000         | jbe                 0x98
            //   50                   | push                eax

        $sequence_8 = { 57 8b7d08 e9???????? 8b1f 8d049d405d4100 }
            // n = 5, score = 100
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   e9????????           |                     
            //   8b1f                 | mov                 ebx, dword ptr [edi]
            //   8d049d405d4100       | lea                 eax, dword ptr [ebx*4 + 0x415d40]

        $sequence_9 = { 6bf638 8b04bd50614100 807c302800 7d3c }
            // n = 4, score = 100
            //   6bf638               | imul                esi, esi, 0x38
            //   8b04bd50614100       | mov                 eax, dword ptr [edi*4 + 0x416150]
            //   807c302800           | cmp                 byte ptr [eax + esi + 0x28], 0
            //   7d3c                 | jge                 0x3e

    condition:
        7 of them and filesize < 204800
}