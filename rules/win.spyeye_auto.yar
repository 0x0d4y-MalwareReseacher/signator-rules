rule win_spyeye_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.spyeye."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.spyeye"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bd8 83fbff 751b 57 }
            // n = 4, score = 700
            //   8bd8                 | mov                 ebx, eax
            //   83fbff               | cmp                 ebx, -1
            //   751b                 | jne                 0x1d
            //   57                   | push                edi

        $sequence_1 = { 740b 8965fc ff7508 ffd0 }
            // n = 4, score = 700
            //   740b                 | je                  0xd
            //   8965fc               | mov                 dword ptr [ebp - 4], esp
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ffd0                 | call                eax

        $sequence_2 = { 8908 83c004 c3 55 }
            // n = 4, score = 700
            //   8908                 | mov                 dword ptr [eax], ecx
            //   83c004               | add                 eax, 4
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_3 = { 57 ff7604 ffd3 6a02 57 6af8 ff7604 }
            // n = 7, score = 700
            //   57                   | push                edi
            //   ff7604               | push                dword ptr [esi + 4]
            //   ffd3                 | call                ebx
            //   6a02                 | push                2
            //   57                   | push                edi
            //   6af8                 | push                -8
            //   ff7604               | push                dword ptr [esi + 4]

        $sequence_4 = { 85f6 750f 39750c 750d 33c0 }
            // n = 5, score = 700
            //   85f6                 | test                esi, esi
            //   750f                 | jne                 0x11
            //   39750c               | cmp                 dword ptr [ebp + 0xc], esi
            //   750d                 | jne                 0xf
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 8b7018 8b4640 8906 8a4644 }
            // n = 4, score = 700
            //   8b7018               | mov                 esi, dword ptr [eax + 0x18]
            //   8b4640               | mov                 eax, dword ptr [esi + 0x40]
            //   8906                 | mov                 dword ptr [esi], eax
            //   8a4644               | mov                 al, byte ptr [esi + 0x44]

        $sequence_6 = { c7460803000000 397e08 74be 397e08 7515 }
            // n = 5, score = 700
            //   c7460803000000       | mov                 dword ptr [esi + 8], 3
            //   397e08               | cmp                 dword ptr [esi + 8], edi
            //   74be                 | je                  0xffffffc0
            //   397e08               | cmp                 dword ptr [esi + 8], edi
            //   7515                 | jne                 0x17

        $sequence_7 = { 8b4724 8a18 8819 41 40 ff4d0c }
            // n = 6, score = 700
            //   8b4724               | mov                 eax, dword ptr [edi + 0x24]
            //   8a18                 | mov                 bl, byte ptr [eax]
            //   8819                 | mov                 byte ptr [ecx], bl
            //   41                   | inc                 ecx
            //   40                   | inc                 eax
            //   ff4d0c               | dec                 dword ptr [ebp + 0xc]

        $sequence_8 = { 57 56 6a03 57 6a01 be00000040 }
            // n = 6, score = 700
            //   57                   | push                edi
            //   56                   | push                esi
            //   6a03                 | push                3
            //   57                   | push                edi
            //   6a01                 | push                1
            //   be00000040           | mov                 esi, 0x40000000

        $sequence_9 = { 83c410 8bf0 8b65fc 8d45f4 50 e8???????? }
            // n = 6, score = 700
            //   83c410               | add                 esp, 0x10
            //   8bf0                 | mov                 esi, eax
            //   8b65fc               | mov                 esp, dword ptr [ebp - 4]
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 741376
}