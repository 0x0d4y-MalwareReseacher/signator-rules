rule win_bandook_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.bandook."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bandook"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7e0d b001 5f 5e c3 6aff ff15???????? }
            // n = 7, score = 100
            //   7e0d                 | jle                 0xf
            //   b001                 | mov                 al, 1
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   6aff                 | push                -1
            //   ff15????????         |                     

        $sequence_1 = { 03f8 0f101f 03f8 807c241600 0f295c2460 0f29542450 0f294c2440 }
            // n = 7, score = 100
            //   03f8                 | add                 edi, eax
            //   0f101f               | movups              xmm3, xmmword ptr [edi]
            //   03f8                 | add                 edi, eax
            //   807c241600           | cmp                 byte ptr [esp + 0x16], 0
            //   0f295c2460           | movaps              xmmword ptr [esp + 0x60], xmm3
            //   0f29542450           | movaps              xmmword ptr [esp + 0x50], xmm2
            //   0f294c2440           | movaps              xmmword ptr [esp + 0x40], xmm1

        $sequence_2 = { ab b865637572 ab b869747949 ab b86e666f00 ab }
            // n = 7, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   b865637572           | mov                 eax, 0x72756365
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   b869747949           | mov                 eax, 0x49797469
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   b86e666f00           | mov                 eax, 0x6f666e
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_3 = { 1bc0 83c801 85c0 b930000000 b8???????? 0f44f1 }
            // n = 6, score = 100
            //   1bc0                 | sbb                 eax, eax
            //   83c801               | or                  eax, 1
            //   85c0                 | test                eax, eax
            //   b930000000           | mov                 ecx, 0x30
            //   b8????????           |                     
            //   0f44f1               | cmove               esi, ecx

        $sequence_4 = { 8975dc c645fc04 8b4318 85c0 7503 8d431c 50 }
            // n = 7, score = 100
            //   8975dc               | mov                 dword ptr [ebp - 0x24], esi
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8b4318               | mov                 eax, dword ptr [ebx + 0x18]
            //   85c0                 | test                eax, eax
            //   7503                 | jne                 5
            //   8d431c               | lea                 eax, [ebx + 0x1c]
            //   50                   | push                eax

        $sequence_5 = { 55 8b6c2414 8bd9 85ed 0f84b3000000 8b4b60 56 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8b6c2414             | mov                 ebp, dword ptr [esp + 0x14]
            //   8bd9                 | mov                 ebx, ecx
            //   85ed                 | test                ebp, ebp
            //   0f84b3000000         | je                  0xb9
            //   8b4b60               | mov                 ecx, dword ptr [ebx + 0x60]
            //   56                   | push                esi

        $sequence_6 = { 668906 8b048d08d91e13 6a0a 8854382a 8b048d08d91e13 8874382b 8b048d08d91e13 }
            // n = 7, score = 100
            //   668906               | mov                 word ptr [esi], ax
            //   8b048d08d91e13       | mov                 eax, dword ptr [ecx*4 + 0x131ed908]
            //   6a0a                 | push                0xa
            //   8854382a             | mov                 byte ptr [eax + edi + 0x2a], dl
            //   8b048d08d91e13       | mov                 eax, dword ptr [ecx*4 + 0x131ed908]
            //   8874382b             | mov                 byte ptr [eax + edi + 0x2b], dh
            //   8b048d08d91e13       | mov                 eax, dword ptr [ecx*4 + 0x131ed908]

        $sequence_7 = { 50 8dbd1cfeffff b847657455 ab b87365724e ab b8616d6541 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8dbd1cfeffff         | lea                 edi, [ebp - 0x1e4]
            //   b847657455           | mov                 eax, 0x55746547
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   b87365724e           | mov                 eax, 0x4e726573
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   b8616d6541           | mov                 eax, 0x41656d61

        $sequence_8 = { c6858cfbffff00 8bce ffb58cfbffff 57 e8???????? 83bd08ffffff10 8d8df4feffff }
            // n = 7, score = 100
            //   c6858cfbffff00       | mov                 byte ptr [ebp - 0x474], 0
            //   8bce                 | mov                 ecx, esi
            //   ffb58cfbffff         | push                dword ptr [ebp - 0x474]
            //   57                   | push                edi
            //   e8????????           |                     
            //   83bd08ffffff10       | cmp                 dword ptr [ebp - 0xf8], 0x10
            //   8d8df4feffff         | lea                 ecx, [ebp - 0x10c]

        $sequence_9 = { 84c0 75f3 8b8da0beffff 8d95f8efffff 2bd1 0f1f440000 8a01 }
            // n = 7, score = 100
            //   84c0                 | test                al, al
            //   75f3                 | jne                 0xfffffff5
            //   8b8da0beffff         | mov                 ecx, dword ptr [ebp - 0x4160]
            //   8d95f8efffff         | lea                 edx, [ebp - 0x1008]
            //   2bd1                 | sub                 edx, ecx
            //   0f1f440000           | nop                 dword ptr [eax + eax]
            //   8a01                 | mov                 al, byte ptr [ecx]

    condition:
        7 of them and filesize < 23088128
}