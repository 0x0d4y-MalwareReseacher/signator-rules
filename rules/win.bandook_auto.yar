rule win_bandook_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.bandook."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bandook"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc8 c645fc08 e8???????? 0fb64808 51 8d4de8 51 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   c645fc08             | mov                 byte ptr [ebp - 4], 8
            //   e8????????           |                     
            //   0fb64808             | movzx               ecx, byte ptr [eax + 8]
            //   51                   | push                ecx
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   51                   | push                ecx

        $sequence_1 = { 57 6a00 6a00 6a00 6a00 68???????? 8bda }
            // n = 7, score = 100
            //   57                   | push                edi
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   68????????           |                     
            //   8bda                 | mov                 ebx, edx

        $sequence_2 = { b900040000 c745b400000000 3bc1 c745b80f000000 c645a400 0f42c8 837dd010 }
            // n = 7, score = 100
            //   b900040000           | mov                 ecx, 0x400
            //   c745b400000000       | mov                 dword ptr [ebp - 0x4c], 0
            //   3bc1                 | cmp                 eax, ecx
            //   c745b80f000000       | mov                 dword ptr [ebp - 0x48], 0xf
            //   c645a400             | mov                 byte ptr [ebp - 0x5c], 0
            //   0f42c8               | cmovb               ecx, eax
            //   837dd010             | cmp                 dword ptr [ebp - 0x30], 0x10

        $sequence_3 = { c1e908 0fb604c591bb1e13 8844243a 0fb6c1 c1e908 0fb604c591bb1e13 8844243d }
            // n = 7, score = 100
            //   c1e908               | shr                 ecx, 8
            //   0fb604c591bb1e13     | movzx               eax, byte ptr [eax*8 + 0x131ebb91]
            //   8844243a             | mov                 byte ptr [esp + 0x3a], al
            //   0fb6c1               | movzx               eax, cl
            //   c1e908               | shr                 ecx, 8
            //   0fb604c591bb1e13     | movzx               eax, byte ptr [eax*8 + 0x131ebb91]
            //   8844243d             | mov                 byte ptr [esp + 0x3d], al

        $sequence_4 = { 0f1f00 68???????? 8d442438 50 ffd7 85c0 742a }
            // n = 7, score = 100
            //   0f1f00               | nop                 dword ptr [eax]
            //   68????????           |                     
            //   8d442438             | lea                 eax, [esp + 0x38]
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   742a                 | je                  0x2c

        $sequence_5 = { 751b 68???????? ff15???????? 85c0 7505 83c8ff eb07 }
            // n = 7, score = 100
            //   751b                 | jne                 0x1d
            //   68????????           |                     
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   83c8ff               | or                  eax, 0xffffffff
            //   eb07                 | jmp                 9

        $sequence_6 = { 8bec 81ec180c0000 a1???????? 33c5 8945f8 8b4508 53 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   81ec180c0000         | sub                 esp, 0xc18
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   53                   | push                ebx

        $sequence_7 = { 56 6a01 50 ff15???????? 8bf0 85f6 741f }
            // n = 7, score = 100
            //   56                   | push                esi
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   741f                 | je                  0x21

        $sequence_8 = { 0f45cb 8d95f8fdffff 2bd1 0f1f00 8a01 8d4901 88440aff }
            // n = 7, score = 100
            //   0f45cb               | cmovne              ecx, ebx
            //   8d95f8fdffff         | lea                 edx, [ebp - 0x208]
            //   2bd1                 | sub                 edx, ecx
            //   0f1f00               | nop                 dword ptr [eax]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   8d4901               | lea                 ecx, [ecx + 1]
            //   88440aff             | mov                 byte ptr [edx + ecx - 1], al

        $sequence_9 = { ff5004 56 8d4dd8 c645fc02 e8???????? c645fc03 8b0d???????? }
            // n = 7, score = 100
            //   ff5004               | call                dword ptr [eax + 4]
            //   56                   | push                esi
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   e8????????           |                     
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   8b0d????????         |                     

    condition:
        7 of them and filesize < 23088128
}