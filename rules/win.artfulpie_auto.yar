rule win_artfulpie_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.artfulpie."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.artfulpie"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b0a 3b4a04 7527 837a1000 }
            // n = 4, score = 100
            //   8b0a                 | mov                 ecx, dword ptr [edx]
            //   3b4a04               | cmp                 ecx, dword ptr [edx + 4]
            //   7527                 | jne                 0x29
            //   837a1000             | cmp                 dword ptr [edx + 0x10], 0

        $sequence_1 = { c1f806 6bc930 8b0485984e4100 0fb6440828 }
            // n = 4, score = 100
            //   c1f806               | sar                 eax, 6
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8b0485984e4100       | mov                 eax, dword ptr [eax*4 + 0x414e98]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]

        $sequence_2 = { 894330 8b5754 e8???????? 85c0 }
            // n = 4, score = 100
            //   894330               | mov                 dword ptr [ebx + 0x30], eax
            //   8b5754               | mov                 edx, dword ptr [edi + 0x54]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_3 = { 8b4ddc 8b45e8 5b 5f 8901 }
            // n = 5, score = 100
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_4 = { 83c364 8b7630 8b43e4 4e f7d6 8945ec }
            // n = 6, score = 100
            //   83c364               | add                 ebx, 0x64
            //   8b7630               | mov                 esi, dword ptr [esi + 0x30]
            //   8b43e4               | mov                 eax, dword ptr [ebx - 0x1c]
            //   4e                   | dec                 esi
            //   f7d6                 | not                 esi
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax

        $sequence_5 = { 59 e9???????? c745dc03000000 eb7c c745e0b0204100 }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   e9????????           |                     
            //   c745dc03000000       | mov                 dword ptr [ebp - 0x24], 3
            //   eb7c                 | jmp                 0x7e
            //   c745e0b0204100       | mov                 dword ptr [ebp - 0x20], 0x4120b0

        $sequence_6 = { 8d851cffffff 68d4000000 0f1185f0feffff 6a00 }
            // n = 4, score = 100
            //   8d851cffffff         | lea                 eax, dword ptr [ebp - 0xe4]
            //   68d4000000           | push                0xd4
            //   0f1185f0feffff       | movups              xmmword ptr [ebp - 0x110], xmm0
            //   6a00                 | push                0

        $sequence_7 = { 399800424100 0f84ea000000 41 83c030 894de4 3df0000000 72e6 }
            // n = 7, score = 100
            //   399800424100         | cmp                 dword ptr [eax + 0x414200], ebx
            //   0f84ea000000         | je                  0xf0
            //   41                   | inc                 ecx
            //   83c030               | add                 eax, 0x30
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   3df0000000           | cmp                 eax, 0xf0
            //   72e6                 | jb                  0xffffffe8

        $sequence_8 = { 33c0 5b 8be5 5d c21800 8b4d0c 897304 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c21800               | ret                 0x18
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   897304               | mov                 dword ptr [ebx + 4], esi

        $sequence_9 = { 40 c745eca8454000 894df8 8945fc 64a100000000 8945e8 8d45e8 }
            // n = 7, score = 100
            //   40                   | inc                 eax
            //   c745eca8454000       | mov                 dword ptr [ebp - 0x14], 0x4045a8
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   8d45e8               | lea                 eax, dword ptr [ebp - 0x18]

    condition:
        7 of them and filesize < 204800
}