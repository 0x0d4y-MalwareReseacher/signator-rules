rule win_tiop_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.tiop."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tiop"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 49 8bf7 2bf1 83c9ff f2ae 8b3d???????? f7d1 }
            // n = 7, score = 100
            //   49                   | dec                 ecx
            //   8bf7                 | mov                 esi, edi
            //   2bf1                 | sub                 esi, ecx
            //   83c9ff               | or                  ecx, 0xffffffff
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   8b3d????????         |                     
            //   f7d1                 | not                 ecx

        $sequence_1 = { 68???????? 51 ff15???????? 8be8 83c408 3bee 0f84e6000000 }
            // n = 7, score = 100
            //   68????????           |                     
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8be8                 | mov                 ebp, eax
            //   83c408               | add                 esp, 8
            //   3bee                 | cmp                 ebp, esi
            //   0f84e6000000         | je                  0xec

        $sequence_2 = { 7575 5f 5e 5d b801000000 5b c20400 }
            // n = 7, score = 100
            //   7575                 | jne                 0x77
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   b801000000           | mov                 eax, 1
            //   5b                   | pop                 ebx
            //   c20400               | ret                 4

        $sequence_3 = { 7541 57 bf???????? 83c9ff 33c0 f2ae f7d1 }
            // n = 7, score = 100
            //   7541                 | jne                 0x43
            //   57                   | push                edi
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_4 = { 50 c6442434ff c6442435d7 c644243683 c6442437c4 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   c6442434ff           | mov                 byte ptr [esp + 0x34], 0xff
            //   c6442435d7           | mov                 byte ptr [esp + 0x35], 0xd7
            //   c644243683           | mov                 byte ptr [esp + 0x36], 0x83
            //   c6442437c4           | mov                 byte ptr [esp + 0x37], 0xc4

        $sequence_5 = { 8b4604 8d964a060000 054a060000 52 50 }
            // n = 5, score = 100
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   8d964a060000         | lea                 edx, [esi + 0x64a]
            //   054a060000           | add                 eax, 0x64a
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_6 = { 56 8b35???????? 68???????? 68???????? ffd6 83c408 3d???????? }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8b35????????         |                     
            //   68????????           |                     
            //   68????????           |                     
            //   ffd6                 | call                esi
            //   83c408               | add                 esp, 8
            //   3d????????           |                     

        $sequence_7 = { f3a5 8bca 53 83e103 f3a4 8b442430 8d4c243c }
            // n = 7, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bca                 | mov                 ecx, edx
            //   53                   | push                ebx
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b442430             | mov                 eax, dword ptr [esp + 0x30]
            //   8d4c243c             | lea                 ecx, [esp + 0x3c]

        $sequence_8 = { 6800100000 52 50 ff15???????? 85c0 0f8406010000 8d8c24ac000000 }
            // n = 7, score = 100
            //   6800100000           | push                0x1000
            //   52                   | push                edx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8406010000         | je                  0x10c
            //   8d8c24ac000000       | lea                 ecx, [esp + 0xac]

        $sequence_9 = { ff15???????? 83c468 c3 81ec0c040000 53 8b9c2418040000 55 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   83c468               | add                 esp, 0x68
            //   c3                   | ret                 
            //   81ec0c040000         | sub                 esp, 0x40c
            //   53                   | push                ebx
            //   8b9c2418040000       | mov                 ebx, dword ptr [esp + 0x418]
            //   55                   | push                ebp

    condition:
        7 of them and filesize < 712704
}