rule win_xbot_pos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.xbot_pos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xbot_pos"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 837df831 0f87ae010000 8b55f8 0fb682e08f4c00 ff2485b88f4c00 8b4dfc 8b5110 }
            // n = 7, score = 100
            //   837df831             | cmp                 dword ptr [ebp - 8], 0x31
            //   0f87ae010000         | ja                  0x1b4
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   0fb682e08f4c00       | movzx               eax, byte ptr [edx + 0x4c8fe0]
            //   ff2485b88f4c00       | jmp                 dword ptr [eax*4 + 0x4c8fb8]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b5110               | mov                 edx, dword ptr [ecx + 0x10]

        $sequence_1 = { 8b4df8 e8???????? 8b08 51 8b4df8 }
            // n = 5, score = 100
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   51                   | push                ecx
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_2 = { 8d1530904800 e8???????? 58 5a 5f 5e 5b }
            // n = 7, score = 100
            //   8d1530904800         | lea                 edx, [0x489030]
            //   e8????????           |                     
            //   58                   | pop                 eax
            //   5a                   | pop                 edx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_3 = { c1fa06 8b45f8 83e03f 6bc830 8b1495e0465600 0fb6440a28 2580000000 }
            // n = 7, score = 100
            //   c1fa06               | sar                 edx, 6
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83e03f               | and                 eax, 0x3f
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b1495e0465600       | mov                 edx, dword ptr [edx*4 + 0x5646e0]
            //   0fb6440a28           | movzx               eax, byte ptr [edx + ecx + 0x28]
            //   2580000000           | and                 eax, 0x80

        $sequence_4 = { d34c00b1 d34c00d8 d34c00fd d34c0000 0b01 0b00 0000 }
            // n = 7, score = 100
            //   d34c00b1             | ror                 dword ptr [eax + eax - 0x4f], cl
            //   d34c00d8             | ror                 dword ptr [eax + eax - 0x28], cl
            //   d34c00fd             | ror                 dword ptr [eax + eax - 3], cl
            //   d34c0000             | ror                 dword ptr [eax + eax], cl
            //   0b01                 | or                  eax, dword ptr [ecx]
            //   0b00                 | or                  eax, dword ptr [eax]
            //   0000                 | add                 byte ptr [eax], al

        $sequence_5 = { 8d1578cc4600 e8???????? 58 5a 5f 5e 5b }
            // n = 7, score = 100
            //   8d1578cc4600         | lea                 edx, [0x46cc78]
            //   e8????????           |                     
            //   58                   | pop                 eax
            //   5a                   | pop                 edx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_6 = { 7501 cc 6a00 a1???????? 83c002 50 68???????? }
            // n = 7, score = 100
            //   7501                 | jne                 3
            //   cc                   | int3                
            //   6a00                 | push                0
            //   a1????????           |                     
            //   83c002               | add                 eax, 2
            //   50                   | push                eax
            //   68????????           |                     

        $sequence_7 = { 740c c785d8deffffe8905400 eb0a c785d8deffff88905400 8b85a8deffff 50 8b8dd4deffff }
            // n = 7, score = 100
            //   740c                 | je                  0xe
            //   c785d8deffffe8905400     | mov    dword ptr [ebp - 0x2128], 0x5490e8
            //   eb0a                 | jmp                 0xc
            //   c785d8deffff88905400     | mov    dword ptr [ebp - 0x2128], 0x549088
            //   8b85a8deffff         | mov                 eax, dword ptr [ebp - 0x2158]
            //   50                   | push                eax
            //   8b8dd4deffff         | mov                 ecx, dword ptr [ebp - 0x212c]

        $sequence_8 = { 53 56 57 8dbd08fcffff b9fb000000 b8cccccccc f3ab }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8dbd08fcffff         | lea                 edi, [ebp - 0x3f8]
            //   b9fb000000           | mov                 ecx, 0xfb
            //   b8cccccccc           | mov                 eax, 0xcccccccc
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_9 = { 8b4d08 83e13f 6bd130 8b0485e0465600 0fb64c1028 83e140 753a }
            // n = 7, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   83e13f               | and                 ecx, 0x3f
            //   6bd130               | imul                edx, ecx, 0x30
            //   8b0485e0465600       | mov                 eax, dword ptr [eax*4 + 0x5646e0]
            //   0fb64c1028           | movzx               ecx, byte ptr [eax + edx + 0x28]
            //   83e140               | and                 ecx, 0x40
            //   753a                 | jne                 0x3c

    condition:
        7 of them and filesize < 3031040
}