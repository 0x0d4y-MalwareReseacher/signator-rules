rule win_bit_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.bit_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bit_rat"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e9???????? 85c0 7422 660f6ec0 0f28ce f30fe6c0 f20f5ec8 }
            // n = 7, score = 200
            //   e9????????           |                     
            //   85c0                 | test                eax, eax
            //   7422                 | je                  0x24
            //   660f6ec0             | movd                xmm0, eax
            //   0f28ce               | movaps              xmm1, xmm6
            //   f30fe6c0             | cvtdq2pd            xmm0, xmm0
            //   f20f5ec8             | divsd               xmm1, xmm0

        $sequence_1 = { 8bf8 83c40c 85ff 7528 50 50 6a41 }
            // n = 7, score = 200
            //   8bf8                 | mov                 edi, eax
            //   83c40c               | add                 esp, 0xc
            //   85ff                 | test                edi, edi
            //   7528                 | jne                 0x2a
            //   50                   | push                eax
            //   50                   | push                eax
            //   6a41                 | push                0x41

        $sequence_2 = { c20400 55 8bec 83ec48 51 8d4db8 e8???????? }
            // n = 7, score = 200
            //   c20400               | ret                 4
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec48               | sub                 esp, 0x48
            //   51                   | push                ecx
            //   8d4db8               | lea                 ecx, [ebp - 0x48]
            //   e8????????           |                     

        $sequence_3 = { 8b4c2418 83fb01 8b5c2420 752d 8bd1 8bc5 f7d8 }
            // n = 7, score = 200
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   83fb01               | cmp                 ebx, 1
            //   8b5c2420             | mov                 ebx, dword ptr [esp + 0x20]
            //   752d                 | jne                 0x2f
            //   8bd1                 | mov                 edx, ecx
            //   8bc5                 | mov                 eax, ebp
            //   f7d8                 | neg                 eax

        $sequence_4 = { f20f59cc f20f59c3 f20f59ec f20f59d3 f20f5cc8 f20f58ea f20f58f1 }
            // n = 7, score = 200
            //   f20f59cc             | mulsd               xmm1, xmm4
            //   f20f59c3             | mulsd               xmm0, xmm3
            //   f20f59ec             | mulsd               xmm5, xmm4
            //   f20f59d3             | mulsd               xmm2, xmm3
            //   f20f5cc8             | subsd               xmm1, xmm0
            //   f20f58ea             | addsd               xmm5, xmm2
            //   f20f58f1             | addsd               xmm6, xmm1

        $sequence_5 = { 895104 85ff 746a 83ff02 0f82a8000000 0fb633 83ef02 }
            // n = 7, score = 200
            //   895104               | mov                 dword ptr [ecx + 4], edx
            //   85ff                 | test                edi, edi
            //   746a                 | je                  0x6c
            //   83ff02               | cmp                 edi, 2
            //   0f82a8000000         | jb                  0xae
            //   0fb633               | movzx               esi, byte ptr [ebx]
            //   83ef02               | sub                 edi, 2

        $sequence_6 = { ff761c e8???????? 59 895e1c c645fc02 395e14 7409 }
            // n = 7, score = 200
            //   ff761c               | push                dword ptr [esi + 0x1c]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   895e1c               | mov                 dword ptr [esi + 0x1c], ebx
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   395e14               | cmp                 dword ptr [esi + 0x14], ebx
            //   7409                 | je                  0xb

        $sequence_7 = { e8???????? 53 8b5c2418 83fb08 761f 6a00 6a00 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   53                   | push                ebx
            //   8b5c2418             | mov                 ebx, dword ptr [esp + 0x18]
            //   83fb08               | cmp                 ebx, 8
            //   761f                 | jbe                 0x21
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_8 = { f7d9 8bf0 8b44241c 03f7 83d200 8d7901 03ea }
            // n = 7, score = 200
            //   f7d9                 | neg                 ecx
            //   8bf0                 | mov                 esi, eax
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   03f7                 | add                 esi, edi
            //   83d200               | adc                 edx, 0
            //   8d7901               | lea                 edi, [ecx + 1]
            //   03ea                 | add                 ebp, edx

        $sequence_9 = { 8bb060020000 894c2410 51 56 53 52 6a00 }
            // n = 7, score = 200
            //   8bb060020000         | mov                 esi, dword ptr [eax + 0x260]
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx
            //   51                   | push                ecx
            //   56                   | push                esi
            //   53                   | push                ebx
            //   52                   | push                edx
            //   6a00                 | push                0

    condition:
        7 of them and filesize < 19405824
}