rule win_amtsol_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.amtsol."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.amtsol"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645670a 885d68 e8???????? 59 a1???????? 3bc3 7407 }
            // n = 7, score = 100
            //   c645670a             | mov                 byte ptr [ebp + 0x67], 0xa
            //   885d68               | mov                 byte ptr [ebp + 0x68], bl
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   a1????????           |                     
            //   3bc3                 | cmp                 eax, ebx
            //   7407                 | je                  9

        $sequence_1 = { 33c0 59 66894524 8d7d26 f3ab 33db 68ff010000 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   59                   | pop                 ecx
            //   66894524             | mov                 word ptr [ebp + 0x24], ax
            //   8d7d26               | lea                 edi, [ebp + 0x26]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   33db                 | xor                 ebx, ebx
            //   68ff010000           | push                0x1ff

        $sequence_2 = { c645e464 c645e53d c645e630 c645e70d c645e80a c645e944 c645ea65 }
            // n = 7, score = 100
            //   c645e464             | mov                 byte ptr [ebp - 0x1c], 0x64
            //   c645e53d             | mov                 byte ptr [ebp - 0x1b], 0x3d
            //   c645e630             | mov                 byte ptr [ebp - 0x1a], 0x30
            //   c645e70d             | mov                 byte ptr [ebp - 0x19], 0xd
            //   c645e80a             | mov                 byte ptr [ebp - 0x18], 0xa
            //   c645e944             | mov                 byte ptr [ebp - 0x17], 0x44
            //   c645ea65             | mov                 byte ptr [ebp - 0x16], 0x65

        $sequence_3 = { 53 ff75d4 8d4dac e8???????? 895dfc 53 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   ff75d4               | push                dword ptr [ebp - 0x2c]
            //   8d4dac               | lea                 ecx, [ebp - 0x54]
            //   e8????????           |                     
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   53                   | push                ebx

        $sequence_4 = { 50 e8???????? 83c448 8d85acf7ffff 50 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c448               | add                 esp, 0x48
            //   8d85acf7ffff         | lea                 eax, [ebp - 0x854]
            //   50                   | push                eax

        $sequence_5 = { 5f f7ff 8bd8 85d2 7401 43 }
            // n = 6, score = 100
            //   5f                   | pop                 edi
            //   f7ff                 | idiv                edi
            //   8bd8                 | mov                 ebx, eax
            //   85d2                 | test                edx, edx
            //   7401                 | je                  3
            //   43                   | inc                 ebx

        $sequence_6 = { ff7310 8d4df0 e8???????? 53 ff730c 8d4de8 e8???????? }
            // n = 7, score = 100
            //   ff7310               | push                dword ptr [ebx + 0x10]
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   e8????????           |                     
            //   53                   | push                ebx
            //   ff730c               | push                dword ptr [ebx + 0xc]
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   e8????????           |                     

        $sequence_7 = { 8bf1 8b460c 8b4e10 2bc8 57 f7c1f0ffffff 7504 }
            // n = 7, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   8b4e10               | mov                 ecx, dword ptr [esi + 0x10]
            //   2bc8                 | sub                 ecx, eax
            //   57                   | push                edi
            //   f7c1f0ffffff         | test                ecx, 0xfffffff0
            //   7504                 | jne                 6

        $sequence_8 = { 8945f4 8bcb 334df8 6a16 23c8 334df8 8b45fc }
            // n = 7, score = 100
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8bcb                 | mov                 ecx, ebx
            //   334df8               | xor                 ecx, dword ptr [ebp - 8]
            //   6a16                 | push                0x16
            //   23c8                 | and                 ecx, eax
            //   334df8               | xor                 ecx, dword ptr [ebp - 8]
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_9 = { 3345f8 03461c 8d9c03d9026f67 53 e8???????? 8b5df0 8b4dfc }
            // n = 7, score = 100
            //   3345f8               | xor                 eax, dword ptr [ebp - 8]
            //   03461c               | add                 eax, dword ptr [esi + 0x1c]
            //   8d9c03d9026f67       | lea                 ebx, [ebx + eax + 0x676f02d9]
            //   53                   | push                ebx
            //   e8????????           |                     
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

    condition:
        7 of them and filesize < 335872
}