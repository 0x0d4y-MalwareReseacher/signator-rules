rule win_amtsol_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.amtsol."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.amtsol"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 59 e8???????? c3 6854080000 b8???????? e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   e8????????           |                     
            //   c3                   | ret                 
            //   6854080000           | push                0x854
            //   b8????????           |                     
            //   e8????????           |                     

        $sequence_1 = { 33c0 668985e4f7ffff 8dbde6f7ffff f3ab 6a1c 66ab 8b7e0c }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   668985e4f7ffff       | mov                 word ptr [ebp - 0x81c], ax
            //   8dbde6f7ffff         | lea                 edi, [ebp - 0x81a]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   6a1c                 | push                0x1c
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   8b7e0c               | mov                 edi, dword ptr [esi + 0xc]

        $sequence_2 = { ff75f0 e8???????? 59 395df4 7409 ff75f4 e8???????? }
            // n = 7, score = 100
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   395df4               | cmp                 dword ptr [ebp - 0xc], ebx
            //   7409                 | je                  0xb
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   e8????????           |                     

        $sequence_3 = { 3345f8 2345fc 3345f8 03461c 8d9c03d9026f67 53 e8???????? }
            // n = 7, score = 100
            //   3345f8               | xor                 eax, dword ptr [ebp - 8]
            //   2345fc               | and                 eax, dword ptr [ebp - 4]
            //   3345f8               | xor                 eax, dword ptr [ebp - 8]
            //   03461c               | add                 eax, dword ptr [esi + 0x1c]
            //   8d9c03d9026f67       | lea                 ebx, [ebx + eax + 0x676f02d9]
            //   53                   | push                ebx
            //   e8????????           |                     

        $sequence_4 = { e8???????? 8d45fc 50 e8???????? 8b06 c60000 6a02 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   c60000               | mov                 byte ptr [eax], 0
            //   6a02                 | push                2

        $sequence_5 = { 834dd4ff 8945cc 6a08 33c0 59 66894548 8d7d4a }
            // n = 7, score = 100
            //   834dd4ff             | or                  dword ptr [ebp - 0x2c], 0xffffffff
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   6a08                 | push                8
            //   33c0                 | xor                 eax, eax
            //   59                   | pop                 ecx
            //   66894548             | mov                 word ptr [ebp + 0x48], ax
            //   8d7d4a               | lea                 edi, [ebp + 0x4a]

        $sequence_6 = { 8985a8030000 8b85b4030000 894d8c 8b8dc4030000 894d80 8b8dcc030000 53 }
            // n = 7, score = 100
            //   8985a8030000         | mov                 dword ptr [ebp + 0x3a8], eax
            //   8b85b4030000         | mov                 eax, dword ptr [ebp + 0x3b4]
            //   894d8c               | mov                 dword ptr [ebp - 0x74], ecx
            //   8b8dc4030000         | mov                 ecx, dword ptr [ebp + 0x3c4]
            //   894d80               | mov                 dword ptr [ebp - 0x80], ecx
            //   8b8dcc030000         | mov                 ecx, dword ptr [ebp + 0x3cc]
            //   53                   | push                ebx

        $sequence_7 = { 8365f800 8365fc00 8b06 8b4004 8d55f8 52 }
            // n = 6, score = 100
            //   8365f800             | and                 dword ptr [ebp - 8], 0
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   8d55f8               | lea                 edx, [ebp - 8]
            //   52                   | push                edx

        $sequence_8 = { 7616 ff7510 ff7508 e8???????? 59 59 ff4d0c }
            // n = 7, score = 100
            //   7616                 | jbe                 0x18
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   ff4d0c               | dec                 dword ptr [ebp + 0xc]

        $sequence_9 = { c645d676 c645d776 c645d868 c645d976 c645da07 }
            // n = 5, score = 100
            //   c645d676             | mov                 byte ptr [ebp - 0x2a], 0x76
            //   c645d776             | mov                 byte ptr [ebp - 0x29], 0x76
            //   c645d868             | mov                 byte ptr [ebp - 0x28], 0x68
            //   c645d976             | mov                 byte ptr [ebp - 0x27], 0x76
            //   c645da07             | mov                 byte ptr [ebp - 0x26], 7

    condition:
        7 of them and filesize < 335872
}