rule win_morto_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.morto."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.morto"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb03 8b75f4 b980000000 33c0 8dbdf0fdffff 837d1000 }
            // n = 6, score = 200
            //   eb03                 | jmp                 5
            //   8b75f4               | mov                 esi, dword ptr [ebp - 0xc]
            //   b980000000           | mov                 ecx, 0x80
            //   33c0                 | xor                 eax, eax
            //   8dbdf0fdffff         | lea                 edi, dword ptr [ebp - 0x210]
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0

        $sequence_1 = { 8bf8 83ffff 0f8488000000 53 57 }
            // n = 5, score = 200
            //   8bf8                 | mov                 edi, eax
            //   83ffff               | cmp                 edi, -1
            //   0f8488000000         | je                  0x8e
            //   53                   | push                ebx
            //   57                   | push                edi

        $sequence_2 = { 55 33c9 56 57 33c0 894c2410 c744241401000000 }
            // n = 7, score = 200
            //   55                   | push                ebp
            //   33c9                 | xor                 ecx, ecx
            //   56                   | push                esi
            //   57                   | push                edi
            //   33c0                 | xor                 eax, eax
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx
            //   c744241401000000     | mov                 dword ptr [esp + 0x14], 1

        $sequence_3 = { 85c0 a3???????? 742f 6a01 6a00 }
            // n = 5, score = 200
            //   85c0                 | test                eax, eax
            //   a3????????           |                     
            //   742f                 | je                  0x31
            //   6a01                 | push                1
            //   6a00                 | push                0

        $sequence_4 = { 57 ff15???????? 57 ff15???????? 3975e8 755f }
            // n = 6, score = 200
            //   57                   | push                edi
            //   ff15????????         |                     
            //   57                   | push                edi
            //   ff15????????         |                     
            //   3975e8               | cmp                 dword ptr [ebp - 0x18], esi
            //   755f                 | jne                 0x61

        $sequence_5 = { f7d1 49 8bd9 83c305 8ac0 }
            // n = 5, score = 200
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8bd9                 | mov                 ebx, ecx
            //   83c305               | add                 ebx, 5
            //   8ac0                 | mov                 al, al

        $sequence_6 = { c745e0004d5c57 ff15???????? 33db 59 3bc3 59 0f843e010000 }
            // n = 7, score = 200
            //   c745e0004d5c57       | mov                 dword ptr [ebp - 0x20], 0x575c4d00
            //   ff15????????         |                     
            //   33db                 | xor                 ebx, ebx
            //   59                   | pop                 ecx
            //   3bc3                 | cmp                 eax, ebx
            //   59                   | pop                 ecx
            //   0f843e010000         | je                  0x144

        $sequence_7 = { 8d460c 51 ff36 50 e8???????? 83c414 85c0 }
            // n = 7, score = 200
            //   8d460c               | lea                 eax, dword ptr [esi + 0xc]
            //   51                   | push                ecx
            //   ff36                 | push                dword ptr [esi]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   85c0                 | test                eax, eax

        $sequence_8 = { 8d440001 f6c401 7416 8b742410 }
            // n = 4, score = 200
            //   8d440001             | lea                 eax, dword ptr [eax + eax + 1]
            //   f6c401               | test                ah, 1
            //   7416                 | je                  0x18
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]

        $sequence_9 = { 8bf9 83c9ff 33c0 f2ae f7d1 49 }
            // n = 6, score = 200
            //   8bf9                 | mov                 edi, ecx
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

    condition:
        7 of them and filesize < 49152
}