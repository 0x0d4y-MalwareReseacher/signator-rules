rule win_r980_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.r980."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.r980"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff7730 51 8bce ff5028 8bc8 c645fc04 e8???????? }
            // n = 7, score = 200
            //   ff7730               | push                dword ptr [edi + 0x30]
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi
            //   ff5028               | call                dword ptr [eax + 0x28]
            //   8bc8                 | mov                 ecx, eax
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   e8????????           |                     

        $sequence_1 = { 8d04f0 50 e8???????? 8d8f44020000 c645fc01 e8???????? 83ec30 }
            // n = 7, score = 200
            //   8d04f0               | lea                 eax, [eax + esi*8]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d8f44020000         | lea                 ecx, [edi + 0x244]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   e8????????           |                     
            //   83ec30               | sub                 esp, 0x30

        $sequence_2 = { 0fb74004 50 e8???????? 83c404 84c0 7509 ba02000000 }
            // n = 7, score = 200
            //   0fb74004             | movzx               eax, word ptr [eax + 4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   84c0                 | test                al, al
            //   7509                 | jne                 0xb
            //   ba02000000           | mov                 edx, 2

        $sequence_3 = { ff75c0 e8???????? 57 8d8d1cffffff e8???????? 8d8d6cffffff e8???????? }
            // n = 7, score = 200
            //   ff75c0               | push                dword ptr [ebp - 0x40]
            //   e8????????           |                     
            //   57                   | push                edi
            //   8d8d1cffffff         | lea                 ecx, [ebp - 0xe4]
            //   e8????????           |                     
            //   8d8d6cffffff         | lea                 ecx, [ebp - 0x94]
            //   e8????????           |                     

        $sequence_4 = { 8b4510 894620 c7450800000000 c7450c00000000 c7451000000000 c645fc02 f6c101 }
            // n = 7, score = 200
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   894620               | mov                 dword ptr [esi + 0x20], eax
            //   c7450800000000       | mov                 dword ptr [ebp + 8], 0
            //   c7450c00000000       | mov                 dword ptr [ebp + 0xc], 0
            //   c7451000000000       | mov                 dword ptr [ebp + 0x10], 0
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   f6c101               | test                cl, 1

        $sequence_5 = { ff7508 8d4704 c70700000000 50 e8???????? 83c408 8b4d0c }
            // n = 7, score = 200
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d4704               | lea                 eax, [edi + 4]
            //   c70700000000         | mov                 dword ptr [edi], 0
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]

        $sequence_6 = { 8d45f4 64a300000000 8b7508 8d45d4 50 c745d000000000 e8???????? }
            // n = 7, score = 200
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   50                   | push                eax
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   e8????????           |                     

        $sequence_7 = { 50 8d45c8 8bcb 50 57 e8???????? c645fc09 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   8d45c8               | lea                 eax, [ebp - 0x38]
            //   8bcb                 | mov                 ecx, ebx
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9

        $sequence_8 = { 0f84c2fdffff 53 8bcf e8???????? 8b4f10 8b4310 8b55fc }
            // n = 7, score = 200
            //   0f84c2fdffff         | je                  0xfffffdc8
            //   53                   | push                ebx
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   8b4f10               | mov                 ecx, dword ptr [edi + 0x10]
            //   8b4310               | mov                 eax, dword ptr [ebx + 0x10]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]

        $sequence_9 = { ff5004 8d45c8 c745c8cc2b4f00 8945ec 8b75c4 8d8544ffffff 50 }
            // n = 7, score = 200
            //   ff5004               | call                dword ptr [eax + 4]
            //   8d45c8               | lea                 eax, [ebp - 0x38]
            //   c745c8cc2b4f00       | mov                 dword ptr [ebp - 0x38], 0x4f2bcc
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   8b75c4               | mov                 esi, dword ptr [ebp - 0x3c]
            //   8d8544ffffff         | lea                 eax, [ebp - 0xbc]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 3178496
}