rule win_r980_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.r980."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.r980"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7417 8b45f8 46 0345fc 3bf0 72db 5f }
            // n = 7, score = 200
            //   7417                 | je                  0x19
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   46                   | inc                 esi
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   3bf0                 | cmp                 esi, eax
            //   72db                 | jb                  0xffffffdd
            //   5f                   | pop                 edi

        $sequence_1 = { f7de c745e80f000000 c745e400000000 c645d400 c745fc00000000 85f6 0f8e8a000000 }
            // n = 7, score = 200
            //   f7de                 | neg                 esi
            //   c745e80f000000       | mov                 dword ptr [ebp - 0x18], 0xf
            //   c745e400000000       | mov                 dword ptr [ebp - 0x1c], 0
            //   c645d400             | mov                 byte ptr [ebp - 0x2c], 0
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   85f6                 | test                esi, esi
            //   0f8e8a000000         | jle                 0x90

        $sequence_2 = { f7ee c1fa02 8bc2 c1e81f 03c2 83f802 7c29 }
            // n = 7, score = 200
            //   f7ee                 | imul                esi
            //   c1fa02               | sar                 edx, 2
            //   8bc2                 | mov                 eax, edx
            //   c1e81f               | shr                 eax, 0x1f
            //   03c2                 | add                 eax, edx
            //   83f802               | cmp                 eax, 2
            //   7c29                 | jl                  0x2b

        $sequence_3 = { 47 897d98 c7458c00000000 813800ca9a3b 8d45a0 c7459000000000 0f44ca }
            // n = 7, score = 200
            //   47                   | inc                 edi
            //   897d98               | mov                 dword ptr [ebp - 0x68], edi
            //   c7458c00000000       | mov                 dword ptr [ebp - 0x74], 0
            //   813800ca9a3b         | cmp                 dword ptr [eax], 0x3b9aca00
            //   8d45a0               | lea                 eax, dword ptr [ebp - 0x60]
            //   c7459000000000       | mov                 dword ptr [ebp - 0x70], 0
            //   0f44ca               | cmove               ecx, edx

        $sequence_4 = { ff750c 8bf1 c745f800000000 8975fc e8???????? 83c404 8bc6 }
            // n = 7, score = 200
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8bf1                 | mov                 esi, ecx
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bc6                 | mov                 eax, esi

        $sequence_5 = { e8???????? e9???????? 85ff 0f8543ffffff bf08000000 897d18 e9???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   e9????????           |                     
            //   85ff                 | test                edi, edi
            //   0f8543ffffff         | jne                 0xffffff49
            //   bf08000000           | mov                 edi, 8
            //   897d18               | mov                 dword ptr [ebp + 0x18], edi
            //   e9????????           |                     

        $sequence_6 = { ff75c8 8b7dd0 8d4dd8 50 e8???????? 83ec0c 8bd0 }
            // n = 7, score = 200
            //   ff75c8               | push                dword ptr [ebp - 0x38]
            //   8b7dd0               | mov                 edi, dword ptr [ebp - 0x30]
            //   8d4dd8               | lea                 ecx, dword ptr [ebp - 0x28]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83ec0c               | sub                 esp, 0xc
            //   8bd0                 | mov                 edx, eax

        $sequence_7 = { 8bc6 f00fc14104 7515 8b01 ff5004 8b4dd4 f00fc17108 }
            // n = 7, score = 200
            //   8bc6                 | mov                 eax, esi
            //   f00fc14104           | lock xadd           dword ptr [ecx + 4], eax
            //   7515                 | jne                 0x17
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5004               | call                dword ptr [eax + 4]
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   f00fc17108           | lock xadd           dword ptr [ecx + 8], esi

        $sequence_8 = { ffb578ffffff e8???????? 59 59 83f80a 733c 8a8078124e00 }
            // n = 7, score = 200
            //   ffb578ffffff         | push                dword ptr [ebp - 0x88]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   83f80a               | cmp                 eax, 0xa
            //   733c                 | jae                 0x3e
            //   8a8078124e00         | mov                 al, byte ptr [eax + 0x4e1278]

        $sequence_9 = { 33c0 c785acfbffff07000000 8d8df0f9ffff c785a8fbffff00000000 66898598fbffff e8???????? 8d8d38f9ffff }
            // n = 7, score = 200
            //   33c0                 | xor                 eax, eax
            //   c785acfbffff07000000     | mov    dword ptr [ebp - 0x454], 7
            //   8d8df0f9ffff         | lea                 ecx, dword ptr [ebp - 0x610]
            //   c785a8fbffff00000000     | mov    dword ptr [ebp - 0x458], 0
            //   66898598fbffff       | mov                 word ptr [ebp - 0x468], ax
            //   e8????????           |                     
            //   8d8d38f9ffff         | lea                 ecx, dword ptr [ebp - 0x6c8]

    condition:
        7 of them and filesize < 3178496
}