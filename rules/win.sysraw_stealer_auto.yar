rule win_sysraw_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.sysraw_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sysraw_stealer"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd6 8b45ec 50 ff15???????? 6804010000 50 }
            // n = 6, score = 700
            //   ffd6                 | call                esi
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6804010000           | push                0x104
            //   50                   | push                eax

        $sequence_1 = { 7d12 8b4de8 6a1c 68???????? 51 }
            // n = 5, score = 700
            //   7d12                 | jge                 0x14
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   6a1c                 | push                0x1c
            //   68????????           |                     
            //   51                   | push                ecx

        $sequence_2 = { 8d8de0feffff ffd6 8b95fcfeffff 8b8df8feffff 8b85f4feffff 898d24feffff 8b8df0feffff }
            // n = 7, score = 700
            //   8d8de0feffff         | lea                 ecx, [ebp - 0x120]
            //   ffd6                 | call                esi
            //   8b95fcfeffff         | mov                 edx, dword ptr [ebp - 0x104]
            //   8b8df8feffff         | mov                 ecx, dword ptr [ebp - 0x108]
            //   8b85f4feffff         | mov                 eax, dword ptr [ebp - 0x10c]
            //   898d24feffff         | mov                 dword ptr [ebp - 0x1dc], ecx
            //   8b8df0feffff         | mov                 ecx, dword ptr [ebp - 0x110]

        $sequence_3 = { d99d50ffffff d98554ffffff da4de8 b802000000 b901000000 8945b8 }
            // n = 6, score = 700
            //   d99d50ffffff         | fstp                dword ptr [ebp - 0xb0]
            //   d98554ffffff         | fld                 dword ptr [ebp - 0xac]
            //   da4de8               | fimul               dword ptr [ebp - 0x18]
            //   b802000000           | mov                 eax, 2
            //   b901000000           | mov                 ecx, 1
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax

        $sequence_4 = { 33ff 52 57 ffd6 8d45e0 50 }
            // n = 6, score = 700
            //   33ff                 | xor                 edi, edi
            //   52                   | push                edx
            //   57                   | push                edi
            //   ffd6                 | call                esi
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   50                   | push                eax

        $sequence_5 = { 25feffff7f 0fbfdf 99 f73c99 f7c600000080 }
            // n = 5, score = 700
            //   25feffff7f           | and                 eax, 0x7ffffffe
            //   0fbfdf               | movsx               ebx, di
            //   99                   | cdq                 
            //   f73c99               | idiv                dword ptr [ecx + ebx*4]
            //   f7c600000080         | test                esi, 0x80000000

        $sequence_6 = { 8b5014 2bca 8b500c 8b4510 }
            // n = 4, score = 700
            //   8b5014               | mov                 edx, dword ptr [eax + 0x14]
            //   2bca                 | sub                 ecx, edx
            //   8b500c               | mov                 edx, dword ptr [eax + 0xc]
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_7 = { 89bd78ffffff 89bd74ffffff 89bd70ffffff 89bd6cffffff 89bd68ffffff 89bd64ffffff 89bd60ffffff }
            // n = 7, score = 700
            //   89bd78ffffff         | mov                 dword ptr [ebp - 0x88], edi
            //   89bd74ffffff         | mov                 dword ptr [ebp - 0x8c], edi
            //   89bd70ffffff         | mov                 dword ptr [ebp - 0x90], edi
            //   89bd6cffffff         | mov                 dword ptr [ebp - 0x94], edi
            //   89bd68ffffff         | mov                 dword ptr [ebp - 0x98], edi
            //   89bd64ffffff         | mov                 dword ptr [ebp - 0x9c], edi
            //   89bd60ffffff         | mov                 dword ptr [ebp - 0xa0], edi

        $sequence_8 = { 8b3d???????? 33c0 56 8945e4 8945d4 8945d0 8945bc }
            // n = 7, score = 700
            //   8b3d????????         |                     
            //   33c0                 | xor                 eax, eax
            //   56                   | push                esi
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax

        $sequence_9 = { 03c7 50 52 ffd3 }
            // n = 4, score = 700
            //   03c7                 | add                 eax, edi
            //   50                   | push                eax
            //   52                   | push                edx
            //   ffd3                 | call                ebx

    condition:
        7 of them and filesize < 1540096
}