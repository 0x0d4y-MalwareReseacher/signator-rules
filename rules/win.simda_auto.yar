rule win_simda_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.simda."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.simda"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 48 034d10 0fb7d0 8b4508 0910 }
            // n = 5, score = 700
            //   48                   | dec                 eax
            //   034d10               | add                 ecx, dword ptr [ebp + 0x10]
            //   0fb7d0               | movzx               edx, ax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0910                 | or                  dword ptr [eax], edx

        $sequence_1 = { 85c8 7504 d1e8 75f8 }
            // n = 4, score = 700
            //   85c8                 | test                eax, ecx
            //   7504                 | jne                 6
            //   d1e8                 | shr                 eax, 1
            //   75f8                 | jne                 0xfffffffa

        $sequence_2 = { 33d2 3b7dec 7519 8b5dfc }
            // n = 4, score = 700
            //   33d2                 | xor                 edx, edx
            //   3b7dec               | cmp                 edi, dword ptr [ebp - 0x14]
            //   7519                 | jne                 0x1b
            //   8b5dfc               | mov                 ebx, dword ptr [ebp - 4]

        $sequence_3 = { 2bda 3bcb 7605 83caff eb03 8b55ec c1ef10 }
            // n = 7, score = 700
            //   2bda                 | sub                 ebx, edx
            //   3bcb                 | cmp                 ecx, ebx
            //   7605                 | jbe                 7
            //   83caff               | or                  edx, 0xffffffff
            //   eb03                 | jmp                 5
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   c1ef10               | shr                 edi, 0x10

        $sequence_4 = { ff15???????? f7d8 1bc0 f7d8 0501000080 }
            // n = 5, score = 700
            //   ff15????????         |                     
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   f7d8                 | neg                 eax
            //   0501000080           | add                 eax, 0x80000001

        $sequence_5 = { 83c408 8945f0 85c0 7508 6a01 }
            // n = 5, score = 700
            //   83c408               | add                 esp, 8
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   85c0                 | test                eax, eax
            //   7508                 | jne                 0xa
            //   6a01                 | push                1

        $sequence_6 = { 8d45fc 6a00 50 884dfc 8855fd ffd3 }
            // n = 6, score = 700
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   884dfc               | mov                 byte ptr [ebp - 4], cl
            //   8855fd               | mov                 byte ptr [ebp - 3], dl
            //   ffd3                 | call                ebx

        $sequence_7 = { 0fafcb 03ca 3bca 1bd2 f7da }
            // n = 5, score = 700
            //   0fafcb               | imul                ecx, ebx
            //   03ca                 | add                 ecx, edx
            //   3bca                 | cmp                 ecx, edx
            //   1bd2                 | sbb                 edx, edx
            //   f7da                 | neg                 edx

        $sequence_8 = { 8945d8 8955dc 894df4 3bce 0f83d2000000 8d4c09ff }
            // n = 6, score = 700
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   8955dc               | mov                 dword ptr [ebp - 0x24], edx
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   3bce                 | cmp                 ecx, esi
            //   0f83d2000000         | jae                 0xd8
            //   8d4c09ff             | lea                 ecx, [ecx + ecx - 1]

        $sequence_9 = { 6a08 ffd3 8bf0 83feff }
            // n = 4, score = 700
            //   6a08                 | push                8
            //   ffd3                 | call                ebx
            //   8bf0                 | mov                 esi, eax
            //   83feff               | cmp                 esi, -1

    condition:
        7 of them and filesize < 1581056
}