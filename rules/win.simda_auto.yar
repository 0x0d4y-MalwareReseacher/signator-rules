rule win_simda_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.simda."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.simda"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 40 3b4604 72f1 894e04 }
            // n = 4, score = 700
            //   40                   | inc                 eax
            //   3b4604               | cmp                 eax, dword ptr [esi + 4]
            //   72f1                 | jb                  0xfffffff3
            //   894e04               | mov                 dword ptr [esi + 4], ecx

        $sequence_1 = { 48 c7048200000000 75f6 8b02 8945fc 8b55fc }
            // n = 6, score = 700
            //   48                   | dec                 eax
            //   c7048200000000       | mov                 dword ptr [edx + eax*4], 0
            //   75f6                 | jne                 0xfffffff8
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]

        $sequence_2 = { c7049f00000000 75f6 8b0f 894d08 }
            // n = 4, score = 700
            //   c7049f00000000       | mov                 dword ptr [edi + ebx*4], 0
            //   75f6                 | jne                 0xfffffff8
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   894d08               | mov                 dword ptr [ebp + 8], ecx

        $sequence_3 = { a1???????? 8955dc 0fb615???????? 8945e0 }
            // n = 4, score = 700
            //   a1????????           |                     
            //   8955dc               | mov                 dword ptr [ebp - 0x24], edx
            //   0fb615????????       |                     
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax

        $sequence_4 = { 83f906 7519 8b85e8feffff 85c0 7505 8d41ff eb0f }
            // n = 7, score = 700
            //   83f906               | cmp                 ecx, 6
            //   7519                 | jne                 0x1b
            //   8b85e8feffff         | mov                 eax, dword ptr [ebp - 0x118]
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   8d41ff               | lea                 eax, dword ptr [ecx - 1]
            //   eb0f                 | jmp                 0x11

        $sequence_5 = { 52 ffd7 85c0 740c 68???????? }
            // n = 5, score = 700
            //   52                   | push                edx
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe
            //   68????????           |                     

        $sequence_6 = { 3bd0 7301 41 8b4508 0faff3 03f1 }
            // n = 6, score = 700
            //   3bd0                 | cmp                 edx, eax
            //   7301                 | jae                 3
            //   41                   | inc                 ecx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0faff3               | imul                esi, ebx
            //   03f1                 | add                 esi, ecx

        $sequence_7 = { 7c02 33c0 41 81f900010000 7ce2 }
            // n = 5, score = 700
            //   7c02                 | jl                  4
            //   33c0                 | xor                 eax, eax
            //   41                   | inc                 ecx
            //   81f900010000         | cmp                 ecx, 0x100
            //   7ce2                 | jl                  0xffffffe4

        $sequence_8 = { 8b38 f7d9 3b3c18 7301 41 }
            // n = 5, score = 700
            //   8b38                 | mov                 edi, dword ptr [eax]
            //   f7d9                 | neg                 ecx
            //   3b3c18               | cmp                 edi, dword ptr [eax + ebx]
            //   7301                 | jae                 3
            //   41                   | inc                 ecx

        $sequence_9 = { 85c0 75dd 8b4d0c 8bc3 2bc2 }
            // n = 5, score = 700
            //   85c0                 | test                eax, eax
            //   75dd                 | jne                 0xffffffdf
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8bc3                 | mov                 eax, ebx
            //   2bc2                 | sub                 eax, edx

    condition:
        7 of them and filesize < 1581056
}