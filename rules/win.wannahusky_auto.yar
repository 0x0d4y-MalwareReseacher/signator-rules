rule win_wannahusky_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.wannahusky."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wannahusky"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { a3???????? c3 55 89e5 53 8d1c10 31d8 }
            // n = 7, score = 100
            //   a3????????           |                     
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   53                   | push                ebx
            //   8d1c10               | lea                 ebx, [eax + edx]
            //   31d8                 | xor                 eax, ebx

        $sequence_1 = { 8b4de0 8d7901 31f9 7909 }
            // n = 4, score = 100
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   8d7901               | lea                 edi, [ecx + 1]
            //   31f9                 | xor                 ecx, edi
            //   7909                 | jns                 0xb

        $sequence_2 = { a1???????? 8b08 e8???????? 84c0 7449 c78554fbffff00000000 }
            // n = 6, score = 100
            //   a1????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7449                 | je                  0x4b
            //   c78554fbffff00000000     | mov    dword ptr [ebp - 0x4ac], 0

        $sequence_3 = { 0fb6c0 ff2485a8124100 8b09 0fb6d3 e8???????? eb44 0fb6db }
            // n = 7, score = 100
            //   0fb6c0               | movzx               eax, al
            //   ff2485a8124100       | jmp                 dword ptr [eax*4 + 0x4112a8]
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   0fb6d3               | movzx               edx, bl
            //   e8????????           |                     
            //   eb44                 | jmp                 0x46
            //   0fb6db               | movzx               ebx, bl

        $sequence_4 = { c705????????b41d4100 c705????????30b54100 c705????????00000000 c705????????04000000 c705????????04000000 66c705????????1903 }
            // n = 6, score = 100
            //   c705????????b41d4100     |     
            //   c705????????30b54100     |     
            //   c705????????00000000     |     
            //   c705????????04000000     |     
            //   c705????????04000000     |     
            //   66c705????????1903     |     

        $sequence_5 = { c705????????0c1e4100 c705????????f0b54100 c705????????04000000 c705????????04000000 }
            // n = 4, score = 100
            //   c705????????0c1e4100     |     
            //   c705????????f0b54100     |     
            //   c705????????04000000     |     
            //   c705????????04000000     |     

        $sequence_6 = { 8985f4faffff 85f6 7443 8b0e }
            // n = 4, score = 100
            //   8985f4faffff         | mov                 dword ptr [ebp - 0x50c], eax
            //   85f6                 | test                esi, esi
            //   7443                 | je                  0x45
            //   8b0e                 | mov                 ecx, dword ptr [esi]

        $sequence_7 = { c705????????90b54100 c605????????01 c705????????28000000 c705????????20484200 c705????????f91d4100 c705????????0a000000 c605????????02 }
            // n = 7, score = 100
            //   c705????????90b54100     |     
            //   c605????????01       |                     
            //   c705????????28000000     |     
            //   c705????????20484200     |     
            //   c705????????f91d4100     |     
            //   c705????????0a000000     |     
            //   c605????????02       |                     

        $sequence_8 = { c705????????78b54100 c705????????00000000 c705????????04000000 c705????????04000000 }
            // n = 4, score = 100
            //   c705????????78b54100     |     
            //   c705????????00000000     |     
            //   c705????????04000000     |     
            //   c705????????04000000     |     

        $sequence_9 = { c705????????14000000 c705????????00484200 c705????????b41d4100 c705????????30b54100 c705????????00000000 c705????????04000000 }
            // n = 6, score = 100
            //   c705????????14000000     |     
            //   c705????????00484200     |     
            //   c705????????b41d4100     |     
            //   c705????????30b54100     |     
            //   c705????????00000000     |     
            //   c705????????04000000     |     

    condition:
        7 of them and filesize < 862208
}