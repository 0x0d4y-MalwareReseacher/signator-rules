rule win_bitsran_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.bitsran."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bitsran"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c3 8b550c 8b45f8 895620 897e1c 894304 6afc }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   895620               | mov                 dword ptr [esi + 0x20], edx
            //   897e1c               | mov                 dword ptr [esi + 0x1c], edi
            //   894304               | mov                 dword ptr [ebx + 4], eax
            //   6afc                 | push                -4

        $sequence_1 = { 8975fc 8b03 8d55d8 52 50 e8???????? }
            // n = 6, score = 100
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8d55d8               | lea                 edx, dword ptr [ebp - 0x28]
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_2 = { d36d08 2bd9 c70005000000 8b4dfc 8bc2 }
            // n = 5, score = 100
            //   d36d08               | shr                 dword ptr [ebp + 8], cl
            //   2bd9                 | sub                 ebx, ecx
            //   c70005000000         | mov                 dword ptr [eax], 5
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8bc2                 | mov                 eax, edx

        $sequence_3 = { 03d0 81faa0050000 0f87f8feffff 8bbd38ffffff 8d3cc7 8b856cffffff 8d8485ecfeffff }
            // n = 7, score = 100
            //   03d0                 | add                 edx, eax
            //   81faa0050000         | cmp                 edx, 0x5a0
            //   0f87f8feffff         | ja                  0xfffffefe
            //   8bbd38ffffff         | mov                 edi, dword ptr [ebp - 0xc8]
            //   8d3cc7               | lea                 edi, dword ptr [edi + eax*8]
            //   8b856cffffff         | mov                 eax, dword ptr [ebp - 0x94]
            //   8d8485ecfeffff       | lea                 eax, dword ptr [ebp + eax*4 - 0x114]

        $sequence_4 = { 0f84db040000 294df8 8b4dfc 0fb611 8bcf d3e2 }
            // n = 6, score = 100
            //   0f84db040000         | je                  0x4e1
            //   294df8               | sub                 dword ptr [ebp - 8], ecx
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   0fb611               | movzx               edx, byte ptr [ecx]
            //   8bcf                 | mov                 ecx, edi
            //   d3e2                 | shl                 edx, cl

        $sequence_5 = { 6a00 6a00 6a00 6804010000 8d85f8feffff 50 6a00 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6804010000           | push                0x104
            //   8d85f8feffff         | lea                 eax, dword ptr [ebp - 0x108]
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_6 = { 50 e8???????? 83c408 43 75e9 8b5778 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   43                   | inc                 ebx
            //   75e9                 | jne                 0xffffffeb
            //   8b5778               | mov                 edx, dword ptr [edi + 0x78]

        $sequence_7 = { 75f0 8b85b0fcffff 8b8d7cfcffff 8bd0 c1ea1e 80e201 }
            // n = 6, score = 100
            //   75f0                 | jne                 0xfffffff2
            //   8b85b0fcffff         | mov                 eax, dword ptr [ebp - 0x350]
            //   8b8d7cfcffff         | mov                 ecx, dword ptr [ebp - 0x384]
            //   8bd0                 | mov                 edx, eax
            //   c1ea1e               | shr                 edx, 0x1e
            //   80e201               | and                 dl, 1

        $sequence_8 = { 898d70ffffff 8b8d74ffffff 8bda 33ff f7db }
            // n = 5, score = 100
            //   898d70ffffff         | mov                 dword ptr [ebp - 0x90], ecx
            //   8b8d74ffffff         | mov                 ecx, dword ptr [ebp - 0x8c]
            //   8bda                 | mov                 ebx, edx
            //   33ff                 | xor                 edi, edi
            //   f7db                 | neg                 ebx

        $sequence_9 = { 8b450c 8bc8 2b0f 57 014f08 8907 }
            // n = 6, score = 100
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8bc8                 | mov                 ecx, eax
            //   2b0f                 | sub                 ecx, dword ptr [edi]
            //   57                   | push                edi
            //   014f08               | add                 dword ptr [edi + 8], ecx
            //   8907                 | mov                 dword ptr [edi], eax

    condition:
        7 of them and filesize < 344064
}