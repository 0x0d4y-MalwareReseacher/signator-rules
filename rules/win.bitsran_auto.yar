rule win_bitsran_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.bitsran."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bitsran"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd1 83c40c 894628 85c0 7521 }
            // n = 5, score = 100
            //   ffd1                 | call                ecx
            //   83c40c               | add                 esp, 0xc
            //   894628               | mov                 dword ptr [esi + 0x28], eax
            //   85c0                 | test                eax, eax
            //   7521                 | jne                 0x23

        $sequence_1 = { 894608 8b450c c70605000000 8b4e04 8bd1 }
            // n = 5, score = 100
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   c70605000000         | mov                 dword ptr [esi], 5
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   8bd1                 | mov                 edx, ecx

        $sequence_2 = { 888decfcffff 8bc8 8ad0 c1e904 c1e805 }
            // n = 5, score = 100
            //   888decfcffff         | mov                 byte ptr [ebp - 0x314], cl
            //   8bc8                 | mov                 ecx, eax
            //   8ad0                 | mov                 dl, al
            //   c1e904               | shr                 ecx, 4
            //   c1e805               | shr                 eax, 5

        $sequence_3 = { 59 46 eb71 53 c745f048654100 8945f4 897df8 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   46                   | inc                 esi
            //   eb71                 | jmp                 0x73
            //   53                   | push                ebx
            //   c745f048654100       | mov                 dword ptr [ebp - 0x10], 0x416548
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   897df8               | mov                 dword ptr [ebp - 8], edi

        $sequence_4 = { 8a473f 888680000000 0fb64e6c 8b5d0c f7d9 1bc9 }
            // n = 6, score = 100
            //   8a473f               | mov                 al, byte ptr [edi + 0x3f]
            //   888680000000         | mov                 byte ptr [esi + 0x80], al
            //   0fb64e6c             | movzx               ecx, byte ptr [esi + 0x6c]
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   f7d9                 | neg                 ecx
            //   1bc9                 | sbb                 ecx, ecx

        $sequence_5 = { 3bd0 0f87ec020000 837de410 7512 83f901 0f82dd020000 8b460c }
            // n = 7, score = 100
            //   3bd0                 | cmp                 edx, eax
            //   0f87ec020000         | ja                  0x2f2
            //   837de410             | cmp                 dword ptr [ebp - 0x1c], 0x10
            //   7512                 | jne                 0x14
            //   83f901               | cmp                 ecx, 1
            //   0f82dd020000         | jb                  0x2e3
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]

        $sequence_6 = { 81c744020000 57 e8???????? 83c408 5f 5e 33c0 }
            // n = 7, score = 100
            //   81c744020000         | add                 edi, 0x244
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 750c 8b55fc 3955f8 0f8208ffffff 8b45f4 50 e8???????? }
            // n = 7, score = 100
            //   750c                 | jne                 0xe
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   3955f8               | cmp                 dword ptr [ebp - 8], edx
            //   0f8208ffffff         | jb                  0xffffff0e
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_8 = { 85d2 7403 c60201 5b 5e 33c0 5f }
            // n = 7, score = 100
            //   85d2                 | test                edx, edx
            //   7403                 | je                  5
            //   c60201               | mov                 byte ptr [edx], 1
            //   5b                   | pop                 ebx
            //   5e                   | pop                 esi
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi

        $sequence_9 = { 8d55c0 52 50 e8???????? 83c408 85c0 7403 }
            // n = 7, score = 100
            //   8d55c0               | lea                 edx, [ebp - 0x40]
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5

    condition:
        7 of them and filesize < 344064
}