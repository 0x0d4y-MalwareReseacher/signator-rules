rule win_hlux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.hlux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hlux"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0009 1b4e01 e405 9d }
            // n = 4, score = 100
            //   0009                 | add                 byte ptr [ecx], cl
            //   1b4e01               | sbb                 ecx, dword ptr [esi + 1]
            //   e405                 | in                  al, 5
            //   9d                   | popfd               

        $sequence_1 = { 0101 c9 c3 6a10 }
            // n = 4, score = 100
            //   0101                 | add                 dword ptr [ecx], eax
            //   c9                   | leave               
            //   c3                   | ret                 
            //   6a10                 | push                0x10

        $sequence_2 = { 83fb81 751d 8b458c 83f829 7515 898534ffffff 898dccfeffff }
            // n = 7, score = 100
            //   83fb81               | cmp                 ebx, -0x7f
            //   751d                 | jne                 0x1f
            //   8b458c               | mov                 eax, dword ptr [ebp - 0x74]
            //   83f829               | cmp                 eax, 0x29
            //   7515                 | jne                 0x17
            //   898534ffffff         | mov                 dword ptr [ebp - 0xcc], eax
            //   898dccfeffff         | mov                 dword ptr [ebp - 0x134], ecx

        $sequence_3 = { 0088aa4b0023 d18a0688078a 46 018847018a46 }
            // n = 4, score = 100
            //   0088aa4b0023         | add                 byte ptr [eax + 0x23004baa], cl
            //   d18a0688078a         | ror                 dword ptr [edx - 0x75f877fa], 1
            //   46                   | inc                 esi
            //   018847018a46         | add                 dword ptr [eax + 0x468a0147], ecx

        $sequence_4 = { 898df0feffff 83fe06 0f8593010000 baa2e02a24 }
            // n = 4, score = 100
            //   898df0feffff         | mov                 dword ptr [ebp - 0x110], ecx
            //   83fe06               | cmp                 esi, 6
            //   0f8593010000         | jne                 0x199
            //   baa2e02a24           | mov                 edx, 0x242ae0a2

        $sequence_5 = { 85f6 7406 89b528ffffff 8b05???????? 81f8eee08079 }
            // n = 5, score = 100
            //   85f6                 | test                esi, esi
            //   7406                 | je                  8
            //   89b528ffffff         | mov                 dword ptr [ebp - 0xd8], esi
            //   8b05????????         |                     
            //   81f8eee08079         | cmp                 eax, 0x7980e0ee

        $sequence_6 = { 7536 81f995ccc2de 742e 8b45c8 8955e0 }
            // n = 5, score = 100
            //   7536                 | jne                 0x38
            //   81f995ccc2de         | cmp                 ecx, 0xdec2cc95
            //   742e                 | je                  0x30
            //   8b45c8               | mov                 eax, dword ptr [ebp - 0x38]
            //   8955e0               | mov                 dword ptr [ebp - 0x20], edx

        $sequence_7 = { 8b1d???????? 09c0 7545 8945fc 8b45f0 895de8 81f97a701028 }
            // n = 7, score = 100
            //   8b1d????????         |                     
            //   09c0                 | or                  eax, eax
            //   7545                 | jne                 0x47
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   895de8               | mov                 dword ptr [ebp - 0x18], ebx
            //   81f97a701028         | cmp                 ecx, 0x2810707a

        $sequence_8 = { 898d90feffff 33db 899d2cffffff 898d74feffff 81fa3147b089 }
            // n = 5, score = 100
            //   898d90feffff         | mov                 dword ptr [ebp - 0x170], ecx
            //   33db                 | xor                 ebx, ebx
            //   899d2cffffff         | mov                 dword ptr [ebp - 0xd4], ebx
            //   898d74feffff         | mov                 dword ptr [ebp - 0x18c], ecx
            //   81fa3147b089         | cmp                 edx, 0x89b04731

        $sequence_9 = { 010f 840f 0000 008365f0fe8b }
            // n = 4, score = 100
            //   010f                 | add                 dword ptr [edi], ecx
            //   840f                 | test                byte ptr [edi], cl
            //   0000                 | add                 byte ptr [eax], al
            //   008365f0fe8b         | add                 byte ptr [ebx - 0x74010f9b], al

        $sequence_10 = { 0104bb 8d1447 89542418 e9???????? }
            // n = 4, score = 100
            //   0104bb               | add                 dword ptr [ebx + edi*4], eax
            //   8d1447               | lea                 edx, dword ptr [edi + eax*2]
            //   89542418             | mov                 dword ptr [esp + 0x18], edx
            //   e9????????           |                     

        $sequence_11 = { 8b85d8feffff 83f8c8 7430 8b8d1cffffff 898dbcfeffff 85db 7420 }
            // n = 7, score = 100
            //   8b85d8feffff         | mov                 eax, dword ptr [ebp - 0x128]
            //   83f8c8               | cmp                 eax, -0x38
            //   7430                 | je                  0x32
            //   8b8d1cffffff         | mov                 ecx, dword ptr [ebp - 0xe4]
            //   898dbcfeffff         | mov                 dword ptr [ebp - 0x144], ecx
            //   85db                 | test                ebx, ebx
            //   7420                 | je                  0x22

        $sequence_12 = { 0000 008365f0fe8b 4d 0883c108e918 }
            // n = 4, score = 100
            //   0000                 | add                 byte ptr [eax], al
            //   008365f0fe8b         | add                 byte ptr [ebx - 0x74010f9b], al
            //   4d                   | dec                 ebp
            //   0883c108e918         | or                  byte ptr [ebx + 0x18e908c1], al

        $sequence_13 = { 7513 83fb67 750e 85db 750a }
            // n = 5, score = 100
            //   7513                 | jne                 0x15
            //   83fb67               | cmp                 ebx, 0x67
            //   750e                 | jne                 0x10
            //   85db                 | test                ebx, ebx
            //   750a                 | jne                 0xc

        $sequence_14 = { 0104b9 33c9 83c408 85c0 }
            // n = 4, score = 100
            //   0104b9               | add                 dword ptr [ecx + edi*4], eax
            //   33c9                 | xor                 ecx, ecx
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax

        $sequence_15 = { 0130 8b13 8b08 85d2 }
            // n = 4, score = 100
            //   0130                 | add                 dword ptr [eax], esi
            //   8b13                 | mov                 edx, dword ptr [ebx]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   85d2                 | test                edx, edx

    condition:
        7 of them and filesize < 3147776
}