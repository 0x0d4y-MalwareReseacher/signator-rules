rule win_headertip_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.headertip."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.headertip"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b07 ff4d08 03c3 56 }
            // n = 4, score = 100
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   ff4d08               | dec                 dword ptr [ebp + 8]
            //   03c3                 | add                 eax, ebx
            //   56                   | push                esi

        $sequence_1 = { 8d4d34 51 50 ff15???????? a3???????? 8d45ec 50 }
            // n = 7, score = 100
            //   8d4d34               | lea                 ecx, dword ptr [ebp + 0x34]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   a3????????           |                     
            //   8d45ec               | lea                 eax, dword ptr [ebp - 0x14]
            //   50                   | push                eax

        $sequence_2 = { c645d274 c645d36f c645d472 c645d579 c645d657 885dd7 c645ac47 }
            // n = 7, score = 100
            //   c645d274             | mov                 byte ptr [ebp - 0x2e], 0x74
            //   c645d36f             | mov                 byte ptr [ebp - 0x2d], 0x6f
            //   c645d472             | mov                 byte ptr [ebp - 0x2c], 0x72
            //   c645d579             | mov                 byte ptr [ebp - 0x2b], 0x79
            //   c645d657             | mov                 byte ptr [ebp - 0x2a], 0x57
            //   885dd7               | mov                 byte ptr [ebp - 0x29], bl
            //   c645ac47             | mov                 byte ptr [ebp - 0x54], 0x47

        $sequence_3 = { 53 668985a2fdffff 8d45f8 50 53 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   668985a2fdffff       | mov                 word ptr [ebp - 0x25e], ax
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   53                   | push                ebx

        $sequence_4 = { 68???????? 50 ff15???????? 8bf8 59 59 3bfb }
            // n = 7, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   3bfb                 | cmp                 edi, ebx

        $sequence_5 = { c6451747 c6451865 c6451974 c6451a4c c6451b61 }
            // n = 5, score = 100
            //   c6451747             | mov                 byte ptr [ebp + 0x17], 0x47
            //   c6451865             | mov                 byte ptr [ebp + 0x18], 0x65
            //   c6451974             | mov                 byte ptr [ebp + 0x19], 0x74
            //   c6451a4c             | mov                 byte ptr [ebp + 0x1a], 0x4c
            //   c6451b61             | mov                 byte ptr [ebp + 0x1b], 0x61

        $sequence_6 = { c645e172 c645e273 c645e349 c645e46e c645e566 c645e66f 885de7 }
            // n = 7, score = 100
            //   c645e172             | mov                 byte ptr [ebp - 0x1f], 0x72
            //   c645e273             | mov                 byte ptr [ebp - 0x1e], 0x73
            //   c645e349             | mov                 byte ptr [ebp - 0x1d], 0x49
            //   c645e46e             | mov                 byte ptr [ebp - 0x1c], 0x6e
            //   c645e566             | mov                 byte ptr [ebp - 0x1b], 0x66
            //   c645e66f             | mov                 byte ptr [ebp - 0x1a], 0x6f
            //   885de7               | mov                 byte ptr [ebp - 0x19], bl

        $sequence_7 = { 8d4d34 51 50 ff15???????? }
            // n = 4, score = 100
            //   8d4d34               | lea                 ecx, dword ptr [ebp + 0x34]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_8 = { 03c7 ff3488 e8???????? 59 59 e9???????? 55 }
            // n = 7, score = 100
            //   03c7                 | add                 eax, edi
            //   ff3488               | push                dword ptr [eax + ecx*4]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   e9????????           |                     
            //   55                   | push                ebp

        $sequence_9 = { 33c0 5f 5b 5e c3 0fb7c7 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   0fb7c7               | movzx               eax, di

    condition:
        7 of them and filesize < 174080
}