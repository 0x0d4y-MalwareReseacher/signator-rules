rule win_bagle_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.bagle."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bagle"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 8d45f0 50 53 e8???????? 83f8ff 7502 }
            // n = 7, score = 300
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83f8ff               | cmp                 eax, -1
            //   7502                 | jne                 4

        $sequence_1 = { e8???????? 68???????? 68???????? e8???????? 6804010000 68???????? }
            // n = 6, score = 300
            //   e8????????           |                     
            //   68????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   6804010000           | push                0x104
            //   68????????           |                     

        $sequence_2 = { 5f 5e c9 c20c00 c1c206 8bc2 243f }
            // n = 7, score = 300
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c9                   | leave               
            //   c20c00               | ret                 0xc
            //   c1c206               | rol                 edx, 6
            //   8bc2                 | mov                 eax, edx
            //   243f                 | and                 al, 0x3f

        $sequence_3 = { e8???????? 58 c9 c20400 55 8bec 83c4f8 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   58                   | pop                 eax
            //   c9                   | leave               
            //   c20400               | ret                 4
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83c4f8               | add                 esp, -8

        $sequence_4 = { b03d f3aa 5b 5f 5e c9 c20c00 }
            // n = 7, score = 300
            //   b03d                 | mov                 al, 0x3d
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c9                   | leave               
            //   c20c00               | ret                 0xc

        $sequence_5 = { 8b7d0c 8b4d10 33db e340 ac c1e010 }
            // n = 6, score = 300
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   33db                 | xor                 ebx, ebx
            //   e340                 | jecxz               0x42
            //   ac                   | lodsb               al, byte ptr [esi]
            //   c1e010               | shl                 eax, 0x10

        $sequence_6 = { 8bc3 5f 5b c9 c20800 55 8bec }
            // n = 7, score = 300
            //   8bc3                 | mov                 eax, ebx
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c20800               | ret                 8
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp

        $sequence_7 = { 33db e340 ac c1e010 83f901 740b }
            // n = 6, score = 300
            //   33db                 | xor                 ebx, ebx
            //   e340                 | jecxz               0x42
            //   ac                   | lodsb               al, byte ptr [esi]
            //   c1e010               | shl                 eax, 0x10
            //   83f901               | cmp                 ecx, 1
            //   740b                 | je                  0xd

        $sequence_8 = { 6a02 e8???????? 8bd8 ff7508 }
            // n = 4, score = 300
            //   6a02                 | push                2
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_9 = { 8b7d0c 8b4d10 33db e340 ac c1e010 83f901 }
            // n = 7, score = 300
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   33db                 | xor                 ebx, ebx
            //   e340                 | jecxz               0x42
            //   ac                   | lodsb               al, byte ptr [esi]
            //   c1e010               | shl                 eax, 0x10
            //   83f901               | cmp                 ecx, 1

    condition:
        7 of them and filesize < 245760
}