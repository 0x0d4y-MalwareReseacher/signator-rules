rule win_dma_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.dma_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dma_locker"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { a1???????? 68???????? 50 ff15???????? e9???????? 83f809 }
            // n = 6, score = 200
            //   a1????????           |                     
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   e9????????           |                     
            //   83f809               | cmp                 eax, 9

        $sequence_1 = { ffd7 50 6a00 56 6a0f 6a31 6836010000 }
            // n = 7, score = 200
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   6a00                 | push                0
            //   56                   | push                esi
            //   6a0f                 | push                0xf
            //   6a31                 | push                0x31
            //   6836010000           | push                0x136

        $sequence_2 = { 8d4c247c 51 50 e8???????? 8bf0 eb02 }
            // n = 6, score = 200
            //   8d4c247c             | lea                 ecx, [esp + 0x7c]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   eb02                 | jmp                 4

        $sequence_3 = { 8b4510 8b8db4f6ffff 52 50 51 8d95f8f7ffff 52 }
            // n = 7, score = 200
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b8db4f6ffff         | mov                 ecx, dword ptr [ebp - 0x94c]
            //   52                   | push                edx
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8d95f8f7ffff         | lea                 edx, [ebp - 0x808]
            //   52                   | push                edx

        $sequence_4 = { c78568feffff40000000 ff15???????? 83f801 7534 }
            // n = 4, score = 200
            //   c78568feffff40000000     | mov    dword ptr [ebp - 0x198], 0x40
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1
            //   7534                 | jne                 0x36

        $sequence_5 = { 8816 8a55fb 8ac2 3245ff 8ac8 02c9 }
            // n = 6, score = 200
            //   8816                 | mov                 byte ptr [esi], dl
            //   8a55fb               | mov                 dl, byte ptr [ebp - 5]
            //   8ac2                 | mov                 al, dl
            //   3245ff               | xor                 al, byte ptr [ebp - 1]
            //   8ac8                 | mov                 cl, al
            //   02c9                 | add                 cl, cl

        $sequence_6 = { e8???????? a1???????? 8b7324 83c40c 6a01 b99b010000 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   a1????????           |                     
            //   8b7324               | mov                 esi, dword ptr [ebx + 0x24]
            //   83c40c               | add                 esp, 0xc
            //   6a01                 | push                1
            //   b99b010000           | mov                 ecx, 0x19b

        $sequence_7 = { e8???????? 83c404 ebd8 85c0 7404 03f8 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   ebd8                 | jmp                 0xffffffda
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6
            //   03f8                 | add                 edi, eax

        $sequence_8 = { 85ff 74d0 8b5d10 8b8de8feffff 51 6a00 57 }
            // n = 7, score = 200
            //   85ff                 | test                edi, edi
            //   74d0                 | je                  0xffffffd2
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   8b8de8feffff         | mov                 ecx, dword ptr [ebp - 0x118]
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   57                   | push                edi

        $sequence_9 = { 8d95f8f7ffff 68???????? 52 e8???????? }
            // n = 4, score = 200
            //   8d95f8f7ffff         | lea                 edx, [ebp - 0x808]
            //   68????????           |                     
            //   52                   | push                edx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 532480
}