rule win_parasite_http_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.parasite_http."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.parasite_http"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8bcb e8???????? 8bf0 85f6 7472 bf???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7472                 | je                  0x74
            //   bf????????           |                     

        $sequence_1 = { 6a08 6a00 6a04 6a00 }
            // n = 4, score = 100
            //   6a08                 | push                8
            //   6a00                 | push                0
            //   6a04                 | push                4
            //   6a00                 | push                0

        $sequence_2 = { c3 55 8bec 83ec30 e8???????? 8945d4 e8???????? }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec30               | sub                 esp, 0x30
            //   e8????????           |                     
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   e8????????           |                     

        $sequence_3 = { 034e38 034e28 034e1c 034e18 034e0c 03d9 837df400 }
            // n = 7, score = 100
            //   034e38               | add                 ecx, dword ptr [esi + 0x38]
            //   034e28               | add                 ecx, dword ptr [esi + 0x28]
            //   034e1c               | add                 ecx, dword ptr [esi + 0x1c]
            //   034e18               | add                 ecx, dword ptr [esi + 0x18]
            //   034e0c               | add                 ecx, dword ptr [esi + 0xc]
            //   03d9                 | add                 ebx, ecx
            //   837df400             | cmp                 dword ptr [ebp - 0xc], 0

        $sequence_4 = { 8d95c8f7ffff 6814040000 8d4801 e8???????? 59 33c0 8d5801 }
            // n = 7, score = 100
            //   8d95c8f7ffff         | lea                 edx, [ebp - 0x838]
            //   6814040000           | push                0x414
            //   8d4801               | lea                 ecx, [eax + 1]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   8d5801               | lea                 ebx, [eax + 1]

        $sequence_5 = { e8???????? 85c0 7445 33c0 8d4df8 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7445                 | je                  0x47
            //   33c0                 | xor                 eax, eax
            //   8d4df8               | lea                 ecx, [ebp - 8]

        $sequence_6 = { 33c0 eb25 8bcb e8???????? 8bd0 }
            // n = 5, score = 100
            //   33c0                 | xor                 eax, eax
            //   eb25                 | jmp                 0x27
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax

        $sequence_7 = { 50 ffd3 8bf8 8bc7 5f 5e }
            // n = 6, score = 100
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   8bf8                 | mov                 edi, eax
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_8 = { 85c9 747f 395dec 753c ba14040000 }
            // n = 5, score = 100
            //   85c9                 | test                ecx, ecx
            //   747f                 | je                  0x81
            //   395dec               | cmp                 dword ptr [ebp - 0x14], ebx
            //   753c                 | jne                 0x3e
            //   ba14040000           | mov                 edx, 0x414

        $sequence_9 = { c3 55 8bec 53 56 8bd9 b9???????? }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8bd9                 | mov                 ebx, ecx
            //   b9????????           |                     

    condition:
        7 of them and filesize < 147456
}