rule win_rhttpctrl_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.rhttpctrl."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rhttpctrl"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 8d842498000000 50 e8???????? 85c0 8b442438 0f449c249c000000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d842498000000       | lea                 eax, [esp + 0x98]
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]
            //   0f449c249c000000     | cmove               ebx, dword ptr [esp + 0x9c]

        $sequence_1 = { 8d8de8feffff e9???????? 8d8dd4feffff e9???????? }
            // n = 4, score = 100
            //   8d8de8feffff         | lea                 ecx, [ebp - 0x118]
            //   e9????????           |                     
            //   8d8dd4feffff         | lea                 ecx, [ebp - 0x12c]
            //   e9????????           |                     

        $sequence_2 = { 8bda 899dd0feffff 6a03 8d85f0feffff 51 8d8decfeffff 8985ecfeffff }
            // n = 7, score = 100
            //   8bda                 | mov                 ebx, edx
            //   899dd0feffff         | mov                 dword ptr [ebp - 0x130], ebx
            //   6a03                 | push                3
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   51                   | push                ecx
            //   8d8decfeffff         | lea                 ecx, [ebp - 0x114]
            //   8985ecfeffff         | mov                 dword ptr [ebp - 0x114], eax

        $sequence_3 = { 8b4d08 83f950 7726 0fb6814c214000 ff24853c214000 }
            // n = 5, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   83f950               | cmp                 ecx, 0x50
            //   7726                 | ja                  0x28
            //   0fb6814c214000       | movzx               eax, byte ptr [ecx + 0x40214c]
            //   ff24853c214000       | jmp                 dword ptr [eax*4 + 0x40213c]

        $sequence_4 = { 8d7e04 6a02 ff37 ff10 8bf0 85f6 0f84a3000000 }
            // n = 7, score = 100
            //   8d7e04               | lea                 edi, [esi + 4]
            //   6a02                 | push                2
            //   ff37                 | push                dword ptr [edi]
            //   ff10                 | call                dword ptr [eax]
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   0f84a3000000         | je                  0xa9

        $sequence_5 = { e8???????? 83c404 68???????? ff15???????? 8b35???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   ff15????????         |                     
            //   8b35????????         |                     

        $sequence_6 = { b805400080 8d65b8 5f 5e 5b 8b4dfc 33cd }
            // n = 7, score = 100
            //   b805400080           | mov                 eax, 0x80004005
            //   8d65b8               | lea                 esp, [ebp - 0x48]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   33cd                 | xor                 ecx, ebp

        $sequence_7 = { 0fb67d18 8d1c85fcffffff 83f701 03ff 8d043b 8b348508b74100 8d4601 }
            // n = 7, score = 100
            //   0fb67d18             | movzx               edi, byte ptr [ebp + 0x18]
            //   8d1c85fcffffff       | lea                 ebx, [eax*4 - 4]
            //   83f701               | xor                 edi, 1
            //   03ff                 | add                 edi, edi
            //   8d043b               | lea                 eax, [ebx + edi]
            //   8b348508b74100       | mov                 esi, dword ptr [eax*4 + 0x41b708]
            //   8d4601               | lea                 eax, [esi + 1]

        $sequence_8 = { 83e73f c1f906 6bd738 8b0c8d30424200 c644112800 85f6 740c }
            // n = 7, score = 100
            //   83e73f               | and                 edi, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bd738               | imul                edx, edi, 0x38
            //   8b0c8d30424200       | mov                 ecx, dword ptr [ecx*4 + 0x424230]
            //   c644112800           | mov                 byte ptr [ecx + edx + 0x28], 0
            //   85f6                 | test                esi, esi
            //   740c                 | je                  0xe

        $sequence_9 = { ff742428 ff742428 ff742428 ff7008 }
            // n = 4, score = 100
            //   ff742428             | push                dword ptr [esp + 0x28]
            //   ff742428             | push                dword ptr [esp + 0x28]
            //   ff742428             | push                dword ptr [esp + 0x28]
            //   ff7008               | push                dword ptr [eax + 8]

    condition:
        7 of them and filesize < 339968
}