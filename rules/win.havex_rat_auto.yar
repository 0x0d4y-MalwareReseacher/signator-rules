rule win_havex_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.havex_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.havex_rat"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 53 50 83c11c e8???????? 53 57 8d4d88 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   50                   | push                eax
            //   83c11c               | add                 ecx, 0x1c
            //   e8????????           |                     
            //   53                   | push                ebx
            //   57                   | push                edi
            //   8d4d88               | lea                 ecx, [ebp - 0x78]

        $sequence_1 = { 893c8b 660fb678ff 8b4d74 66c1e708 66c1e908 660bf9 0fb7cf }
            // n = 7, score = 100
            //   893c8b               | mov                 dword ptr [ebx + ecx*4], edi
            //   660fb678ff           | movzx               di, byte ptr [eax - 1]
            //   8b4d74               | mov                 ecx, dword ptr [ebp + 0x74]
            //   66c1e708             | shl                 di, 8
            //   66c1e908             | shr                 cx, 8
            //   660bf9               | or                  di, cx
            //   0fb7cf               | movzx               ecx, di

        $sequence_2 = { 8d4c2418 c68424e800000007 e8???????? 8d442464 50 8d842484000000 50 }
            // n = 7, score = 100
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   c68424e800000007     | mov                 byte ptr [esp + 0xe8], 7
            //   e8????????           |                     
            //   8d442464             | lea                 eax, [esp + 0x64]
            //   50                   | push                eax
            //   8d842484000000       | lea                 eax, [esp + 0x84]
            //   50                   | push                eax

        $sequence_3 = { 85c0 741e ff757c 69c084000000 8d8405ccfdffff 50 8d45dc }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   741e                 | je                  0x20
            //   ff757c               | push                dword ptr [ebp + 0x7c]
            //   69c084000000         | imul                eax, eax, 0x84
            //   8d8405ccfdffff       | lea                 eax, [ebp + eax - 0x234]
            //   50                   | push                eax
            //   8d45dc               | lea                 eax, [ebp - 0x24]

        $sequence_4 = { 8b0f 8b4104 8b4904 03cf 0fb75130 8b4928 894de4 }
            // n = 7, score = 100
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   03cf                 | add                 ecx, edi
            //   0fb75130             | movzx               edx, word ptr [ecx + 0x30]
            //   8b4928               | mov                 ecx, dword ptr [ecx + 0x28]
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx

        $sequence_5 = { 83be6802000002 7c1a 57 50 52 51 68???????? }
            // n = 7, score = 100
            //   83be6802000002       | cmp                 dword ptr [esi + 0x268], 2
            //   7c1a                 | jl                  0x1c
            //   57                   | push                edi
            //   50                   | push                eax
            //   52                   | push                edx
            //   51                   | push                ecx
            //   68????????           |                     

        $sequence_6 = { e8???????? 8dbe64020000 8b1f 59 e8???????? 83be6802000002 7c18 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8dbe64020000         | lea                 edi, [esi + 0x264]
            //   8b1f                 | mov                 ebx, dword ptr [edi]
            //   59                   | pop                 ecx
            //   e8????????           |                     
            //   83be6802000002       | cmp                 dword ptr [esi + 0x268], 2
            //   7c18                 | jl                  0x1a

        $sequence_7 = { 8b4804 83ec18 f644310806 753d 6a01 8bc1 8b4c3028 }
            // n = 7, score = 100
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   83ec18               | sub                 esp, 0x18
            //   f644310806           | test                byte ptr [ecx + esi + 8], 6
            //   753d                 | jne                 0x3f
            //   6a01                 | push                1
            //   8bc1                 | mov                 eax, ecx
            //   8b4c3028             | mov                 ecx, dword ptr [eax + esi + 0x28]

        $sequence_8 = { 83c040 50 e8???????? 33ff 83c410 397dd0 7e20 }
            // n = 7, score = 100
            //   83c040               | add                 eax, 0x40
            //   50                   | push                eax
            //   e8????????           |                     
            //   33ff                 | xor                 edi, edi
            //   83c410               | add                 esp, 0x10
            //   397dd0               | cmp                 dword ptr [ebp - 0x30], edi
            //   7e20                 | jle                 0x22

        $sequence_9 = { 8975d8 e8???????? 8975fc 46 68???????? 8d4d80 8975d8 }
            // n = 7, score = 100
            //   8975d8               | mov                 dword ptr [ebp - 0x28], esi
            //   e8????????           |                     
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   46                   | inc                 esi
            //   68????????           |                     
            //   8d4d80               | lea                 ecx, [ebp - 0x80]
            //   8975d8               | mov                 dword ptr [ebp - 0x28], esi

    condition:
        7 of them and filesize < 892928
}