rule win_mewsei_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.mewsei."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mewsei"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 75f9 8b4c2410 2bc2 8b9190010000 }
            // n = 4, score = 400
            //   75f9                 | jne                 0xfffffffb
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   2bc2                 | sub                 eax, edx
            //   8b9190010000         | mov                 edx, dword ptr [ecx + 0x190]

        $sequence_1 = { 32c0 5e 8be5 5d c3 53 6a0e }
            // n = 7, score = 400
            //   32c0                 | xor                 al, al
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   53                   | push                ebx
            //   6a0e                 | push                0xe

        $sequence_2 = { 2bc2 8945fc e8???????? 8d5001 }
            // n = 4, score = 400
            //   2bc2                 | sub                 eax, edx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   e8????????           |                     
            //   8d5001               | lea                 edx, [eax + 1]

        $sequence_3 = { 83c40c 8bf0 e8???????? 8d4801 8d9b00000000 }
            // n = 5, score = 400
            //   83c40c               | add                 esp, 0xc
            //   8bf0                 | mov                 esi, eax
            //   e8????????           |                     
            //   8d4801               | lea                 ecx, [eax + 1]
            //   8d9b00000000         | lea                 ebx, [ebx]

        $sequence_4 = { 897df4 8b7dfc 03de 8dbc3b44eabea4 8b5df4 c1c704 }
            // n = 6, score = 400
            //   897df4               | mov                 dword ptr [ebp - 0xc], edi
            //   8b7dfc               | mov                 edi, dword ptr [ebp - 4]
            //   03de                 | add                 ebx, esi
            //   8dbc3b44eabea4       | lea                 edi, [ebx + edi - 0x5b4115bc]
            //   8b5df4               | mov                 ebx, dword ptr [ebp - 0xc]
            //   c1c704               | rol                 edi, 4

        $sequence_5 = { 7402 8930 8b45f8 5e }
            // n = 4, score = 400
            //   7402                 | je                  4
            //   8930                 | mov                 dword ptr [eax], esi
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   5e                   | pop                 esi

        $sequence_6 = { 80f966 7e0a 80f92e 7405 }
            // n = 4, score = 400
            //   80f966               | cmp                 cl, 0x66
            //   7e0a                 | jle                 0xc
            //   80f92e               | cmp                 cl, 0x2e
            //   7405                 | je                  7

        $sequence_7 = { 8dbc3b5d102fd6 8b5df4 c1c705 03fb 33df }
            // n = 5, score = 400
            //   8dbc3b5d102fd6       | lea                 edi, [ebx + edi - 0x29d0efa3]
            //   8b5df4               | mov                 ebx, dword ptr [ebp - 0xc]
            //   c1c705               | rol                 edi, 5
            //   03fb                 | add                 edi, ebx
            //   33df                 | xor                 ebx, edi

        $sequence_8 = { 40 84c9 75f9 8b4c2410 2bc2 8b9190010000 6a00 }
            // n = 7, score = 400
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl
            //   75f9                 | jne                 0xfffffffb
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   2bc2                 | sub                 eax, edx
            //   8b9190010000         | mov                 edx, dword ptr [ecx + 0x190]
            //   6a00                 | push                0

        $sequence_9 = { 51 52 57 ff15???????? 8bd8 85db }
            // n = 6, score = 400
            //   51                   | push                ecx
            //   52                   | push                edx
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   85db                 | test                ebx, ebx

    condition:
        7 of them and filesize < 504832
}