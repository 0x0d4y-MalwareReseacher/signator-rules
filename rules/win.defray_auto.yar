rule win_defray_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.defray."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.defray"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7414 50 51 8b4b70 e8???????? 84c0 751a }
            // n = 7, score = 200
            //   7414                 | je                  0x16
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8b4b70               | mov                 ecx, dword ptr [ebx + 0x70]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   751a                 | jne                 0x1c

        $sequence_1 = { 89b52cfdffff e8???????? 56 ffb504fdffff 8d4d08 e8???????? 8bf8 }
            // n = 7, score = 200
            //   89b52cfdffff         | mov                 dword ptr [ebp - 0x2d4], esi
            //   e8????????           |                     
            //   56                   | push                esi
            //   ffb504fdffff         | push                dword ptr [ebp - 0x2fc]
            //   8d4d08               | lea                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax

        $sequence_2 = { 8945e8 53 8975ec e8???????? 8b7d08 33c0 8945fc }
            // n = 7, score = 200
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   53                   | push                ebx
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi
            //   e8????????           |                     
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   33c0                 | xor                 eax, eax
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_3 = { 33c0 8d7dd8 f3ab 8d8d34f5ffff e8???????? 85c0 0f855e010000 }
            // n = 7, score = 200
            //   33c0                 | xor                 eax, eax
            //   8d7dd8               | lea                 edi, dword ptr [ebp - 0x28]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8d8d34f5ffff         | lea                 ecx, dword ptr [ebp - 0xacc]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f855e010000         | jne                 0x164

        $sequence_4 = { e8???????? c3 55 8bec 83e4f8 83ec0c b9???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83e4f8               | and                 esp, 0xfffffff8
            //   83ec0c               | sub                 esp, 0xc
            //   b9????????           |                     

        $sequence_5 = { 8dbda4fdffff 83ef02 33c9 668b4702 8d7f02 663bc1 75f4 }
            // n = 7, score = 200
            //   8dbda4fdffff         | lea                 edi, dword ptr [ebp - 0x25c]
            //   83ef02               | sub                 edi, 2
            //   33c9                 | xor                 ecx, ecx
            //   668b4702             | mov                 ax, word ptr [edi + 2]
            //   8d7f02               | lea                 edi, dword ptr [edi + 2]
            //   663bc1               | cmp                 ax, cx
            //   75f4                 | jne                 0xfffffff6

        $sequence_6 = { 59 8d4d9c 8945bc e8???????? 33c0 c745ec0f000000 }
            // n = 6, score = 200
            //   59                   | pop                 ecx
            //   8d4d9c               | lea                 ecx, dword ptr [ebp - 0x64]
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   c745ec0f000000       | mov                 dword ptr [ebp - 0x14], 0xf

        $sequence_7 = { 1bc0 23c1 83c008 5d c3 8b04c5d43e4700 5d }
            // n = 7, score = 200
            //   1bc0                 | sbb                 eax, eax
            //   23c1                 | and                 eax, ecx
            //   83c008               | add                 eax, 8
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04c5d43e4700       | mov                 eax, dword ptr [eax*8 + 0x473ed4]
            //   5d                   | pop                 ebp

        $sequence_8 = { 8bec 81ece4000000 a1???????? 33c5 8945fc 8b4508 85c0 }
            // n = 7, score = 200
            //   8bec                 | mov                 ebp, esp
            //   81ece4000000         | sub                 esp, 0xe4
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   85c0                 | test                eax, eax

        $sequence_9 = { 8d4902 6685c0 75f1 8dbdc0fdffff 83ef02 668b4702 83c702 }
            // n = 7, score = 200
            //   8d4902               | lea                 ecx, dword ptr [ecx + 2]
            //   6685c0               | test                ax, ax
            //   75f1                 | jne                 0xfffffff3
            //   8dbdc0fdffff         | lea                 edi, dword ptr [ebp - 0x240]
            //   83ef02               | sub                 edi, 2
            //   668b4702             | mov                 ax, word ptr [edi + 2]
            //   83c702               | add                 edi, 2

    condition:
        7 of them and filesize < 1253376
}