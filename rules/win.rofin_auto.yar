rule win_rofin_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.rofin."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rofin"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? a1???????? 8b15???????? 8910 890d???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   a1????????           |                     
            //   8b15????????         |                     
            //   8910                 | mov                 dword ptr [eax], edx
            //   890d????????         |                     

        $sequence_1 = { 6a01 8d8c2494000000 56 8d4330 51 50 e8???????? }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   8d8c2494000000       | lea                 ecx, [esp + 0x94]
            //   56                   | push                esi
            //   8d4330               | lea                 eax, [ebx + 0x30]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_2 = { 66397d06 7631 8db500010000 8b06 8b4e08 }
            // n = 5, score = 100
            //   66397d06             | cmp                 word ptr [ebp + 6], di
            //   7631                 | jbe                 0x33
            //   8db500010000         | lea                 esi, [ebp + 0x100]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]

        $sequence_3 = { 33c0 8d7c2414 f3ab 8b4c2410 41 85db 894c2410 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   8d7c2414             | lea                 edi, [esp + 0x14]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   41                   | inc                 ecx
            //   85db                 | test                ebx, ebx
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx

        $sequence_4 = { ff15???????? 8b442434 3bc5 89442414 0f8590010000 83fe04 7547 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8b442434             | mov                 eax, dword ptr [esp + 0x34]
            //   3bc5                 | cmp                 eax, ebp
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   0f8590010000         | jne                 0x196
            //   83fe04               | cmp                 esi, 4
            //   7547                 | jne                 0x49

        $sequence_5 = { c0e302 0ad3 8acd 8810 8a54241e c0ea02 }
            // n = 6, score = 100
            //   c0e302               | shl                 bl, 2
            //   0ad3                 | or                  dl, bl
            //   8acd                 | mov                 cl, ch
            //   8810                 | mov                 byte ptr [eax], dl
            //   8a54241e             | mov                 dl, byte ptr [esp + 0x1e]
            //   c0ea02               | shr                 dl, 2

        $sequence_6 = { 8d542418 f2ae f7d1 2bf9 50 8bf7 8be9 }
            // n = 7, score = 100
            //   8d542418             | lea                 edx, [esp + 0x18]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   50                   | push                eax
            //   8bf7                 | mov                 esi, edi
            //   8be9                 | mov                 ebp, ecx

        $sequence_7 = { 51 33c9 668b480a 52 51 33d2 }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   33c9                 | xor                 ecx, ecx
            //   668b480a             | mov                 cx, word ptr [eax + 0xa]
            //   52                   | push                edx
            //   51                   | push                ecx
            //   33d2                 | xor                 edx, edx

        $sequence_8 = { eb02 33f6 85f6 75c9 5f 5e 8bc3 }
            // n = 7, score = 100
            //   eb02                 | jmp                 4
            //   33f6                 | xor                 esi, esi
            //   85f6                 | test                esi, esi
            //   75c9                 | jne                 0xffffffcb
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   8bc3                 | mov                 eax, ebx

        $sequence_9 = { c645eb73 c645ec64 c645ed61 c645ee2d c645ef32 c645f07e c645f163 }
            // n = 7, score = 100
            //   c645eb73             | mov                 byte ptr [ebp - 0x15], 0x73
            //   c645ec64             | mov                 byte ptr [ebp - 0x14], 0x64
            //   c645ed61             | mov                 byte ptr [ebp - 0x13], 0x61
            //   c645ee2d             | mov                 byte ptr [ebp - 0x12], 0x2d
            //   c645ef32             | mov                 byte ptr [ebp - 0x11], 0x32
            //   c645f07e             | mov                 byte ptr [ebp - 0x10], 0x7e
            //   c645f163             | mov                 byte ptr [ebp - 0xf], 0x63

    condition:
        7 of them and filesize < 409600
}