rule win_rofin_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rofin."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rofin"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645cd46 c645ce41 c645cf31 c645d043 c645d133 c645d235 c645d337 }
            // n = 7, score = 100
            //   c645cd46             | mov                 byte ptr [ebp - 0x33], 0x46
            //   c645ce41             | mov                 byte ptr [ebp - 0x32], 0x41
            //   c645cf31             | mov                 byte ptr [ebp - 0x31], 0x31
            //   c645d043             | mov                 byte ptr [ebp - 0x30], 0x43
            //   c645d133             | mov                 byte ptr [ebp - 0x2f], 0x33
            //   c645d235             | mov                 byte ptr [ebp - 0x2e], 0x35
            //   c645d337             | mov                 byte ptr [ebp - 0x2d], 0x37

        $sequence_1 = { 85f6 7505 be???????? 8b5308 8bcf 8b7b04 55 }
            // n = 7, score = 100
            //   85f6                 | test                esi, esi
            //   7505                 | jne                 7
            //   be????????           |                     
            //   8b5308               | mov                 edx, dword ptr [ebx + 8]
            //   8bcf                 | mov                 ecx, edi
            //   8b7b04               | mov                 edi, dword ptr [ebx + 4]
            //   55                   | push                ebp

        $sequence_2 = { 895500 8a0b 84c9 89542420 c644242800 b001 0f84bb000000 }
            // n = 7, score = 100
            //   895500               | mov                 dword ptr [ebp], edx
            //   8a0b                 | mov                 cl, byte ptr [ebx]
            //   84c9                 | test                cl, cl
            //   89542420             | mov                 dword ptr [esp + 0x20], edx
            //   c644242800           | mov                 byte ptr [esp + 0x28], 0
            //   b001                 | mov                 al, 1
            //   0f84bb000000         | je                  0xc1

        $sequence_3 = { 85c0 751d 8b4678 85c0 7416 8b4670 85c0 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   751d                 | jne                 0x1f
            //   8b4678               | mov                 eax, dword ptr [esi + 0x78]
            //   85c0                 | test                eax, eax
            //   7416                 | je                  0x18
            //   8b4670               | mov                 eax, dword ptr [esi + 0x70]
            //   85c0                 | test                eax, eax

        $sequence_4 = { 51 66c74424460200 c744245054000000 c74424480a000000 e8???????? 83c408 8d54243c }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   66c74424460200       | mov                 word ptr [esp + 0x46], 2
            //   c744245054000000     | mov                 dword ptr [esp + 0x50], 0x54
            //   c74424480a000000     | mov                 dword ptr [esp + 0x48], 0xa
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8d54243c             | lea                 edx, [esp + 0x3c]

        $sequence_5 = { 0f859d000000 8b742418 8b86d4030000 85c0 746d b90f000000 33c0 }
            // n = 7, score = 100
            //   0f859d000000         | jne                 0xa3
            //   8b742418             | mov                 esi, dword ptr [esp + 0x18]
            //   8b86d4030000         | mov                 eax, dword ptr [esi + 0x3d4]
            //   85c0                 | test                eax, eax
            //   746d                 | je                  0x6f
            //   b90f000000           | mov                 ecx, 0xf
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { e8???????? eb73 bf???????? 83c9ff 33c0 f2ae f7d1 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb73                 | jmp                 0x75
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_7 = { 33c0 5b 81c40c010000 c3 8bfd 83c9ff 33c0 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   81c40c010000         | add                 esp, 0x10c
            //   c3                   | ret                 
            //   8bfd                 | mov                 edi, ebp
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 03d8 8d0458 03c7 41 3bca 72eb }
            // n = 6, score = 100
            //   03d8                 | add                 ebx, eax
            //   8d0458               | lea                 eax, [eax + ebx*2]
            //   03c7                 | add                 eax, edi
            //   41                   | inc                 ecx
            //   3bca                 | cmp                 ecx, edx
            //   72eb                 | jb                  0xffffffed

        $sequence_9 = { 03e9 57 8d54301c 55 52 8bce e8???????? }
            // n = 7, score = 100
            //   03e9                 | add                 ebp, ecx
            //   57                   | push                edi
            //   8d54301c             | lea                 edx, [eax + esi + 0x1c]
            //   55                   | push                ebp
            //   52                   | push                edx
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

    condition:
        7 of them and filesize < 409600
}