rule win_starsypound_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.starsypound."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.starsypound"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf0 83feff 7470 8b3d???????? 8d542410 68???????? }
            // n = 6, score = 100
            //   8bf0                 | mov                 esi, eax
            //   83feff               | cmp                 esi, -1
            //   7470                 | je                  0x72
            //   8b3d????????         |                     
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   68????????           |                     

        $sequence_1 = { 6a00 6a04 6a0a 51 52 e8???????? 83c40c }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   6a04                 | push                4
            //   6a0a                 | push                0xa
            //   51                   | push                ecx
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_2 = { 885c3438 c744241804010000 ff15???????? 8dbc2458010000 83c9ff 33c0 }
            // n = 6, score = 100
            //   885c3438             | mov                 byte ptr [esp + esi + 0x38], bl
            //   c744241804010000     | mov                 dword ptr [esp + 0x18], 0x104
            //   ff15????????         |                     
            //   8dbc2458010000       | lea                 edi, [esp + 0x158]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_3 = { 8be8 83c404 b906000000 8bfd 8d44240c f3a5 }
            // n = 6, score = 100
            //   8be8                 | mov                 ebp, eax
            //   83c404               | add                 esp, 4
            //   b906000000           | mov                 ecx, 6
            //   8bfd                 | mov                 edi, ebp
            //   8d44240c             | lea                 eax, [esp + 0xc]
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]

        $sequence_4 = { 7470 8b3d???????? 8d542410 68???????? 52 }
            // n = 5, score = 100
            //   7470                 | je                  0x72
            //   8b3d????????         |                     
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   68????????           |                     
            //   52                   | push                edx

        $sequence_5 = { 8bc8 33c0 83e103 f3a4 8dbc245c010000 }
            // n = 5, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   33c0                 | xor                 eax, eax
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8dbc245c010000       | lea                 edi, [esp + 0x15c]

        $sequence_6 = { 81ec14040000 55 56 57 }
            // n = 4, score = 100
            //   81ec14040000         | sub                 esp, 0x414
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_7 = { f2ae f7d1 49 2bca 3bf1 7cdf }
            // n = 6, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   2bca                 | sub                 ecx, edx
            //   3bf1                 | cmp                 esi, ecx
            //   7cdf                 | jl                  0xffffffe1

        $sequence_8 = { 8b450c 8d542420 51 52 }
            // n = 4, score = 100
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   51                   | push                ecx
            //   52                   | push                edx

        $sequence_9 = { 6a18 e8???????? 8bb42424040000 8bd8 83c404 b906000000 8bfb }
            // n = 7, score = 100
            //   6a18                 | push                0x18
            //   e8????????           |                     
            //   8bb42424040000       | mov                 esi, dword ptr [esp + 0x424]
            //   8bd8                 | mov                 ebx, eax
            //   83c404               | add                 esp, 4
            //   b906000000           | mov                 ecx, 6
            //   8bfb                 | mov                 edi, ebx

    condition:
        7 of them and filesize < 40960
}