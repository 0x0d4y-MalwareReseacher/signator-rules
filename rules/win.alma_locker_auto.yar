rule win_alma_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.alma_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_locker"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 68???????? b9???????? c645fc42 e8???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   68????????           |                     
            //   b9????????           |                     
            //   c645fc42             | mov                 byte ptr [ebp - 4], 0x42
            //   e8????????           |                     

        $sequence_1 = { 83bde4faffff10 720e ffb5d0faffff e8???????? 83c404 83bd9cfbffff10 8d8588fbffff }
            // n = 7, score = 100
            //   83bde4faffff10       | cmp                 dword ptr [ebp - 0x51c], 0x10
            //   720e                 | jb                  0x10
            //   ffb5d0faffff         | push                dword ptr [ebp - 0x530]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   83bd9cfbffff10       | cmp                 dword ptr [ebp - 0x464], 0x10
            //   8d8588fbffff         | lea                 eax, [ebp - 0x478]

        $sequence_2 = { e9???????? 8d8d9cfeffff e9???????? 8d8d44ffffff e9???????? 8d8d14ffffff e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8d8d9cfeffff         | lea                 ecx, [ebp - 0x164]
            //   e9????????           |                     
            //   8d8d44ffffff         | lea                 ecx, [ebp - 0xbc]
            //   e9????????           |                     
            //   8d8d14ffffff         | lea                 ecx, [ebp - 0xec]
            //   e9????????           |                     

        $sequence_3 = { e8???????? 83c404 83bd9cfbffff10 c68570fbffff00 c78580fbffff00000000 c78584fbffff0f000000 720e }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   83bd9cfbffff10       | cmp                 dword ptr [ebp - 0x464], 0x10
            //   c68570fbffff00       | mov                 byte ptr [ebp - 0x490], 0
            //   c78580fbffff00000000     | mov    dword ptr [ebp - 0x480], 0
            //   c78584fbffff0f000000     | mov    dword ptr [ebp - 0x47c], 0xf
            //   720e                 | jb                  0x10

        $sequence_4 = { 2bf0 e8???????? 83c404 68???????? 8bd0 c645fc01 8d4d8c }
            // n = 7, score = 100
            //   2bf0                 | sub                 esi, eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   8bd0                 | mov                 edx, eax
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8d4d8c               | lea                 ecx, [ebp - 0x74]

        $sequence_5 = { 83c404 33c0 c78540ffffff07000000 83bdc8feffff08 }
            // n = 4, score = 100
            //   83c404               | add                 esp, 4
            //   33c0                 | xor                 eax, eax
            //   c78540ffffff07000000     | mov    dword ptr [ebp - 0xc0], 7
            //   83bdc8feffff08       | cmp                 dword ptr [ebp - 0x138], 8

        $sequence_6 = { 894dec c645fc01 85c9 741e 33c0 c7411407000000 }
            // n = 6, score = 100
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   85c9                 | test                ecx, ecx
            //   741e                 | je                  0x20
            //   33c0                 | xor                 eax, eax
            //   c7411407000000       | mov                 dword ptr [ecx + 0x14], 7

        $sequence_7 = { 83c404 33c0 c78594faffff07000000 c78590faffff00000000 66898580faffff c645fc1f }
            // n = 6, score = 100
            //   83c404               | add                 esp, 4
            //   33c0                 | xor                 eax, eax
            //   c78594faffff07000000     | mov    dword ptr [ebp - 0x56c], 7
            //   c78590faffff00000000     | mov    dword ptr [ebp - 0x570], 0
            //   66898580faffff       | mov                 word ptr [ebp - 0x580], ax
            //   c645fc1f             | mov                 byte ptr [ebp - 4], 0x1f

        $sequence_8 = { 6a02 50 ff15???????? 8bf0 83feff 0f84dafdffff }
            // n = 6, score = 100
            //   6a02                 | push                2
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   83feff               | cmp                 esi, -1
            //   0f84dafdffff         | je                  0xfffffde0

        $sequence_9 = { c645fc56 e8???????? 68???????? b9???????? }
            // n = 4, score = 100
            //   c645fc56             | mov                 byte ptr [ebp - 4], 0x56
            //   e8????????           |                     
            //   68????????           |                     
            //   b9????????           |                     

    condition:
        7 of them and filesize < 335872
}