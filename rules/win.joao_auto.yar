rule win_joao_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.joao."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.joao"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7307 894de0 8bd8 eb05 }
            // n = 4, score = 400
            //   7307                 | jae                 9
            //   894de0               | mov                 dword ptr [ebp - 0x20], ecx
            //   8bd8                 | mov                 ebx, eax
            //   eb05                 | jmp                 7

        $sequence_1 = { 6a00 56 ff5510 8bf8 85ff 750c 8d4705 }
            // n = 7, score = 400
            //   6a00                 | push                0
            //   56                   | push                esi
            //   ff5510               | call                dword ptr [ebp + 0x10]
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   750c                 | jne                 0xe
            //   8d4705               | lea                 eax, dword ptr [edi + 5]

        $sequence_2 = { 8845d4 c745fc01000000 84c0 0f84dc000000 8b16 }
            // n = 5, score = 400
            //   8845d4               | mov                 byte ptr [ebp - 0x2c], al
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   84c0                 | test                al, al
            //   0f84dc000000         | je                  0xe2
            //   8b16                 | mov                 edx, dword ptr [esi]

        $sequence_3 = { 8b4804 8b4c3138 c645ef01 4b }
            // n = 4, score = 400
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8b4c3138             | mov                 ecx, dword ptr [ecx + esi + 0x38]
            //   c645ef01             | mov                 byte ptr [ebp - 0x11], 1
            //   4b                   | dec                 ebx

        $sequence_4 = { e8???????? 83c404 897e14 897e18 897e1c 8b4604 }
            // n = 6, score = 400
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   897e14               | mov                 dword ptr [esi + 0x14], edi
            //   897e18               | mov                 dword ptr [esi + 0x18], edi
            //   897e1c               | mov                 dword ptr [esi + 0x1c], edi
            //   8b4604               | mov                 eax, dword ptr [esi + 4]

        $sequence_5 = { 8b4c3318 03de c745d000000000 85c9 746f 8b4320 }
            // n = 6, score = 400
            //   8b4c3318             | mov                 ecx, dword ptr [ebx + esi + 0x18]
            //   03de                 | add                 ebx, esi
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   85c9                 | test                ecx, ecx
            //   746f                 | je                  0x71
            //   8b4320               | mov                 eax, dword ptr [ebx + 0x20]

        $sequence_6 = { 50 e8???????? 83c404 bf02000000 b8???????? 897dd0 }
            // n = 6, score = 400
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   bf02000000           | mov                 edi, 2
            //   b8????????           |                     
            //   897dd0               | mov                 dword ptr [ebp - 0x30], edi

        $sequence_7 = { 85c0 750e 5f 5e b804000000 }
            // n = 5, score = 400
            //   85c0                 | test                eax, eax
            //   750e                 | jne                 0x10
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   b804000000           | mov                 eax, 4

        $sequence_8 = { 8d45f8 50 8bce c745f803000000 897dfc e8???????? }
            // n = 6, score = 400
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi
            //   c745f803000000       | mov                 dword ptr [ebp - 8], 3
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   e8????????           |                     

        $sequence_9 = { 6a00 6a00 56 ffd0 8bf8 }
            // n = 5, score = 400
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   56                   | push                esi
            //   ffd0                 | call                eax
            //   8bf8                 | mov                 edi, eax

    condition:
        7 of them and filesize < 2867200
}