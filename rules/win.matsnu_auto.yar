rule win_matsnu_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.matsnu."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.matsnu"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7509 837dd20c 7403 ff45d2 }
            // n = 4, score = 700
            //   7509                 | jne                 0xb
            //   837dd20c             | cmp                 dword ptr [ebp - 0x2e], 0xc
            //   7403                 | je                  5
            //   ff45d2               | inc                 dword ptr [ebp - 0x2e]

        $sequence_1 = { c745b801000000 8b45b8 c9 c20c00 55 89e5 }
            // n = 6, score = 700
            //   c745b801000000       | mov                 dword ptr [ebp - 0x48], 1
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   c9                   | leave               
            //   c20c00               | ret                 0xc
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp

        $sequence_2 = { 750f c785a4fbffff02000000 e9???????? 8985bcfbffff 83bdb0fbffff01 0f8588000000 8b85bcfbffff }
            // n = 7, score = 700
            //   750f                 | jne                 0x11
            //   c785a4fbffff02000000     | mov    dword ptr [ebp - 0x45c], 2
            //   e9????????           |                     
            //   8985bcfbffff         | mov                 dword ptr [ebp - 0x444], eax
            //   83bdb0fbffff01       | cmp                 dword ptr [ebp - 0x450], 1
            //   0f8588000000         | jne                 0x8e
            //   8b85bcfbffff         | mov                 eax, dword ptr [ebp - 0x444]

        $sequence_3 = { 7225 8b4dd2 b801000000 d1e0 }
            // n = 4, score = 700
            //   7225                 | jb                  0x27
            //   8b4dd2               | mov                 ecx, dword ptr [ebp - 0x2e]
            //   b801000000           | mov                 eax, 1
            //   d1e0                 | shl                 eax, 1

        $sequence_4 = { 8d8df0fdffff 51 ffb5f4fdffff 6a00 6a01 6a00 }
            // n = 6, score = 700
            //   8d8df0fdffff         | lea                 ecx, dword ptr [ebp - 0x210]
            //   51                   | push                ecx
            //   ffb5f4fdffff         | push                dword ptr [ebp - 0x20c]
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a00                 | push                0

        $sequence_5 = { 83ec18 c745e800000000 c745ec00000000 c745f000000000 c745f400000000 c745f800000000 }
            // n = 6, score = 700
            //   83ec18               | sub                 esp, 0x18
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0
            //   c745f000000000       | mov                 dword ptr [ebp - 0x10], 0
            //   c745f400000000       | mov                 dword ptr [ebp - 0xc], 0
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0

        $sequence_6 = { 243f 8d55bc 01c2 8a02 884703 }
            // n = 5, score = 700
            //   243f                 | and                 al, 0x3f
            //   8d55bc               | lea                 edx, dword ptr [ebp - 0x44]
            //   01c2                 | add                 edx, eax
            //   8a02                 | mov                 al, byte ptr [edx]
            //   884703               | mov                 byte ptr [edi + 3], al

        $sequence_7 = { c3 ff837d080074 06 837d0c00 }
            // n = 4, score = 700
            //   c3                   | ret                 
            //   ff837d080074         | inc                 dword ptr [ebx + 0x7400087d]
            //   06                   | push                es
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0

        $sequence_8 = { c645f700 c645f800 c645f90d c645fa0a c645fb00 c745fc00000000 }
            // n = 6, score = 700
            //   c645f700             | mov                 byte ptr [ebp - 9], 0
            //   c645f800             | mov                 byte ptr [ebp - 8], 0
            //   c645f90d             | mov                 byte ptr [ebp - 7], 0xd
            //   c645fa0a             | mov                 byte ptr [ebp - 6], 0xa
            //   c645fb00             | mov                 byte ptr [ebp - 5], 0
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0

        $sequence_9 = { 8985c8fbffff 31c0 8985bcfbffff ffb5c4fbffff e8???????? 83f800 }
            // n = 6, score = 700
            //   8985c8fbffff         | mov                 dword ptr [ebp - 0x438], eax
            //   31c0                 | xor                 eax, eax
            //   8985bcfbffff         | mov                 dword ptr [ebp - 0x444], eax
            //   ffb5c4fbffff         | push                dword ptr [ebp - 0x43c]
            //   e8????????           |                     
            //   83f800               | cmp                 eax, 0

    condition:
        7 of them and filesize < 606992
}