rule win_gratem_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.gratem."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gratem"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c705????????cb304000 8935???????? a3???????? ff15???????? }
            // n = 4, score = 100
            //   c705????????cb304000     |     
            //   8935????????         |                     
            //   a3????????           |                     
            //   ff15????????         |                     

        $sequence_1 = { 33c9 6685c0 741f 0fb7c0 babd450000 663bc2 0f8472010000 }
            // n = 7, score = 100
            //   33c9                 | xor                 ecx, ecx
            //   6685c0               | test                ax, ax
            //   741f                 | je                  0x21
            //   0fb7c0               | movzx               eax, ax
            //   babd450000           | mov                 edx, 0x45bd
            //   663bc2               | cmp                 ax, dx
            //   0f8472010000         | je                  0x178

        $sequence_2 = { 85c0 7521 e8???????? 85c0 7518 57 8b3d???????? }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7521                 | jne                 0x23
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7518                 | jne                 0x1a
            //   57                   | push                edi
            //   8b3d????????         |                     

        $sequence_3 = { 33c9 6685c0 741f 0fb7c0 baa3170000 663bc2 }
            // n = 6, score = 100
            //   33c9                 | xor                 ecx, ecx
            //   6685c0               | test                ax, ax
            //   741f                 | je                  0x21
            //   0fb7c0               | movzx               eax, ax
            //   baa3170000           | mov                 edx, 0x17a3
            //   663bc2               | cmp                 ax, dx

        $sequence_4 = { 0f8402030000 0fb7048d64bc4000 41 6685c0 75e4 32c9 884e01 }
            // n = 7, score = 100
            //   0f8402030000         | je                  0x308
            //   0fb7048d64bc4000     | movzx               eax, word ptr [ecx*4 + 0x40bc64]
            //   41                   | inc                 ecx
            //   6685c0               | test                ax, ax
            //   75e4                 | jne                 0xffffffe6
            //   32c9                 | xor                 cl, cl
            //   884e01               | mov                 byte ptr [esi + 1], cl

        $sequence_5 = { 741f 0fb7c0 baa8540000 663bc2 0f8420050000 0fb7048d64bc4000 41 }
            // n = 7, score = 100
            //   741f                 | je                  0x21
            //   0fb7c0               | movzx               eax, ax
            //   baa8540000           | mov                 edx, 0x54a8
            //   663bc2               | cmp                 ax, dx
            //   0f8420050000         | je                  0x526
            //   0fb7048d64bc4000     | movzx               eax, word ptr [ecx*4 + 0x40bc64]
            //   41                   | inc                 ecx

        $sequence_6 = { ffd5 85c0 747c 8b442414 85c0 }
            // n = 5, score = 100
            //   ffd5                 | call                ebp
            //   85c0                 | test                eax, eax
            //   747c                 | je                  0x7e
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   85c0                 | test                eax, eax

        $sequence_7 = { ffd5 6a04 894714 6800300000 40 }
            // n = 5, score = 100
            //   ffd5                 | call                ebp
            //   6a04                 | push                4
            //   894714               | mov                 dword ptr [edi + 0x14], eax
            //   6800300000           | push                0x3000
            //   40                   | inc                 eax

        $sequence_8 = { 56 0fb632 33c9 8bff 8bc6 33c1 3ceb }
            // n = 7, score = 100
            //   56                   | push                esi
            //   0fb632               | movzx               esi, byte ptr [edx]
            //   33c9                 | xor                 ecx, ecx
            //   8bff                 | mov                 edi, edi
            //   8bc6                 | mov                 eax, esi
            //   33c1                 | xor                 eax, ecx
            //   3ceb                 | cmp                 al, 0xeb

        $sequence_9 = { baa3170000 663bc2 0f84e5010000 0fb7048d64bc4000 41 6685c0 75e4 }
            // n = 7, score = 100
            //   baa3170000           | mov                 edx, 0x17a3
            //   663bc2               | cmp                 ax, dx
            //   0f84e5010000         | je                  0x1eb
            //   0fb7048d64bc4000     | movzx               eax, word ptr [ecx*4 + 0x40bc64]
            //   41                   | inc                 ecx
            //   6685c0               | test                ax, ax
            //   75e4                 | jne                 0xffffffe6

    condition:
        7 of them and filesize < 155648
}