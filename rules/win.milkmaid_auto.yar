rule win_milkmaid_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.milkmaid."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.milkmaid"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? 6883000000 53 899c24e8280100 ff15???????? 8bf0 56 }
            // n = 7, score = 100
            //   68????????           |                     
            //   6883000000           | push                0x83
            //   53                   | push                ebx
            //   899c24e8280100       | mov                 dword ptr [esp + 0x128e8], ebx
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi

        $sequence_1 = { 81e1ff0f0000 33db 84c0 8a5c2918 895c2428 }
            // n = 5, score = 100
            //   81e1ff0f0000         | and                 ecx, 0xfff
            //   33db                 | xor                 ebx, ebx
            //   84c0                 | test                al, al
            //   8a5c2918             | mov                 bl, byte ptr [ecx + ebp + 0x18]
            //   895c2428             | mov                 dword ptr [esp + 0x28], ebx

        $sequence_2 = { c68424e828010001 e8???????? 85c0 753e 8d4c2414 889c24dc280100 e8???????? }
            // n = 7, score = 100
            //   c68424e828010001     | mov                 byte ptr [esp + 0x128e8], 1
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   753e                 | jne                 0x40
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   889c24dc280100       | mov                 byte ptr [esp + 0x128dc], bl
            //   e8????????           |                     

        $sequence_3 = { eb05 8b5708 2bd1 8b5c2428 }
            // n = 4, score = 100
            //   eb05                 | jmp                 7
            //   8b5708               | mov                 edx, dword ptr [edi + 8]
            //   2bd1                 | sub                 edx, ecx
            //   8b5c2428             | mov                 ebx, dword ptr [esp + 0x28]

        $sequence_4 = { 6a00 50 ff15???????? 8b74241c 8d4c2404 51 }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b74241c             | mov                 esi, dword ptr [esp + 0x1c]
            //   8d4c2404             | lea                 ecx, [esp + 4]
            //   51                   | push                ecx

        $sequence_5 = { e8???????? 83c404 8d4c2478 c68424dc28010002 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8d4c2478             | lea                 ecx, [esp + 0x78]
            //   c68424dc28010002     | mov                 byte ptr [esp + 0x128dc], 2

        $sequence_6 = { 8d8c2480000000 c68424e428010003 e8???????? b911000000 }
            // n = 4, score = 100
            //   8d8c2480000000       | lea                 ecx, [esp + 0x80]
            //   c68424e428010003     | mov                 byte ptr [esp + 0x128e4], 3
            //   e8????????           |                     
            //   b911000000           | mov                 ecx, 0x11

        $sequence_7 = { 57 50 e8???????? 83c404 33db 68???????? 6883000000 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33db                 | xor                 ebx, ebx
            //   68????????           |                     
            //   6883000000           | push                0x83

    condition:
        7 of them and filesize < 65536
}