rule win_milkmaid_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.milkmaid."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.milkmaid"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6aff 68???????? 50 b8c8280100 }
            // n = 4, score = 100
            //   6aff                 | push                -1
            //   68????????           |                     
            //   50                   | push                eax
            //   b8c8280100           | mov                 eax, 0x128c8

        $sequence_1 = { 8d4c2414 889c24dc280100 e8???????? 8d4c240c c78424dc280100ffffffff e8???????? }
            // n = 6, score = 100
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   889c24dc280100       | mov                 byte ptr [esp + 0x128dc], bl
            //   e8????????           |                     
            //   8d4c240c             | lea                 ecx, [esp + 0xc]
            //   c78424dc280100ffffffff     | mov    dword ptr [esp + 0x128dc], 0xffffffff
            //   e8????????           |                     

        $sequence_2 = { 8d442408 57 50 e8???????? 83c404 33db 68???????? }
            // n = 7, score = 100
            //   8d442408             | lea                 eax, [esp + 8]
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33db                 | xor                 ebx, ebx
            //   68????????           |                     

        $sequence_3 = { 83ec2c 55 8be9 896c2420 8a8528280100 }
            // n = 5, score = 100
            //   83ec2c               | sub                 esp, 0x2c
            //   55                   | push                ebp
            //   8be9                 | mov                 ebp, ecx
            //   896c2420             | mov                 dword ptr [esp + 0x20], ebp
            //   8a8528280100         | mov                 al, byte ptr [ebp + 0x12828]

        $sequence_4 = { 53 53 8d4c2434 89542454 c784248400000001000000 66899c2488000000 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   8d4c2434             | lea                 ecx, [esp + 0x34]
            //   89542454             | mov                 dword ptr [esp + 0x54], edx
            //   c784248400000001000000     | mov    dword ptr [esp + 0x84], 1
            //   66899c2488000000     | mov                 word ptr [esp + 0x88], bx

        $sequence_5 = { 8d4c2408 e8???????? 8b442404 6a00 50 }
            // n = 5, score = 100
            //   8d4c2408             | lea                 ecx, [esp + 8]
            //   e8????????           |                     
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   6a00                 | push                0
            //   50                   | push                eax

        $sequence_6 = { 50 53 ff15???????? 8d4c2478 c68424dc28010002 e8???????? }
            // n = 6, score = 100
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8d4c2478             | lea                 ecx, [esp + 0x78]
            //   c68424dc28010002     | mov                 byte ptr [esp + 0x128dc], 2
            //   e8????????           |                     

        $sequence_7 = { 64892500000000 e8???????? 53 56 8d442408 }
            // n = 5, score = 100
            //   64892500000000       | mov                 dword ptr fs:[0], esp
            //   e8????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8d442408             | lea                 eax, [esp + 8]

    condition:
        7 of them and filesize < 65536
}