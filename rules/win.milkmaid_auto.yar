rule win_milkmaid_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.milkmaid."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.milkmaid"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a5c2918 895c2428 7513 8b5508 }
            // n = 4, score = 100
            //   8a5c2918             | mov                 bl, byte ptr [ecx + ebp + 0x18]
            //   895c2428             | mov                 dword ptr [esp + 0x28], ebx
            //   7513                 | jne                 0x15
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]

        $sequence_1 = { 8d4c2434 89542454 c784248400000001000000 66899c2488000000 e8???????? 50 }
            // n = 6, score = 100
            //   8d4c2434             | lea                 ecx, dword ptr [esp + 0x34]
            //   89542454             | mov                 dword ptr [esp + 0x54], edx
            //   c784248400000001000000     | mov    dword ptr [esp + 0x84], 1
            //   66899c2488000000     | mov                 word ptr [esp + 0x88], bx
            //   e8????????           |                     
            //   50                   | push                eax

        $sequence_2 = { 8d4c2478 c68424dc28010002 e8???????? 8b442410 8b4c240c }
            // n = 5, score = 100
            //   8d4c2478             | lea                 ecx, dword ptr [esp + 0x78]
            //   c68424dc28010002     | mov                 byte ptr [esp + 0x128dc], 2
            //   e8????????           |                     
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]

        $sequence_3 = { 50 ff15???????? 8b74241c 8d4c2404 51 8bce e8???????? }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b74241c             | mov                 esi, dword ptr [esp + 0x1c]
            //   8d4c2404             | lea                 ecx, dword ptr [esp + 4]
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_4 = { b8c8280100 64892500000000 e8???????? 53 56 8d442408 }
            // n = 6, score = 100
            //   b8c8280100           | mov                 eax, 0x128c8
            //   64892500000000       | mov                 dword ptr fs:[0], esp
            //   e8????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8d442408             | lea                 eax, dword ptr [esp + 8]

        $sequence_5 = { 56 68???????? 8d4c2408 c744240c00000000 }
            // n = 4, score = 100
            //   56                   | push                esi
            //   68????????           |                     
            //   8d4c2408             | lea                 ecx, dword ptr [esp + 8]
            //   c744240c00000000     | mov                 dword ptr [esp + 0xc], 0

        $sequence_6 = { e8???????? 83c404 33db 68???????? 6883000000 53 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33db                 | xor                 ebx, ebx
            //   68????????           |                     
            //   6883000000           | push                0x83
            //   53                   | push                ebx

        $sequence_7 = { 6800010000 8d4c2408 c744241801000000 e8???????? 50 }
            // n = 5, score = 100
            //   6800010000           | push                0x100
            //   8d4c2408             | lea                 ecx, dword ptr [esp + 8]
            //   c744241801000000     | mov                 dword ptr [esp + 0x18], 1
            //   e8????????           |                     
            //   50                   | push                eax

    condition:
        7 of them and filesize < 65536
}