rule win_cinobi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.cinobi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cinobi"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c9 c3 55 8bec 51 e8???????? 58 }
            // n = 7, score = 200
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   e8????????           |                     
            //   58                   | pop                 eax

        $sequence_1 = { 8845ea 8b45c0 8a402f 8845eb 8b45c0 }
            // n = 5, score = 100
            //   8845ea               | mov                 byte ptr [ebp - 0x16], al
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   8a402f               | mov                 al, byte ptr [eax + 0x2f]
            //   8845eb               | mov                 byte ptr [ebp - 0x15], al
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]

        $sequence_2 = { 8b4dc0 89416b 8b45c0 ff705f 8b45c0 }
            // n = 5, score = 100
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]
            //   89416b               | mov                 dword ptr [ecx + 0x6b], eax
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   ff705f               | push                dword ptr [eax + 0x5f]
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]

        $sequence_3 = { 6a3c 8bc6 5f f7f7 }
            // n = 4, score = 100
            //   6a3c                 | push                0x3c
            //   8bc6                 | mov                 eax, esi
            //   5f                   | pop                 edi
            //   f7f7                 | div                 edi

        $sequence_4 = { b858020000 59 8bc8 49 c6840f201c000000 75f5 }
            // n = 6, score = 100
            //   b858020000           | mov                 eax, 0x258
            //   59                   | pop                 ecx
            //   8bc8                 | mov                 ecx, eax
            //   49                   | dec                 ecx
            //   c6840f201c000000     | mov                 byte ptr [edi + ecx + 0x1c20], 0
            //   75f5                 | jne                 0xfffffff7

        $sequence_5 = { 7310 ff75a4 e8???????? 59 32c0 e9???????? }
            // n = 6, score = 100
            //   7310                 | jae                 0x12
            //   ff75a4               | push                dword ptr [ebp - 0x5c]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   32c0                 | xor                 al, al
            //   e9????????           |                     

        $sequence_6 = { 8b45f8 660fbe404b 668985defdffff 8b45f8 660fbe4003 668985e0fdffff 8b45f8 }
            // n = 7, score = 100
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   660fbe404b           | movsx               ax, byte ptr [eax + 0x4b]
            //   668985defdffff       | mov                 word ptr [ebp - 0x222], ax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   660fbe4003           | movsx               ax, byte ptr [eax + 3]
            //   668985e0fdffff       | mov                 word ptr [ebp - 0x220], ax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_7 = { eb2c 83ffff 7507 e8???????? 8bf8 }
            // n = 5, score = 100
            //   eb2c                 | jmp                 0x2e
            //   83ffff               | cmp                 edi, -1
            //   7507                 | jne                 9
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax

        $sequence_8 = { ff705f ff75dc e8???????? 83c40c 8b4dc0 89415f }
            // n = 6, score = 100
            //   ff705f               | push                dword ptr [eax + 0x5f]
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]
            //   89415f               | mov                 dword ptr [ecx + 0x5f], eax

        $sequence_9 = { 8b45d8 8945d4 8b45c0 8945d8 8365c800 8b45c8 }
            // n = 6, score = 100
            //   8b45d8               | mov                 eax, dword ptr [ebp - 0x28]
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   8365c800             | and                 dword ptr [ebp - 0x38], 0
            //   8b45c8               | mov                 eax, dword ptr [ebp - 0x38]

        $sequence_10 = { 8a19 8818 8811 0fb600 8b4d0c 0fb6d2 }
            // n = 6, score = 100
            //   8a19                 | mov                 bl, byte ptr [ecx]
            //   8818                 | mov                 byte ptr [eax], bl
            //   8811                 | mov                 byte ptr [ecx], dl
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   0fb6d2               | movzx               edx, dl

        $sequence_11 = { 8d45e0 8945d4 8d45f4 8945d8 }
            // n = 4, score = 100
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax

        $sequence_12 = { 53 ff75f0 ff96d7000000 8a45ff 5e }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   ff96d7000000         | call                dword ptr [esi + 0xd7]
            //   8a45ff               | mov                 al, byte ptr [ebp - 1]
            //   5e                   | pop                 esi

        $sequence_13 = { 8d8d6cf6ffff e8???????? 8dbc456cf6ffff 8d4de4 e8???????? 8d8d6cf6ffff e8???????? }
            // n = 7, score = 100
            //   8d8d6cf6ffff         | lea                 ecx, [ebp - 0x994]
            //   e8????????           |                     
            //   8dbc456cf6ffff       | lea                 edi, [ebp + eax*2 - 0x994]
            //   8d4de4               | lea                 ecx, [ebp - 0x1c]
            //   e8????????           |                     
            //   8d8d6cf6ffff         | lea                 ecx, [ebp - 0x994]
            //   e8????????           |                     

        $sequence_14 = { 03c2 25ff000000 8a8405f8feffff 300431 46 3b7510 72bc }
            // n = 7, score = 100
            //   03c2                 | add                 eax, edx
            //   25ff000000           | and                 eax, 0xff
            //   8a8405f8feffff       | mov                 al, byte ptr [ebp + eax - 0x108]
            //   300431               | xor                 byte ptr [ecx + esi], al
            //   46                   | inc                 esi
            //   3b7510               | cmp                 esi, dword ptr [ebp + 0x10]
            //   72bc                 | jb                  0xffffffbe

    condition:
        7 of them and filesize < 32768
}