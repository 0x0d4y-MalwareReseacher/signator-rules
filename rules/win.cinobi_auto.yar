rule win_cinobi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.cinobi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cinobi"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c9 c3 55 8bec 51 e8???????? 58 }
            // n = 7, score = 200
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   e8????????           |                     
            //   58                   | pop                 eax

        $sequence_1 = { 894167 8b45c0 ff705f 8b45c0 }
            // n = 4, score = 100
            //   894167               | mov                 dword ptr [ecx + 0x67], eax
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   ff705f               | push                dword ptr [eax + 0x5f]
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]

        $sequence_2 = { 59 84c0 7444 8b450c 8b4de4 }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   84c0                 | test                al, al
            //   7444                 | je                  0x46
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]

        $sequence_3 = { 8b45bc 8a400a 8845dc 8b45bc }
            // n = 4, score = 100
            //   8b45bc               | mov                 eax, dword ptr [ebp - 0x44]
            //   8a400a               | mov                 al, byte ptr [eax + 0xa]
            //   8845dc               | mov                 byte ptr [ebp - 0x24], al
            //   8b45bc               | mov                 eax, dword ptr [ebp - 0x44]

        $sequence_4 = { ffb0d7000000 ff75bc e8???????? 83c40c 8b4dc0 8981d7000000 }
            // n = 6, score = 100
            //   ffb0d7000000         | push                dword ptr [eax + 0xd7]
            //   ff75bc               | push                dword ptr [ebp - 0x44]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]
            //   8981d7000000         | mov                 dword ptr [ecx + 0xd7], eax

        $sequence_5 = { 8945fc b878440700 0345fc 8945bc 8b45bc }
            // n = 5, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   b878440700           | mov                 eax, 0x74478
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   8b45bc               | mov                 eax, dword ptr [ebp - 0x44]

        $sequence_6 = { 660fbe4e54 66898f841c0000 660fbe4e05 66898f861c0000 660fbe4e47 66898f881c0000 }
            // n = 6, score = 100
            //   660fbe4e54           | movsx               cx, byte ptr [esi + 0x54]
            //   66898f841c0000       | mov                 word ptr [edi + 0x1c84], cx
            //   660fbe4e05           | movsx               cx, byte ptr [esi + 5]
            //   66898f861c0000       | mov                 word ptr [edi + 0x1c86], cx
            //   660fbe4e47           | movsx               cx, byte ptr [esi + 0x47]
            //   66898f881c0000       | mov                 word ptr [edi + 0x1c88], cx

        $sequence_7 = { 66898730230000 660fbe4654 66898732230000 660fbe4653 66898734230000 660fbe4619 66898736230000 }
            // n = 7, score = 100
            //   66898730230000       | mov                 word ptr [edi + 0x2330], ax
            //   660fbe4654           | movsx               ax, byte ptr [esi + 0x54]
            //   66898732230000       | mov                 word ptr [edi + 0x2332], ax
            //   660fbe4653           | movsx               ax, byte ptr [esi + 0x53]
            //   66898734230000       | mov                 word ptr [edi + 0x2334], ax
            //   660fbe4619           | movsx               ax, byte ptr [esi + 0x19]
            //   66898736230000       | mov                 word ptr [edi + 0x2336], ax

        $sequence_8 = { 8d45fc 50 8b45f0 ff908b000000 837dfc05 7512 }
            // n = 6, score = 100
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   ff908b000000         | call                dword ptr [eax + 0x8b]
            //   837dfc05             | cmp                 dword ptr [ebp - 4], 5
            //   7512                 | jne                 0x14

        $sequence_9 = { 668945b8 8b85a8faffff 660fbe4003 668945ba }
            // n = 4, score = 100
            //   668945b8             | mov                 word ptr [ebp - 0x48], ax
            //   8b85a8faffff         | mov                 eax, dword ptr [ebp - 0x558]
            //   660fbe4003           | movsx               ax, byte ptr [eax + 3]
            //   668945ba             | mov                 word ptr [ebp - 0x46], ax

        $sequence_10 = { 32c0 e9???????? 837da864 7310 ff75a4 e8???????? 59 }
            // n = 7, score = 100
            //   32c0                 | xor                 al, al
            //   e9????????           |                     
            //   837da864             | cmp                 dword ptr [ebp - 0x58], 0x64
            //   7310                 | jae                 0x12
            //   ff75a4               | push                dword ptr [ebp - 0x5c]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_11 = { 88442411 8a460e 88442412 8a4627 88442413 }
            // n = 5, score = 100
            //   88442411             | mov                 byte ptr [esp + 0x11], al
            //   8a460e               | mov                 al, byte ptr [esi + 0xe]
            //   88442412             | mov                 byte ptr [esp + 0x12], al
            //   8a4627               | mov                 al, byte ptr [esi + 0x27]
            //   88442413             | mov                 byte ptr [esp + 0x13], al

        $sequence_12 = { 8d87201c0000 57 50 e8???????? 59 59 }
            // n = 6, score = 100
            //   8d87201c0000         | lea                 eax, [edi + 0x1c20]
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

        $sequence_13 = { 660fbe4e03 66898f7e1e0000 660fbe4e4f 66898f801e0000 660fbe4e41 66898f821e0000 }
            // n = 6, score = 100
            //   660fbe4e03           | movsx               cx, byte ptr [esi + 3]
            //   66898f7e1e0000       | mov                 word ptr [edi + 0x1e7e], cx
            //   660fbe4e4f           | movsx               cx, byte ptr [esi + 0x4f]
            //   66898f801e0000       | mov                 word ptr [edi + 0x1e80], cx
            //   660fbe4e41           | movsx               cx, byte ptr [esi + 0x41]
            //   66898f821e0000       | mov                 word ptr [edi + 0x1e82], cx

        $sequence_14 = { 56 57 7220 836d0804 33ff 8bf0 8b450c }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   7220                 | jb                  0x22
            //   836d0804             | sub                 dword ptr [ebp + 8], 4
            //   33ff                 | xor                 edi, edi
            //   8bf0                 | mov                 esi, eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

    condition:
        7 of them and filesize < 32768
}