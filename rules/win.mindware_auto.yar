rule win_mindware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.mindware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mindware"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c78578fdffffb8ff4300 c7857cfdffffc0ff4300 c78580fdffffc8ff4300 c78584fdffffd0ff4300 c78588fdffffd8ff4300 c7858cfdffffe0ff4300 c78590fdffffecff4300 }
            // n = 7, score = 100
            //   c78578fdffffb8ff4300     | mov    dword ptr [ebp - 0x288], 0x43ffb8
            //   c7857cfdffffc0ff4300     | mov    dword ptr [ebp - 0x284], 0x43ffc0
            //   c78580fdffffc8ff4300     | mov    dword ptr [ebp - 0x280], 0x43ffc8
            //   c78584fdffffd0ff4300     | mov    dword ptr [ebp - 0x27c], 0x43ffd0
            //   c78588fdffffd8ff4300     | mov    dword ptr [ebp - 0x278], 0x43ffd8
            //   c7858cfdffffe0ff4300     | mov    dword ptr [ebp - 0x274], 0x43ffe0
            //   c78590fdffffecff4300     | mov    dword ptr [ebp - 0x270], 0x43ffec

        $sequence_1 = { c1e918 83e13f c1e810 83e03f 8b0c8d603a4400 330c8520394400 8bc2 }
            // n = 7, score = 100
            //   c1e918               | shr                 ecx, 0x18
            //   83e13f               | and                 ecx, 0x3f
            //   c1e810               | shr                 eax, 0x10
            //   83e03f               | and                 eax, 0x3f
            //   8b0c8d603a4400       | mov                 ecx, dword ptr [ecx*4 + 0x443a60]
            //   330c8520394400       | xor                 ecx, dword ptr [eax*4 + 0x443920]
            //   8bc2                 | mov                 eax, edx

        $sequence_2 = { 330c85e03d4400 8bc2 c1e808 83e03f 330c85603b4400 83e23f 330c95e03e4400 }
            // n = 7, score = 100
            //   330c85e03d4400       | xor                 ecx, dword ptr [eax*4 + 0x443de0]
            //   8bc2                 | mov                 eax, edx
            //   c1e808               | shr                 eax, 8
            //   83e03f               | and                 eax, 0x3f
            //   330c85603b4400       | xor                 ecx, dword ptr [eax*4 + 0x443b60]
            //   83e23f               | and                 edx, 0x3f
            //   330c95e03e4400       | xor                 ecx, dword ptr [edx*4 + 0x443ee0]

        $sequence_3 = { 33148df0d44400 8b4dec 0fb6c9 33148dc0c84400 8bcb 335010 }
            // n = 6, score = 100
            //   33148df0d44400       | xor                 edx, dword ptr [ecx*4 + 0x44d4f0]
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   0fb6c9               | movzx               ecx, cl
            //   33148dc0c84400       | xor                 edx, dword ptr [ecx*4 + 0x44c8c0]
            //   8bcb                 | mov                 ecx, ebx
            //   335010               | xor                 edx, dword ptr [eax + 0x10]

        $sequence_4 = { 33f6 895df8 0fb696f0d84400 8bc2 2480 0fb6c8 f7d9 }
            // n = 7, score = 100
            //   33f6                 | xor                 esi, esi
            //   895df8               | mov                 dword ptr [ebp - 8], ebx
            //   0fb696f0d84400       | movzx               edx, byte ptr [esi + 0x44d8f0]
            //   8bc2                 | mov                 eax, edx
            //   2480                 | and                 al, 0x80
            //   0fb6c8               | movzx               ecx, al
            //   f7d9                 | neg                 ecx

        $sequence_5 = { 8945d0 8b4d8c 894dd4 c745e400000000 837dd400 770a 837dd000 }
            // n = 7, score = 100
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   8b4d8c               | mov                 ecx, dword ptr [ebp - 0x74]
            //   894dd4               | mov                 dword ptr [ebp - 0x2c], ecx
            //   c745e400000000       | mov                 dword ptr [ebp - 0x1c], 0
            //   837dd400             | cmp                 dword ptr [ebp - 0x2c], 0
            //   770a                 | ja                  0xc
            //   837dd000             | cmp                 dword ptr [ebp - 0x30], 0

        $sequence_6 = { 83c202 8955e8 66837dfe00 75d3 a1???????? 8b0c8588934400 }
            // n = 6, score = 100
            //   83c202               | add                 edx, 2
            //   8955e8               | mov                 dword ptr [ebp - 0x18], edx
            //   66837dfe00           | cmp                 word ptr [ebp - 2], 0
            //   75d3                 | jne                 0xffffffd5
            //   a1????????           |                     
            //   8b0c8588934400       | mov                 ecx, dword ptr [eax*4 + 0x449388]

        $sequence_7 = { c785ace7ffffecc84300 c785b0e7fffff4c84300 c785b4e7fffffcc84300 c785b8e7ffff08c94300 c785bce7ffff10c94300 c785c0e7ffff1cc94300 c785c4e7ffff24c94300 }
            // n = 7, score = 100
            //   c785ace7ffffecc84300     | mov    dword ptr [ebp - 0x1854], 0x43c8ec
            //   c785b0e7fffff4c84300     | mov    dword ptr [ebp - 0x1850], 0x43c8f4
            //   c785b4e7fffffcc84300     | mov    dword ptr [ebp - 0x184c], 0x43c8fc
            //   c785b8e7ffff08c94300     | mov    dword ptr [ebp - 0x1848], 0x43c908
            //   c785bce7ffff10c94300     | mov    dword ptr [ebp - 0x1844], 0x43c910
            //   c785c0e7ffff1cc94300     | mov    dword ptr [ebp - 0x1840], 0x43c91c
            //   c785c4e7ffff24c94300     | mov    dword ptr [ebp - 0x183c], 0x43c924

        $sequence_8 = { c785d4faffff3cf94300 c785d8faffff44f94300 c785dcfaffff4cf94300 c785e0faffff5cf94300 }
            // n = 4, score = 100
            //   c785d4faffff3cf94300     | mov    dword ptr [ebp - 0x52c], 0x43f93c
            //   c785d8faffff44f94300     | mov    dword ptr [ebp - 0x528], 0x43f944
            //   c785dcfaffff4cf94300     | mov    dword ptr [ebp - 0x524], 0x43f94c
            //   c785e0faffff5cf94300     | mov    dword ptr [ebp - 0x520], 0x43f95c

        $sequence_9 = { 0fb6b9f0d84400 0fb6486f c1e708 0fb689f0d84400 33f9 0fb6486e c1e708 }
            // n = 7, score = 100
            //   0fb6b9f0d84400       | movzx               edi, byte ptr [ecx + 0x44d8f0]
            //   0fb6486f             | movzx               ecx, byte ptr [eax + 0x6f]
            //   c1e708               | shl                 edi, 8
            //   0fb689f0d84400       | movzx               ecx, byte ptr [ecx + 0x44d8f0]
            //   33f9                 | xor                 edi, ecx
            //   0fb6486e             | movzx               ecx, byte ptr [eax + 0x6e]
            //   c1e708               | shl                 edi, 8

    condition:
        7 of them and filesize < 661504
}