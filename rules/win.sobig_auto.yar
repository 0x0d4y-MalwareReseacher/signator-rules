rule win_sobig_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.sobig."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sobig"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8b4d08 83c414 50 8d8560fbffff 50 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   83c414               | add                 esp, 0x14
            //   50                   | push                eax
            //   8d8560fbffff         | lea                 eax, [ebp - 0x4a0]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { 3bf7 7413 ff7508 8d4e08 e8???????? 85c0 }
            // n = 6, score = 100
            //   3bf7                 | cmp                 esi, edi
            //   7413                 | je                  0x15
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d4e08               | lea                 ecx, [esi + 8]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_2 = { 6a00 50 e8???????? 8ac3 2b5d0c 2a450c 53 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   8ac3                 | mov                 al, bl
            //   2b5d0c               | sub                 ebx, dword ptr [ebp + 0xc]
            //   2a450c               | sub                 al, byte ptr [ebp + 0xc]
            //   53                   | push                ebx

        $sequence_3 = { 56 8bf1 8d4dfc e8???????? 8b4d08 8b4108 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   e8????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]

        $sequence_4 = { 743a 837d0800 742e 85f6 7419 0fb6da f68361be410004 }
            // n = 7, score = 100
            //   743a                 | je                  0x3c
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   742e                 | je                  0x30
            //   85f6                 | test                esi, esi
            //   7419                 | je                  0x1b
            //   0fb6da               | movzx               ebx, dl
            //   f68361be410004       | test                byte ptr [ebx + 0x41be61], 4

        $sequence_5 = { e8???????? ff35???????? e8???????? 83c410 ff35???????? 56 6a01 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   ff35????????         |                     
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   ff35????????         |                     
            //   56                   | push                esi
            //   6a01                 | push                1

        $sequence_6 = { e8???????? 834de0ff e9???????? 8a45f3 8845cc 33c0 8945d0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   834de0ff             | or                  dword ptr [ebp - 0x20], 0xffffffff
            //   e9????????           |                     
            //   8a45f3               | mov                 al, byte ptr [ebp - 0xd]
            //   8845cc               | mov                 byte ptr [ebp - 0x34], al
            //   33c0                 | xor                 eax, eax
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax

        $sequence_7 = { 8d4d08 e8???????? 8b45ec c7451094624100 3bc6 7403 894510 }
            // n = 7, score = 100
            //   8d4d08               | lea                 ecx, [ebp + 8]
            //   e8????????           |                     
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   c7451094624100       | mov                 dword ptr [ebp + 0x10], 0x416294
            //   3bc6                 | cmp                 eax, esi
            //   7403                 | je                  5
            //   894510               | mov                 dword ptr [ebp + 0x10], eax

        $sequence_8 = { 0fb6c0 80e30f 8a80749f4100 88450c ff750c 56 }
            // n = 6, score = 100
            //   0fb6c0               | movzx               eax, al
            //   80e30f               | and                 bl, 0xf
            //   8a80749f4100         | mov                 al, byte ptr [eax + 0x419f74]
            //   88450c               | mov                 byte ptr [ebp + 0xc], al
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   56                   | push                esi

        $sequence_9 = { 8d4dbc e8???????? 33c0 eb0e 6a01 5e ff75e0 }
            // n = 7, score = 100
            //   8d4dbc               | lea                 ecx, [ebp - 0x44]
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   eb0e                 | jmp                 0x10
            //   6a01                 | push                1
            //   5e                   | pop                 esi
            //   ff75e0               | push                dword ptr [ebp - 0x20]

    condition:
        7 of them and filesize < 262144
}