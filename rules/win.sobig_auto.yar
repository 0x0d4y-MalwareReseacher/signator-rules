rule win_sobig_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.sobig."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sobig"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5d c20c00 f605????????01 7507 800d????????01 e8???????? f605????????01 }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   c20c00               | ret                 0xc
            //   f605????????01       |                     
            //   7507                 | jne                 9
            //   800d????????01       |                     
            //   e8????????           |                     
            //   f605????????01       |                     

        $sequence_1 = { 80fb7e 7f14 80fb20 7d54 80fb0d 744f }
            // n = 6, score = 100
            //   80fb7e               | cmp                 bl, 0x7e
            //   7f14                 | jg                  0x16
            //   80fb20               | cmp                 bl, 0x20
            //   7d54                 | jge                 0x56
            //   80fb0d               | cmp                 bl, 0xd
            //   744f                 | je                  0x51

        $sequence_2 = { e8???????? 53 57 53 53 53 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   53                   | push                ebx
            //   57                   | push                edi
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   53                   | push                ebx

        $sequence_3 = { 7405 885df3 eb04 8065f300 8065fc00 53 }
            // n = 6, score = 100
            //   7405                 | je                  7
            //   885df3               | mov                 byte ptr [ebp - 0xd], bl
            //   eb04                 | jmp                 6
            //   8065f300             | and                 byte ptr [ebp - 0xd], 0
            //   8065fc00             | and                 byte ptr [ebp - 4], 0
            //   53                   | push                ebx

        $sequence_4 = { 395de4 c645fc04 740c ff75e4 }
            // n = 4, score = 100
            //   395de4               | cmp                 dword ptr [ebp - 0x1c], ebx
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   740c                 | je                  0xe
            //   ff75e4               | push                dword ptr [ebp - 0x1c]

        $sequence_5 = { 8b4de4 e8???????? 8bf8 33f6 3bf7 0f8d8d000000 395de4 }
            // n = 7, score = 100
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   33f6                 | xor                 esi, esi
            //   3bf7                 | cmp                 esi, edi
            //   0f8d8d000000         | jge                 0x93
            //   395de4               | cmp                 dword ptr [ebp - 0x1c], ebx

        $sequence_6 = { 5e 8a9098b74100 8d4c05bc 3211 40 4e 885405db }
            // n = 7, score = 100
            //   5e                   | pop                 esi
            //   8a9098b74100         | mov                 dl, byte ptr [eax + 0x41b798]
            //   8d4c05bc             | lea                 ecx, dword ptr [ebp + eax - 0x44]
            //   3211                 | xor                 dl, byte ptr [ecx]
            //   40                   | inc                 eax
            //   4e                   | dec                 esi
            //   885405db             | mov                 byte ptr [ebp + eax - 0x25], dl

        $sequence_7 = { 8b5de4 8803 8b45c8 43 85c0 7505 b8???????? }
            // n = 7, score = 100
            //   8b5de4               | mov                 ebx, dword ptr [ebp - 0x1c]
            //   8803                 | mov                 byte ptr [ebx], al
            //   8b45c8               | mov                 eax, dword ptr [ebp - 0x38]
            //   43                   | inc                 ebx
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   b8????????           |                     

        $sequence_8 = { c645fc07 e8???????? 837de400 7523 ff750c 8d4d9c e8???????? }
            // n = 7, score = 100
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   e8????????           |                     
            //   837de400             | cmp                 dword ptr [ebp - 0x1c], 0
            //   7523                 | jne                 0x25
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8d4d9c               | lea                 ecx, dword ptr [ebp - 0x64]
            //   e8????????           |                     

        $sequence_9 = { c1f905 8d04c0 8b0c8d20bc4100 8d44810c 50 ff15???????? c3 }
            // n = 7, score = 100
            //   c1f905               | sar                 ecx, 5
            //   8d04c0               | lea                 eax, dword ptr [eax + eax*8]
            //   8b0c8d20bc4100       | mov                 ecx, dword ptr [ecx*4 + 0x41bc20]
            //   8d44810c             | lea                 eax, dword ptr [ecx + eax*4 + 0xc]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 262144
}