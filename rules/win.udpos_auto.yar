rule win_udpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.udpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.udpos"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 c6043e00 8985dcfdffff e8???????? 8b8ddcfdffff 51 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   c6043e00             | mov                 byte ptr [esi + edi], 0
            //   8985dcfdffff         | mov                 dword ptr [ebp - 0x224], eax
            //   e8????????           |                     
            //   8b8ddcfdffff         | mov                 ecx, dword ptr [ebp - 0x224]
            //   51                   | push                ecx

        $sequence_1 = { 68???????? be1a000000 a3???????? e8???????? }
            // n = 4, score = 100
            //   68????????           |                     
            //   be1a000000           | mov                 esi, 0x1a
            //   a3????????           |                     
            //   e8????????           |                     

        $sequence_2 = { 7e14 8bff 660fbe1431 6689944d18f8ffff 41 3bc8 7cee }
            // n = 7, score = 100
            //   7e14                 | jle                 0x16
            //   8bff                 | mov                 edi, edi
            //   660fbe1431           | movsx               dx, byte ptr [ecx + esi]
            //   6689944d18f8ffff     | mov                 word ptr [ebp + ecx*2 - 0x7e8], dx
            //   41                   | inc                 ecx
            //   3bc8                 | cmp                 ecx, eax
            //   7cee                 | jl                  0xfffffff0

        $sequence_3 = { 8b45fc 53 50 ff15???????? 8b55fc 8d0c36 }
            // n = 6, score = 100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8d0c36               | lea                 ecx, dword ptr [esi + esi]

        $sequence_4 = { 51 8d9504f3ffff 52 66898c4530f4ffff e8???????? }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   8d9504f3ffff         | lea                 edx, dword ptr [ebp - 0xcfc]
            //   52                   | push                edx
            //   66898c4530f4ffff     | mov                 word ptr [ebp + eax*2 - 0xbd0], cx
            //   e8????????           |                     

        $sequence_5 = { e8???????? 68???????? be14000000 a3???????? e8???????? 68???????? be1a000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   68????????           |                     
            //   be14000000           | mov                 esi, 0x14
            //   a3????????           |                     
            //   e8????????           |                     
            //   68????????           |                     
            //   be1a000000           | mov                 esi, 0x1a

        $sequence_6 = { 57 be01000000 56 89bde0fbffff 8b3d???????? 51 }
            // n = 6, score = 100
            //   57                   | push                edi
            //   be01000000           | mov                 esi, 1
            //   56                   | push                esi
            //   89bde0fbffff         | mov                 dword ptr [ebp - 0x420], edi
            //   8b3d????????         |                     
            //   51                   | push                ecx

        $sequence_7 = { 895dec c745f004000000 8da42400000000 8b7b2c 337b18 337bf8 }
            // n = 6, score = 100
            //   895dec               | mov                 dword ptr [ebp - 0x14], ebx
            //   c745f004000000       | mov                 dword ptr [ebp - 0x10], 4
            //   8da42400000000       | lea                 esp, dword ptr [esp]
            //   8b7b2c               | mov                 edi, dword ptr [ebx + 0x2c]
            //   337b18               | xor                 edi, dword ptr [ebx + 0x18]
            //   337bf8               | xor                 edi, dword ptr [ebx - 8]

        $sequence_8 = { 41 83f90f 7ce3 6a20 e8???????? }
            // n = 5, score = 100
            //   41                   | inc                 ecx
            //   83f90f               | cmp                 ecx, 0xf
            //   7ce3                 | jl                  0xffffffe5
            //   6a20                 | push                0x20
            //   e8????????           |                     

        $sequence_9 = { a1???????? 8bc8 894e18 8b4e20 57 40 51 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   894e18               | mov                 dword ptr [esi + 0x18], ecx
            //   8b4e20               | mov                 ecx, dword ptr [esi + 0x20]
            //   57                   | push                edi
            //   40                   | inc                 eax
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 163840
}