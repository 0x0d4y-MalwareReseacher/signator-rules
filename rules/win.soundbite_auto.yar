rule win_soundbite_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.soundbite."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.soundbite"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 66c745ecb100 8d45e4 800080 40 803800 75f7 8d45e4 }
            // n = 7, score = 100
            //   66c745ecb100         | mov                 word ptr [ebp - 0x14], 0xb1
            //   8d45e4               | lea                 eax, dword ptr [ebp - 0x1c]
            //   800080               | add                 byte ptr [eax], 0x80
            //   40                   | inc                 eax
            //   803800               | cmp                 byte ptr [eax], 0
            //   75f7                 | jne                 0xfffffff9
            //   8d45e4               | lea                 eax, dword ptr [ebp - 0x1c]

        $sequence_1 = { 6a01 8d75c4 c645fc01 8ad8 e8???????? 8b4dc8 3bcf }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   8d75c4               | lea                 esi, dword ptr [ebp - 0x3c]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8ad8                 | mov                 bl, al
            //   e8????????           |                     
            //   8b4dc8               | mov                 ecx, dword ptr [ebp - 0x38]
            //   3bcf                 | cmp                 ecx, edi

        $sequence_2 = { 2bc1 8b5204 8b3c82 8bcb e8???????? 8b4520 40 }
            // n = 7, score = 100
            //   2bc1                 | sub                 eax, ecx
            //   8b5204               | mov                 edx, dword ptr [edx + 4]
            //   8b3c82               | mov                 edi, dword ptr [edx + eax*4]
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   8b4520               | mov                 eax, dword ptr [ebp + 0x20]
            //   40                   | inc                 eax

        $sequence_3 = { 51 8b4d34 52 50 51 83ec14 8bc4 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   8b4d34               | mov                 ecx, dword ptr [ebp + 0x34]
            //   52                   | push                edx
            //   50                   | push                eax
            //   51                   | push                ecx
            //   83ec14               | sub                 esp, 0x14
            //   8bc4                 | mov                 eax, esp

        $sequence_4 = { 8b5508 8d45ac 50 51 51 6800000008 51 }
            // n = 7, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8d45ac               | lea                 eax, dword ptr [ebp - 0x54]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   6800000008           | push                0x8000000
            //   51                   | push                ecx

        $sequence_5 = { 8bc1 50 8d8df8fcffff e8???????? 8b9dfcfcffff c645fc09 }
            // n = 6, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   50                   | push                eax
            //   8d8df8fcffff         | lea                 ecx, dword ptr [ebp - 0x308]
            //   e8????????           |                     
            //   8b9dfcfcffff         | mov                 ebx, dword ptr [ebp - 0x304]
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9

        $sequence_6 = { 50 8d45f4 64a300000000 8b4d08 8b550c 8d0411 83f802 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8d0411               | lea                 eax, dword ptr [ecx + edx]
            //   83f802               | cmp                 eax, 2

        $sequence_7 = { c78540ffffffc6e9eee4 c78544ffffffcee5f8f4 c78548ffffffc6e9ece5 66c7854cffffffd700 c7856cfeffffc7e5f4cc c78570feffffefe7e9e3 }
            // n = 6, score = 100
            //   c78540ffffffc6e9eee4     | mov    dword ptr [ebp - 0xc0], 0xe4eee9c6
            //   c78544ffffffcee5f8f4     | mov    dword ptr [ebp - 0xbc], 0xf4f8e5ce
            //   c78548ffffffc6e9ece5     | mov    dword ptr [ebp - 0xb8], 0xe5ece9c6
            //   66c7854cffffffd700     | mov    word ptr [ebp - 0xb4], 0xd7
            //   c7856cfeffffc7e5f4cc     | mov    dword ptr [ebp - 0x194], 0xccf4e5c7
            //   c78570feffffefe7e9e3     | mov    dword ptr [ebp - 0x190], 0xe3e9e7ef

        $sequence_8 = { 8819 8b5d94 8b75c4 41 8d55df 894dc8 885ddf }
            // n = 7, score = 100
            //   8819                 | mov                 byte ptr [ecx], bl
            //   8b5d94               | mov                 ebx, dword ptr [ebp - 0x6c]
            //   8b75c4               | mov                 esi, dword ptr [ebp - 0x3c]
            //   41                   | inc                 ecx
            //   8d55df               | lea                 edx, dword ptr [ebp - 0x21]
            //   894dc8               | mov                 dword ptr [ebp - 0x38], ecx
            //   885ddf               | mov                 byte ptr [ebp - 0x21], bl

        $sequence_9 = { 53 6a38 33db 8d8510ffffff 53 50 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   6a38                 | push                0x38
            //   33db                 | xor                 ebx, ebx
            //   8d8510ffffff         | lea                 eax, dword ptr [ebp - 0xf0]
            //   53                   | push                ebx
            //   50                   | push                eax

    condition:
        7 of them and filesize < 409600
}