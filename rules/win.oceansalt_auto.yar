rule win_oceansalt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.oceansalt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oceansalt"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a02 6800000040 8d8df8f9ffff 51 ff15???????? 8bf8 85ff }
            // n = 7, score = 300
            //   6a02                 | mov                 ecx, dword ptr [esp + 0x1050]
            //   6800000040           | dec                 eax
            //   8d8df8f9ffff         | xor                 ecx, esp
            //   51                   | dec                 eax
            //   ff15????????         |                     
            //   8bf8                 | xor                 eax, esp
            //   85ff                 | dec                 eax

        $sequence_1 = { 8be5 5d c3 8d85fcfeffff 8bd6 }
            // n = 5, score = 300
            //   8be5                 | mov                 dword ptr [esp + 0x270], eax
            //   5d                   | xor                 edx, edx
            //   c3                   | dec                 eax
            //   8d85fcfeffff         | mov                 ebx, ecx
            //   8bd6                 | dec                 esp

        $sequence_2 = { 6804020000 8d85f8fdffff 50 51 }
            // n = 4, score = 300
            //   6804020000           | mov                 eax, dword ptr [eax + esi*8 + 0x147a0]
            //   8d85f8fdffff         | test                byte ptr [eax + esi + 8], 0x40
            //   50                   | push                esi
            //   51                   | call                ebx

        $sequence_3 = { ff15???????? 6a00 6a02 85c0 7411 }
            // n = 5, score = 300
            //   ff15????????         |                     
            //   6a00                 | cmp                 esp, dword ptr [esp + 0x40]
            //   6a02                 | jb                  0xffffff07
            //   85c0                 | jmp                 0x3c
            //   7411                 | dec                 ebx

        $sequence_4 = { 52 57 50 ff15???????? 57 ff15???????? }
            // n = 6, score = 300
            //   52                   | push                eax
            //   57                   | push                2
            //   50                   | push                0x40000000
            //   ff15????????         |                     
            //   57                   | lea                 ecx, [ebp - 0x608]
            //   ff15????????         |                     

        $sequence_5 = { 8b95d4fdffff 8955f4 8d642400 6a00 6808010000 8d85f4feffff 50 }
            // n = 7, score = 300
            //   8b95d4fdffff         | inc                 ecx
            //   8955f4               | mov                 eax, 0x1004
            //   8d642400             | dec                 eax
            //   6a00                 | mov                 ecx, ebx
            //   6808010000           | inc                 esp
            //   8d85f4feffff         | mov                 dword ptr [esp + 0x1040], esp
            //   50                   | dec                 eax

        $sequence_6 = { 56 ffd3 83f8ff 7453 2985f4f9ffff 6a00 8d8df0f9ffff }
            // n = 7, score = 300
            //   56                   | lea                 ecx, [edx + 2]
            //   ffd3                 | dec                 eax
            //   83f8ff               | lea                 edx, [esp + 0x140]
            //   7453                 | mov                 dword ptr [esp + 0x134], 1
            //   2985f4f9ffff         | dec                 eax
            //   6a00                 | mov                 ecx, eax
            //   8d8df0f9ffff         | je                  0x30a

        $sequence_7 = { 880c02 40 84c9 75f6 33c0 8be5 }
            // n = 6, score = 300
            //   880c02               | cmp                 eax, -1
            //   40                   | je                  0x5a
            //   84c9                 | sub                 dword ptr [ebp - 0x60c], eax
            //   75f6                 | push                0
            //   33c0                 | lea                 ecx, [ebp - 0x610]
            //   8be5                 | mov                 edx, dword ptr [ebp - 0x22c]

        $sequence_8 = { 488bd9 c784244001000030010000 8d4a02 e8???????? 488d942440010000 c784243401000001000000 488bc8 }
            // n = 7, score = 100
            //   488bd9               | sar                 ebp, 4
            //   c784244001000030010000     | dec    ecx
            //   8d4a02               | mov                 eax, ebp
            //   e8????????           |                     
            //   488d942440010000     | nop                 word ptr [eax + eax]
            //   c784243401000001000000     | movzx    eax, byte ptr [esp + edx + 0x8c]
            //   488bc8               | dec                 eax

        $sequence_9 = { 4c8d05cfbf0000 4b2b1cf8 48b8a38b2ebae8a28b2e 48f7eb 4c8bea 49c1fd04 498bc5 }
            // n = 7, score = 100
            //   4c8d05cfbf0000       | inc                 ecx
            //   4b2b1cf8             | add                 ebx, edx
            //   48b8a38b2ebae8a28b2e     | inc    esp
            //   48f7eb               | mov                 byte ptr [eax + esi + 0x3a], al
            //   4c8bea               | dec                 ebx
            //   49c1fd04             | mov                 ecx, dword ptr [ecx + esi*8 + 0x147a0]
            //   498bc5               | dec                 esp

        $sequence_10 = { 66660f1f840000000000 0fb684148c000000 48ffc2 8884149f010000 84c0 }
            // n = 5, score = 100
            //   66660f1f840000000000     | lea    eax, [0xbfcf]
            //   0fb684148c000000     | dec                 ebx
            //   48ffc2               | sub                 ebx, dword ptr [eax + edi*8]
            //   8884149f010000       | dec                 eax
            //   84c0                 | mov                 eax, 0xba2e8ba3

        $sequence_11 = { 4b8b84f1a0470100 48ffc2 418d68f9 4103da 448844303a 4b8b8cf1a0470100 }
            // n = 6, score = 100
            //   4b8b84f1a0470100     | dec                 ebx
            //   48ffc2               | mov                 eax, dword ptr [ecx + esi*8 + 0x147a0]
            //   418d68f9             | dec                 eax
            //   4103da               | inc                 edx
            //   448844303a           | inc                 ecx
            //   4b8b8cf1a0470100     | lea                 ebp, [eax - 7]

        $sequence_12 = { 4833c4 4889842470020000 33d2 488bd9 }
            // n = 4, score = 100
            //   4833c4               | inc                 ebp
            //   4889842470020000     | xor                 ecx, ecx
            //   33d2                 | dec                 eax
            //   488bd9               | mov                 ecx, ebx

        $sequence_13 = { 41b804100000 488bcb 4489a42440100000 ff15???????? 488b8c2450100000 4833cc }
            // n = 6, score = 100
            //   41b804100000         | mov                 byte ptr [esp + edx + 0x19f], al
            //   488bcb               | test                al, al
            //   4489a42440100000     | or                  edx, 0xffffffff
            //   ff15????????         |                     
            //   488b8c2450100000     | dec                 eax
            //   4833cc               | mov                 ecx, eax

        $sequence_14 = { 488905???????? e8???????? 48833d????????ff 0f8404030000 0fb70d???????? }
            // n = 5, score = 100
            //   488905????????       |                     
            //   e8????????           |                     
            //   48833d????????ff     |                     
            //   0f8404030000         | inc                 edx
            //   0fb70d????????       |                     

        $sequence_15 = { 83caff 488bc8 ff15???????? 4533c9 488bcb 458d4102 }
            // n = 6, score = 100
            //   83caff               | call                0x482e8bb1
            //   488bc8               | imul                ebx
            //   ff15????????         |                     
            //   4533c9               | dec                 esp
            //   488bcb               | mov                 ebp, edx
            //   458d4102             | dec                 ecx

    condition:
        7 of them and filesize < 212992
}