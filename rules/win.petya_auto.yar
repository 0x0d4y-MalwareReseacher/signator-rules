rule win_petya_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.petya."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.petya"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bda c1e60e c1e017 33ff 0bf9 c1eb09 }
            // n = 6, score = 600
            //   8bda                 | mov                 ebx, edx
            //   c1e60e               | shl                 esi, 0xe
            //   c1e017               | shl                 eax, 0x17
            //   33ff                 | xor                 edi, edi
            //   0bf9                 | or                  edi, ecx
            //   c1eb09               | shr                 ebx, 9

        $sequence_1 = { 8bf1 31542424 33d2 0fa4c119 c1ee07 }
            // n = 5, score = 600
            //   8bf1                 | mov                 esi, ecx
            //   31542424             | xor                 dword ptr [esp + 0x24], edx
            //   33d2                 | xor                 edx, edx
            //   0fa4c119             | shld                ecx, eax, 0x19
            //   c1ee07               | shr                 esi, 7

        $sequence_2 = { 8bca 0fa4c117 8bda c1e60e }
            // n = 4, score = 600
            //   8bca                 | mov                 ecx, edx
            //   0fa4c117             | shld                ecx, eax, 0x17
            //   8bda                 | mov                 ebx, edx
            //   c1e60e               | shl                 esi, 0xe

        $sequence_3 = { a1???????? 85c0 743a 53 56 8b35???????? 33c9 }
            // n = 7, score = 600
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   743a                 | je                  0x3c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b35????????         |                     
            //   33c9                 | xor                 ecx, ecx

        $sequence_4 = { 83c40c 8b4e08 c1e002 85c0 }
            // n = 4, score = 600
            //   83c40c               | add                 esp, 0xc
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   c1e002               | shl                 eax, 2
            //   85c0                 | test                eax, eax

        $sequence_5 = { ff7618 8d857cfeffff 50 ffb63c010000 }
            // n = 4, score = 600
            //   ff7618               | push                dword ptr [esi + 0x18]
            //   8d857cfeffff         | lea                 eax, [ebp - 0x184]
            //   50                   | push                eax
            //   ffb63c010000         | push                dword ptr [esi + 0x13c]

        $sequence_6 = { e8???????? 8d4e1c e8???????? 8d4e28 e8???????? 8d4e4c e8???????? }
            // n = 7, score = 600
            //   e8????????           |                     
            //   8d4e1c               | lea                 ecx, [esi + 0x1c]
            //   e8????????           |                     
            //   8d4e28               | lea                 ecx, [esi + 0x28]
            //   e8????????           |                     
            //   8d4e4c               | lea                 ecx, [esi + 0x4c]
            //   e8????????           |                     

        $sequence_7 = { 8bc6 8bca c1e303 0facc110 }
            // n = 4, score = 600
            //   8bc6                 | mov                 eax, esi
            //   8bca                 | mov                 ecx, edx
            //   c1e303               | shl                 ebx, 3
            //   0facc110             | shrd                ecx, eax, 0x10

        $sequence_8 = { 0f42f2 6a04 56 e8???????? 8bd8 }
            // n = 5, score = 600
            //   0f42f2               | cmovb               esi, edx
            //   6a04                 | push                4
            //   56                   | push                esi
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_9 = { 3bf2 53 0f42f2 6a04 56 e8???????? 8bd8 }
            // n = 7, score = 600
            //   3bf2                 | cmp                 esi, edx
            //   53                   | push                ebx
            //   0f42f2               | cmovb               esi, edx
            //   6a04                 | push                4
            //   56                   | push                esi
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax

    condition:
        7 of them and filesize < 229376
}