rule win_lightwork_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.lightwork."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lightwork"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fb645f7 c9 c3 55 89e5 83ec48 8b4514 }
            // n = 7, score = 100
            //   0fb645f7             | movzx               eax, byte ptr [ebp - 9]
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   83ec48               | sub                 esp, 0x48
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]

        $sequence_1 = { 8b45f0 8b80e8010000 85c0 7432 8b45f0 8b80e8010000 }
            // n = 6, score = 100
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b80e8010000         | mov                 eax, dword ptr [eax + 0x1e8]
            //   85c0                 | test                eax, eax
            //   7432                 | je                  0x34
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b80e8010000         | mov                 eax, dword ptr [eax + 0x1e8]

        $sequence_2 = { 8910 8b4508 d94510 d9580c 8b4508 0fb655f4 885010 }
            // n = 7, score = 100
            //   8910                 | mov                 dword ptr [eax], edx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   d94510               | fld                 dword ptr [ebp + 0x10]
            //   d9580c               | fstp                dword ptr [eax + 0xc]
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0fb655f4             | movzx               edx, byte ptr [ebp - 0xc]
            //   885010               | mov                 byte ptr [eax + 0x10], dl

        $sequence_3 = { 7c36 e8???????? 8b4df0 8981b8010000 8991bc010000 8b45f0 c780b001000000000000 }
            // n = 7, score = 100
            //   7c36                 | jl                  0x38
            //   e8????????           |                     
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8981b8010000         | mov                 dword ptr [ecx + 0x1b8], eax
            //   8991bc010000         | mov                 dword ptr [ecx + 0x1bc], edx
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   c780b001000000000000     | mov    dword ptr [eax + 0x1b0], 0

        $sequence_4 = { d9e8 d9e0 d9450c d9c9 dff1 ddd8 }
            // n = 6, score = 100
            //   d9e8                 | fld1                
            //   d9e0                 | fchs                
            //   d9450c               | fld                 dword ptr [ebp + 0xc]
            //   d9c9                 | fxch                st(1)
            //   dff1                 | fcomip              st(1)
            //   ddd8                 | fstp                st(0)

        $sequence_5 = { 8b5210 01ca 89442408 8b450c 89442404 }
            // n = 5, score = 100
            //   8b5210               | mov                 edx, dword ptr [edx + 0x10]
            //   01ca                 | add                 edx, ecx
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   89442404             | mov                 dword ptr [esp + 4], eax

        $sequence_6 = { 09d0 89c2 8b4508 885004 90 5d }
            // n = 6, score = 100
            //   09d0                 | or                  eax, edx
            //   89c2                 | mov                 edx, eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   885004               | mov                 byte ptr [eax + 4], dl
            //   90                   | nop                 
            //   5d                   | pop                 ebp

        $sequence_7 = { 3945f4 7e07 b800000000 eb58 0fb645e4 8944240c 8b4510 }
            // n = 7, score = 100
            //   3945f4               | cmp                 dword ptr [ebp - 0xc], eax
            //   7e07                 | jle                 9
            //   b800000000           | mov                 eax, 0
            //   eb58                 | jmp                 0x5a
            //   0fb645e4             | movzx               eax, byte ptr [ebp - 0x1c]
            //   8944240c             | mov                 dword ptr [esp + 0xc], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]

        $sequence_8 = { 0fb600 0fb6c0 89442404 c70424???????? e8???????? 8345f401 8b45f4 }
            // n = 7, score = 100
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   0fb6c0               | movzx               eax, al
            //   89442404             | mov                 dword ptr [esp + 4], eax
            //   c70424????????       |                     
            //   e8????????           |                     
            //   8345f401             | add                 dword ptr [ebp - 0xc], 1
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]

        $sequence_9 = { 8b4508 8b4004 83c002 0fb600 83e0c0 8845ff 8b450c }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   83c002               | add                 eax, 2
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   83e0c0               | and                 eax, 0xffffffc0
            //   8845ff               | mov                 byte ptr [ebp - 1], al
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

    condition:
        7 of them and filesize < 1132544
}