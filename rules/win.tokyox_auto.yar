rule win_tokyox_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.tokyox."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tokyox"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4304 6800000008 894588 8b06 }
            // n = 4, score = 200
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   6800000008           | push                0x8000000
            //   894588               | mov                 dword ptr [ebp - 0x78], eax
            //   8b06                 | mov                 eax, dword ptr [esi]

        $sequence_1 = { e8???????? 83c404 8bc8 ff35???????? 68???????? }
            // n = 5, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bc8                 | mov                 ecx, eax
            //   ff35????????         |                     
            //   68????????           |                     

        $sequence_2 = { 68e9fd0000 ff15???????? 8b4d0c 8b45f8 }
            // n = 4, score = 200
            //   68e9fd0000           | push                0xfde9
            //   ff15????????         |                     
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_3 = { 8dbdecefffff 037d10 897df4 8d1c02 8bc6 }
            // n = 5, score = 200
            //   8dbdecefffff         | lea                 edi, [ebp - 0x1014]
            //   037d10               | add                 edi, dword ptr [ebp + 0x10]
            //   897df4               | mov                 dword ptr [ebp - 0xc], edi
            //   8d1c02               | lea                 ebx, [edx + eax]
            //   8bc6                 | mov                 eax, esi

        $sequence_4 = { ff36 ffd7 ff730c ffd7 }
            // n = 4, score = 200
            //   ff36                 | push                dword ptr [esi]
            //   ffd7                 | call                edi
            //   ff730c               | push                dword ptr [ebx + 0xc]
            //   ffd7                 | call                edi

        $sequence_5 = { 66890471 33c0 66890451 eb56 6a01 c645c000 68???????? }
            // n = 7, score = 200
            //   66890471             | mov                 word ptr [ecx + esi*2], ax
            //   33c0                 | xor                 eax, eax
            //   66890451             | mov                 word ptr [ecx + edx*2], ax
            //   eb56                 | jmp                 0x58
            //   6a01                 | push                1
            //   c645c000             | mov                 byte ptr [ebp - 0x40], 0
            //   68????????           |                     

        $sequence_6 = { 6685c0 75e8 8d9554ffffff 8bf2 668b02 83c202 6685c0 }
            // n = 7, score = 200
            //   6685c0               | test                ax, ax
            //   75e8                 | jne                 0xffffffea
            //   8d9554ffffff         | lea                 edx, [ebp - 0xac]
            //   8bf2                 | mov                 esi, edx
            //   668b02               | mov                 ax, word ptr [edx]
            //   83c202               | add                 edx, 2
            //   6685c0               | test                ax, ax

        $sequence_7 = { 7543 8b4608 8b3d???????? 85c0 740a 50 ffd7 }
            // n = 7, score = 200
            //   7543                 | jne                 0x45
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   8b3d????????         |                     
            //   85c0                 | test                eax, eax
            //   740a                 | je                  0xc
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_8 = { 0f1f4000 8b45f4 85c0 7474 6a00 }
            // n = 5, score = 200
            //   0f1f4000             | nop                 dword ptr [eax]
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   85c0                 | test                eax, eax
            //   7474                 | je                  0x76
            //   6a00                 | push                0

        $sequence_9 = { 33c0 66890451 e9???????? 6a01 c645d000 68???????? }
            // n = 6, score = 200
            //   33c0                 | xor                 eax, eax
            //   66890451             | mov                 word ptr [ecx + edx*2], ax
            //   e9????????           |                     
            //   6a01                 | push                1
            //   c645d000             | mov                 byte ptr [ebp - 0x30], 0
            //   68????????           |                     

    condition:
        7 of them and filesize < 237568
}