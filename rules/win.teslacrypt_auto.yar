rule win_teslacrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.teslacrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.teslacrypt"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33550c 81ffa0000000 0f8452030000 81ffc0000000 }
            // n = 4, score = 900
            //   33550c               | xor                 edx, dword ptr [ebp + 0xc]
            //   81ffa0000000         | cmp                 edi, 0xa0
            //   0f8452030000         | je                  0x358
            //   81ffc0000000         | cmp                 edi, 0xc0

        $sequence_1 = { 334d08 33550c 81ffa0000000 0f8456030000 81ffc0000000 }
            // n = 5, score = 900
            //   334d08               | xor                 ecx, dword ptr [ebp + 8]
            //   33550c               | xor                 edx, dword ptr [ebp + 0xc]
            //   81ffa0000000         | cmp                 edi, 0xa0
            //   0f8456030000         | je                  0x35c
            //   81ffc0000000         | cmp                 edi, 0xc0

        $sequence_2 = { 334574 898594000000 334578 898598000000 33457c 89859c000000 51 }
            // n = 7, score = 900
            //   334574               | xor                 eax, dword ptr [ebp + 0x74]
            //   898594000000         | mov                 dword ptr [ebp + 0x94], eax
            //   334578               | xor                 eax, dword ptr [ebp + 0x78]
            //   898598000000         | mov                 dword ptr [ebp + 0x98], eax
            //   33457c               | xor                 eax, dword ptr [ebp + 0x7c]
            //   89859c000000         | mov                 dword ptr [ebp + 0x9c], eax
            //   51                   | push                ecx

        $sequence_3 = { 33859c000000 8985bc000000 51 52 89f2 c1c808 0fb6c8 }
            // n = 7, score = 900
            //   33859c000000         | xor                 eax, dword ptr [ebp + 0x9c]
            //   8985bc000000         | mov                 dword ptr [ebp + 0xbc], eax
            //   51                   | push                ecx
            //   52                   | push                edx
            //   89f2                 | mov                 edx, esi
            //   c1c808               | ror                 eax, 8
            //   0fb6c8               | movzx               ecx, al

        $sequence_4 = { 335d04 83c510 8b7508 8b7d0c 55 c1c010 }
            // n = 6, score = 900
            //   335d04               | xor                 ebx, dword ptr [ebp + 4]
            //   83c510               | add                 ebp, 0x10
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   55                   | push                ebp
            //   c1c010               | rol                 eax, 0x10

        $sequence_5 = { 56 57 8b742414 8b06 8b5e04 8b4e08 }
            // n = 6, score = 900
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b742414             | mov                 esi, dword ptr [esp + 0x14]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b5e04               | mov                 ebx, dword ptr [esi + 4]
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]

        $sequence_6 = { 334500 335d04 8b542418 8902 }
            // n = 4, score = 900
            //   334500               | xor                 eax, dword ptr [ebp]
            //   335d04               | xor                 ebx, dword ptr [ebp + 4]
            //   8b542418             | mov                 edx, dword ptr [esp + 0x18]
            //   8902                 | mov                 dword ptr [edx], eax

        $sequence_7 = { 334500 335d04 8b6c2418 894500 895d04 }
            // n = 5, score = 900
            //   334500               | xor                 eax, dword ptr [ebp]
            //   335d04               | xor                 ebx, dword ptr [ebp + 4]
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   894500               | mov                 dword ptr [ebp], eax
            //   895d04               | mov                 dword ptr [ebp + 4], ebx

        $sequence_8 = { 31c9 8b400c 89c2 83c214 }
            // n = 4, score = 100
            //   31c9                 | xor                 ecx, ecx
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   89c2                 | mov                 edx, eax
            //   83c214               | add                 edx, 0x14

        $sequence_9 = { 83f900 894c2428 89442424 0f8540ffffff b801000000 8b4c2434 }
            // n = 6, score = 100
            //   83f900               | cmp                 ecx, 0
            //   894c2428             | mov                 dword ptr [esp + 0x28], ecx
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   0f8540ffffff         | jne                 0xffffff46
            //   b801000000           | mov                 eax, 1
            //   8b4c2434             | mov                 ecx, dword ptr [esp + 0x34]

        $sequence_10 = { 8916 c7460804000000 89442448 ffd1 83ec10 8b4c2448 81c190000000 }
            // n = 7, score = 100
            //   8916                 | mov                 dword ptr [esi], edx
            //   c7460804000000       | mov                 dword ptr [esi + 8], 4
            //   89442448             | mov                 dword ptr [esp + 0x48], eax
            //   ffd1                 | call                ecx
            //   83ec10               | sub                 esp, 0x10
            //   8b4c2448             | mov                 ecx, dword ptr [esp + 0x48]
            //   81c190000000         | add                 ecx, 0x90

        $sequence_11 = { e8???????? b901000000 31d2 83b8c400000000 89542444 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   b901000000           | mov                 ecx, 1
            //   31d2                 | xor                 edx, edx
            //   83b8c400000000       | cmp                 dword ptr [eax + 0xc4], 0
            //   89542444             | mov                 dword ptr [esp + 0x44], edx

        $sequence_12 = { 890c24 89442474 894c2470 e8???????? 31c9 83f800 8944246c }
            // n = 7, score = 100
            //   890c24               | mov                 dword ptr [esp], ecx
            //   89442474             | mov                 dword ptr [esp + 0x74], eax
            //   894c2470             | mov                 dword ptr [esp + 0x70], ecx
            //   e8????????           |                     
            //   31c9                 | xor                 ecx, ecx
            //   83f800               | cmp                 eax, 0
            //   8944246c             | mov                 dword ptr [esp + 0x6c], eax

        $sequence_13 = { 75b0 8a442407 a801 752c eb00 }
            // n = 5, score = 100
            //   75b0                 | jne                 0xffffffb2
            //   8a442407             | mov                 al, byte ptr [esp + 7]
            //   a801                 | test                al, 1
            //   752c                 | jne                 0x2e
            //   eb00                 | jmp                 2

        $sequence_14 = { 0fb77014 01f2 89c6 83c606 6683780600 89442430 }
            // n = 6, score = 100
            //   0fb77014             | movzx               esi, word ptr [eax + 0x14]
            //   01f2                 | add                 edx, esi
            //   89c6                 | mov                 esi, eax
            //   83c606               | add                 esi, 6
            //   6683780600           | cmp                 word ptr [eax + 6], 0
            //   89442430             | mov                 dword ptr [esp + 0x30], eax

        $sequence_15 = { eb1d 8b442414 0fb708 8b542434 8b742428 03561c }
            // n = 6, score = 100
            //   eb1d                 | jmp                 0x1f
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   0fb708               | movzx               ecx, word ptr [eax]
            //   8b542434             | mov                 edx, dword ptr [esp + 0x34]
            //   8b742428             | mov                 esi, dword ptr [esp + 0x28]
            //   03561c               | add                 edx, dword ptr [esi + 0x1c]

    condition:
        7 of them and filesize < 1187840
}