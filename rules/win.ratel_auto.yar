rule win_ratel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.ratel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ratel"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e9???????? 8b01 ff5024 89c3 83f8ff 0f85defaffff c7450800000000 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5024               | call                dword ptr [eax + 0x24]
            //   89c3                 | mov                 ebx, eax
            //   83f8ff               | cmp                 eax, -1
            //   0f85defaffff         | jne                 0xfffffae4
            //   c7450800000000       | mov                 dword ptr [ebp + 8], 0

        $sequence_1 = { e8???????? 8b45d4 8b00 8b401c 3d???????? 0f8480feffff 8d561a }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b45d4               | mov                 eax, dword ptr [ebp - 0x2c]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b401c               | mov                 eax, dword ptr [eax + 0x1c]
            //   3d????????           |                     
            //   0f8480feffff         | je                  0xfffffe86
            //   8d561a               | lea                 edx, [esi + 0x1a]

        $sequence_2 = { d9ee d9c9 83c001 dfe9 ddd8 89442440 8b44243c }
            // n = 7, score = 100
            //   d9ee                 | fldz                
            //   d9c9                 | fxch                st(1)
            //   83c001               | add                 eax, 1
            //   dfe9                 | fucomip             st(1)
            //   ddd8                 | fstp                st(0)
            //   89442440             | mov                 dword ptr [esp + 0x40], eax
            //   8b44243c             | mov                 eax, dword ptr [esp + 0x3c]

        $sequence_3 = { 83c030 668945aa 837d9c0a 0fb7c6 0f8fba010000 6683fe2f 0f8670040000 }
            // n = 7, score = 100
            //   83c030               | add                 eax, 0x30
            //   668945aa             | mov                 word ptr [ebp - 0x56], ax
            //   837d9c0a             | cmp                 dword ptr [ebp - 0x64], 0xa
            //   0fb7c6               | movzx               eax, si
            //   0f8fba010000         | jg                  0x1c0
            //   6683fe2f             | cmp                 si, 0x2f
            //   0f8670040000         | jbe                 0x476

        $sequence_4 = { e9???????? 0fb645b4 8b75d4 c745b800000000 c645b500 8845aa 8b45d0 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   0fb645b4             | movzx               eax, byte ptr [ebp - 0x4c]
            //   8b75d4               | mov                 esi, dword ptr [ebp - 0x2c]
            //   c745b800000000       | mov                 dword ptr [ebp - 0x48], 0
            //   c645b500             | mov                 byte ptr [ebp - 0x4b], 0
            //   8845aa               | mov                 byte ptr [ebp - 0x56], al
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]

        $sequence_5 = { 8b00 8b50f4 c744160800000000 ba04000000 e9???????? 8b4508 31c9 }
            // n = 7, score = 100
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b50f4               | mov                 edx, dword ptr [eax - 0xc]
            //   c744160800000000     | mov                 dword ptr [esi + edx + 8], 0
            //   ba04000000           | mov                 edx, 4
            //   e9????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   31c9                 | xor                 ecx, ecx

        $sequence_6 = { 0fb65775 884775 8b4304 885675 8b55fc 895304 8945fc }
            // n = 7, score = 100
            //   0fb65775             | movzx               edx, byte ptr [edi + 0x75]
            //   884775               | mov                 byte ptr [edi + 0x75], al
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   885675               | mov                 byte ptr [esi + 0x75], dl
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   895304               | mov                 dword ptr [ebx + 4], edx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_7 = { b810000000 ba0a000000 0f44d0 8955b8 8b4db4 6683feff 0f9445c0 }
            // n = 7, score = 100
            //   b810000000           | mov                 eax, 0x10
            //   ba0a000000           | mov                 edx, 0xa
            //   0f44d0               | cmove               edx, eax
            //   8955b8               | mov                 dword ptr [ebp - 0x48], edx
            //   8b4db4               | mov                 ecx, dword ptr [ebp - 0x4c]
            //   6683feff             | cmp                 si, -1
            //   0f9445c0             | sete                byte ptr [ebp - 0x40]

        $sequence_8 = { 0fb67d93 83f8ff b800000000 0f44c7 89c7 b800000000 0f44d8 }
            // n = 7, score = 100
            //   0fb67d93             | movzx               edi, byte ptr [ebp - 0x6d]
            //   83f8ff               | cmp                 eax, -1
            //   b800000000           | mov                 eax, 0
            //   0f44c7               | cmove               eax, edi
            //   89c7                 | mov                 edi, eax
            //   b800000000           | mov                 eax, 0
            //   0f44d8               | cmove               ebx, eax

        $sequence_9 = { 0f8483010000 8b5308 3955e4 0f87c7000000 c604383b 8b45e4 894304 }
            // n = 7, score = 100
            //   0f8483010000         | je                  0x189
            //   8b5308               | mov                 edx, dword ptr [ebx + 8]
            //   3955e4               | cmp                 dword ptr [ebp - 0x1c], edx
            //   0f87c7000000         | ja                  0xcd
            //   c604383b             | mov                 byte ptr [eax + edi], 0x3b
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   894304               | mov                 dword ptr [ebx + 4], eax

    condition:
        7 of them and filesize < 2174976
}