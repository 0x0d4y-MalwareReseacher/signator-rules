rule win_diztakun_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.diztakun."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.diztakun"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 7407 33c0 e9???????? 8b2d???????? }
            // n = 5, score = 100
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   8b2d????????         |                     

        $sequence_1 = { 8b48f8 51 50 e8???????? 83c408 85c0 7c78 }
            // n = 7, score = 100
            //   8b48f8               | mov                 ecx, dword ptr [eax - 8]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7c78                 | jl                  0x7a

        $sequence_2 = { ff15???????? 6a00 68???????? 68???????? 8bcf e8???????? 50 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   68????????           |                     
            //   68????????           |                     
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   50                   | push                eax

        $sequence_3 = { 8b4de4 83c40c 6bc930 8975e0 8db1708e4400 8975e4 eb2a }
            // n = 7, score = 100
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   83c40c               | add                 esp, 0xc
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   8db1708e4400         | lea                 esi, [ecx + 0x448e70]
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   eb2a                 | jmp                 0x2c

        $sequence_4 = { 50 8d44245c 68???????? b310 50 889c24e4070000 e8???????? }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d44245c             | lea                 eax, [esp + 0x5c]
            //   68????????           |                     
            //   b310                 | mov                 bl, 0x10
            //   50                   | push                eax
            //   889c24e4070000       | mov                 byte ptr [esp + 0x7e4], bl
            //   e8????????           |                     

        $sequence_5 = { 7411 84c0 7408 83c8ff 668901 eb05 33d2 }
            // n = 7, score = 100
            //   7411                 | je                  0x13
            //   84c0                 | test                al, al
            //   7408                 | je                  0xa
            //   83c8ff               | or                  eax, 0xffffffff
            //   668901               | mov                 word ptr [ecx], ax
            //   eb05                 | jmp                 7
            //   33d2                 | xor                 edx, edx

        $sequence_6 = { 90 83c602 66833e00 75f7 43 83fb40 7ca1 }
            // n = 7, score = 100
            //   90                   | nop                 
            //   83c602               | add                 esi, 2
            //   66833e00             | cmp                 word ptr [esi], 0
            //   75f7                 | jne                 0xfffffff9
            //   43                   | inc                 ebx
            //   83fb40               | cmp                 ebx, 0x40
            //   7ca1                 | jl                  0xffffffa3

        $sequence_7 = { 8d5f54 68???????? 8bcb 8944243c 89442440 89542448 }
            // n = 6, score = 100
            //   8d5f54               | lea                 ebx, [edi + 0x54]
            //   68????????           |                     
            //   8bcb                 | mov                 ecx, ebx
            //   8944243c             | mov                 dword ptr [esp + 0x3c], eax
            //   89442440             | mov                 dword ptr [esp + 0x40], eax
            //   89542448             | mov                 dword ptr [esp + 0x48], edx

        $sequence_8 = { c68424d807000019 8b442430 83c0f0 8d480c 83caff f00fc111 }
            // n = 6, score = 100
            //   c68424d807000019     | mov                 byte ptr [esp + 0x7d8], 0x19
            //   8b442430             | mov                 eax, dword ptr [esp + 0x30]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, [eax + 0xc]
            //   83caff               | or                  edx, 0xffffffff
            //   f00fc111             | lock xadd           dword ptr [ecx], edx

        $sequence_9 = { 8b08 8b11 50 8b4204 ffd0 c68424d807000001 8b442444 }
            // n = 7, score = 100
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   50                   | push                eax
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   ffd0                 | call                eax
            //   c68424d807000001     | mov                 byte ptr [esp + 0x7d8], 1
            //   8b442444             | mov                 eax, dword ptr [esp + 0x44]

    condition:
        7 of them and filesize < 688128
}