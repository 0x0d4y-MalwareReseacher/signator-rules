rule win_diztakun_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.diztakun."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.diztakun"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd6 8b3d???????? 85c0 742b 8d4c241c 51 8d542418 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   8b3d????????         |                     
            //   85c0                 | test                eax, eax
            //   742b                 | je                  0x2d
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]
            //   51                   | push                ecx
            //   8d542418             | lea                 edx, [esp + 0x18]

        $sequence_1 = { c3 8bcb e8???????? 8bf0 8b0e 8b11 }
            // n = 6, score = 100
            //   c3                   | ret                 
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   8b11                 | mov                 edx, dword ptr [ecx]

        $sequence_2 = { 8b4004 8b80a8000000 50 eb05 68???????? 8bfb }
            // n = 6, score = 100
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   8b80a8000000         | mov                 eax, dword ptr [eax + 0xa8]
            //   50                   | push                eax
            //   eb05                 | jmp                 7
            //   68????????           |                     
            //   8bfb                 | mov                 edi, ebx

        $sequence_3 = { 8b00 50 e8???????? 889c24d8070000 8b442410 83c0f0 }
            // n = 6, score = 100
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   50                   | push                eax
            //   e8????????           |                     
            //   889c24d8070000       | mov                 byte ptr [esp + 0x7d8], bl
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   83c0f0               | add                 eax, -0x10

        $sequence_4 = { 7f0a 8b08 8b11 50 8b4204 ffd0 c68424d807000012 }
            // n = 7, score = 100
            //   7f0a                 | jg                  0xc
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   50                   | push                eax
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   ffd0                 | call                eax
            //   c68424d807000012     | mov                 byte ptr [esp + 0x7d8], 0x12

        $sequence_5 = { ffd0 c68424d80700000d 8b442450 83c0f0 }
            // n = 4, score = 100
            //   ffd0                 | call                eax
            //   c68424d80700000d     | mov                 byte ptr [esp + 0x7d8], 0xd
            //   8b442450             | mov                 eax, dword ptr [esp + 0x50]
            //   83c0f0               | add                 eax, -0x10

        $sequence_6 = { 85ff 744a 6a06 8bce e8???????? 8b4e20 }
            // n = 6, score = 100
            //   85ff                 | test                edi, edi
            //   744a                 | je                  0x4c
            //   6a06                 | push                6
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8b4e20               | mov                 ecx, dword ptr [esi + 0x20]

        $sequence_7 = { 7d1c 8b03 8b5060 8bcb ffd2 8b07 8b5060 }
            // n = 7, score = 100
            //   7d1c                 | jge                 0x1e
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8b5060               | mov                 edx, dword ptr [eax + 0x60]
            //   8bcb                 | mov                 ecx, ebx
            //   ffd2                 | call                edx
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   8b5060               | mov                 edx, dword ptr [eax + 0x60]

        $sequence_8 = { 8b4234 51 ffd0 8b4c2444 8b11 83ec10 }
            // n = 6, score = 100
            //   8b4234               | mov                 eax, dword ptr [edx + 0x34]
            //   51                   | push                ecx
            //   ffd0                 | call                eax
            //   8b4c2444             | mov                 ecx, dword ptr [esp + 0x44]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   83ec10               | sub                 esp, 0x10

        $sequence_9 = { ffd0 c68424d80700000d 8b442450 83c0f0 8d480c 83caff f00fc111 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   c68424d80700000d     | mov                 byte ptr [esp + 0x7d8], 0xd
            //   8b442450             | mov                 eax, dword ptr [esp + 0x50]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, [eax + 0xc]
            //   83caff               | or                  edx, 0xffffffff
            //   f00fc111             | lock xadd           dword ptr [ecx], edx

    condition:
        7 of them and filesize < 688128
}