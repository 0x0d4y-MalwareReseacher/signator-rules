rule win_flawedgrace_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.flawedgrace."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flawedgrace"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b0d???????? 68???????? e8???????? 8bf0 83c404 85f6 742f }
            // n = 7, score = 200
            //   8b0d????????         |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4
            //   85f6                 | test                esi, esi
            //   742f                 | je                  0x31

        $sequence_1 = { c1e918 8b0c8de09f4500 330c85e09b4500 8b45ec c1e808 0fb6c0 330c85e0974500 }
            // n = 7, score = 200
            //   c1e918               | shr                 ecx, 0x18
            //   8b0c8de09f4500       | mov                 ecx, dword ptr [ecx*4 + 0x459fe0]
            //   330c85e09b4500       | xor                 ecx, dword ptr [eax*4 + 0x459be0]
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   c1e808               | shr                 eax, 8
            //   0fb6c0               | movzx               eax, al
            //   330c85e0974500       | xor                 ecx, dword ptr [eax*4 + 0x4597e0]

        $sequence_2 = { 8b45e8 0fb6c0 330c85e0934500 8bc2 338f80000000 c1e810 894df4 }
            // n = 7, score = 200
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   0fb6c0               | movzx               eax, al
            //   330c85e0934500       | xor                 ecx, dword ptr [eax*4 + 0x4593e0]
            //   8bc2                 | mov                 eax, edx
            //   338f80000000         | xor                 ecx, dword ptr [edi + 0x80]
            //   c1e810               | shr                 eax, 0x10
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx

        $sequence_3 = { 0f1f440000 833d????????00 7446 85f6 7508 8b35???????? eb0f }
            // n = 7, score = 200
            //   0f1f440000           | nop                 dword ptr [eax + eax]
            //   833d????????00       |                     
            //   7446                 | je                  0x48
            //   85f6                 | test                esi, esi
            //   7508                 | jne                 0xa
            //   8b35????????         |                     
            //   eb0f                 | jmp                 0x11

        $sequence_4 = { c68506c9ffffeb c68507c9ffff21 c68508c9ffff8b c68509c9ffff43 c6850ac9ffff50 c6850bc9ffff48 c6850cc9ffff83 }
            // n = 7, score = 200
            //   c68506c9ffffeb       | mov                 byte ptr [ebp - 0x36fa], 0xeb
            //   c68507c9ffff21       | mov                 byte ptr [ebp - 0x36f9], 0x21
            //   c68508c9ffff8b       | mov                 byte ptr [ebp - 0x36f8], 0x8b
            //   c68509c9ffff43       | mov                 byte ptr [ebp - 0x36f7], 0x43
            //   c6850ac9ffff50       | mov                 byte ptr [ebp - 0x36f6], 0x50
            //   c6850bc9ffff48       | mov                 byte ptr [ebp - 0x36f5], 0x48
            //   c6850cc9ffff83       | mov                 byte ptr [ebp - 0x36f4], 0x83

        $sequence_5 = { 83c404 c745fc02000000 57 8b3d???????? ffd7 8d83ec010000 c745fc03000000 }
            // n = 7, score = 200
            //   83c404               | add                 esp, 4
            //   c745fc02000000       | mov                 dword ptr [ebp - 4], 2
            //   57                   | push                edi
            //   8b3d????????         |                     
            //   ffd7                 | call                edi
            //   8d83ec010000         | lea                 eax, dword ptr [ebx + 0x1ec]
            //   c745fc03000000       | mov                 dword ptr [ebp - 4], 3

        $sequence_6 = { 8945e4 8d4de0 8b06 51 6a05 50 8b4008 }
            // n = 7, score = 200
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8d4de0               | lea                 ecx, dword ptr [ebp - 0x20]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   51                   | push                ecx
            //   6a05                 | push                5
            //   50                   | push                eax
            //   8b4008               | mov                 eax, dword ptr [eax + 8]

        $sequence_7 = { c685c3fbffff42 c685c4fbffff00 c685c5fbffff00 c685c6fbffff00 c685c7fbffff43 c685c8fbffff00 c685c9fbffff68 }
            // n = 7, score = 200
            //   c685c3fbffff42       | mov                 byte ptr [ebp - 0x43d], 0x42
            //   c685c4fbffff00       | mov                 byte ptr [ebp - 0x43c], 0
            //   c685c5fbffff00       | mov                 byte ptr [ebp - 0x43b], 0
            //   c685c6fbffff00       | mov                 byte ptr [ebp - 0x43a], 0
            //   c685c7fbffff43       | mov                 byte ptr [ebp - 0x439], 0x43
            //   c685c8fbffff00       | mov                 byte ptr [ebp - 0x438], 0
            //   c685c9fbffff68       | mov                 byte ptr [ebp - 0x437], 0x68

        $sequence_8 = { 8d45d8 50 e8???????? 8b4de0 83ee01 75eb ff75cc }
            // n = 7, score = 200
            //   8d45d8               | lea                 eax, dword ptr [ebp - 0x28]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   83ee01               | sub                 esi, 1
            //   75eb                 | jne                 0xffffffed
            //   ff75cc               | push                dword ptr [ebp - 0x34]

        $sequence_9 = { 8d7601 0fb6cb 33d1 c1eb08 339c95e0fbffff 81f38def02d2 899ddcfbffff }
            // n = 7, score = 200
            //   8d7601               | lea                 esi, dword ptr [esi + 1]
            //   0fb6cb               | movzx               ecx, bl
            //   33d1                 | xor                 edx, ecx
            //   c1eb08               | shr                 ebx, 8
            //   339c95e0fbffff       | xor                 ebx, dword ptr [ebp + edx*4 - 0x420]
            //   81f38def02d2         | xor                 ebx, 0xd202ef8d
            //   899ddcfbffff         | mov                 dword ptr [ebp - 0x424], ebx

    condition:
        7 of them and filesize < 966656
}