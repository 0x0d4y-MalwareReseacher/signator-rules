rule win_mutabaha_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.mutabaha."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mutabaha"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 83c408 85c0 0f8435010000 f6c310 0f842c010000 33c0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   0f8435010000         | je                  0x13b
            //   f6c310               | test                bl, 0x10
            //   0f842c010000         | je                  0x132
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 33f6 0f1f8000000000 8b4508 8d7628 8b08 0fb60417 894431f4 }
            // n = 7, score = 100
            //   33f6                 | xor                 esi, esi
            //   0f1f8000000000       | nop                 dword ptr [eax]
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8d7628               | lea                 esi, dword ptr [esi + 0x28]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   0fb60417             | movzx               eax, byte ptr [edi + edx]
            //   894431f4             | mov                 dword ptr [ecx + esi - 0xc], eax

        $sequence_2 = { 6a02 50 6a00 ff15???????? 6683bde8fdffff00 7504 33c9 }
            // n = 7, score = 100
            //   6a02                 | push                2
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6683bde8fdffff00     | cmp                 word ptr [ebp - 0x218], 0
            //   7504                 | jne                 6
            //   33c9                 | xor                 ecx, ecx

        $sequence_3 = { a801 0f85dc030000 8b7de4 8bd0 ff7520 8d5f44 8bcb }
            // n = 7, score = 100
            //   a801                 | test                al, 1
            //   0f85dc030000         | jne                 0x3e2
            //   8b7de4               | mov                 edi, dword ptr [ebp - 0x1c]
            //   8bd0                 | mov                 edx, eax
            //   ff7520               | push                dword ptr [ebp + 0x20]
            //   8d5f44               | lea                 ebx, dword ptr [edi + 0x44]
            //   8bcb                 | mov                 ecx, ebx

        $sequence_4 = { 8d4df0 c745f000000000 51 50 ff15???????? 85c0 7460 }
            // n = 7, score = 100
            //   8d4df0               | lea                 ecx, dword ptr [ebp - 0x10]
            //   c745f000000000       | mov                 dword ptr [ebp - 0x10], 0
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7460                 | je                  0x62

        $sequence_5 = { e8???????? 6a02 68???????? 8d4d8c c645fc11 e8???????? }
            // n = 6, score = 100
            //   e8????????           |                     
            //   6a02                 | push                2
            //   68????????           |                     
            //   8d4d8c               | lea                 ecx, dword ptr [ebp - 0x74]
            //   c645fc11             | mov                 byte ptr [ebp - 4], 0x11
            //   e8????????           |                     

        $sequence_6 = { eb0d 803c3000 0f94c0 8802 84c0 742f 8b4508 }
            // n = 7, score = 100
            //   eb0d                 | jmp                 0xf
            //   803c3000             | cmp                 byte ptr [eax + esi], 0
            //   0f94c0               | sete                al
            //   8802                 | mov                 byte ptr [edx], al
            //   84c0                 | test                al, al
            //   742f                 | je                  0x31
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_7 = { 83c408 894704 8bc7 8b4df4 64890d00000000 59 5f }
            // n = 7, score = 100
            //   83c408               | add                 esp, 8
            //   894704               | mov                 dword ptr [edi + 4], eax
            //   8bc7                 | mov                 eax, edi
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_8 = { 6a02 33c0 c785e4fdffff07000000 68???????? 8d8dd0fdffff c785e0fdffff00000000 668985d0fdffff }
            // n = 7, score = 100
            //   6a02                 | push                2
            //   33c0                 | xor                 eax, eax
            //   c785e4fdffff07000000     | mov    dword ptr [ebp - 0x21c], 7
            //   68????????           |                     
            //   8d8dd0fdffff         | lea                 ecx, dword ptr [ebp - 0x230]
            //   c785e0fdffff00000000     | mov    dword ptr [ebp - 0x220], 0
            //   668985d0fdffff       | mov                 word ptr [ebp - 0x230], ax

        $sequence_9 = { b301 668945d8 e8???????? 6a01 51 68???????? 8d4dd8 }
            // n = 7, score = 100
            //   b301                 | mov                 bl, 1
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax
            //   e8????????           |                     
            //   6a01                 | push                1
            //   51                   | push                ecx
            //   68????????           |                     
            //   8d4dd8               | lea                 ecx, dword ptr [ebp - 0x28]

    condition:
        7 of them and filesize < 1220608
}