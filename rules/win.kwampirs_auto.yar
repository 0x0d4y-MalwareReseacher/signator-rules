rule win_kwampirs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.kwampirs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kwampirs"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd6 8b4dc4 51 ffd6 }
            // n = 4, score = 800
            //   ffd6                 | call                esi
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   51                   | push                ecx
            //   ffd6                 | call                esi

        $sequence_1 = { 6a01 56 8b0f 51 }
            // n = 4, score = 800
            //   6a01                 | push                1
            //   56                   | push                esi
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   51                   | push                ecx

        $sequence_2 = { 8bec 6afe 68???????? 68???????? 64a100000000 50 83ec6c }
            // n = 7, score = 800
            //   8bec                 | mov                 ebp, esp
            //   6afe                 | push                -2
            //   68????????           |                     
            //   68????????           |                     
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   50                   | push                eax
            //   83ec6c               | sub                 esp, 0x6c

        $sequence_3 = { 3145f8 33c5 50 8d45f0 64a300000000 8965e8 8bf9 }
            // n = 7, score = 800
            //   3145f8               | xor                 dword ptr [ebp - 8], eax
            //   33c5                 | xor                 eax, ebp
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8965e8               | mov                 dword ptr [ebp - 0x18], esp
            //   8bf9                 | mov                 edi, ecx

        $sequence_4 = { 33d2 6816060000 52 8d85bef3ffff 50 }
            // n = 5, score = 800
            //   33d2                 | xor                 edx, edx
            //   6816060000           | push                0x616
            //   52                   | push                edx
            //   8d85bef3ffff         | lea                 eax, dword ptr [ebp - 0xc42]
            //   50                   | push                eax

        $sequence_5 = { c745fcfeffffff e8???????? b001 8b4df0 64890d00000000 59 5f }
            // n = 7, score = 800
            //   c745fcfeffffff       | mov                 dword ptr [ebp - 4], 0xfffffffe
            //   e8????????           |                     
            //   b001                 | mov                 al, 1
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_6 = { ba02000000 f7e2 0f90c1 53 56 57 f7d9 }
            // n = 7, score = 800
            //   ba02000000           | mov                 edx, 2
            //   f7e2                 | mul                 edx
            //   0f90c1               | seto                cl
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   f7d9                 | neg                 ecx

        $sequence_7 = { 8d4df0 51 68???????? e8???????? 83c40c 32c0 }
            // n = 6, score = 800
            //   8d4df0               | lea                 ecx, dword ptr [ebp - 0x10]
            //   51                   | push                ecx
            //   68????????           |                     
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   32c0                 | xor                 al, al

        $sequence_8 = { 50 6a01 56 8b0f 51 e8???????? }
            // n = 6, score = 800
            //   50                   | push                eax
            //   6a01                 | push                1
            //   56                   | push                esi
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_9 = { 391f 0f95c0 8b4df0 64890d00000000 59 }
            // n = 5, score = 800
            //   391f                 | cmp                 dword ptr [edi], ebx
            //   0f95c0               | setne               al
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 2695168
}