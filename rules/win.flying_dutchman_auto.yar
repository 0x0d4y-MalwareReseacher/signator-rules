rule win_flying_dutchman_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.flying_dutchman."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flying_dutchman"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 66890c02 83c002 6685c9 75f1 e9???????? 8b85e8feffff 83e800 }
            // n = 7, score = 100
            //   66890c02             | mov                 word ptr [edx + eax], cx
            //   83c002               | add                 eax, 2
            //   6685c9               | test                cx, cx
            //   75f1                 | jne                 0xfffffff3
            //   e9????????           |                     
            //   8b85e8feffff         | mov                 eax, dword ptr [ebp - 0x118]
            //   83e800               | sub                 eax, 0

        $sequence_1 = { a5 8dbdb8fdffff 83ef02 668b4702 83c702 663bc3 }
            // n = 6, score = 100
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   8dbdb8fdffff         | lea                 edi, [ebp - 0x248]
            //   83ef02               | sub                 edi, 2
            //   668b4702             | mov                 ax, word ptr [edi + 2]
            //   83c702               | add                 edi, 2
            //   663bc3               | cmp                 ax, bx

        $sequence_2 = { 838574ffffff08 8bb56cffffff 83c308 ff8d70ffffff 0f8510feffff 8b5604 3bd7 }
            // n = 7, score = 100
            //   838574ffffff08       | add                 dword ptr [ebp - 0x8c], 8
            //   8bb56cffffff         | mov                 esi, dword ptr [ebp - 0x94]
            //   83c308               | add                 ebx, 8
            //   ff8d70ffffff         | dec                 dword ptr [ebp - 0x90]
            //   0f8510feffff         | jne                 0xfffffe16
            //   8b5604               | mov                 edx, dword ptr [esi + 4]
            //   3bd7                 | cmp                 edx, edi

        $sequence_3 = { c60700 ff755c 8d85ecfeffff 68???????? 50 }
            // n = 5, score = 100
            //   c60700               | mov                 byte ptr [edi], 0
            //   ff755c               | push                dword ptr [ebp + 0x5c]
            //   8d85ecfeffff         | lea                 eax, [ebp - 0x114]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_4 = { ff45f0 3945f0 72d2 33f6 ff75e4 8b45ec ff7508 }
            // n = 7, score = 100
            //   ff45f0               | inc                 dword ptr [ebp - 0x10]
            //   3945f0               | cmp                 dword ptr [ebp - 0x10], eax
            //   72d2                 | jb                  0xffffffd4
            //   33f6                 | xor                 esi, esi
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_5 = { 897810 897814 eb02 33c0 8bf0 397dfc 767d }
            // n = 7, score = 100
            //   897810               | mov                 dword ptr [eax + 0x10], edi
            //   897814               | mov                 dword ptr [eax + 0x14], edi
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   8bf0                 | mov                 esi, eax
            //   397dfc               | cmp                 dword ptr [ebp - 4], edi
            //   767d                 | jbe                 0x7f

        $sequence_6 = { 68???????? 57 57 ff15???????? eb14 e8???????? eb0d }
            // n = 7, score = 100
            //   68????????           |                     
            //   57                   | push                edi
            //   57                   | push                edi
            //   ff15????????         |                     
            //   eb14                 | jmp                 0x16
            //   e8????????           |                     
            //   eb0d                 | jmp                 0xf

        $sequence_7 = { 57 ff15???????? 8b35???????? 8944240c 85c0 }
            // n = 5, score = 100
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8b35????????         |                     
            //   8944240c             | mov                 dword ptr [esp + 0xc], eax
            //   85c0                 | test                eax, eax

        $sequence_8 = { 8bf0 59 59 85f6 7443 83c610 }
            // n = 6, score = 100
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   85f6                 | test                esi, esi
            //   7443                 | je                  0x45
            //   83c610               | add                 esi, 0x10

        $sequence_9 = { 7503 57 ffd6 6a02 8d442414 50 57 }
            // n = 7, score = 100
            //   7503                 | jne                 5
            //   57                   | push                edi
            //   ffd6                 | call                esi
            //   6a02                 | push                2
            //   8d442414             | lea                 eax, [esp + 0x14]
            //   50                   | push                eax
            //   57                   | push                edi

    condition:
        7 of them and filesize < 276480
}