rule win_himera_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.himera_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.himera_loader"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 660fd60f 8d7f08 8b048da4bd4000 ffe0 f7c703000000 7413 8a06 }
            // n = 7, score = 200
            //   660fd60f             | movq                qword ptr [edi], xmm1
            //   8d7f08               | lea                 edi, [edi + 8]
            //   8b048da4bd4000       | mov                 eax, dword ptr [ecx*4 + 0x40bda4]
            //   ffe0                 | jmp                 eax
            //   f7c703000000         | test                edi, 3
            //   7413                 | je                  0x15
            //   8a06                 | mov                 al, byte ptr [esi]

        $sequence_1 = { 894de0 c745e4343f4200 e9???????? c745e003000000 }
            // n = 4, score = 200
            //   894de0               | mov                 dword ptr [ebp - 0x20], ecx
            //   c745e4343f4200       | mov                 dword ptr [ebp - 0x1c], 0x423f34
            //   e9????????           |                     
            //   c745e003000000       | mov                 dword ptr [ebp - 0x20], 3

        $sequence_2 = { c645e84d c645e94b c645ea00 c645eb4b c645ec56 c645ed4b }
            // n = 6, score = 200
            //   c645e84d             | mov                 byte ptr [ebp - 0x18], 0x4d
            //   c645e94b             | mov                 byte ptr [ebp - 0x17], 0x4b
            //   c645ea00             | mov                 byte ptr [ebp - 0x16], 0
            //   c645eb4b             | mov                 byte ptr [ebp - 0x15], 0x4b
            //   c645ec56             | mov                 byte ptr [ebp - 0x14], 0x56
            //   c645ed4b             | mov                 byte ptr [ebp - 0x13], 0x4b

        $sequence_3 = { e8???????? 83c404 85c0 7405 e8???????? 33c0 88855682ffff }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   7405                 | je                  7
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   88855682ffff         | mov                 byte ptr [ebp - 0x7daa], al

        $sequence_4 = { 8b45fc 83c001 8945fc 837dfc0c 730b 8b4df8 }
            // n = 6, score = 200
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   83c001               | add                 eax, 1
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   837dfc0c             | cmp                 dword ptr [ebp - 4], 0xc
            //   730b                 | jae                 0xd
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_5 = { 0f8483000000 eb7d 8b1c9db8fe4100 6800080000 }
            // n = 4, score = 200
            //   0f8483000000         | je                  0x89
            //   eb7d                 | jmp                 0x7f
            //   8b1c9db8fe4100       | mov                 ebx, dword ptr [ebx*4 + 0x41feb8]
            //   6800080000           | push                0x800

        $sequence_6 = { 6bf838 894df4 8b048d00a14200 c745f00a000000 8b540718 8955e0 }
            // n = 6, score = 200
            //   6bf838               | imul                edi, eax, 0x38
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8b048d00a14200       | mov                 eax, dword ptr [ecx*4 + 0x42a100]
            //   c745f00a000000       | mov                 dword ptr [ebp - 0x10], 0xa
            //   8b540718             | mov                 edx, dword ptr [edi + eax + 0x18]
            //   8955e0               | mov                 dword ptr [ebp - 0x20], edx

        $sequence_7 = { 8d8d4782ffff e8???????? 89852482ffff 33c0 88855282ffff 8d8d5282ffff e8???????? }
            // n = 7, score = 200
            //   8d8d4782ffff         | lea                 ecx, [ebp - 0x7db9]
            //   e8????????           |                     
            //   89852482ffff         | mov                 dword ptr [ebp - 0x7ddc], eax
            //   33c0                 | xor                 eax, eax
            //   88855282ffff         | mov                 byte ptr [ebp - 0x7dae], al
            //   8d8d5282ffff         | lea                 ecx, [ebp - 0x7dae]
            //   e8????????           |                     

        $sequence_8 = { 8b048d00a14200 f644102840 7405 803b1a 741d e8???????? c7001c000000 }
            // n = 7, score = 200
            //   8b048d00a14200       | mov                 eax, dword ptr [ecx*4 + 0x42a100]
            //   f644102840           | test                byte ptr [eax + edx + 0x28], 0x40
            //   7405                 | je                  7
            //   803b1a               | cmp                 byte ptr [ebx], 0x1a
            //   741d                 | je                  0x1f
            //   e8????????           |                     
            //   c7001c000000         | mov                 dword ptr [eax], 0x1c

        $sequence_9 = { 83e03f c1f906 6bf038 03348d00a14200 837e18ff 740c }
            // n = 6, score = 200
            //   83e03f               | and                 eax, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bf038               | imul                esi, eax, 0x38
            //   03348d00a14200       | add                 esi, dword ptr [ecx*4 + 0x42a100]
            //   837e18ff             | cmp                 dword ptr [esi + 0x18], -1
            //   740c                 | je                  0xe

    condition:
        7 of them and filesize < 385024
}