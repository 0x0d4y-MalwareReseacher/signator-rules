rule win_himera_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.himera_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.himera_loader"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645ae1e c645af0e c645b006 c645b179 c645b247 }
            // n = 5, score = 200
            //   c645ae1e             | mov                 byte ptr [ebp - 0x52], 0x1e
            //   c645af0e             | mov                 byte ptr [ebp - 0x51], 0xe
            //   c645b006             | mov                 byte ptr [ebp - 0x50], 6
            //   c645b179             | mov                 byte ptr [ebp - 0x4f], 0x79
            //   c645b247             | mov                 byte ptr [ebp - 0x4e], 0x47

        $sequence_1 = { 8945d8 85c0 754a e8???????? 8904bd00a14200 85c0 7426 }
            // n = 7, score = 200
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   85c0                 | test                eax, eax
            //   754a                 | jne                 0x4c
            //   e8????????           |                     
            //   8904bd00a14200       | mov                 dword ptr [edi*4 + 0x42a100], eax
            //   85c0                 | test                eax, eax
            //   7426                 | je                  0x28

        $sequence_2 = { b801000000 6bc814 8b55f8 0fbe040a 85c0 7409 c745fc01000000 }
            // n = 7, score = 200
            //   b801000000           | mov                 eax, 1
            //   6bc814               | imul                ecx, eax, 0x14
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   0fbe040a             | movsx               eax, byte ptr [edx + ecx]
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1

        $sequence_3 = { 8b048d7c3c4200 89858cf8ffff 85c0 0f8498000000 83f801 0f84b5000000 8b8d2cfeffff }
            // n = 7, score = 200
            //   8b048d7c3c4200       | mov                 eax, dword ptr [ecx*4 + 0x423c7c]
            //   89858cf8ffff         | mov                 dword ptr [ebp - 0x774], eax
            //   85c0                 | test                eax, eax
            //   0f8498000000         | je                  0x9e
            //   83f801               | cmp                 eax, 1
            //   0f84b5000000         | je                  0xbb
            //   8b8d2cfeffff         | mov                 ecx, dword ptr [ebp - 0x1d4]

        $sequence_4 = { 895508 0fbe45ff 85c0 7505 8b45f8 eb16 0fb64dff }
            // n = 7, score = 200
            //   895508               | mov                 dword ptr [ebp + 8], edx
            //   0fbe45ff             | movsx               eax, byte ptr [ebp - 1]
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   eb16                 | jmp                 0x18
            //   0fb64dff             | movzx               ecx, byte ptr [ebp - 1]

        $sequence_5 = { 51 ff952c82ffff 33d2 88955882ffff }
            // n = 4, score = 200
            //   51                   | push                ecx
            //   ff952c82ffff         | call                dword ptr [ebp - 0x7dd4]
            //   33d2                 | xor                 edx, edx
            //   88955882ffff         | mov                 byte ptr [ebp - 0x7da8], dl

        $sequence_6 = { 83e13f c1f806 6bc938 8b048500a14200 804c082820 8b75d8 b9000000c0 }
            // n = 7, score = 200
            //   83e13f               | and                 ecx, 0x3f
            //   c1f806               | sar                 eax, 6
            //   6bc938               | imul                ecx, ecx, 0x38
            //   8b048500a14200       | mov                 eax, dword ptr [eax*4 + 0x42a100]
            //   804c082820           | or                  byte ptr [eax + ecx + 0x28], 0x20
            //   8b75d8               | mov                 esi, dword ptr [ebp - 0x28]
            //   b9000000c0           | mov                 ecx, 0xc0000000

        $sequence_7 = { 51 8d951082ffff 52 8d8d5982ffff e8???????? 50 8d857c82ffff }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   8d951082ffff         | lea                 edx, [ebp - 0x7df0]
            //   52                   | push                edx
            //   8d8d5982ffff         | lea                 ecx, [ebp - 0x7da7]
            //   e8????????           |                     
            //   50                   | push                eax
            //   8d857c82ffff         | lea                 eax, [ebp - 0x7d84]

        $sequence_8 = { 55 8bec 83ec18 c745f800000000 c745f4f2030000 8b45f8 3b45f4 }
            // n = 7, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec18               | sub                 esp, 0x18
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0
            //   c745f4f2030000       | mov                 dword ptr [ebp - 0xc], 0x3f2
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   3b45f4               | cmp                 eax, dword ptr [ebp - 0xc]

        $sequence_9 = { ba02000000 6bc223 8b4d08 0fb71401 52 e8???????? }
            // n = 6, score = 200
            //   ba02000000           | mov                 edx, 2
            //   6bc223               | imul                eax, edx, 0x23
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   0fb71401             | movzx               edx, word ptr [ecx + eax]
            //   52                   | push                edx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 385024
}