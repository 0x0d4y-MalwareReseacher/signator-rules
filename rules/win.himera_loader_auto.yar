rule win_himera_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.himera_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.himera_loader"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d45f4 64a300000000 894ddc c745d810000000 c645e078 c645e16c }
            // n = 6, score = 200
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   894ddc               | mov                 dword ptr [ebp - 0x24], ecx
            //   c745d810000000       | mov                 dword ptr [ebp - 0x28], 0x10
            //   c645e078             | mov                 byte ptr [ebp - 0x20], 0x78
            //   c645e16c             | mov                 byte ptr [ebp - 0x1f], 0x6c

        $sequence_1 = { 8d8de482ffff 51 e8???????? 83c410 }
            // n = 4, score = 200
            //   8d8de482ffff         | lea                 ecx, [ebp - 0x7d1c]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

        $sequence_2 = { 55 8bec b8d87e0000 e8???????? }
            // n = 4, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   b8d87e0000           | mov                 eax, 0x7ed8
            //   e8????????           |                     

        $sequence_3 = { 8b45fc 83c032 668910 8b45fc 8be5 }
            // n = 5, score = 200
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   83c032               | add                 eax, 0x32
            //   668910               | mov                 word ptr [eax], dx
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8be5                 | mov                 esp, ebp

        $sequence_4 = { 55 8bec 81ec4c010000 a1???????? 33c5 8945fc c785c4feffff00000000 }
            // n = 7, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec4c010000         | sub                 esp, 0x14c
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   c785c4feffff00000000     | mov    dword ptr [ebp - 0x13c], 0

        $sequence_5 = { 03483c 8bc1 5d c3 55 8bec 6aff }
            // n = 7, score = 200
            //   03483c               | add                 ecx, dword ptr [eax + 0x3c]
            //   8bc1                 | mov                 eax, ecx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   6aff                 | push                -1

        $sequence_6 = { 8d0c3e 47 8b048500a14200 885c012e 3bfa }
            // n = 5, score = 200
            //   8d0c3e               | lea                 ecx, [esi + edi]
            //   47                   | inc                 edi
            //   8b048500a14200       | mov                 eax, dword ptr [eax*4 + 0x42a100]
            //   885c012e             | mov                 byte ptr [ecx + eax + 0x2e], bl
            //   3bfa                 | cmp                 edi, edx

        $sequence_7 = { 8945b8 33c9 884db6 8d4db6 e8???????? 50 8d55b8 }
            // n = 7, score = 200
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   33c9                 | xor                 ecx, ecx
            //   884db6               | mov                 byte ptr [ebp - 0x4a], cl
            //   8d4db6               | lea                 ecx, [ebp - 0x4a]
            //   e8????????           |                     
            //   50                   | push                eax
            //   8d55b8               | lea                 edx, [ebp - 0x48]

        $sequence_8 = { 0f8e77ffffff 83c8ff eb07 8b04cd8c234200 5f }
            // n = 5, score = 200
            //   0f8e77ffffff         | jle                 0xffffff7d
            //   83c8ff               | or                  eax, 0xffffffff
            //   eb07                 | jmp                 9
            //   8b04cd8c234200       | mov                 eax, dword ptr [ecx*8 + 0x42238c]
            //   5f                   | pop                 edi

        $sequence_9 = { c645c14f c645c24d c645c301 c645c41a }
            // n = 4, score = 200
            //   c645c14f             | mov                 byte ptr [ebp - 0x3f], 0x4f
            //   c645c24d             | mov                 byte ptr [ebp - 0x3e], 0x4d
            //   c645c301             | mov                 byte ptr [ebp - 0x3d], 1
            //   c645c41a             | mov                 byte ptr [ebp - 0x3c], 0x1a

    condition:
        7 of them and filesize < 385024
}