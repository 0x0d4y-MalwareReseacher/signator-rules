rule win_pinchduke_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.pinchduke."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pinchduke"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 59 50 56 89442418 ffd3 686e050000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   50                   | push                eax
            //   56                   | push                esi
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   ffd3                 | call                ebx
            //   686e050000           | push                0x56e

        $sequence_1 = { 55 57 896c241c ffd3 6870050000 e8???????? 59 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   57                   | push                edi
            //   896c241c             | mov                 dword ptr [esp + 0x1c], ebp
            //   ffd3                 | call                ebx
            //   6870050000           | push                0x570
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_2 = { 84c9 7511 8b4c2410 85c9 }
            // n = 4, score = 100
            //   84c9                 | test                cl, cl
            //   7511                 | jne                 0x13
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   85c9                 | test                ecx, ecx

        $sequence_3 = { 7204 c645ff00 f6c302 740b 8d4de8 83e3fd e8???????? }
            // n = 7, score = 100
            //   7204                 | jb                  6
            //   c645ff00             | mov                 byte ptr [ebp - 1], 0
            //   f6c302               | test                bl, 2
            //   740b                 | je                  0xd
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   83e3fd               | and                 ebx, 0xfffffffd
            //   e8????????           |                     

        $sequence_4 = { a1???????? 8b08 56 33f6 56 8d55fc 52 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   56                   | push                esi
            //   33f6                 | xor                 esi, esi
            //   56                   | push                esi
            //   8d55fc               | lea                 edx, [ebp - 4]
            //   52                   | push                edx

        $sequence_5 = { 7e1f ff7550 8d4dc8 e8???????? 0fbe00 014558 8b45d0 }
            // n = 7, score = 100
            //   7e1f                 | jle                 0x21
            //   ff7550               | push                dword ptr [ebp + 0x50]
            //   8d4dc8               | lea                 ecx, [ebp - 0x38]
            //   e8????????           |                     
            //   0fbe00               | movsx               eax, byte ptr [eax]
            //   014558               | add                 dword ptr [ebp + 0x58], eax
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]

        $sequence_6 = { e8???????? 8d4d50 e8???????? 395d6c 740c ff756c ff15???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d4d50               | lea                 ecx, [ebp + 0x50]
            //   e8????????           |                     
            //   395d6c               | cmp                 dword ptr [ebp + 0x6c], ebx
            //   740c                 | je                  0xe
            //   ff756c               | push                dword ptr [ebp + 0x6c]
            //   ff15????????         |                     

        $sequence_7 = { 8bf8 83c440 3bfb 7507 32c0 e9???????? bb04010000 }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   83c440               | add                 esp, 0x40
            //   3bfb                 | cmp                 edi, ebx
            //   7507                 | jne                 9
            //   32c0                 | xor                 al, al
            //   e9????????           |                     
            //   bb04010000           | mov                 ebx, 0x104

        $sequence_8 = { ff75f8 e8???????? 59 8b4d14 8901 8d4df8 51 }
            // n = 7, score = 100
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8d4df8               | lea                 ecx, [ebp - 8]
            //   51                   | push                ecx

        $sequence_9 = { bbe8030000 53 ff7508 8d8500fcffff 50 ffd6 }
            // n = 6, score = 100
            //   bbe8030000           | mov                 ebx, 0x3e8
            //   53                   | push                ebx
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d8500fcffff         | lea                 eax, [ebp - 0x400]
            //   50                   | push                eax
            //   ffd6                 | call                esi

    condition:
        7 of them and filesize < 223680
}