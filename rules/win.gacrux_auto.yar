rule win_gacrux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.gacrux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gacrux"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bcd 7526 41 887801 8ac3 eb16 }
            // n = 6, score = 300
            //   3bcd                 | cmp                 ecx, ebp
            //   7526                 | jne                 0x28
            //   41                   | inc                 ecx
            //   887801               | mov                 byte ptr [eax + 1], bh
            //   8ac3                 | mov                 al, bl
            //   eb16                 | jmp                 0x18

        $sequence_1 = { 755b 40 80ffd9 7255 }
            // n = 4, score = 300
            //   755b                 | jne                 0x5d
            //   40                   | inc                 eax
            //   80ffd9               | cmp                 bh, 0xd9
            //   7255                 | jb                  0x57

        $sequence_2 = { 48 85c0 0f8495000000 83602080 48 8b4c2420 }
            // n = 6, score = 300
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax
            //   0f8495000000         | je                  0x9b
            //   83602080             | and                 dword ptr [eax + 0x20], 0xffffff80
            //   48                   | dec                 eax
            //   8b4c2420             | mov                 ecx, dword ptr [esp + 0x20]

        $sequence_3 = { c1e808 45 1bc0 48 ffc1 41 }
            // n = 6, score = 300
            //   c1e808               | shr                 eax, 8
            //   45                   | inc                 ebp
            //   1bc0                 | sbb                 eax, eax
            //   48                   | dec                 eax
            //   ffc1                 | inc                 ecx
            //   41                   | inc                 ecx

        $sequence_4 = { ba01000000 41 b82a0889e1 8b1cb0 e8???????? 33d2 44 }
            // n = 7, score = 300
            //   ba01000000           | mov                 edx, 1
            //   41                   | inc                 ecx
            //   b82a0889e1           | mov                 eax, 0xe189082a
            //   8b1cb0               | mov                 ebx, dword ptr [eax + esi*4]
            //   e8????????           |                     
            //   33d2                 | xor                 edx, edx
            //   44                   | inc                 esp

        $sequence_5 = { 4c 8bc3 41 8a08 4d 03c6 300a }
            // n = 7, score = 300
            //   4c                   | dec                 esp
            //   8bc3                 | mov                 eax, ebx
            //   41                   | inc                 ecx
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   4d                   | dec                 ebp
            //   03c6                 | add                 eax, esi
            //   300a                 | xor                 byte ptr [edx], cl

        $sequence_6 = { 47 8d34b6 0fbec0 45 }
            // n = 4, score = 300
            //   47                   | inc                 edi
            //   8d34b6               | lea                 esi, [esi + esi*4]
            //   0fbec0               | movsx               eax, al
            //   45                   | inc                 ebp

        $sequence_7 = { 40 80ce02 eb0a 41 80fbf7 7504 40 }
            // n = 7, score = 300
            //   40                   | inc                 eax
            //   80ce02               | or                  dh, 2
            //   eb0a                 | jmp                 0xc
            //   41                   | inc                 ecx
            //   80fbf7               | cmp                 bl, 0xf7
            //   7504                 | jne                 6
            //   40                   | inc                 eax

        $sequence_8 = { 895810 44 894018 48 894808 55 56 }
            // n = 7, score = 300
            //   895810               | mov                 dword ptr [eax + 0x10], ebx
            //   44                   | inc                 esp
            //   894018               | mov                 dword ptr [eax + 0x18], eax
            //   48                   | dec                 eax
            //   894808               | mov                 dword ptr [eax + 8], ecx
            //   55                   | push                ebp
            //   56                   | push                esi

        $sequence_9 = { 7412 8d5601 41 b810af0e0d }
            // n = 4, score = 300
            //   7412                 | je                  0x14
            //   8d5601               | lea                 edx, [esi + 1]
            //   41                   | inc                 ecx
            //   b810af0e0d           | mov                 eax, 0xd0eaf10

    condition:
        7 of them and filesize < 122880
}