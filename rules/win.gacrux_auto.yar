rule win_gacrux_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.gacrux."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gacrux"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 45 85f6 741e c606e9 8b4708 2bc6 83e805 }
            // n = 7, score = 300
            //   45                   | inc                 ebp
            //   85f6                 | test                esi, esi
            //   741e                 | je                  0x20
            //   c606e9               | mov                 byte ptr [esi], 0xe9
            //   8b4708               | mov                 eax, dword ptr [edi + 8]
            //   2bc6                 | sub                 eax, esi
            //   83e805               | sub                 eax, 5

        $sequence_1 = { 48 837b0800 0f8592010000 48 8b1b }
            // n = 5, score = 300
            //   48                   | dec                 eax
            //   837b0800             | cmp                 dword ptr [ebx + 8], 0
            //   0f8592010000         | jne                 0x198
            //   48                   | dec                 eax
            //   8b1b                 | mov                 ebx, dword ptr [ebx]

        $sequence_2 = { 41 83e00f 7615 0fb6440a2c }
            // n = 4, score = 300
            //   41                   | inc                 ecx
            //   83e00f               | and                 eax, 0xf
            //   7615                 | jbe                 0x17
            //   0fb6440a2c           | movzx               eax, byte ptr [edx + ecx + 0x2c]

        $sequence_3 = { 4c 8bf7 8bf8 8b503c 48 8d4840 e8???????? }
            // n = 7, score = 300
            //   4c                   | dec                 esp
            //   8bf7                 | mov                 esi, edi
            //   8bf8                 | mov                 edi, eax
            //   8b503c               | mov                 edx, dword ptr [eax + 0x3c]
            //   48                   | dec                 eax
            //   8d4840               | lea                 ecx, dword ptr [eax + 0x40]
            //   e8????????           |                     

        $sequence_4 = { ba08000000 41 b871ba8843 e8???????? 41 b904000000 }
            // n = 6, score = 300
            //   ba08000000           | mov                 edx, 8
            //   41                   | inc                 ecx
            //   b871ba8843           | mov                 eax, 0x4388ba71
            //   e8????????           |                     
            //   41                   | inc                 ecx
            //   b904000000           | mov                 ecx, 4

        $sequence_5 = { ffd0 48 8d4da0 ffd0 4c }
            // n = 5, score = 300
            //   ffd0                 | call                eax
            //   48                   | dec                 eax
            //   8d4da0               | lea                 ecx, dword ptr [ebp - 0x60]
            //   ffd0                 | call                eax
            //   4c                   | dec                 esp

        $sequence_6 = { 33c2 41 8bd0 41 8bc0 d1ea 1bd2 }
            // n = 7, score = 300
            //   33c2                 | xor                 eax, edx
            //   41                   | inc                 ecx
            //   8bd0                 | mov                 edx, eax
            //   41                   | inc                 ecx
            //   8bc0                 | mov                 eax, eax
            //   d1ea                 | shr                 edx, 1
            //   1bd2                 | sbb                 edx, edx

        $sequence_7 = { 41 8a11 3ac2 7511 49 ffc1 49 }
            // n = 7, score = 300
            //   41                   | inc                 ecx
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   3ac2                 | cmp                 al, dl
            //   7511                 | jne                 0x13
            //   49                   | dec                 ecx
            //   ffc1                 | inc                 ecx
            //   49                   | dec                 ecx

        $sequence_8 = { 8b1b 48 85db 75f0 48 83c420 5b }
            // n = 7, score = 300
            //   8b1b                 | mov                 ebx, dword ptr [ebx]
            //   48                   | dec                 eax
            //   85db                 | test                ebx, ebx
            //   75f0                 | jne                 0xfffffff2
            //   48                   | dec                 eax
            //   83c420               | add                 esp, 0x20
            //   5b                   | pop                 ebx

        $sequence_9 = { 8d4c2438 45 33c0 33d2 33ff ffd0 }
            // n = 6, score = 300
            //   8d4c2438             | lea                 ecx, dword ptr [esp + 0x38]
            //   45                   | inc                 ebp
            //   33c0                 | xor                 eax, eax
            //   33d2                 | xor                 edx, edx
            //   33ff                 | xor                 edi, edi
            //   ffd0                 | call                eax

    condition:
        7 of them and filesize < 122880
}