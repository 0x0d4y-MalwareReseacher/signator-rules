rule win_fobber_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.fobber."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fobber"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 31c0 e303 4f 89f8 }
            // n = 4, score = 1100
            //   31c0                 | xor                 eax, eax
            //   e303                 | jecxz               5
            //   4f                   | dec                 edi
            //   89f8                 | mov                 eax, edi

        $sequence_1 = { 660fc146f9 6685c0 7515 0fb646f8 50 0fb746f6 }
            // n = 6, score = 1100
            //   660fc146f9           | xadd                word ptr [esi - 7], ax
            //   6685c0               | test                ax, ax
            //   7515                 | jne                 0x17
            //   0fb646f8             | movzx               eax, byte ptr [esi - 8]
            //   50                   | push                eax
            //   0fb746f6             | movzx               eax, word ptr [esi - 0xa]

        $sequence_2 = { 3002 c0c803 0453 42 e2f6 59 }
            // n = 6, score = 1100
            //   3002                 | xor                 byte ptr [edx], al
            //   c0c803               | ror                 al, 3
            //   0453                 | add                 al, 0x53
            //   42                   | inc                 edx
            //   e2f6                 | loop                0xfffffff8
            //   59                   | pop                 ecx

        $sequence_3 = { 8b4d10 39f7 760e 8d0431 39f8 7607 49 }
            // n = 7, score = 1100
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   39f7                 | cmp                 edi, esi
            //   760e                 | jbe                 0x10
            //   8d0431               | lea                 eax, [ecx + esi]
            //   39f8                 | cmp                 eax, edi
            //   7607                 | jbe                 9
            //   49                   | dec                 ecx

        $sequence_4 = { 89e5 ff750c ff7508 e8???????? 85c0 }
            // n = 5, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_5 = { 31c9 f7d1 fc f2ae f7d1 49 89c8 }
            // n = 7, score = 1100
            //   31c9                 | xor                 ecx, ecx
            //   f7d1                 | not                 ecx
            //   fc                   | cld                 
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   89c8                 | mov                 eax, ecx

        $sequence_6 = { 89e5 ff750c 6800300000 ff7508 }
            // n = 4, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6800300000           | push                0x3000
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_7 = { 89e5 50 51 52 ff7508 }
            // n = 5, score = 1100
            // 
            //   50                   | push                eax
            //   51                   | push                ecx
            //   52                   | push                edx
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_8 = { 0f85c5140100 0fb708 6685c9 7425 85f6 750a }
            // n = 6, score = 100
            //   0f85c5140100         | jne                 0x114cb
            //   0fb708               | movzx               ecx, word ptr [eax]
            //   6685c9               | test                cx, cx
            //   7425                 | je                  0x27
            //   85f6                 | test                esi, esi
            //   750a                 | jne                 0xc

        $sequence_9 = { 59 81fbffffff3f 7351 8b4df8 81f9ffffff7f 7346 8d0459 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   81fbffffff3f         | cmp                 ebx, 0x3fffffff
            //   7351                 | jae                 0x53
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   81f9ffffff7f         | cmp                 ecx, 0x7fffffff
            //   7346                 | jae                 0x48
            //   8d0459               | lea                 eax, [ecx + ebx*2]

        $sequence_10 = { 83c8ff ebec 8bff 55 }
            // n = 4, score = 100
            //   83c8ff               | or                  eax, 0xffffffff
            //   ebec                 | jmp                 0xffffffee
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp

        $sequence_11 = { 3bc6 0f8401010000 ff7508 57 50 e8???????? }
            // n = 6, score = 100
            //   3bc6                 | cmp                 eax, esi
            //   0f8401010000         | je                  0x107
            //   ff7508               | push                dword ptr [ebp + 8]
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_12 = { 94 6960cf0267b974 90 c00158 49 7880 0b5fee }
            // n = 7, score = 100
            //   94                   | xchg                eax, esp
            //   6960cf0267b974       | imul                esp, dword ptr [eax - 0x31], 0x74b96702
            //   90                   | nop                 
            //   c00158               | rol                 byte ptr [ecx], 0x58
            //   49                   | dec                 ecx
            //   7880                 | js                  0xffffff82
            //   0b5fee               | or                  ebx, dword ptr [edi - 0x12]

        $sequence_13 = { 20636f 6e 7374 7275 }
            // n = 4, score = 100
            //   20636f               | and                 byte ptr [ebx + 0x6f], ah
            //   6e                   | outsb               dx, byte ptr [esi]
            //   7374                 | jae                 0x76
            //   7275                 | jb                  0x77

        $sequence_14 = { 8945ec e8???????? ff7514 8938 53 ff750c }
            // n = 6, score = 100
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   e8????????           |                     
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   8938                 | mov                 dword ptr [eax], edi
            //   53                   | push                ebx
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_15 = { 29945aa6f624de ac b625 6206 0965de }
            // n = 5, score = 100
            //   29945aa6f624de       | sub                 dword ptr [edx + ebx*2 - 0x21db095a], edx
            //   ac                   | lodsb               al, byte ptr [esi]
            //   b625                 | mov                 dh, 0x25
            //   6206                 | bound               eax, qword ptr [esi]
            //   0965de               | or                  dword ptr [ebp - 0x22], esp

    condition:
        7 of them and filesize < 188416
}