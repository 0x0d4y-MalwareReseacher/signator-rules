rule win_fobber_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.fobber."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fobber"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 49 01cf 01ce 41 fd f3a4 fc }
            // n = 7, score = 1100
            //   49                   | dec                 ecx
            //   01cf                 | add                 edi, ecx
            //   01ce                 | add                 esi, ecx
            //   41                   | inc                 ecx
            //   fd                   | std                 
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   fc                   | cld                 

        $sequence_1 = { 85c0 740f 89c1 8b450c fc f2ae 31c0 }
            // n = 7, score = 1100
            //   85c0                 | test                eax, eax
            //   740f                 | je                  0x11
            //   89c1                 | mov                 ecx, eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   fc                   | cld                 
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   31c0                 | xor                 eax, eax

        $sequence_2 = { 57 8b7d08 57 e8???????? 85c0 740f 89c1 }
            // n = 7, score = 1100
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   57                   | push                edi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   740f                 | je                  0x11
            //   89c1                 | mov                 ecx, eax

        $sequence_3 = { 89e5 6a00 ff750c ff7508 e8???????? }
            // n = 5, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   6a00                 | push                0
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     

        $sequence_4 = { 55 89e5 31c0 50 50 ff750c }
            // n = 6, score = 1100
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   31c0                 | xor                 eax, eax
            //   50                   | push                eax
            //   50                   | push                eax
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_5 = { 3002 c0c803 0453 42 e2f6 59 }
            // n = 6, score = 1100
            //   3002                 | xor                 byte ptr [edx], al
            //   c0c803               | ror                 al, 3
            //   0453                 | add                 al, 0x53
            //   42                   | inc                 edx
            //   e2f6                 | loop                0xfffffff8
            //   59                   | pop                 ecx

        $sequence_6 = { fc f2ae f7d1 49 89c8 59 5f }
            // n = 7, score = 1100
            //   fc                   | cld                 
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   89c8                 | mov                 eax, ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_7 = { 89e5 51 8b4510 8b5508 8b4d0c 3002 }
            // n = 6, score = 1100
            //   89e5                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   3002                 | xor                 byte ptr [edx], al

        $sequence_8 = { 59 83f8ff 0f84a8ef0100 57 ff7510 }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   83f8ff               | cmp                 eax, -1
            //   0f84a8ef0100         | je                  0x1efae
            //   57                   | push                edi
            //   ff7510               | push                dword ptr [ebp + 0x10]

        $sequence_9 = { 028736c8f07c 7d41 6f 01e9 339aa44cc9c2 c5fd594907 97 }
            // n = 7, score = 100
            //   028736c8f07c         | add                 al, byte ptr [edi + 0x7cf0c836]
            //   7d41                 | jge                 0x43
            //   6f                   | outsd               dx, dword ptr [esi]
            //   01e9                 | add                 ecx, ebp
            //   339aa44cc9c2         | xor                 ebx, dword ptr [edx - 0x3d36b35c]
            //   c5fd594907           | vmulpd              ymm1, ymm0, ymmword ptr [ecx + 7]
            //   97                   | xchg                eax, edi

        $sequence_10 = { 5d c3 6a10 689014c072 e8???????? }
            // n = 5, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   6a10                 | push                0x10
            //   689014c072           | push                0x72c01490
            //   e8????????           |                     

        $sequence_11 = { c083e841ff0520 57 c9 7283 }
            // n = 4, score = 100
            //   c083e841ff0520       | rol                 byte ptr [ebx + 0x5ff41e8], 0x20
            //   57                   | push                edi
            //   c9                   | leave               
            //   7283                 | jb                  0xffffff85

        $sequence_12 = { 0f84a2840100 8b7d0c 3bfb 0f8697840100 8b5510 3bcb }
            // n = 6, score = 100
            //   0f84a2840100         | je                  0x184a8
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   3bfb                 | cmp                 edi, ebx
            //   0f8697840100         | jbe                 0x1849d
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   3bcb                 | cmp                 ecx, ebx

        $sequence_13 = { 81c78c4f0000 81c76c1c0000 81c7c6710000 81c7d32e0000 81c763130000 81ef035d0000 81ef431b0000 }
            // n = 7, score = 100
            //   81c78c4f0000         | add                 edi, 0x4f8c
            //   81c76c1c0000         | add                 edi, 0x1c6c
            //   81c7c6710000         | add                 edi, 0x71c6
            //   81c7d32e0000         | add                 edi, 0x2ed3
            //   81c763130000         | add                 edi, 0x1363
            //   81ef035d0000         | sub                 edi, 0x5d03
            //   81ef431b0000         | sub                 edi, 0x1b43

        $sequence_14 = { 55 8bec a1???????? 803840 ff750c 0f8423050000 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   a1????????           |                     
            //   803840               | cmp                 byte ptr [eax], 0x40
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   0f8423050000         | je                  0x529

        $sequence_15 = { 4f 3c23 b14b ba702bfeb4 61 }
            // n = 5, score = 100
            //   4f                   | dec                 edi
            //   3c23                 | cmp                 al, 0x23
            //   b14b                 | mov                 cl, 0x4b
            //   ba702bfeb4           | mov                 edx, 0xb4fe2b70
            //   61                   | popal               

    condition:
        7 of them and filesize < 188416
}