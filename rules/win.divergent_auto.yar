rule win_divergent_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.divergent."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.divergent"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3cc0 7505 6a02 58 }
            // n = 4, score = 300
            //   3cc0                 | cmp                 al, 0xc0
            //   7505                 | jne                 7
            //   6a02                 | push                2
            //   58                   | pop                 eax

        $sequence_1 = { 8d45f8 50 8d4508 50 6a1f ff75fc ffd7 }
            // n = 7, score = 300
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   8d4508               | lea                 eax, [ebp + 8]
            //   50                   | push                eax
            //   6a1f                 | push                0x1f
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ffd7                 | call                edi

        $sequence_2 = { e9???????? 53 57 33db 33ff 85c0 742d }
            // n = 7, score = 300
            //   e9????????           |                     
            //   53                   | push                ebx
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx
            //   33ff                 | xor                 edi, edi
            //   85c0                 | test                eax, eax
            //   742d                 | je                  0x2f

        $sequence_3 = { 48 48 7425 48 756f 8d45fc 50 }
            // n = 7, score = 300
            //   48                   | dec                 eax
            //   48                   | dec                 eax
            //   7425                 | je                  0x27
            //   48                   | dec                 eax
            //   756f                 | jne                 0x71
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax

        $sequence_4 = { 0f8492000000 56 ff7508 8d45dc 50 }
            // n = 5, score = 300
            //   0f8492000000         | je                  0x98
            //   56                   | push                esi
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d45dc               | lea                 eax, [ebp - 0x24]
            //   50                   | push                eax

        $sequence_5 = { 59 eb3d ff06 8b06 0fb600 50 e8???????? }
            // n = 7, score = 300
            //   59                   | pop                 ecx
            //   eb3d                 | jmp                 0x3f
            //   ff06                 | inc                 dword ptr [esi]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { c3 64a118000000 c3 55 }
            // n = 4, score = 300
            //   c3                   | ret                 
            //   64a118000000         | mov                 eax, dword ptr fs:[0x18]
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_7 = { 8d45f8 50 56 56 6a04 6a06 6aff }
            // n = 7, score = 300
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   56                   | push                esi
            //   56                   | push                esi
            //   6a04                 | push                4
            //   6a06                 | push                6
            //   6aff                 | push                -1

        $sequence_8 = { 894dd4 894dd8 ff15???????? 33db 85c0 0f99c3 85db }
            // n = 7, score = 300
            //   894dd4               | mov                 dword ptr [ebp - 0x2c], ecx
            //   894dd8               | mov                 dword ptr [ebp - 0x28], ecx
            //   ff15????????         |                     
            //   33db                 | xor                 ebx, ebx
            //   85c0                 | test                eax, eax
            //   0f99c3               | setns               bl
            //   85db                 | test                ebx, ebx

        $sequence_9 = { 50 52 e8???????? 83c414 57 46 e8???????? }
            // n = 7, score = 300
            //   50                   | push                eax
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   57                   | push                edi
            //   46                   | inc                 esi
            //   e8????????           |                     

    condition:
        7 of them and filesize < 212992
}