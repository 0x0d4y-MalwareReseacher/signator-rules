rule win_nitol_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.nitol."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nitol"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d45d0 6a10 50 6a00 53 }
            // n = 5, score = 200
            //   8d45d0               | lea                 eax, [ebp - 0x30]
            //   6a10                 | push                0x10
            //   50                   | push                eax
            //   6a00                 | push                0
            //   53                   | push                ebx

        $sequence_1 = { ff15???????? 83f801 75e8 6a00 ff15???????? 85c0 74dc }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1
            //   75e8                 | jne                 0xffffffea
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   74dc                 | je                  0xffffffde

        $sequence_2 = { 889df8fcffff 6a1f f3ab 66ab aa 59 33c0 }
            // n = 7, score = 200
            //   889df8fcffff         | mov                 byte ptr [ebp - 0x308], bl
            //   6a1f                 | push                0x1f
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax

        $sequence_3 = { ffb5e4feffff 8945e8 ff748dc4 50 ff15???????? }
            // n = 5, score = 200
            //   ffb5e4feffff         | push                dword ptr [ebp - 0x11c]
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   ff748dc4             | push                dword ptr [ebp + ecx*4 - 0x3c]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_4 = { 43 f7fb 8d85b0fdffff 50 }
            // n = 4, score = 200
            //   43                   | inc                 ebx
            //   f7fb                 | idiv                ebx
            //   8d85b0fdffff         | lea                 eax, [ebp - 0x250]
            //   50                   | push                eax

        $sequence_5 = { ff7485c4 8d8560ffffff 68???????? 50 ff15???????? 83c410 }
            // n = 6, score = 200
            //   ff7485c4             | push                dword ptr [ebp + eax*4 - 0x3c]
            //   8d8560ffffff         | lea                 eax, [ebp - 0xa0]
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10

        $sequence_6 = { ff15???????? 6800020000 8945dc 897de0 c645e450 c645e504 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   6800020000           | push                0x200
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi
            //   c645e450             | mov                 byte ptr [ebp - 0x1c], 0x50
            //   c645e504             | mov                 byte ptr [ebp - 0x1b], 4

        $sequence_7 = { 0fafc6 f7742408 5e 8bc2 c3 ff742404 ff15???????? }
            // n = 7, score = 200
            //   0fafc6               | imul                eax, esi
            //   f7742408             | div                 dword ptr [esp + 8]
            //   5e                   | pop                 esi
            //   8bc2                 | mov                 eax, edx
            //   c3                   | ret                 
            //   ff742404             | push                dword ptr [esp + 4]
            //   ff15????????         |                     

        $sequence_8 = { 48 48 7470 48 7447 }
            // n = 5, score = 200
            //   48                   | dec                 eax
            //   48                   | dec                 eax
            //   7470                 | je                  0x72
            //   48                   | dec                 eax
            //   7447                 | je                  0x49

        $sequence_9 = { 59 f7f9 80c230 eb0b ffd3 }
            // n = 5, score = 200
            //   59                   | pop                 ecx
            //   f7f9                 | idiv                ecx
            //   80c230               | add                 dl, 0x30
            //   eb0b                 | jmp                 0xd
            //   ffd3                 | call                ebx

    condition:
        7 of them and filesize < 139264
}