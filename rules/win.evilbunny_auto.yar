rule win_evilbunny_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.evilbunny."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.evilbunny"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 83c404 8945f4 8b4df4 894df8 8b55fc 8b4204 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b4204               | mov                 eax, dword ptr [edx + 4]

        $sequence_1 = { c3 8b04c5ac621900 5d c3 8bff 55 8bec }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   8b04c5ac621900       | mov                 eax, dword ptr [eax*8 + 0x1962ac]
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp

        $sequence_2 = { 8b8dc4fbffff e8???????? 89859cfbffff eb0a c7859cfbffff00000000 8b8d9cfbffff 898dc8fbffff }
            // n = 7, score = 200
            //   8b8dc4fbffff         | mov                 ecx, dword ptr [ebp - 0x43c]
            //   e8????????           |                     
            //   89859cfbffff         | mov                 dword ptr [ebp - 0x464], eax
            //   eb0a                 | jmp                 0xc
            //   c7859cfbffff00000000     | mov    dword ptr [ebp - 0x464], 0
            //   8b8d9cfbffff         | mov                 ecx, dword ptr [ebp - 0x464]
            //   898dc8fbffff         | mov                 dword ptr [ebp - 0x438], ecx

        $sequence_3 = { 8d3c85206e1c00 8bf3 83e61f c1e606 8b07 0fbe440604 83e001 }
            // n = 7, score = 200
            //   8d3c85206e1c00       | lea                 edi, dword ptr [eax*4 + 0x1c6e20]
            //   8bf3                 | mov                 esi, ebx
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   0fbe440604           | movsx               eax, byte ptr [esi + eax + 4]
            //   83e001               | and                 eax, 1

        $sequence_4 = { e8???????? 83c404 39450c 7508 8b55dc 8955f0 eb02 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   39450c               | cmp                 dword ptr [ebp + 0xc], eax
            //   7508                 | jne                 0xa
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]
            //   8955f0               | mov                 dword ptr [ebp - 0x10], edx
            //   eb02                 | jmp                 4

        $sequence_5 = { e8???????? 6a64 8b45ec 0524040000 50 8b4dec 81c11c020000 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   6a64                 | push                0x64
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   0524040000           | add                 eax, 0x424
            //   50                   | push                eax
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   81c11c020000         | add                 ecx, 0x21c

        $sequence_6 = { 8b853cffffff c1e811 8b8d3cffffff c1e10f 0bc1 8b953cffffff c1ea13 }
            // n = 7, score = 200
            //   8b853cffffff         | mov                 eax, dword ptr [ebp - 0xc4]
            //   c1e811               | shr                 eax, 0x11
            //   8b8d3cffffff         | mov                 ecx, dword ptr [ebp - 0xc4]
            //   c1e10f               | shl                 ecx, 0xf
            //   0bc1                 | or                  eax, ecx
            //   8b953cffffff         | mov                 edx, dword ptr [ebp - 0xc4]
            //   c1ea13               | shr                 edx, 0x13

        $sequence_7 = { c745fccccccccc 894dfc 6835bfa0be 68???????? 8b4dfc e8???????? 8945f8 }
            // n = 7, score = 200
            //   c745fccccccccc       | mov                 dword ptr [ebp - 4], 0xcccccccc
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   6835bfa0be           | push                0xbea0bf35
            //   68????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   e8????????           |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_8 = { 8b450c 50 8b4d08 51 8d55f8 52 8d85e8feffff }
            // n = 7, score = 200
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   51                   | push                ecx
            //   8d55f8               | lea                 edx, dword ptr [ebp - 8]
            //   52                   | push                edx
            //   8d85e8feffff         | lea                 eax, dword ptr [ebp - 0x118]

        $sequence_9 = { c745f8cccccccc c745fccccccccc 894dfc 8b45fc 8b4834 8b11 83ea01 }
            // n = 7, score = 200
            //   c745f8cccccccc       | mov                 dword ptr [ebp - 8], 0xcccccccc
            //   c745fccccccccc       | mov                 dword ptr [ebp - 4], 0xcccccccc
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4834               | mov                 ecx, dword ptr [eax + 0x34]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   83ea01               | sub                 edx, 1

    condition:
        7 of them and filesize < 1695744
}