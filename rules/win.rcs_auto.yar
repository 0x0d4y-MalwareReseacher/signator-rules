rule win_rcs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.rcs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rcs"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 5f 5e 5d 5b 33c0 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { ff15???????? 85c0 740d ff15???????? 33c0 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 89442452 89442456 8944245a 8944245e 89442462 89442466 8944246a }
            // n = 7, score = 200
            //   89442452             | mov                 dword ptr [esp + 0x52], eax
            //   89442456             | mov                 dword ptr [esp + 0x56], eax
            //   8944245a             | mov                 dword ptr [esp + 0x5a], eax
            //   8944245e             | mov                 dword ptr [esp + 0x5e], eax
            //   89442462             | mov                 dword ptr [esp + 0x62], eax
            //   89442466             | mov                 dword ptr [esp + 0x66], eax
            //   8944246a             | mov                 dword ptr [esp + 0x6a], eax

        $sequence_3 = { 85ff 0f84d4000000 57 e8???????? }
            // n = 4, score = 200
            //   85ff                 | test                edi, edi
            //   0f84d4000000         | je                  0xda
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_4 = { e8???????? 83c430 6aff 68???????? }
            // n = 4, score = 200
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30
            //   6aff                 | push                -1
            //   68????????           |                     

        $sequence_5 = { 6a01 6a00 6a05 6800000040 }
            // n = 4, score = 200
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   6a05                 | push                5
            //   6800000040           | push                0x40000000

        $sequence_6 = { 40 68???????? 50 e8???????? 83c40c eb0d }
            // n = 6, score = 200
            //   40                   | inc                 eax
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   eb0d                 | jmp                 0xf

        $sequence_7 = { 83c604 0fb77c3706 8b75e8 0fb7f6 }
            // n = 4, score = 100
            //   83c604               | add                 esi, 4
            //   0fb77c3706           | movzx               edi, word ptr [edi + esi + 6]
            //   8b75e8               | mov                 esi, dword ptr [ebp - 0x18]
            //   0fb7f6               | movzx               esi, si

        $sequence_8 = { 57 6800010000 8dbd1cfeffff 57 ff55d8 }
            // n = 5, score = 100
            //   57                   | push                edi
            //   6800010000           | push                0x100
            //   8dbd1cfeffff         | lea                 edi, [ebp - 0x1e4]
            //   57                   | push                edi
            //   ff55d8               | call                dword ptr [ebp - 0x28]

        $sequence_9 = { 898554f4fbff 89c7 c1e702 89bdc4fefbff 8b86dc000000 }
            // n = 5, score = 100
            //   898554f4fbff         | mov                 dword ptr [ebp - 0x40bac], eax
            //   89c7                 | mov                 edi, eax
            //   c1e702               | shl                 edi, 2
            //   89bdc4fefbff         | mov                 dword ptr [ebp - 0x4013c], edi
            //   8b86dc000000         | mov                 eax, dword ptr [esi + 0xdc]

        $sequence_10 = { 83f803 0f85e3000000 8b7528 837e1800 0f84d6000000 }
            // n = 5, score = 100
            //   83f803               | cmp                 eax, 3
            //   0f85e3000000         | jne                 0xe9
            //   8b7528               | mov                 esi, dword ptr [ebp + 0x28]
            //   837e1800             | cmp                 dword ptr [esi + 0x18], 0
            //   0f84d6000000         | je                  0xdc

        $sequence_11 = { 81c1810d9f65 0fb78c5f80010000 66c1da7a 894dc8 d3ea 6685e6 0fb7d1 }
            // n = 7, score = 100
            //   81c1810d9f65         | add                 ecx, 0x659f0d81
            //   0fb78c5f80010000     | movzx               ecx, word ptr [edi + ebx*2 + 0x180]
            //   66c1da7a             | rcr                 dx, 0x7a
            //   894dc8               | mov                 dword ptr [ebp - 0x38], ecx
            //   d3ea                 | shr                 edx, cl
            //   6685e6               | test                si, sp
            //   0fb7d1               | movzx               edx, cx

        $sequence_12 = { 833800 7436 83bdb4f9fbff30 7463 68a00f0000 }
            // n = 5, score = 100
            //   833800               | cmp                 dword ptr [eax], 0
            //   7436                 | je                  0x38
            //   83bdb4f9fbff30       | cmp                 dword ptr [ebp - 0x4064c], 0x30
            //   7463                 | je                  0x65
            //   68a00f0000           | push                0xfa0

        $sequence_13 = { 8b7d0c 0fbe17 52 e8???????? 83c404 89c2 }
            // n = 6, score = 100
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   0fbe17               | movsx               edx, byte ptr [edi]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   89c2                 | mov                 edx, eax

        $sequence_14 = { 833800 742c ffb5bcfffbff 8b85c0fffbff 8b96dc000000 8b9250020000 }
            // n = 6, score = 100
            //   833800               | cmp                 dword ptr [eax], 0
            //   742c                 | je                  0x2e
            //   ffb5bcfffbff         | push                dword ptr [ebp - 0x40044]
            //   8b85c0fffbff         | mov                 eax, dword ptr [ebp - 0x40040]
            //   8b96dc000000         | mov                 edx, dword ptr [esi + 0xdc]
            //   8b9250020000         | mov                 edx, dword ptr [edx + 0x250]

        $sequence_15 = { 899534f4fbff b818000000 898538f4fbff 8b8d3cf4fbff 0fb7491c f7e1 898530f4fbff }
            // n = 7, score = 100
            //   899534f4fbff         | mov                 dword ptr [ebp - 0x40bcc], edx
            //   b818000000           | mov                 eax, 0x18
            //   898538f4fbff         | mov                 dword ptr [ebp - 0x40bc8], eax
            //   8b8d3cf4fbff         | mov                 ecx, dword ptr [ebp - 0x40bc4]
            //   0fb7491c             | movzx               ecx, word ptr [ecx + 0x1c]
            //   f7e1                 | mul                 ecx
            //   898530f4fbff         | mov                 dword ptr [ebp - 0x40bd0], eax

        $sequence_16 = { 8b9014120000 89951cf4fbff b818000000 898520f4fbff 8b7dec 8b8d24f4fbff }
            // n = 6, score = 100
            //   8b9014120000         | mov                 edx, dword ptr [eax + 0x1214]
            //   89951cf4fbff         | mov                 dword ptr [ebp - 0x40be4], edx
            //   b818000000           | mov                 eax, 0x18
            //   898520f4fbff         | mov                 dword ptr [ebp - 0x40be0], eax
            //   8b7dec               | mov                 edi, dword ptr [ebp - 0x14]
            //   8b8d24f4fbff         | mov                 ecx, dword ptr [ebp - 0x40bdc]

    condition:
        7 of them and filesize < 11501568
}