rule win_rcs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.rcs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rcs"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a01 6a00 6a05 6800000040 }
            // n = 4, score = 200
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   6a05                 | push                5
            //   6800000040           | push                0x40000000

        $sequence_1 = { ff15???????? 85c0 740d ff15???????? 33c0 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { e8???????? 83c430 6aff 68???????? }
            // n = 4, score = 200
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30
            //   6aff                 | push                -1
            //   68????????           |                     

        $sequence_3 = { 40 68???????? 50 e8???????? 83c40c eb0d }
            // n = 6, score = 200
            //   40                   | inc                 eax
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   eb0d                 | jmp                 0xf

        $sequence_4 = { 89442456 8944245a 8944245e 89442462 89442466 8944246a }
            // n = 6, score = 200
            //   89442456             | mov                 dword ptr [esp + 0x56], eax
            //   8944245a             | mov                 dword ptr [esp + 0x5a], eax
            //   8944245e             | mov                 dword ptr [esp + 0x5e], eax
            //   89442462             | mov                 dword ptr [esp + 0x62], eax
            //   89442466             | mov                 dword ptr [esp + 0x66], eax
            //   8944246a             | mov                 dword ptr [esp + 0x6a], eax

        $sequence_5 = { 85ff 0f84d4000000 57 e8???????? }
            // n = 4, score = 200
            //   85ff                 | test                edi, edi
            //   0f84d4000000         | je                  0xda
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_6 = { ff15???????? 5f 5e 5d 5b 33c0 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 898534f4fbff 8b9014120000 89952cf4fbff b818000000 898530f4fbff 8b7dec 4f }
            // n = 7, score = 100
            //   898534f4fbff         | mov                 dword ptr [ebp - 0x40bcc], eax
            //   8b9014120000         | mov                 edx, dword ptr [eax + 0x1214]
            //   89952cf4fbff         | mov                 dword ptr [ebp - 0x40bd4], edx
            //   b818000000           | mov                 eax, 0x18
            //   898530f4fbff         | mov                 dword ptr [ebp - 0x40bd0], eax
            //   8b7dec               | mov                 edi, dword ptr [ebp - 0x14]
            //   4f                   | dec                 edi

        $sequence_8 = { 8b86dc000000 c7401801000000 e9???????? 83bdacf9fbff44 742d 68a00f0000 }
            // n = 6, score = 100
            //   8b86dc000000         | mov                 eax, dword ptr [esi + 0xdc]
            //   c7401801000000       | mov                 dword ptr [eax + 0x18], 1
            //   e9????????           |                     
            //   83bdacf9fbff44       | cmp                 dword ptr [ebp - 0x40654], 0x44
            //   742d                 | je                  0x2f
            //   68a00f0000           | push                0xfa0

        $sequence_9 = { 68???????? 68???????? e8???????? b9???????? 8b11 09d2 7402 }
            // n = 7, score = 100
            //   68????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   b9????????           |                     
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   09d2                 | or                  edx, edx
            //   7402                 | je                  4

        $sequence_10 = { 833f00 7407 b801000000 eb17 ff45fc 8b7df4 }
            // n = 6, score = 100
            //   833f00               | cmp                 dword ptr [edi], 0
            //   7407                 | je                  9
            //   b801000000           | mov                 eax, 1
            //   eb17                 | jmp                 0x19
            //   ff45fc               | inc                 dword ptr [ebp - 4]
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]

        $sequence_11 = { 83c434 85c0 7428 8d9424e8120000 52 }
            // n = 5, score = 100
            //   83c434               | add                 esp, 0x34
            //   85c0                 | test                eax, eax
            //   7428                 | je                  0x2a
            //   8d9424e8120000       | lea                 edx, dword ptr [esp + 0x12e8]
            //   52                   | push                edx

        $sequence_12 = { ff5704 8945f8 6800010000 68c3000000 ff75f8 e8???????? }
            // n = 6, score = 100
            //   ff5704               | call                dword ptr [edi + 4]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   6800010000           | push                0x100
            //   68c3000000           | push                0xc3
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   e8????????           |                     

        $sequence_13 = { 80fb09 0f87899ff2ff 0fbec9 80fd43 }
            // n = 4, score = 100
            //   80fb09               | cmp                 bl, 9
            //   0f87899ff2ff         | ja                  0xfff29f8f
            //   0fbec9               | movsx               ecx, cl
            //   80fd43               | cmp                 ch, 0x43

        $sequence_14 = { 8b75ec 8b7628 8d7c37e6 897de8 6a0d }
            // n = 5, score = 100
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   8b7628               | mov                 esi, dword ptr [esi + 0x28]
            //   8d7c37e6             | lea                 edi, dword ptr [edi + esi - 0x1a]
            //   897de8               | mov                 dword ptr [ebp - 0x18], edi
            //   6a0d                 | push                0xd

        $sequence_15 = { 6a7c 8b86dc000000 ffb06c020000 ff5654 8b86dc000000 833800 }
            // n = 6, score = 100
            //   6a7c                 | push                0x7c
            //   8b86dc000000         | mov                 eax, dword ptr [esi + 0xdc]
            //   ffb06c020000         | push                dword ptr [eax + 0x26c]
            //   ff5654               | call                dword ptr [esi + 0x54]
            //   8b86dc000000         | mov                 eax, dword ptr [esi + 0xdc]
            //   833800               | cmp                 dword ptr [eax], 0

        $sequence_16 = { 0fb7bcb970020000 f7e7 898528f4fbff 8bbd2cf4fbff }
            // n = 4, score = 100
            //   0fb7bcb970020000     | movzx               edi, word ptr [ecx + edi*4 + 0x270]
            //   f7e7                 | mul                 edi
            //   898528f4fbff         | mov                 dword ptr [ebp - 0x40bd8], eax
            //   8bbd2cf4fbff         | mov                 edi, dword ptr [ebp - 0x40bd4]

    condition:
        7 of them and filesize < 11501568
}