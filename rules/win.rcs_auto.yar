rule win_rcs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.rcs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rcs"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 5f 5e 5d 5b 33c0 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 6880000000 6a01 6a00 6a05 6800000040 }
            // n = 5, score = 200
            //   6880000000           | push                0x80
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   6a05                 | push                5
            //   6800000040           | push                0x40000000

        $sequence_2 = { 8944245a 8944245e 89442462 89442466 8944246a }
            // n = 5, score = 200
            //   8944245a             | mov                 dword ptr [esp + 0x5a], eax
            //   8944245e             | mov                 dword ptr [esp + 0x5e], eax
            //   89442462             | mov                 dword ptr [esp + 0x62], eax
            //   89442466             | mov                 dword ptr [esp + 0x66], eax
            //   8944246a             | mov                 dword ptr [esp + 0x6a], eax

        $sequence_3 = { e8???????? 83c430 6aff 68???????? }
            // n = 4, score = 200
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30
            //   6aff                 | push                -1
            //   68????????           |                     

        $sequence_4 = { ff15???????? 85c0 740d ff15???????? 33c0 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 85ff 0f84d4000000 57 e8???????? }
            // n = 4, score = 200
            //   85ff                 | test                edi, edi
            //   0f84d4000000         | je                  0xda
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_6 = { 40 68???????? 50 e8???????? 83c40c eb0d }
            // n = 6, score = 200
            //   40                   | inc                 eax
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   eb0d                 | jmp                 0xf

        $sequence_7 = { 8b7dfc c1e704 8b75f8 83c604 0fb77c3706 8b75e8 0fb7f6 }
            // n = 7, score = 100
            //   8b7dfc               | mov                 edi, dword ptr [ebp - 4]
            //   c1e704               | shl                 edi, 4
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   83c604               | add                 esi, 4
            //   0fb77c3706           | movzx               edi, word ptr [edi + esi + 6]
            //   8b75e8               | mov                 esi, dword ptr [ebp - 0x18]
            //   0fb7f6               | movzx               esi, si

        $sequence_8 = { 89471c 8b7d08 8b37 81c6bb010000 56 ff75fc ff5704 }
            // n = 7, score = 100
            //   89471c               | mov                 dword ptr [edi + 0x1c], eax
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8b37                 | mov                 esi, dword ptr [edi]
            //   81c6bb010000         | add                 esi, 0x1bb
            //   56                   | push                esi
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff5704               | call                dword ptr [edi + 4]

        $sequence_9 = { 898534f4fbff 8b8538f4fbff 8b9534f4fbff 8d441004 8b00 89856cfffbff }
            // n = 6, score = 100
            //   898534f4fbff         | mov                 dword ptr [ebp - 0x40bcc], eax
            //   8b8538f4fbff         | mov                 eax, dword ptr [ebp - 0x40bc8]
            //   8b9534f4fbff         | mov                 edx, dword ptr [ebp - 0x40bcc]
            //   8d441004             | lea                 eax, [eax + edx + 4]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   89856cfffbff         | mov                 dword ptr [ebp - 0x40094], eax

        $sequence_10 = { ff5704 894744 8b7d08 8b37 }
            // n = 4, score = 100
            //   ff5704               | call                dword ptr [edi + 4]
            //   894744               | mov                 dword ptr [edi + 0x44], eax
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8b37                 | mov                 esi, dword ptr [edi]

        $sequence_11 = { 81c1eb5c773b 660f48c9 660fbbce 8d359c937200 6681d19b3b }
            // n = 5, score = 100
            //   81c1eb5c773b         | add                 ecx, 0x3b775ceb
            //   660f48c9             | cmovs               cx, cx
            //   660fbbce             | btc                 si, cx
            //   8d359c937200         | lea                 esi, [0x72939c]
            //   6681d19b3b           | adc                 cx, 0x3b9b

        $sequence_12 = { 83f804 7650 bffbffffff 2bfd }
            // n = 4, score = 100
            //   83f804               | cmp                 eax, 4
            //   7650                 | jbe                 0x52
            //   bffbffffff           | mov                 edi, 0xfffffffb
            //   2bfd                 | sub                 edi, ebp

        $sequence_13 = { 50 e8???????? 83c408 57 8d8500feffff 50 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   57                   | push                edi
            //   8d8500feffff         | lea                 eax, [ebp - 0x200]
            //   50                   | push                eax

        $sequence_14 = { 81c639010000 56 ff75e4 ff5704 894728 8b7d08 }
            // n = 6, score = 100
            //   81c639010000         | add                 esi, 0x139
            //   56                   | push                esi
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   ff5704               | call                dword ptr [edi + 4]
            //   894728               | mov                 dword ptr [edi + 0x28], eax
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

        $sequence_15 = { 8b86dc000000 ffb010120000 ff565c 8b86dc000000 833800 }
            // n = 5, score = 100
            //   8b86dc000000         | mov                 eax, dword ptr [esi + 0xdc]
            //   ffb010120000         | push                dword ptr [eax + 0x1210]
            //   ff565c               | call                dword ptr [esi + 0x5c]
            //   8b86dc000000         | mov                 eax, dword ptr [esi + 0xdc]
            //   833800               | cmp                 dword ptr [eax], 0

        $sequence_16 = { 0fbe1f 3b5d0c 7506 8b7d08 897dfc 8b7d08 }
            // n = 6, score = 100
            //   0fbe1f               | movsx               ebx, byte ptr [edi]
            //   3b5d0c               | cmp                 ebx, dword ptr [ebp + 0xc]
            //   7506                 | jne                 8
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 11501568
}