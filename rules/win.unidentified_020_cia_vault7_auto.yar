rule win_unidentified_020_cia_vault7_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.unidentified_020_cia_vault7."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_020_cia_vault7"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? 57 51 68???????? 50 ff15???????? 8bf0 }
            // n = 7, score = 200
            //   68????????           |                     
            //   57                   | push                edi
            //   51                   | push                ecx
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_1 = { 8bf0 83e61f 8d3c8d20834100 8b0f }
            // n = 4, score = 200
            //   8bf0                 | mov                 esi, eax
            //   83e61f               | and                 esi, 0x1f
            //   8d3c8d20834100       | lea                 edi, dword ptr [ecx*4 + 0x418320]
            //   8b0f                 | mov                 ecx, dword ptr [edi]

        $sequence_2 = { 8b4508 6a00 8d95f0fdffff 52 50 57 }
            // n = 6, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   6a00                 | push                0
            //   8d95f0fdffff         | lea                 edx, dword ptr [ebp - 0x210]
            //   52                   | push                edx
            //   50                   | push                eax
            //   57                   | push                edi

        $sequence_3 = { 8d95c6f7ffff 52 e8???????? 8d7b14 57 68???????? }
            // n = 6, score = 200
            //   8d95c6f7ffff         | lea                 edx, dword ptr [ebp - 0x83a]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8d7b14               | lea                 edi, dword ptr [ebx + 0x14]
            //   57                   | push                edi
            //   68????????           |                     

        $sequence_4 = { 83e01f c1fa05 8b149520834100 c1e006 8d440224 }
            // n = 5, score = 200
            //   83e01f               | and                 eax, 0x1f
            //   c1fa05               | sar                 edx, 5
            //   8b149520834100       | mov                 edx, dword ptr [edx*4 + 0x418320]
            //   c1e006               | shl                 eax, 6
            //   8d440224             | lea                 eax, dword ptr [edx + eax + 0x24]

        $sequence_5 = { eb1a 6afe 5f eb15 57 ff15???????? 50 }
            // n = 7, score = 200
            //   eb1a                 | jmp                 0x1c
            //   6afe                 | push                -2
            //   5f                   | pop                 edi
            //   eb15                 | jmp                 0x17
            //   57                   | push                edi
            //   ff15????????         |                     
            //   50                   | push                eax

        $sequence_6 = { 51 ffd0 33d2 6806020000 52 8d85f6fdffff 50 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   ffd0                 | call                eax
            //   33d2                 | xor                 edx, edx
            //   6806020000           | push                0x206
            //   52                   | push                edx
            //   8d85f6fdffff         | lea                 eax, dword ptr [ebp - 0x20a]
            //   50                   | push                eax

        $sequence_7 = { 8d85f4fdffff 50 e8???????? 83c410 8d8df4fdffff 51 }
            // n = 6, score = 200
            //   8d85f4fdffff         | lea                 eax, dword ptr [ebp - 0x20c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8d8df4fdffff         | lea                 ecx, dword ptr [ebp - 0x20c]
            //   51                   | push                ecx

        $sequence_8 = { b8???????? c60000 40 49 75f9 8b15???????? }
            // n = 6, score = 200
            //   b8????????           |                     
            //   c60000               | mov                 byte ptr [eax], 0
            //   40                   | inc                 eax
            //   49                   | dec                 ecx
            //   75f9                 | jne                 0xfffffffb
            //   8b15????????         |                     

        $sequence_9 = { 8d85f0fdffff c60000 40 49 }
            // n = 4, score = 200
            //   8d85f0fdffff         | lea                 eax, dword ptr [ebp - 0x210]
            //   c60000               | mov                 byte ptr [eax], 0
            //   40                   | inc                 eax
            //   49                   | dec                 ecx

    condition:
        7 of them and filesize < 253952
}