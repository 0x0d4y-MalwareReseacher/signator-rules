rule win_unidentified_020_cia_vault7_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.unidentified_020_cia_vault7."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_020_cia_vault7"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85f6 751d c745fcfeffffff 33c0 8b4df0 }
            // n = 5, score = 200
            //   85f6                 | test                esi, esi
            //   751d                 | jne                 0x1f
            //   c745fcfeffffff       | mov                 dword ptr [ebp - 4], 0xfffffffe
            //   33c0                 | xor                 eax, eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]

        $sequence_1 = { 52 ffd7 8d7e0c 57 e8???????? 83c404 }
            // n = 6, score = 200
            //   52                   | push                edx
            //   ffd7                 | call                edi
            //   8d7e0c               | lea                 edi, [esi + 0xc]
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_2 = { 8b9e28080000 8d4e04 8dbe2c080000 e8???????? 83c408 }
            // n = 5, score = 200
            //   8b9e28080000         | mov                 ebx, dword ptr [esi + 0x828]
            //   8d4e04               | lea                 ecx, [esi + 4]
            //   8dbe2c080000         | lea                 edi, [esi + 0x82c]
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_3 = { 6810040000 8d8dc4f7ffff 51 6810040000 }
            // n = 4, score = 200
            //   6810040000           | push                0x410
            //   8d8dc4f7ffff         | lea                 ecx, [ebp - 0x83c]
            //   51                   | push                ecx
            //   6810040000           | push                0x410

        $sequence_4 = { ffd6 8bf8 85ff 7525 8b4350 6a04 6800300000 }
            // n = 7, score = 200
            //   ffd6                 | call                esi
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   7525                 | jne                 0x27
            //   8b4350               | mov                 eax, dword ptr [ebx + 0x50]
            //   6a04                 | push                4
            //   6800300000           | push                0x3000

        $sequence_5 = { 8985d4fdffff 8985d8fdffff 8985dcfdffff 8985e0fdffff 8985e4fdffff 8d85f0fdffff 50 }
            // n = 7, score = 200
            //   8985d4fdffff         | mov                 dword ptr [ebp - 0x22c], eax
            //   8985d8fdffff         | mov                 dword ptr [ebp - 0x228], eax
            //   8985dcfdffff         | mov                 dword ptr [ebp - 0x224], eax
            //   8985e0fdffff         | mov                 dword ptr [ebp - 0x220], eax
            //   8985e4fdffff         | mov                 dword ptr [ebp - 0x21c], eax
            //   8d85f0fdffff         | lea                 eax, [ebp - 0x210]
            //   50                   | push                eax

        $sequence_6 = { 8d85c4f7ffff 8985b8f7ffff 898dacf7ffff 85c9 7407 c60000 40 }
            // n = 7, score = 200
            //   8d85c4f7ffff         | lea                 eax, [ebp - 0x83c]
            //   8985b8f7ffff         | mov                 dword ptr [ebp - 0x848], eax
            //   898dacf7ffff         | mov                 dword ptr [ebp - 0x854], ecx
            //   85c9                 | test                ecx, ecx
            //   7407                 | je                  9
            //   c60000               | mov                 byte ptr [eax], 0
            //   40                   | inc                 eax

        $sequence_7 = { 50 c785ecfdffff00000000 c785ccfdffff02000000 ff15???????? 85c0 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   c785ecfdffff00000000     | mov    dword ptr [ebp - 0x214], 0
            //   c785ccfdffff02000000     | mov    dword ptr [ebp - 0x234], 2
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_8 = { c7470c03000000 894710 898738080000 899f3c080000 }
            // n = 4, score = 200
            //   c7470c03000000       | mov                 dword ptr [edi + 0xc], 3
            //   894710               | mov                 dword ptr [edi + 0x10], eax
            //   898738080000         | mov                 dword ptr [edi + 0x838], eax
            //   899f3c080000         | mov                 dword ptr [edi + 0x83c], ebx

        $sequence_9 = { 68???????? e8???????? 83c40c 85c0 750a e8???????? 33ff }
            // n = 7, score = 200
            //   68????????           |                     
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   750a                 | jne                 0xc
            //   e8????????           |                     
            //   33ff                 | xor                 edi, edi

    condition:
        7 of them and filesize < 253952
}