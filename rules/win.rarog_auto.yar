rule win_rarog_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.rarog."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rarog"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 53 56 8d8db4fdffff e8???????? 53 56 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8d8db4fdffff         | lea                 ecx, [ebp - 0x24c]
            //   e8????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi

        $sequence_1 = { 3bc7 7624 8b45b0 8a10 3bf7 740c 8bce }
            // n = 7, score = 100
            //   3bc7                 | cmp                 eax, edi
            //   7624                 | jbe                 0x26
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]
            //   8a10                 | mov                 dl, byte ptr [eax]
            //   3bf7                 | cmp                 esi, edi
            //   740c                 | je                  0xe
            //   8bce                 | mov                 ecx, esi

        $sequence_2 = { 885d98 c645fc0b 3bc3 7441 8bce 49 741e }
            // n = 7, score = 100
            //   885d98               | mov                 byte ptr [ebp - 0x68], bl
            //   c645fc0b             | mov                 byte ptr [ebp - 4], 0xb
            //   3bc3                 | cmp                 eax, ebx
            //   7441                 | je                  0x43
            //   8bce                 | mov                 ecx, esi
            //   49                   | dec                 ecx
            //   741e                 | je                  0x20

        $sequence_3 = { 899d1cffffff 8b851cffffff 898524ffffff 3bc1 0f84ed000000 6683383a 740d }
            // n = 7, score = 100
            //   899d1cffffff         | mov                 dword ptr [ebp - 0xe4], ebx
            //   8b851cffffff         | mov                 eax, dword ptr [ebp - 0xe4]
            //   898524ffffff         | mov                 dword ptr [ebp - 0xdc], eax
            //   3bc1                 | cmp                 eax, ecx
            //   0f84ed000000         | je                  0xf3
            //   6683383a             | cmp                 word ptr [eax], 0x3a
            //   740d                 | je                  0xf

        $sequence_4 = { 8b9514ffffff 8b8d18ffffff eb07 83fe08 7202 8b1b 8bc3 }
            // n = 7, score = 100
            //   8b9514ffffff         | mov                 edx, dword ptr [ebp - 0xec]
            //   8b8d18ffffff         | mov                 ecx, dword ptr [ebp - 0xe8]
            //   eb07                 | jmp                 9
            //   83fe08               | cmp                 esi, 8
            //   7202                 | jb                  4
            //   8b1b                 | mov                 ebx, dword ptr [ebx]
            //   8bc3                 | mov                 eax, ebx

        $sequence_5 = { 68???????? 50 8d4dd0 e8???????? 59 59 8d8d9cfeffff }
            // n = 7, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8d8d9cfeffff         | lea                 ecx, [ebp - 0x164]

        $sequence_6 = { 4b 0fb60b 40 80b9201f430000 }
            // n = 4, score = 100
            //   4b                   | dec                 ebx
            //   0fb60b               | movzx               ecx, byte ptr [ebx]
            //   40                   | inc                 eax
            //   80b9201f430000       | cmp                 byte ptr [ecx + 0x431f20], 0

        $sequence_7 = { 8d8d48feffff 51 8d8d0cffffff 51 }
            // n = 4, score = 100
            //   8d8d48feffff         | lea                 ecx, [ebp - 0x1b8]
            //   51                   | push                ecx
            //   8d8d0cffffff         | lea                 ecx, [ebp - 0xf4]
            //   51                   | push                ecx

        $sequence_8 = { c1e006 8b0c8d203b4300 8d440104 8020fe ff36 e8???????? 59 }
            // n = 7, score = 100
            //   c1e006               | shl                 eax, 6
            //   8b0c8d203b4300       | mov                 ecx, dword ptr [ecx*4 + 0x433b20]
            //   8d440104             | lea                 eax, [ecx + eax + 4]
            //   8020fe               | and                 byte ptr [eax], 0xfe
            //   ff36                 | push                dword ptr [esi]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_9 = { 8d4598 6a20 51 50 53 ffd6 }
            // n = 6, score = 100
            //   8d4598               | lea                 eax, [ebp - 0x68]
            //   6a20                 | push                0x20
            //   51                   | push                ecx
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ffd6                 | call                esi

    condition:
        7 of them and filesize < 598016
}