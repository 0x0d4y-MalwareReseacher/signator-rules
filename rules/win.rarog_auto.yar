rule win_rarog_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.rarog."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rarog"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 68???????? ffb500ffffff ff15???????? 898508ffffff 3bc3 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   68????????           |                     
            //   ffb500ffffff         | push                dword ptr [ebp - 0x100]
            //   ff15????????         |                     
            //   898508ffffff         | mov                 dword ptr [ebp - 0xf8], eax
            //   3bc3                 | cmp                 eax, ebx

        $sequence_1 = { 8d45f8 50 6a01 68???????? c745f40c000000 }
            // n = 5, score = 100
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   6a01                 | push                1
            //   68????????           |                     
            //   c745f40c000000       | mov                 dword ptr [ebp - 0xc], 0xc

        $sequence_2 = { 89a504ffffff c741140f000000 895910 68???????? 8819 e8???????? e8???????? }
            // n = 7, score = 100
            //   89a504ffffff         | mov                 dword ptr [ebp - 0xfc], esp
            //   c741140f000000       | mov                 dword ptr [ecx + 0x14], 0xf
            //   895910               | mov                 dword ptr [ecx + 0x10], ebx
            //   68????????           |                     
            //   8819                 | mov                 byte ptr [ecx], bl
            //   e8????????           |                     
            //   e8????????           |                     

        $sequence_3 = { 884101 0fbe443201 0fb65c3202 83e00f c1e002 c1eb06 0bc3 }
            // n = 7, score = 100
            //   884101               | mov                 byte ptr [ecx + 1], al
            //   0fbe443201           | movsx               eax, byte ptr [edx + esi + 1]
            //   0fb65c3202           | movzx               ebx, byte ptr [edx + esi + 2]
            //   83e00f               | and                 eax, 0xf
            //   c1e002               | shl                 eax, 2
            //   c1eb06               | shr                 ebx, 6
            //   0bc3                 | or                  eax, ebx

        $sequence_4 = { 68???????? 50 8d8560feffff 50 c645fc5a e8???????? 83c42c }
            // n = 7, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   8d8560feffff         | lea                 eax, dword ptr [ebp - 0x1a0]
            //   50                   | push                eax
            //   c645fc5a             | mov                 byte ptr [ebp - 4], 0x5a
            //   e8????????           |                     
            //   83c42c               | add                 esp, 0x2c

        $sequence_5 = { 399d70fbffff 7432 83ec1c 8bcc 89a578fbffff 897114 895910 }
            // n = 7, score = 100
            //   399d70fbffff         | cmp                 dword ptr [ebp - 0x490], ebx
            //   7432                 | je                  0x34
            //   83ec1c               | sub                 esp, 0x1c
            //   8bcc                 | mov                 ecx, esp
            //   89a578fbffff         | mov                 dword ptr [ebp - 0x488], esp
            //   897114               | mov                 dword ptr [ecx + 0x14], esi
            //   895910               | mov                 dword ptr [ecx + 0x10], ebx

        $sequence_6 = { 0f8f76ffffff 7c0a 837d0c00 0f876affffff 8b442410 8b542414 5f }
            // n = 7, score = 100
            //   0f8f76ffffff         | jg                  0xffffff7c
            //   7c0a                 | jl                  0xc
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0
            //   0f876affffff         | ja                  0xffffff70
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   5f                   | pop                 edi

        $sequence_7 = { 83ec1c 8bcc 89a544ffffff 6a0f 5e 33db }
            // n = 6, score = 100
            //   83ec1c               | sub                 esp, 0x1c
            //   8bcc                 | mov                 ecx, esp
            //   89a544ffffff         | mov                 dword ptr [ebp - 0xbc], esp
            //   6a0f                 | push                0xf
            //   5e                   | pop                 esi
            //   33db                 | xor                 ebx, ebx

        $sequence_8 = { 83c40c 83781410 7202 8b00 53 53 50 }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   83781410             | cmp                 dword ptr [eax + 0x14], 0x10
            //   7202                 | jb                  4
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   50                   | push                eax

        $sequence_9 = { 7457 83fbff 7452 837e4400 7515 50 0fb6c3 }
            // n = 7, score = 100
            //   7457                 | je                  0x59
            //   83fbff               | cmp                 ebx, -1
            //   7452                 | je                  0x54
            //   837e4400             | cmp                 dword ptr [esi + 0x44], 0
            //   7515                 | jne                 0x17
            //   50                   | push                eax
            //   0fb6c3               | movzx               eax, bl

    condition:
        7 of them and filesize < 598016
}