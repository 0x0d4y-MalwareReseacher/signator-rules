rule win_rarog_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.rarog."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rarog"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3b450c 72f1 5d c3 b8???????? a3???????? c705????????76264200 }
            // n = 7, score = 100
            //   3b450c               | cmp                 eax, dword ptr [ebp + 0xc]
            //   72f1                 | jb                  0xfffffff3
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   b8????????           |                     
            //   a3????????           |                     
            //   c705????????76264200     |     

        $sequence_1 = { 56 8d8db8fcffff e8???????? 53 56 8d8d9cfcffff }
            // n = 6, score = 100
            //   56                   | push                esi
            //   8d8db8fcffff         | lea                 ecx, dword ptr [ebp - 0x348]
            //   e8????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8d8d9cfcffff         | lea                 ecx, dword ptr [ebp - 0x364]

        $sequence_2 = { 8d45f8 50 56 e8???????? 83c410 3b75f8 }
            // n = 6, score = 100
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   3b75f8               | cmp                 esi, dword ptr [ebp - 8]

        $sequence_3 = { a1???????? 33c5 8945fc 8365a800 8d45a4 50 e8???????? }
            // n = 7, score = 100
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8365a800             | and                 dword ptr [ebp - 0x58], 0
            //   8d45a4               | lea                 eax, dword ptr [ebp - 0x5c]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_4 = { 5f 46 89bd58ffffff 899d54ffffff 889d44ffffff 89bd74ffffff 899d70ffffff }
            // n = 7, score = 100
            //   5f                   | pop                 edi
            //   46                   | inc                 esi
            //   89bd58ffffff         | mov                 dword ptr [ebp - 0xa8], edi
            //   899d54ffffff         | mov                 dword ptr [ebp - 0xac], ebx
            //   889d44ffffff         | mov                 byte ptr [ebp - 0xbc], bl
            //   89bd74ffffff         | mov                 dword ptr [ebp - 0x8c], edi
            //   899d70ffffff         | mov                 dword ptr [ebp - 0x90], ebx

        $sequence_5 = { 83f840 7427 837de800 761b 8b06 8b4004 8a543040 }
            // n = 7, score = 100
            //   83f840               | cmp                 eax, 0x40
            //   7427                 | je                  0x29
            //   837de800             | cmp                 dword ptr [ebp - 0x18], 0
            //   761b                 | jbe                 0x1d
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   8a543040             | mov                 dl, byte ptr [eax + esi + 0x40]

        $sequence_6 = { ffd6 33c9 6a02 5a 8945e8 f7e2 0f90c1 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   33c9                 | xor                 ecx, ecx
            //   6a02                 | push                2
            //   5a                   | pop                 edx
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   f7e2                 | mul                 edx
            //   0f90c1               | seto                cl

        $sequence_7 = { 8d8d60feffff e8???????? 53 57 8d8d0cfeffff e8???????? 53 }
            // n = 7, score = 100
            //   8d8d60feffff         | lea                 ecx, dword ptr [ebp - 0x1a0]
            //   e8????????           |                     
            //   53                   | push                ebx
            //   57                   | push                edi
            //   8d8d0cfeffff         | lea                 ecx, dword ptr [ebp - 0x1f4]
            //   e8????????           |                     
            //   53                   | push                ebx

        $sequence_8 = { 8bc8 83ec1c 8bc7 c645fc5e 8bfc 89a56cfbffff e8???????? }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   83ec1c               | sub                 esp, 0x1c
            //   8bc7                 | mov                 eax, edi
            //   c645fc5e             | mov                 byte ptr [ebp - 4], 0x5e
            //   8bfc                 | mov                 edi, esp
            //   89a56cfbffff         | mov                 dword ptr [ebp - 0x494], esp
            //   e8????????           |                     

        $sequence_9 = { 89442414 394510 0f8ca5000000 7f0d 39450c 0f869a000000 eb02 }
            // n = 7, score = 100
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   394510               | cmp                 dword ptr [ebp + 0x10], eax
            //   0f8ca5000000         | jl                  0xab
            //   7f0d                 | jg                  0xf
            //   39450c               | cmp                 dword ptr [ebp + 0xc], eax
            //   0f869a000000         | jbe                 0xa0
            //   eb02                 | jmp                 4

    condition:
        7 of them and filesize < 598016
}