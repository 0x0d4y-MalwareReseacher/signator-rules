rule win_rarog_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.rarog."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rarog"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 53 e8???????? ff857cfbffff 59 59 6a0f }
            // n = 7, score = 100
            //   50                   | push                eax
            //   53                   | push                ebx
            //   e8????????           |                     
            //   ff857cfbffff         | inc                 dword ptr [ebp - 0x484]
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   6a0f                 | push                0xf

        $sequence_1 = { 8d4d98 c645fc3e e8???????? 6a0e 8d8dd8fdffff e8???????? 50 }
            // n = 7, score = 100
            //   8d4d98               | lea                 ecx, [ebp - 0x68]
            //   c645fc3e             | mov                 byte ptr [ebp - 4], 0x3e
            //   e8????????           |                     
            //   6a0e                 | push                0xe
            //   8d8dd8fdffff         | lea                 ecx, [ebp - 0x228]
            //   e8????????           |                     
            //   50                   | push                eax

        $sequence_2 = { 8b45b8 7303 8d45b8 803800 0f8e00010000 8b5db4 57 }
            // n = 7, score = 100
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   7303                 | jae                 5
            //   8d45b8               | lea                 eax, [ebp - 0x48]
            //   803800               | cmp                 byte ptr [eax], 0
            //   0f8e00010000         | jle                 0x106
            //   8b5db4               | mov                 ebx, dword ptr [ebp - 0x4c]
            //   57                   | push                edi

        $sequence_3 = { 50 8d4d88 c645fc0f e8???????? }
            // n = 4, score = 100
            //   50                   | push                eax
            //   8d4d88               | lea                 ecx, [ebp - 0x78]
            //   c645fc0f             | mov                 byte ptr [ebp - 4], 0xf
            //   e8????????           |                     

        $sequence_4 = { 33ff 50 57 57 897c241c c744243c48030000 }
            // n = 6, score = 100
            //   33ff                 | xor                 edi, edi
            //   50                   | push                eax
            //   57                   | push                edi
            //   57                   | push                edi
            //   897c241c             | mov                 dword ptr [esp + 0x1c], edi
            //   c744243c48030000     | mov                 dword ptr [esp + 0x3c], 0x348

        $sequence_5 = { 89658c 83ec1c 8bcc 896590 895914 897910 }
            // n = 6, score = 100
            //   89658c               | mov                 dword ptr [ebp - 0x74], esp
            //   83ec1c               | sub                 esp, 0x1c
            //   8bcc                 | mov                 ecx, esp
            //   896590               | mov                 dword ptr [ebp - 0x70], esp
            //   895914               | mov                 dword ptr [ecx + 0x14], ebx
            //   897910               | mov                 dword ptr [ecx + 0x10], edi

        $sequence_6 = { c645fc0a e8???????? 8d7dd0 e8???????? 33ff 33f6 57 }
            // n = 7, score = 100
            //   c645fc0a             | mov                 byte ptr [ebp - 4], 0xa
            //   e8????????           |                     
            //   8d7dd0               | lea                 edi, [ebp - 0x30]
            //   e8????????           |                     
            //   33ff                 | xor                 edi, edi
            //   33f6                 | xor                 esi, esi
            //   57                   | push                edi

        $sequence_7 = { 6800300000 ff7650 ff7634 ff75ec ff15???????? 894508 3bc3 }
            // n = 7, score = 100
            //   6800300000           | push                0x3000
            //   ff7650               | push                dword ptr [esi + 0x50]
            //   ff7634               | push                dword ptr [esi + 0x34]
            //   ff75ec               | push                dword ptr [ebp - 0x14]
            //   ff15????????         |                     
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   3bc3                 | cmp                 eax, ebx

        $sequence_8 = { 83f83c 762a 56 e8???????? 8d0445d4304300 8bc8 2bce }
            // n = 7, score = 100
            //   83f83c               | cmp                 eax, 0x3c
            //   762a                 | jbe                 0x2c
            //   56                   | push                esi
            //   e8????????           |                     
            //   8d0445d4304300       | lea                 eax, [eax*2 + 0x4330d4]
            //   8bc8                 | mov                 ecx, eax
            //   2bce                 | sub                 ecx, esi

        $sequence_9 = { 8db548ffffff e8???????? 8d4da8 c645fc00 e8???????? }
            // n = 5, score = 100
            //   8db548ffffff         | lea                 esi, [ebp - 0xb8]
            //   e8????????           |                     
            //   8d4da8               | lea                 ecx, [ebp - 0x58]
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   e8????????           |                     

    condition:
        7 of them and filesize < 598016
}