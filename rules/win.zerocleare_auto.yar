rule win_zerocleare_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.zerocleare."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zerocleare"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945fc 85f6 740b 83feff 0f8483000000 eb7d 8b1c9d6cc74300 }
            // n = 7, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   85f6                 | test                esi, esi
            //   740b                 | je                  0xd
            //   83feff               | cmp                 esi, -1
            //   0f8483000000         | je                  0x89
            //   eb7d                 | jmp                 0x7f
            //   8b1c9d6cc74300       | mov                 ebx, dword ptr [ebx*4 + 0x43c76c]

        $sequence_1 = { 50 0f118580f7ffff e8???????? 83c404 68???????? 8bc8 c645fc02 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   0f118580f7ffff       | movups              xmmword ptr [ebp - 0x880], xmm0
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2

        $sequence_2 = { ff15???????? 0fb78520f8ffff 50 e8???????? 33ff c7851cf8ffff00000000 0f57c0 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   0fb78520f8ffff       | movzx               eax, word ptr [ebp - 0x7e0]
            //   50                   | push                eax
            //   e8????????           |                     
            //   33ff                 | xor                 edi, edi
            //   c7851cf8ffff00000000     | mov    dword ptr [ebp - 0x7e4], 0
            //   0f57c0               | xorps               xmm0, xmm0

        $sequence_3 = { ffb580f7ffff ffd6 ffb580f7ffff ff15???????? ffb584f7ffff ff15???????? 6a16 }
            // n = 7, score = 100
            //   ffb580f7ffff         | push                dword ptr [ebp - 0x880]
            //   ffd6                 | call                esi
            //   ffb580f7ffff         | push                dword ptr [ebp - 0x880]
            //   ff15????????         |                     
            //   ffb584f7ffff         | push                dword ptr [ebp - 0x87c]
            //   ff15????????         |                     
            //   6a16                 | push                0x16

        $sequence_4 = { e9???????? 8b048d40fd4400 807c022800 7d39 8b7508 ff75fc ff36 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8b048d40fd4400       | mov                 eax, dword ptr [ecx*4 + 0x44fd40]
            //   807c022800           | cmp                 byte ptr [edx + eax + 0x28], 0
            //   7d39                 | jge                 0x3b
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff36                 | push                dword ptr [esi]

        $sequence_5 = { 8d4104 8b09 50 6a00 51 6a00 }
            // n = 6, score = 100
            //   8d4104               | lea                 eax, [ecx + 4]
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   6a00                 | push                0

        $sequence_6 = { 8d1438 8d4101 3bf0 0f46f0 8d0449 }
            // n = 5, score = 100
            //   8d1438               | lea                 edx, [eax + edi]
            //   8d4101               | lea                 eax, [ecx + 1]
            //   3bf0                 | cmp                 esi, eax
            //   0f46f0               | cmovbe              esi, eax
            //   8d0449               | lea                 eax, [ecx + ecx*2]

        $sequence_7 = { 57 898510f8ffff e8???????? 83c404 85c0 }
            // n = 5, score = 100
            //   57                   | push                edi
            //   898510f8ffff         | mov                 dword ptr [ebp - 0x7f0], eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax

        $sequence_8 = { 7f05 83fe01 7608 83ee01 83df00 eb0e }
            // n = 6, score = 100
            //   7f05                 | jg                  7
            //   83fe01               | cmp                 esi, 1
            //   7608                 | jbe                 0xa
            //   83ee01               | sub                 esi, 1
            //   83df00               | sbb                 edi, 0
            //   eb0e                 | jmp                 0x10

        $sequence_9 = { 8b7de8 8b55d4 8b4f3c 8b7de4 3bcb }
            // n = 5, score = 100
            //   8b7de8               | mov                 edi, dword ptr [ebp - 0x18]
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]
            //   8b4f3c               | mov                 ecx, dword ptr [edi + 0x3c]
            //   8b7de4               | mov                 edi, dword ptr [ebp - 0x1c]
            //   3bcb                 | cmp                 ecx, ebx

    condition:
        7 of them and filesize < 42670080
}