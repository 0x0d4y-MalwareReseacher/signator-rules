rule win_former_first_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.former_first_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.former_first_rat"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 f3a4 ff15???????? 5f 33c0 }
            // n = 5, score = 200
            //   6a00                 | je                  0x1f
            //   f3a4                 | dec                 eax
            //   ff15????????         |                     
            //   5f                   | mov                 eax, dword ptr [ebx + 0x20]
            //   33c0                 | dec                 eax

        $sequence_1 = { c3 55 8bec a1???????? 53 8b5d0c 8d9308020000 }
            // n = 7, score = 200
            //   c3                   | mov                 eax, dword ptr [ebx + 0x40]
            //   55                   | dec                 eax
            //   8bec                 | cmp                 dword ptr [eax], 0
            //   a1????????           |                     
            //   53                   | add                 ecx, edi
            //   8b5d0c               | mov                 dword ptr [eax], ecx
            //   8d9308020000         | dec                 eax

        $sequence_2 = { bb00000100 e8???????? 33f6 8d9b00000000 8d8de8feffff 51 8d95fcfeffff }
            // n = 7, score = 200
            //   bb00000100           | add                 ecx, ebp
            //   e8????????           |                     
            //   33f6                 | mov                 dword ptr [eax], ecx
            //   8d9b00000000         | test                byte ptr [ebx + 0x78], 4
            //   8d8de8feffff         | je                  0x1f
            //   51                   | add                 ecx, ebp
            //   8d95fcfeffff         | mov                 dword ptr [eax], ecx

        $sequence_3 = { 8bff 668b4702 83c702 6685c0 75f4 8b0d???????? 6a40 }
            // n = 7, score = 200
            //   8bff                 | mov                 dword ptr [eax], esi
            //   668b4702             | dec                 eax
            //   83c702               | mov                 eax, dword ptr [ebx + 0x40]
            //   6685c0               | add                 ecx, edi
            //   75f4                 | mov                 dword ptr [eax], ecx
            //   8b0d????????         |                     
            //   6a40                 | dec                 eax

        $sequence_4 = { 3bc1 751b 8d4c2414 51 c744241800000000 }
            // n = 5, score = 200
            //   3bc1                 | test                byte ptr [ebx + 0x78], 4
            //   751b                 | je                  0x1f
            //   8d4c2414             | dec                 eax
            //   51                   | mov                 eax, dword ptr [ebx + 0x20]
            //   c744241800000000     | add                 ecx, ebp

        $sequence_5 = { 56 56 8985dcfeffff 8985e0feffff }
            // n = 4, score = 200
            //   56                   | inc                 ebx
            //   56                   | dec                 esp
            //   8985dcfeffff         | cmp                 ebx, ebx
            //   8985e0feffff         | jl                  0xffffffcd

        $sequence_6 = { 6a00 6a00 e8???????? 83c42c 5e b801000000 }
            // n = 6, score = 200
            //   6a00                 | dec                 eax
            //   6a00                 | mov                 dword ptr [eax], esi
            //   e8????????           |                     
            //   83c42c               | add                 ecx, ebp
            //   5e                   | mov                 dword ptr [eax], ecx
            //   b801000000           | test                byte ptr [ebx + 0x78], 4

        $sequence_7 = { 8985e8feffff 8985f8feffff e8???????? 8b950cffffff 52 8bdf }
            // n = 6, score = 200
            //   8985e8feffff         | mov                 dword ptr [eax], ecx
            //   8985f8feffff         | test                byte ptr [ebx + 0x78], 4
            //   e8????????           |                     
            //   8b950cffffff         | je                  0x1f
            //   52                   | dec                 eax
            //   8bdf                 | mov                 eax, dword ptr [ebx + 0x20]

        $sequence_8 = { 03c2 83e003 3bc2 7516 418bc2 }
            // n = 5, score = 100
            //   03c2                 | mov                 byte ptr [ebx], dl
            //   83e003               | inc                 edx
            //   3bc2                 | xor                 byte ptr [ecx + eax], dl
            //   7516                 | inc                 edx
            //   418bc2               | mov                 cl, byte ptr [ecx + eax]

        $sequence_9 = { 017130 83793005 7407 33c0 }
            // n = 4, score = 100
            //   017130               | add                 dword ptr [ecx + 0x30], esi
            //   83793005             | cmp                 dword ptr [ecx + 0x30], 5
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax

        $sequence_10 = { 02c8 488d05f0f60100 02c9 4002ce }
            // n = 4, score = 100
            //   02c8                 | mov                 eax, dword ptr [ecx + 0x10]
            //   488d05f0f60100       | cmp                 dword ptr [eax + 0x94], 0
            //   02c9                 | add                 cl, al
            //   4002ce               | dec                 eax

        $sequence_11 = { 03cd 8908 f6437804 7417 }
            // n = 4, score = 100
            //   03cd                 | jne                 0x1d
            //   8908                 | inc                 ecx
            //   f6437804             | mov                 eax, edx
            //   7417                 | add                 eax, edx

        $sequence_12 = { 03cf 8908 488b4340 48833800 }
            // n = 4, score = 100
            //   03cf                 | inc                 ecx
            //   8908                 | xor                 byte ptr [ebx + edi], dl
            //   488b4340             | add                 ecx, edx
            //   48833800             | movzx               ecx, cl

        $sequence_13 = { 03c1 89442468 413bc5 7250 }
            // n = 4, score = 100
            //   03c1                 | inc                 ecx
            //   89442468             | movzx               ecx, dl
            //   413bc5               | inc                 edx
            //   7250                 | xor                 dl, byte ptr [ecx + eax]

        $sequence_14 = { 03ca 0fb6c9 428a1401 4130143b }
            // n = 4, score = 100
            //   03ca                 | mov                 dword ptr [esp + 0x68], eax
            //   0fb6c9               | inc                 ecx
            //   428a1401             | cmp                 eax, ebp
            //   4130143b             | jb                  0x59

        $sequence_15 = { 02ca 4402d1 410fb6ca 42321401 }
            // n = 4, score = 100
            //   02ca                 | dec                 eax
            //   4402d1               | cmp                 edi, eax
            //   410fb6ca             | add                 cl, al
            //   42321401             | dec                 eax

    condition:
        7 of them and filesize < 626688
}