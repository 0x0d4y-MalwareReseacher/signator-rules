rule win_putabmow_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.putabmow."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.putabmow"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff7318 ff502c b301 c68424b000000001 83bc249c00000008 720f ffb42488000000 }
            // n = 7, score = 100
            //   ff7318               | push                dword ptr [ebx + 0x18]
            //   ff502c               | call                dword ptr [eax + 0x2c]
            //   b301                 | mov                 bl, 1
            //   c68424b000000001     | mov                 byte ptr [esp + 0xb0], 1
            //   83bc249c00000008     | cmp                 dword ptr [esp + 0x9c], 8
            //   720f                 | jb                  0x11
            //   ffb42488000000       | push                dword ptr [esp + 0x88]

        $sequence_1 = { 0f84f3020000 f7c300000400 742d 8b4dec 8bd6 6a00 }
            // n = 6, score = 100
            //   0f84f3020000         | je                  0x2f9
            //   f7c300000400         | test                ebx, 0x40000
            //   742d                 | je                  0x2f
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   8bd6                 | mov                 edx, esi
            //   6a00                 | push                0

        $sequence_2 = { e8???????? c68424b000000009 8d442428 50 8d4c2418 e8???????? }
            // n = 6, score = 100
            //   e8????????           |                     
            //   c68424b000000009     | mov                 byte ptr [esp + 0xb0], 9
            //   8d442428             | lea                 eax, dword ptr [esp + 0x28]
            //   50                   | push                eax
            //   8d4c2418             | lea                 ecx, dword ptr [esp + 0x18]
            //   e8????????           |                     

        $sequence_3 = { 6a5d 6a20 8d842464010000 68???????? 50 e8???????? 83c410 }
            // n = 7, score = 100
            //   6a5d                 | push                0x5d
            //   6a20                 | push                0x20
            //   8d842464010000       | lea                 eax, dword ptr [esp + 0x164]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

        $sequence_4 = { c1f903 85c9 7e20 8b45fc 03d1 8955f4 85c0 }
            // n = 7, score = 100
            //   c1f903               | sar                 ecx, 3
            //   85c9                 | test                ecx, ecx
            //   7e20                 | jle                 0x22
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   03d1                 | add                 edx, ecx
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   85c0                 | test                eax, eax

        $sequence_5 = { 8d9b00000000 8b02 3b01 7518 8b442414 83c204 83c104 }
            // n = 7, score = 100
            //   8d9b00000000         | lea                 ebx, dword ptr [ebx]
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   3b01                 | cmp                 eax, dword ptr [ecx]
            //   7518                 | jne                 0x1a
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   83c204               | add                 edx, 4
            //   83c104               | add                 ecx, 4

        $sequence_6 = { 84c0 7479 83bc245802000010 8d8c2444020000 8b842454020000 0f438c2444020000 03c1 }
            // n = 7, score = 100
            //   84c0                 | test                al, al
            //   7479                 | je                  0x7b
            //   83bc245802000010     | cmp                 dword ptr [esp + 0x258], 0x10
            //   8d8c2444020000       | lea                 ecx, dword ptr [esp + 0x244]
            //   8b842454020000       | mov                 eax, dword ptr [esp + 0x254]
            //   0f438c2444020000     | cmovae              ecx, dword ptr [esp + 0x244]
            //   03c1                 | add                 eax, ecx

        $sequence_7 = { 0fb602 8b1c85600f7300 eb03 8b4dec 8b55f8 8bc3 2500004000 }
            // n = 7, score = 100
            //   0fb602               | movzx               eax, byte ptr [edx]
            //   8b1c85600f7300       | mov                 ebx, dword ptr [eax*4 + 0x730f60]
            //   eb03                 | jmp                 5
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   8bc3                 | mov                 eax, ebx
            //   2500004000           | and                 eax, 0x400000

        $sequence_8 = { 803a9b 7519 804e3508 b82c270000 5f 6689461e b801000000 }
            // n = 7, score = 100
            //   803a9b               | cmp                 byte ptr [edx], 0x9b
            //   7519                 | jne                 0x1b
            //   804e3508             | or                  byte ptr [esi + 0x35], 8
            //   b82c270000           | mov                 eax, 0x272c
            //   5f                   | pop                 edi
            //   6689461e             | mov                 word ptr [esi + 0x1e], ax
            //   b801000000           | mov                 eax, 1

        $sequence_9 = { 0f8560ffffff 57 ff15???????? 8bc6 8b4df4 64890d00000000 59 }
            // n = 7, score = 100
            //   0f8560ffffff         | jne                 0xffffff66
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8bc6                 | mov                 eax, esi
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 704512
}