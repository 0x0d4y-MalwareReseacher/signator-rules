rule win_mount_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.mount_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mount_locker"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4c8bc2 4c8bf2 8bf1 33d2 }
            // n = 4, score = 500
            //   4c8bc2               | lea                 ecx, [esp + 0x20]
            //   4c8bf2               | dec                 eax
            //   8bf1                 | lea                 ecx, [0xde9e]
            //   33d2                 | dec                 eax

        $sequence_1 = { 488bcb 488b15???????? e8???????? 85c0 }
            // n = 4, score = 500
            //   488bcb               | xor                 edi, edi
            //   488b15????????       |                     
            //   e8????????           |                     
            //   85c0                 | mov                 edx, edi

        $sequence_2 = { 488364242000 4533c9 488b4c2458 33d2 c744243001000000 }
            // n = 5, score = 500
            //   488364242000         | lea                 eax, [0x5f88]
            //   4533c9               | jmp                 0x10a4
            //   488b4c2458           | mov                 ecx, 2
            //   33d2                 | mov                 ecx, 0x3e8
            //   c744243001000000     | jmp                 0x10b0

        $sequence_3 = { 4533c9 488b4c2458 33d2 c744243001000000 c744243c02000000 }
            // n = 5, score = 500
            //   4533c9               | dec                 eax
            //   488b4c2458           | lea                 edx, [0x6147]
            //   33d2                 | mov                 ecx, 1
            //   c744243001000000     | dec                 esp
            //   c744243c02000000     | mov                 eax, edi

        $sequence_4 = { 4533c9 488b4c2458 33d2 c744243001000000 }
            // n = 4, score = 500
            //   4533c9               | dec                 eax
            //   488b4c2458           | lea                 ecx, [ebp + 0x570]
            //   33d2                 | dec                 eax
            //   c744243001000000     | lea                 edx, [0xf2be]

        $sequence_5 = { 4c8d442430 488364242000 4533c9 488b4c2458 33d2 c744243001000000 }
            // n = 6, score = 500
            //   4c8d442430           | cmp                 eax, 0x35
            //   488364242000         | jne                 0xca5
            //   4533c9               | dec                 eax
            //   488b4c2458           | lea                 ecx, [0x15513]
            //   33d2                 | dec                 eax
            //   c744243001000000     | lea                 edx, [ebp - 0x60]

        $sequence_6 = { 498be8 4d8bc8 4c8bc2 4c8bf2 8bf1 33d2 33c9 }
            // n = 7, score = 500
            //   498be8               | lea                 eax, [esi + 2]
            //   4d8bc8               | and                 dword ptr [esp + 0x28], 0
            //   4c8bc2               | inc                 ebp
            //   4c8bf2               | xor                 ecx, ecx
            //   8bf1                 | mov                 edx, 0xc0000000
            //   33d2                 | dec                 eax
            //   33c9                 | and                 dword ptr [esp + 0x30], 0

        $sequence_7 = { 488d4df0 4889442428 4533c9 4533c0 }
            // n = 4, score = 500
            //   488d4df0             | mov                 eax, 3
            //   4889442428           | dec                 eax
            //   4533c9               | mov                 ecx, dword ptr [ebp + 0x1b0]
            //   4533c0               | dec                 esp

        $sequence_8 = { 498be8 4d8bc8 4c8bc2 4c8bf2 }
            // n = 4, score = 500
            //   498be8               | dec                 eax
            //   4d8bc8               | lea                 ecx, [esp + 0x20]
            //   4c8bc2               | dec                 eax
            //   4c8bf2               | lea                 ecx, [0x1e639]

        $sequence_9 = { 4c8d442430 488364242000 4533c9 488b4c2458 33d2 c744243001000000 c744243c02000000 }
            // n = 7, score = 500
            //   4c8d442430           | je                  0x108a
            //   488364242000         | movzx               ecx, word ptr [ebp - 8]
            //   4533c9               | inc                 cx
            //   488b4c2458           | add                 ecx, esi
            //   33d2                 | mov                 word ptr [ebp - 8], cx
            //   c744243001000000     | call                ebp
            //   c744243c02000000     | test                eax, eax

    condition:
        7 of them and filesize < 368640
}