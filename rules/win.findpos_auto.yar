rule win_findpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.findpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.findpos"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8902 8bc1 c3 6a18 e8???????? 59 }
            // n = 6, score = 100
            //   8902                 | mov                 dword ptr [edx], eax
            //   8bc1                 | mov                 eax, ecx
            //   c3                   | ret                 
            //   6a18                 | push                0x18
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_1 = { 6a00 6a01 8d8c24a8000000 e9???????? 68???????? }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   8d8c24a8000000       | lea                 ecx, dword ptr [esp + 0xa8]
            //   e9????????           |                     
            //   68????????           |                     

        $sequence_2 = { 9f fe8f2f8323db 4b fb 9e 8ca40b41fff7ce }
            // n = 6, score = 100
            //   9f                   | lahf                
            //   fe8f2f8323db         | dec                 byte ptr [edi - 0x24dc7cd1]
            //   4b                   | dec                 ebx
            //   fb                   | sti                 
            //   9e                   | sahf                
            //   8ca40b41fff7ce       | mov                 word ptr [ebx + ecx - 0x310800bf], fs

        $sequence_3 = { 8b85dcfeffff 83c40c 3375f0 337df4 8b4008 8985dcfeffff 85c0 }
            // n = 7, score = 100
            //   8b85dcfeffff         | mov                 eax, dword ptr [ebp - 0x124]
            //   83c40c               | add                 esp, 0xc
            //   3375f0               | xor                 esi, dword ptr [ebp - 0x10]
            //   337df4               | xor                 edi, dword ptr [ebp - 0xc]
            //   8b4008               | mov                 eax, dword ptr [eax + 8]
            //   8985dcfeffff         | mov                 dword ptr [ebp - 0x124], eax
            //   85c0                 | test                eax, eax

        $sequence_4 = { 83c304 833f00 75aa 8b55fc 83c614 }
            // n = 5, score = 100
            //   83c304               | add                 ebx, 4
            //   833f00               | cmp                 dword ptr [edi], 0
            //   75aa                 | jne                 0xffffffac
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   83c614               | add                 esi, 0x14

        $sequence_5 = { ff35???????? e8???????? 59 8be5 5d c3 }
            // n = 6, score = 100
            //   ff35????????         |                     
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_6 = { 53 8a1a 56 0fb631 0fb6c3 83ce20 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   8a1a                 | mov                 bl, byte ptr [edx]
            //   56                   | push                esi
            //   0fb631               | movzx               esi, byte ptr [ecx]
            //   0fb6c3               | movzx               eax, bl
            //   83ce20               | or                  esi, 0x20

        $sequence_7 = { 8b8528e5ffff 8b0c85a0ed4100 8b8524e5ffff f644080480 }
            // n = 4, score = 100
            //   8b8528e5ffff         | mov                 eax, dword ptr [ebp - 0x1ad8]
            //   8b0c85a0ed4100       | mov                 ecx, dword ptr [eax*4 + 0x41eda0]
            //   8b8524e5ffff         | mov                 eax, dword ptr [ebp - 0x1adc]
            //   f644080480           | test                byte ptr [eax + ecx + 4], 0x80

        $sequence_8 = { 7435 ff35???????? 8bd6 e8???????? c70424???????? ff35???????? }
            // n = 6, score = 100
            //   7435                 | je                  0x37
            //   ff35????????         |                     
            //   8bd6                 | mov                 edx, esi
            //   e8????????           |                     
            //   c70424????????       |                     
            //   ff35????????         |                     

        $sequence_9 = { 834e2801 8b3d???????? 8d4df8 e8???????? 8b75f8 3bf7 75cb }
            // n = 7, score = 100
            //   834e2801             | or                  dword ptr [esi + 0x28], 1
            //   8b3d????????         |                     
            //   8d4df8               | lea                 ecx, dword ptr [ebp - 8]
            //   e8????????           |                     
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   3bf7                 | cmp                 esi, edi
            //   75cb                 | jne                 0xffffffcd

    condition:
        7 of them and filesize < 286720
}