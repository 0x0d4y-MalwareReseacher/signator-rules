rule win_snatch_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.snatch_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.snatch_loader"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc8 e8???????? a3???????? 85c0 7408 53 }
            // n = 6, score = 600
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   a3????????           |                     
            //   85c0                 | test                eax, eax
            //   7408                 | je                  0xa
            //   53                   | push                ebx

        $sequence_1 = { c3 56 33f6 49 }
            // n = 4, score = 600
            //   c3                   | ret                 
            //   56                   | push                esi
            //   33f6                 | xor                 esi, esi
            //   49                   | dec                 ecx

        $sequence_2 = { 6639744102 75f5 8d045502000000 894df8 0fb7c0 668945f4 83c002 }
            // n = 7, score = 600
            //   6639744102           | cmp                 word ptr [ecx + eax*2 + 2], si
            //   75f5                 | jne                 0xfffffff7
            //   8d045502000000       | lea                 eax, [edx*2 + 2]
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   0fb7c0               | movzx               eax, ax
            //   668945f4             | mov                 word ptr [ebp - 0xc], ax
            //   83c002               | add                 eax, 2

        $sequence_3 = { a3???????? 85c0 7505 8b4dfc eb0e }
            // n = 5, score = 600
            //   a3????????           |                     
            //   85c0                 | test                eax, eax
            //   7505                 | jne                 7
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   eb0e                 | jmp                 0x10

        $sequence_4 = { 8bf0 a1???????? 85c0 751d }
            // n = 4, score = 600
            //   8bf0                 | mov                 esi, eax
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   751d                 | jne                 0x1f

        $sequence_5 = { 8bf9 85c0 7522 6a02 59 }
            // n = 5, score = 600
            //   8bf9                 | mov                 edi, ecx
            //   85c0                 | test                eax, eax
            //   7522                 | jne                 0x24
            //   6a02                 | push                2
            //   59                   | pop                 ecx

        $sequence_6 = { 895dfc e8???????? 8bf0 85f6 744b }
            // n = 5, score = 600
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   744b                 | je                  0x4d

        $sequence_7 = { 668945f6 a1???????? 85c0 7522 33c9 41 e8???????? }
            // n = 7, score = 600
            //   668945f6             | mov                 word ptr [ebp - 0xa], ax
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   7522                 | jne                 0x24
            //   33c9                 | xor                 ecx, ecx
            //   41                   | inc                 ecx
            //   e8????????           |                     

        $sequence_8 = { 8945f8 0bc0 7440 3b45fc }
            // n = 4, score = 500
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   0bc0                 | or                  eax, eax
            //   7440                 | je                  0x42
            //   3b45fc               | cmp                 eax, dword ptr [ebp - 4]

        $sequence_9 = { 7514 41 3b4df8 72ee }
            // n = 4, score = 500
            //   7514                 | jne                 0x16
            //   41                   | inc                 ecx
            //   3b4df8               | cmp                 ecx, dword ptr [ebp - 8]
            //   72ee                 | jb                  0xfffffff0

        $sequence_10 = { 51 52 ff750c e8???????? 8945fc 0bc0 }
            // n = 6, score = 500
            //   51                   | push                ecx
            //   52                   | push                edx
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   0bc0                 | or                  eax, eax

        $sequence_11 = { 68???????? 58 ffd0 8945f8 0bc0 }
            // n = 5, score = 500
            //   68????????           |                     
            //   58                   | pop                 eax
            //   ffd0                 | call                eax
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   0bc0                 | or                  eax, eax

        $sequence_12 = { ab 5b 5e eb03 83c704 83c304 }
            // n = 6, score = 500
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   5b                   | pop                 ebx
            //   5e                   | pop                 esi
            //   eb03                 | jmp                 5
            //   83c704               | add                 edi, 4
            //   83c304               | add                 ebx, 4

        $sequence_13 = { 53 57 56 33db 6a04 }
            // n = 5, score = 500
            //   53                   | push                ebx
            //   57                   | push                edi
            //   56                   | push                esi
            //   33db                 | xor                 ebx, ebx
            //   6a04                 | push                4

        $sequence_14 = { 72ee 8bc2 034508 5a }
            // n = 4, score = 500
            //   72ee                 | jb                  0xfffffff0
            //   8bc2                 | mov                 eax, edx
            //   034508               | add                 eax, dword ptr [ebp + 8]
            //   5a                   | pop                 edx

        $sequence_15 = { ff750c ff7508 6a00 6a00 e8???????? 8945fc }
            // n = 6, score = 500
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   e8????????           |                     
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

    condition:
        7 of them and filesize < 262144
}