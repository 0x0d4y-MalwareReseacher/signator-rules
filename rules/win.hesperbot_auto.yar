rule win_hesperbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.hesperbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hesperbot"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b3a 750c e8???????? 85c0 740b 6a02 58 }
            // n = 7, score = 500
            //   8b3a                 | mov                 edi, dword ptr [edx]
            //   750c                 | jne                 0xe
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   740b                 | je                  0xd
            //   6a02                 | push                2
            //   58                   | pop                 eax

        $sequence_1 = { 884706 43 5e 8bc3 5b c9 c3 }
            // n = 7, score = 500
            //   884706               | mov                 byte ptr [edi + 6], al
            //   43                   | inc                 ebx
            //   5e                   | pop                 esi
            //   8bc3                 | mov                 eax, ebx
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c3                   | ret                 

        $sequence_2 = { 742d 53 8d8578ffffff 68000000c0 50 8d5dfc e8???????? }
            // n = 7, score = 500
            //   742d                 | je                  0x2f
            //   53                   | push                ebx
            //   8d8578ffffff         | lea                 eax, [ebp - 0x88]
            //   68000000c0           | push                0xc0000000
            //   50                   | push                eax
            //   8d5dfc               | lea                 ebx, [ebp - 4]
            //   e8????????           |                     

        $sequence_3 = { 7436 8a0439 f6c101 7514 3c20 7610 }
            // n = 6, score = 500
            //   7436                 | je                  0x38
            //   8a0439               | mov                 al, byte ptr [ecx + edi]
            //   f6c101               | test                cl, 1
            //   7514                 | jne                 0x16
            //   3c20                 | cmp                 al, 0x20
            //   7610                 | jbe                 0x12

        $sequence_4 = { 5f 5e c3 56 8bf0 57 }
            // n = 6, score = 500
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   56                   | push                esi
            //   8bf0                 | mov                 esi, eax
            //   57                   | push                edi

        $sequence_5 = { 81ecd8000000 56 8d852cffffff e8???????? ff750c }
            // n = 5, score = 500
            //   81ecd8000000         | sub                 esp, 0xd8
            //   56                   | push                esi
            //   8d852cffffff         | lea                 eax, [ebp - 0xd4]
            //   e8????????           |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_6 = { 57 8b7e08 6810270000 ff7604 e8???????? 59 }
            // n = 6, score = 500
            //   57                   | push                edi
            //   8b7e08               | mov                 edi, dword ptr [esi + 8]
            //   6810270000           | push                0x2710
            //   ff7604               | push                dword ptr [esi + 4]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_7 = { e8???????? 59 33f6 85f6 7405 8b4508 8918 }
            // n = 7, score = 500
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   33f6                 | xor                 esi, esi
            //   85f6                 | test                esi, esi
            //   7405                 | je                  7
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8918                 | mov                 dword ptr [eax], ebx

        $sequence_8 = { 0fb7db c1ed08 8bca 894c2468 8b4804 8bf1 c1e310 }
            // n = 7, score = 500
            //   0fb7db               | movzx               ebx, bx
            //   c1ed08               | shr                 ebp, 8
            //   8bca                 | mov                 ecx, edx
            //   894c2468             | mov                 dword ptr [esp + 0x68], ecx
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8bf1                 | mov                 esi, ecx
            //   c1e310               | shl                 ebx, 0x10

        $sequence_9 = { 5d 5b 83c420 c3 55 8bec 837d0c00 }
            // n = 7, score = 500
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   83c420               | add                 esp, 0x20
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0

    condition:
        7 of them and filesize < 188416
}