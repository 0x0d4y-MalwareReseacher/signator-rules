rule win_colibri_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.colibri."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.colibri"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03c7 50 e8???????? ba3c387ac0 8bc8 }
            // n = 5, score = 100
            //   03c7                 | add                 eax, edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   ba3c387ac0           | mov                 edx, 0xc07a383c
            //   8bc8                 | mov                 ecx, eax

        $sequence_1 = { 8bf0 8bcf 8975c0 e8???????? 8bd0 }
            // n = 5, score = 100
            //   8bf0                 | mov                 esi, eax
            //   8bcf                 | mov                 ecx, edi
            //   8975c0               | mov                 dword ptr [ebp - 0x40], esi
            //   e8????????           |                     
            //   8bd0                 | mov                 edx, eax

        $sequence_2 = { ffd0 56 8d45f0 50 6800080000 8d85f0f7ffff 50 }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   56                   | push                esi
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   6800080000           | push                0x800
            //   8d85f0f7ffff         | lea                 eax, [ebp - 0x810]
            //   50                   | push                eax

        $sequence_3 = { e8???????? ba6057d067 8bc8 e8???????? ffd0 c3 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   ba6057d067           | mov                 edx, 0x67d05760
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   c3                   | ret                 

        $sequence_4 = { ba49f6fd69 8bc8 e8???????? ffd0 eb68 33db 895c2440 }
            // n = 7, score = 100
            //   ba49f6fd69           | mov                 edx, 0x69fdf649
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   eb68                 | jmp                 0x6a
            //   33db                 | xor                 ebx, ebx
            //   895c2440             | mov                 dword ptr [esp + 0x40], ebx

        $sequence_5 = { 8bcb a5 a5 a5 a5 e8???????? 0fb745ee }
            // n = 7, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   e8????????           |                     
            //   0fb745ee             | movzx               eax, word ptr [ebp - 0x12]

        $sequence_6 = { 6a1c 8d8590fdffff 50 57 6a08 59 }
            // n = 6, score = 100
            //   6a1c                 | push                0x1c
            //   8d8590fdffff         | lea                 eax, [ebp - 0x270]
            //   50                   | push                eax
            //   57                   | push                edi
            //   6a08                 | push                8
            //   59                   | pop                 ecx

        $sequence_7 = { eb4b 56 6a03 59 e8???????? }
            // n = 5, score = 100
            //   eb4b                 | jmp                 0x4d
            //   56                   | push                esi
            //   6a03                 | push                3
            //   59                   | pop                 ecx
            //   e8????????           |                     

        $sequence_8 = { 8bc8 e8???????? ffd0 85c0 0f84c6000000 a1???????? 8d0c4502000000 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   85c0                 | test                eax, eax
            //   0f84c6000000         | je                  0xcc
            //   a1????????           |                     
            //   8d0c4502000000       | lea                 ecx, [eax*2 + 2]

        $sequence_9 = { ffd0 8945f4 85c0 0f84d7000000 834dfcff }
            // n = 5, score = 100
            //   ffd0                 | call                eax
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   85c0                 | test                eax, eax
            //   0f84d7000000         | je                  0xdd
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff

    condition:
        7 of them and filesize < 51200
}