rule win_atmosphere_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.atmosphere."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.atmosphere"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a12 50 8b11 ff12 }
            // n = 4, score = 400
            //   6a12                 | push                0x12
            //   50                   | push                eax
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   ff12                 | call                dword ptr [edx]

        $sequence_1 = { e8???????? 8b4604 85c0 7504 33f6 eb08 }
            // n = 6, score = 400
            //   e8????????           |                     
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6
            //   33f6                 | xor                 esi, esi
            //   eb08                 | jmp                 0xa

        $sequence_2 = { 56 57 8b7c240c 8bf1 57 ff15???????? 8b470c }
            // n = 7, score = 400
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7c240c             | mov                 edi, dword ptr [esp + 0xc]
            //   8bf1                 | mov                 esi, ecx
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8b470c               | mov                 eax, dword ptr [edi + 0xc]

        $sequence_3 = { 33c0 894612 894616 89461a 884e1e }
            // n = 5, score = 400
            //   33c0                 | xor                 eax, eax
            //   894612               | mov                 dword ptr [esi + 0x12], eax
            //   894616               | mov                 dword ptr [esi + 0x16], eax
            //   89461a               | mov                 dword ptr [esi + 0x1a], eax
            //   884e1e               | mov                 byte ptr [esi + 0x1e], cl

        $sequence_4 = { 56 8bf1 8b06 ff5074 }
            // n = 4, score = 400
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   ff5074               | call                dword ptr [eax + 0x74]

        $sequence_5 = { 57 8d45e0 8965f0 8bf1 50 }
            // n = 5, score = 400
            //   57                   | push                edi
            //   8d45e0               | lea                 eax, dword ptr [ebp - 0x20]
            //   8965f0               | mov                 dword ptr [ebp - 0x10], esp
            //   8bf1                 | mov                 esi, ecx
            //   50                   | push                eax

        $sequence_6 = { e8???????? 83ec10 c645fc02 8bcc 8965e8 }
            // n = 5, score = 400
            //   e8????????           |                     
            //   83ec10               | sub                 esp, 0x10
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8bcc                 | mov                 ecx, esp
            //   8965e8               | mov                 dword ptr [ebp - 0x18], esp

        $sequence_7 = { 8bf1 57 ff15???????? 8b470c }
            // n = 4, score = 400
            //   8bf1                 | mov                 esi, ecx
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8b470c               | mov                 eax, dword ptr [edi + 0xc]

        $sequence_8 = { 8bcc 8965e8 50 51 }
            // n = 4, score = 400
            //   8bcc                 | mov                 ecx, esp
            //   8965e8               | mov                 dword ptr [ebp - 0x18], esp
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_9 = { 8b5104 668b0402 8b542404 668902 }
            // n = 4, score = 400
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   668b0402             | mov                 ax, word ptr [edx + eax]
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   668902               | mov                 word ptr [edx], ax

    condition:
        7 of them and filesize < 360448
}