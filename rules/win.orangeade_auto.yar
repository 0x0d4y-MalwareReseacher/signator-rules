rule win_orangeade_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.orangeade."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.orangeade"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 33db b940000000 33c0 8dbc2465020000 889c2464020000 }
            // n = 6, score = 100
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   8dbc2465020000       | lea                 edi, [esp + 0x265]
            //   889c2464020000       | mov                 byte ptr [esp + 0x264], bl

        $sequence_1 = { 8d4c2420 c684249428010001 e8???????? 85c0 753e 8d4c2414 }
            // n = 6, score = 100
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   c684249428010001     | mov                 byte ptr [esp + 0x12894], 1
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   753e                 | jne                 0x40
            //   8d4c2414             | lea                 ecx, [esp + 0x14]

        $sequence_2 = { 6804010000 50 c784242805000001000000 ff15???????? 8d8c2418020000 8d942418040000 51 }
            // n = 7, score = 100
            //   6804010000           | push                0x104
            //   50                   | push                eax
            //   c784242805000001000000     | mov    dword ptr [esp + 0x528], 1
            //   ff15????????         |                     
            //   8d8c2418020000       | lea                 ecx, [esp + 0x218]
            //   8d942418040000       | lea                 edx, [esp + 0x418]
            //   51                   | push                ecx

        $sequence_3 = { 8b4c240c 50 51 8d4c242c }
            // n = 4, score = 100
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8d4c242c             | lea                 ecx, [esp + 0x2c]

        $sequence_4 = { e8???????? 33c0 8b8c2480280100 5f }
            // n = 4, score = 100
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   8b8c2480280100       | mov                 ecx, dword ptr [esp + 0x12880]
            //   5f                   | pop                 edi

        $sequence_5 = { 51 8d4c2420 c684249428010001 e8???????? 85c0 753e }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   c684249428010001     | mov                 byte ptr [esp + 0x12894], 1
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   753e                 | jne                 0x40

        $sequence_6 = { b93f000000 33c0 8dbc2419040000 889c2418040000 }
            // n = 4, score = 100
            //   b93f000000           | mov                 ecx, 0x3f
            //   33c0                 | xor                 eax, eax
            //   8dbc2419040000       | lea                 edi, [esp + 0x419]
            //   889c2418040000       | mov                 byte ptr [esp + 0x418], bl

        $sequence_7 = { 8d942468030000 51 8d84246c040000 52 }
            // n = 4, score = 100
            //   8d942468030000       | lea                 edx, [esp + 0x368]
            //   51                   | push                ecx
            //   8d84246c040000       | lea                 eax, [esp + 0x46c]
            //   52                   | push                edx

        $sequence_8 = { 50 53 c744247401000000 66895c2478 }
            // n = 4, score = 100
            //   50                   | push                eax
            //   53                   | push                ebx
            //   c744247401000000     | mov                 dword ptr [esp + 0x74], 1
            //   66895c2478           | mov                 word ptr [esp + 0x78], bx

        $sequence_9 = { c784242805000001000000 ff15???????? 8d8c2418020000 8d942418040000 51 }
            // n = 5, score = 100
            //   c784242805000001000000     | mov    dword ptr [esp + 0x528], 1
            //   ff15????????         |                     
            //   8d8c2418020000       | lea                 ecx, [esp + 0x218]
            //   8d942418040000       | lea                 edx, [esp + 0x418]
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 139264
}