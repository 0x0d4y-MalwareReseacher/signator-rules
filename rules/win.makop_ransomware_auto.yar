rule win_makop_ransomware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.makop_ransomware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.makop_ransomware"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 ff15???????? 85c0 74de b001 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   74de                 | je                  0xffffffe0
            //   b001                 | mov                 al, 1

        $sequence_1 = { 75b8 5d 5b 8b44240c 50 ffd7 }
            // n = 6, score = 100
            //   75b8                 | jne                 0xffffffba
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]
            //   50                   | push                eax
            //   ffd7                 | call                edi

        $sequence_2 = { 6800000002 ff15???????? 50 ff15???????? 85c0 7506 32c0 }
            // n = 7, score = 100
            //   6800000002           | push                0x2000000
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7506                 | jne                 8
            //   32c0                 | xor                 al, al

        $sequence_3 = { 6689ac2480000000 66c78424840000006700 66c78424860000006200 66c784248a0000002800 66c78424900000002900 66c78424920000002f00 }
            // n = 6, score = 100
            //   6689ac2480000000     | mov                 word ptr [esp + 0x80], bp
            //   66c78424840000006700     | mov    word ptr [esp + 0x84], 0x67
            //   66c78424860000006200     | mov    word ptr [esp + 0x86], 0x62
            //   66c784248a0000002800     | mov    word ptr [esp + 0x8a], 0x28
            //   66c78424900000002900     | mov    word ptr [esp + 0x90], 0x29
            //   66c78424920000002f00     | mov    word ptr [esp + 0x92], 0x2f

        $sequence_4 = { 8b44240c 83f8ff 7403 50 ffd6 8b442414 83f8ff }
            // n = 7, score = 100
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]
            //   83f8ff               | cmp                 eax, -1
            //   7403                 | je                  5
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   83f8ff               | cmp                 eax, -1

        $sequence_5 = { 0f84f0000000 3b4310 7323 8bc8 83e10f 741c 8b530c }
            // n = 7, score = 100
            //   0f84f0000000         | je                  0xf6
            //   3b4310               | cmp                 eax, dword ptr [ebx + 0x10]
            //   7323                 | jae                 0x25
            //   8bc8                 | mov                 ecx, eax
            //   83e10f               | and                 ecx, 0xf
            //   741c                 | je                  0x1e
            //   8b530c               | mov                 edx, dword ptr [ebx + 0xc]

        $sequence_6 = { 8d4c2414 51 a3???????? a1???????? 6a12 e8???????? 8d542414 }
            // n = 7, score = 100
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   51                   | push                ecx
            //   a3????????           |                     
            //   a1????????           |                     
            //   6a12                 | push                0x12
            //   e8????????           |                     
            //   8d542414             | lea                 edx, [esp + 0x14]

        $sequence_7 = { e8???????? 0fb744241c 83c40c 3bc5 7413 83c701 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   0fb744241c           | movzx               eax, word ptr [esp + 0x1c]
            //   83c40c               | add                 esp, 0xc
            //   3bc5                 | cmp                 eax, ebp
            //   7413                 | je                  0x15
            //   83c701               | add                 edi, 1

        $sequence_8 = { 7412 0fb74802 83c002 6685c9 }
            // n = 4, score = 100
            //   7412                 | je                  0x14
            //   0fb74802             | movzx               ecx, word ptr [eax + 2]
            //   83c002               | add                 eax, 2
            //   6685c9               | test                cx, cx

        $sequence_9 = { 66c746041066 c6460820 8b07 6a20 }
            // n = 4, score = 100
            //   66c746041066         | mov                 word ptr [esi + 4], 0x6610
            //   c6460820             | mov                 byte ptr [esi + 8], 0x20
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   6a20                 | push                0x20

    condition:
        7 of them and filesize < 107520
}