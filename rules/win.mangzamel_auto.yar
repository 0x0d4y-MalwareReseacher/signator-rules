rule win_mangzamel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.mangzamel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mangzamel"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 740a 85c0 75eb 32c0 5e c20400 56 }
            // n = 7, score = 400
            //   740a                 | je                  0xc
            //   85c0                 | test                eax, eax
            //   75eb                 | jne                 0xffffffed
            //   32c0                 | xor                 al, al
            //   5e                   | pop                 esi
            //   c20400               | ret                 4
            //   56                   | push                esi

        $sequence_1 = { ddd8 5f eb08 8b45cc 8b00 8b7008 395de8 }
            // n = 7, score = 400
            //   ddd8                 | fstp                st(0)
            //   5f                   | pop                 edi
            //   eb08                 | jmp                 0xa
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b7008               | mov                 esi, dword ptr [eax + 8]
            //   395de8               | cmp                 dword ptr [ebp - 0x18], ebx

        $sequence_2 = { 33c0 39410c 7e06 8b4104 8b4008 c3 83790c00 }
            // n = 7, score = 400
            //   33c0                 | xor                 eax, eax
            //   39410c               | cmp                 dword ptr [ecx + 0xc], eax
            //   7e06                 | jle                 8
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]
            //   8b4008               | mov                 eax, dword ptr [eax + 8]
            //   c3                   | ret                 
            //   83790c00             | cmp                 dword ptr [ecx + 0xc], 0

        $sequence_3 = { 55 3bd8 57 c644241301 7602 33db 85db }
            // n = 7, score = 400
            //   55                   | push                ebp
            //   3bd8                 | cmp                 ebx, eax
            //   57                   | push                edi
            //   c644241301           | mov                 byte ptr [esp + 0x13], 1
            //   7602                 | jbe                 4
            //   33db                 | xor                 ebx, ebx
            //   85db                 | test                ebx, ebx

        $sequence_4 = { 7416 8d8d5cfbffff 51 6a01 ff5008 389d70fbffff 59 }
            // n = 7, score = 400
            //   7416                 | je                  0x18
            //   8d8d5cfbffff         | lea                 ecx, [ebp - 0x4a4]
            //   51                   | push                ecx
            //   6a01                 | push                1
            //   ff5008               | call                dword ptr [eax + 8]
            //   389d70fbffff         | cmp                 byte ptr [ebp - 0x490], bl
            //   59                   | pop                 ecx

        $sequence_5 = { 8b4508 3b4708 754d 8b450c 3b4704 7545 8b06 }
            // n = 7, score = 400
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   3b4708               | cmp                 eax, dword ptr [edi + 8]
            //   754d                 | jne                 0x4f
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   3b4704               | cmp                 eax, dword ptr [edi + 4]
            //   7545                 | jne                 0x47
            //   8b06                 | mov                 eax, dword ptr [esi]

        $sequence_6 = { 33c0 e9???????? 8b06 83f803 0f8c7b010000 83f805 }
            // n = 6, score = 400
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   83f803               | cmp                 eax, 3
            //   0f8c7b010000         | jl                  0x181
            //   83f805               | cmp                 eax, 5

        $sequence_7 = { 89aea0000000 8b00 8986a4000000 5f 5e 5d 5b }
            // n = 7, score = 400
            //   89aea0000000         | mov                 dword ptr [esi + 0xa0], ebp
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8986a4000000         | mov                 dword ptr [esi + 0xa4], eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx

        $sequence_8 = { e8???????? 59 84c0 59 0f84c7000000 837dc803 0f85bd000000 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   84c0                 | test                al, al
            //   59                   | pop                 ecx
            //   0f84c7000000         | je                  0xcd
            //   837dc803             | cmp                 dword ptr [ebp - 0x38], 3
            //   0f85bd000000         | jne                 0xc3

        $sequence_9 = { 7503 33c0 c3 8b810c010000 c3 }
            // n = 5, score = 400
            //   7503                 | jne                 5
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   8b810c010000         | mov                 eax, dword ptr [ecx + 0x10c]
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 360448
}