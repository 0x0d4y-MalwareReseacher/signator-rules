rule win_unidentified_013_korean_malware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.unidentified_013_korean_malware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_013_korean_malware"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d542428 52 e8???????? 33c9 }
            // n = 4, score = 200
            //   8d542428             | lea                 edx, [esp + 0x28]
            //   52                   | push                edx
            //   e8????????           |                     
            //   33c9                 | xor                 ecx, ecx

        $sequence_1 = { 33db 889c0c54010000 3bc3 0f844a020000 8a842454010000 3c30 7506 }
            // n = 7, score = 200
            //   33db                 | xor                 ebx, ebx
            //   889c0c54010000       | mov                 byte ptr [esp + ecx + 0x154], bl
            //   3bc3                 | cmp                 eax, ebx
            //   0f844a020000         | je                  0x250
            //   8a842454010000       | mov                 al, byte ptr [esp + 0x154]
            //   3c30                 | cmp                 al, 0x30
            //   7506                 | jne                 8

        $sequence_2 = { 68???????? 68???????? 8d842460050000 68???????? 50 e8???????? }
            // n = 6, score = 200
            //   68????????           |                     
            //   68????????           |                     
            //   8d842460050000       | lea                 eax, [esp + 0x560]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_3 = { 8b4c2410 83f902 752b 837c240c06 }
            // n = 4, score = 200
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   83f902               | cmp                 ecx, 2
            //   752b                 | jne                 0x2d
            //   837c240c06           | cmp                 dword ptr [esp + 0xc], 6

        $sequence_4 = { 83c008 803c337f 8944242c 0f840f010000 3bd8 0f8307010000 0fb6543301 }
            // n = 7, score = 200
            //   83c008               | add                 eax, 8
            //   803c337f             | cmp                 byte ptr [ebx + esi], 0x7f
            //   8944242c             | mov                 dword ptr [esp + 0x2c], eax
            //   0f840f010000         | je                  0x115
            //   3bd8                 | cmp                 ebx, eax
            //   0f8307010000         | jae                 0x10d
            //   0fb6543301           | movzx               edx, byte ptr [ebx + esi + 1]

        $sequence_5 = { 8b7c2418 8b6c2414 8908 8b0d???????? 895004 }
            // n = 5, score = 200
            //   8b7c2418             | mov                 edi, dword ptr [esp + 0x18]
            //   8b6c2414             | mov                 ebp, dword ptr [esp + 0x14]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b0d????????         |                     
            //   895004               | mov                 dword ptr [eax + 4], edx

        $sequence_6 = { 7c17 7f04 85ed 7611 301c31 41 8bc1 }
            // n = 7, score = 200
            //   7c17                 | jl                  0x19
            //   7f04                 | jg                  6
            //   85ed                 | test                ebp, ebp
            //   7611                 | jbe                 0x13
            //   301c31               | xor                 byte ptr [ecx + esi], bl
            //   41                   | inc                 ecx
            //   8bc1                 | mov                 eax, ecx

        $sequence_7 = { 68e8030000 ffd6 83ef01 75f4 e8???????? }
            // n = 5, score = 200
            //   68e8030000           | push                0x3e8
            //   ffd6                 | call                esi
            //   83ef01               | sub                 edi, 1
            //   75f4                 | jne                 0xfffffff6
            //   e8????????           |                     

        $sequence_8 = { 84d2 75f8 8b44242c 381433 }
            // n = 4, score = 200
            //   84d2                 | test                dl, dl
            //   75f8                 | jne                 0xfffffffa
            //   8b44242c             | mov                 eax, dword ptr [esp + 0x2c]
            //   381433               | cmp                 byte ptr [ebx + esi], dl

        $sequence_9 = { e8???????? 8d842454030000 50 83ec1c 8bcc 899c2480060000 89642434 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d842454030000       | lea                 eax, [esp + 0x354]
            //   50                   | push                eax
            //   83ec1c               | sub                 esp, 0x1c
            //   8bcc                 | mov                 ecx, esp
            //   899c2480060000       | mov                 dword ptr [esp + 0x680], ebx
            //   89642434             | mov                 dword ptr [esp + 0x34], esp

    condition:
        7 of them and filesize < 204800
}