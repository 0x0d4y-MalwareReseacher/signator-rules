rule win_albaniiutas_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.albaniiutas."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.albaniiutas"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83a690df021000 59 83c604 81fe00020000 72dd b001 5e }
            // n = 7, score = 100
            //   83a690df021000       | and                 dword ptr [esi + 0x1002df90], 0
            //   59                   | pop                 ecx
            //   83c604               | add                 esi, 4
            //   81fe00020000         | cmp                 esi, 0x200
            //   72dd                 | jb                  0xffffffdf
            //   b001                 | mov                 al, 1
            //   5e                   | pop                 esi

        $sequence_1 = { 8844192e 8b049590df0210 804c182d04 ff4604 }
            // n = 4, score = 100
            //   8844192e             | mov                 byte ptr [ecx + ebx + 0x2e], al
            //   8b049590df0210       | mov                 eax, dword ptr [edx*4 + 0x1002df90]
            //   804c182d04           | or                  byte ptr [eax + ebx + 0x2d], 4
            //   ff4604               | inc                 dword ptr [esi + 4]

        $sequence_2 = { 0f87170b0000 8d7958 897dcc 8d795c 897dc0 8b7df0 ff248598410010 }
            // n = 7, score = 100
            //   0f87170b0000         | ja                  0xb1d
            //   8d7958               | lea                 edi, dword ptr [ecx + 0x58]
            //   897dcc               | mov                 dword ptr [ebp - 0x34], edi
            //   8d795c               | lea                 edi, dword ptr [ecx + 0x5c]
            //   897dc0               | mov                 dword ptr [ebp - 0x40], edi
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   ff248598410010       | jmp                 dword ptr [eax*4 + 0x10004198]

        $sequence_3 = { 83c704 3b5e18 72da 5f }
            // n = 4, score = 100
            //   83c704               | add                 edi, 4
            //   3b5e18               | cmp                 ebx, dword ptr [esi + 0x18]
            //   72da                 | jb                  0xffffffdc
            //   5f                   | pop                 edi

        $sequence_4 = { 83e03f 6bc830 8b049590df0210 f644082801 740b 56 e8???????? }
            // n = 7, score = 100
            //   83e03f               | and                 eax, 0x3f
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b049590df0210       | mov                 eax, dword ptr [edx*4 + 0x1002df90]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   740b                 | je                  0xd
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_5 = { 8bec 8b4d08 33c0 3b0cc558470110 7427 40 }
            // n = 6, score = 100
            //   8bec                 | mov                 ebp, esp
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   33c0                 | xor                 eax, eax
            //   3b0cc558470110       | cmp                 ecx, dword ptr [eax*8 + 0x10014758]
            //   7427                 | je                  0x29
            //   40                   | inc                 eax

        $sequence_6 = { 7416 8b4508 c74018701c0110 c74104513f0000 e9???????? 3b4134 }
            // n = 6, score = 100
            //   7416                 | je                  0x18
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   c74018701c0110       | mov                 dword ptr [eax + 0x18], 0x10011c70
            //   c74104513f0000       | mov                 dword ptr [ecx + 4], 0x3f51
            //   e9????????           |                     
            //   3b4134               | cmp                 eax, dword ptr [ecx + 0x34]

        $sequence_7 = { c1e910 81e1ff000000 c1e808 25ff000000 8b1c8dc0200110 331c85c0240110 }
            // n = 6, score = 100
            //   c1e910               | shr                 ecx, 0x10
            //   81e1ff000000         | and                 ecx, 0xff
            //   c1e808               | shr                 eax, 8
            //   25ff000000           | and                 eax, 0xff
            //   8b1c8dc0200110       | mov                 ebx, dword ptr [ecx*4 + 0x100120c0]
            //   331c85c0240110       | xor                 ebx, dword ptr [eax*4 + 0x100124c0]

        $sequence_8 = { 8b4508 48 83f804 0f8787000000 ff24851c1b0010 6a01 }
            // n = 6, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   48                   | dec                 eax
            //   83f804               | cmp                 eax, 4
            //   0f8787000000         | ja                  0x8d
            //   ff24851c1b0010       | jmp                 dword ptr [eax*4 + 0x10001b1c]
            //   6a01                 | push                1

        $sequence_9 = { 68???????? ffd6 68???????? 8d45d0 c745d000000000 50 e8???????? }
            // n = 7, score = 100
            //   68????????           |                     
            //   ffd6                 | call                esi
            //   68????????           |                     
            //   8d45d0               | lea                 eax, dword ptr [ebp - 0x30]
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 566272
}