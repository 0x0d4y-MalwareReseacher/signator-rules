rule win_lowzero_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.lowzero."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lowzero"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 59 895dfc 391cfd20194100 7518 53 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   391cfd20194100       | cmp                 dword ptr [edi*8 + 0x411920], ebx
            //   7518                 | jne                 0x1a
            //   53                   | push                ebx

        $sequence_1 = { 777a 8b401c 8d0488 8b0410 03c2 8945fc 7472 }
            // n = 7, score = 100
            //   777a                 | ja                  0x7c
            //   8b401c               | mov                 eax, dword ptr [eax + 0x1c]
            //   8d0488               | lea                 eax, [eax + ecx*4]
            //   8b0410               | mov                 eax, dword ptr [eax + edx]
            //   03c2                 | add                 eax, edx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   7472                 | je                  0x74

        $sequence_2 = { c74720c0194000 c74724e0194000 c74728f0194000 c7472c101a4000 }
            // n = 4, score = 100
            //   c74720c0194000       | mov                 dword ptr [edi + 0x20], 0x4019c0
            //   c74724e0194000       | mov                 dword ptr [edi + 0x24], 0x4019e0
            //   c74728f0194000       | mov                 dword ptr [edi + 0x28], 0x4019f0
            //   c7472c101a4000       | mov                 dword ptr [edi + 0x2c], 0x401a10

        $sequence_3 = { 7234 8bc8 81e10f000080 7905 }
            // n = 4, score = 100
            //   7234                 | jb                  0x36
            //   8bc8                 | mov                 ecx, eax
            //   81e10f000080         | and                 ecx, 0x8000000f
            //   7905                 | jns                 7

        $sequence_4 = { 8bd9 8955f4 33f6 895dfc 83fa40 7310 6a0d }
            // n = 7, score = 100
            //   8bd9                 | mov                 ebx, ecx
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   33f6                 | xor                 esi, esi
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   83fa40               | cmp                 edx, 0x40
            //   7310                 | jae                 0x12
            //   6a0d                 | push                0xd

        $sequence_5 = { 00e6 0401 00f4 0401 0002 }
            // n = 5, score = 100
            //   00e6                 | add                 dh, ah
            //   0401                 | add                 al, 1
            //   00f4                 | add                 ah, dh
            //   0401                 | add                 al, 1
            //   0002                 | add                 byte ptr [edx], al

        $sequence_6 = { 83e61f c1e606 033485601b4300 8975dc }
            // n = 4, score = 100
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   033485601b4300       | add                 esi, dword ptr [eax*4 + 0x431b60]
            //   8975dc               | mov                 dword ptr [ebp - 0x24], esi

        $sequence_7 = { 8955f4 33f6 895dfc 83fa40 7310 }
            // n = 5, score = 100
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   33f6                 | xor                 esi, esi
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   83fa40               | cmp                 edx, 0x40
            //   7310                 | jae                 0x12

        $sequence_8 = { 53 ffd6 8b4dfc 8bf0 8b45f8 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   ffd6                 | call                esi
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8bf0                 | mov                 esi, eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_9 = { 0100 92 0101 00a4010100ba01 0100 c8010100 d401 }
            // n = 7, score = 100
            //   0100                 | add                 dword ptr [eax], eax
            //   92                   | xchg                eax, edx
            //   0101                 | add                 dword ptr [ecx], eax
            //   00a4010100ba01       | add                 byte ptr [ecx + eax + 0x1ba0001], ah
            //   0100                 | add                 dword ptr [eax], eax
            //   c8010100             | enter               0x101, 0
            //   d401                 | aam                 1

    condition:
        7 of them and filesize < 433152
}