rule win_dispenserxfs_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.dispenserxfs."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dispenserxfs"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c785f4fdffff55534420 c685f8fdffff43 89b5f9fdffff 89b5fdfdffff 89b501feffff 89b505feffff }
            // n = 6, score = 200
            //   c785f4fdffff55534420     | mov    dword ptr [ebp - 0x20c], 0x20445355
            //   c685f8fdffff43       | mov                 byte ptr [ebp - 0x208], 0x43
            //   89b5f9fdffff         | mov                 dword ptr [ebp - 0x207], esi
            //   89b5fdfdffff         | mov                 dword ptr [ebp - 0x203], esi
            //   89b501feffff         | mov                 dword ptr [ebp - 0x1ff], esi
            //   89b505feffff         | mov                 dword ptr [ebp - 0x1fb], esi

        $sequence_1 = { 6685c9 0f84c9000000 8b5004 85d2 0f84be000000 8bc1 }
            // n = 6, score = 200
            //   6685c9               | test                cx, cx
            //   0f84c9000000         | je                  0xcf
            //   8b5004               | mov                 edx, dword ptr [eax + 4]
            //   85d2                 | test                edx, edx
            //   0f84be000000         | je                  0xc4
            //   8bc1                 | mov                 eax, ecx

        $sequence_2 = { ff15???????? ff35???????? ff15???????? 57 57 57 68???????? }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   57                   | push                edi
            //   57                   | push                edi
            //   57                   | push                edi
            //   68????????           |                     

        $sequence_3 = { 50 ff15???????? 83c410 8d8d00f0ffff e8???????? 8be5 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   8d8d00f0ffff         | lea                 ecx, [ebp - 0x1000]
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp

        $sequence_4 = { 50 ff15???????? 8d95f8feffff 83c420 }
            // n = 4, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d95f8feffff         | lea                 edx, [ebp - 0x108]
            //   83c420               | add                 esp, 0x20

        $sequence_5 = { 8b45f0 8945dc 837ddc00 0f84b0000000 8b4ddc }
            // n = 5, score = 200
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   837ddc00             | cmp                 dword ptr [ebp - 0x24], 0
            //   0f84b0000000         | je                  0xb6
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]

        $sequence_6 = { c6852cffffff65 c6852dffffff6c c6852effffff33 c6852fffffff32 }
            // n = 4, score = 200
            //   c6852cffffff65       | mov                 byte ptr [ebp - 0xd4], 0x65
            //   c6852dffffff6c       | mov                 byte ptr [ebp - 0xd3], 0x6c
            //   c6852effffff33       | mov                 byte ptr [ebp - 0xd2], 0x33
            //   c6852fffffff32       | mov                 byte ptr [ebp - 0xd1], 0x32

        $sequence_7 = { 50 ff15???????? 8d95f8feffff 83c420 8bf2 8a02 42 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d95f8feffff         | lea                 edx, [ebp - 0x108]
            //   83c420               | add                 esp, 0x20
            //   8bf2                 | mov                 esi, edx
            //   8a02                 | mov                 al, byte ptr [edx]
            //   42                   | inc                 edx

        $sequence_8 = { c68542ffffff68 c68543ffffff65 c68544ffffff6c c68545ffffff70 c68546ffffff33 }
            // n = 5, score = 200
            //   c68542ffffff68       | mov                 byte ptr [ebp - 0xbe], 0x68
            //   c68543ffffff65       | mov                 byte ptr [ebp - 0xbd], 0x65
            //   c68544ffffff6c       | mov                 byte ptr [ebp - 0xbc], 0x6c
            //   c68545ffffff70       | mov                 byte ptr [ebp - 0xbb], 0x70
            //   c68546ffffff33       | mov                 byte ptr [ebp - 0xba], 0x33

        $sequence_9 = { 52 ff55ac 8b45f4 50 ff5598 c745c41c000000 8d4dc4 }
            // n = 7, score = 200
            //   52                   | push                edx
            //   ff55ac               | call                dword ptr [ebp - 0x54]
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   ff5598               | call                dword ptr [ebp - 0x68]
            //   c745c41c000000       | mov                 dword ptr [ebp - 0x3c], 0x1c
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]

    condition:
        7 of them and filesize < 114688
}