rule win_tandfuy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.tandfuy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tandfuy"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b9000a0000 50 50 6a03 50 }
            // n = 5, score = 100
            //   b9000a0000           | mov                 ecx, 0xa00
            //   50                   | push                eax
            //   50                   | push                eax
            //   6a03                 | push                3
            //   50                   | push                eax

        $sequence_1 = { ff15???????? 8dbdbcf4ffff 8d95d8f5ffff 83c9ff }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   8dbdbcf4ffff         | lea                 edi, [ebp - 0xb44]
            //   8d95d8f5ffff         | lea                 edx, [ebp - 0xa28]
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_2 = { e8???????? 83c404 85c0 0f8440010000 b93e000000 33c0 8dbdd8f9ffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   0f8440010000         | je                  0x146
            //   b93e000000           | mov                 ecx, 0x3e
            //   33c0                 | xor                 eax, eax
            //   8dbdd8f9ffff         | lea                 edi, [ebp - 0x628]

        $sequence_3 = { 8bcb 8d842450010000 83e103 50 f3a4 8d8c24cc020000 }
            // n = 6, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   8d842450010000       | lea                 eax, [esp + 0x150]
            //   83e103               | and                 ecx, 3
            //   50                   | push                eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8d8c24cc020000       | lea                 ecx, [esp + 0x2cc]

        $sequence_4 = { a3???????? e8???????? 8db65cdb6e00 bf???????? }
            // n = 4, score = 100
            //   a3????????           |                     
            //   e8????????           |                     
            //   8db65cdb6e00         | lea                 esi, [esi + 0x6edb5c]
            //   bf????????           |                     

        $sequence_5 = { 53 6800000002 52 897c2444 8944244c }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   6800000002           | push                0x2000000
            //   52                   | push                edx
            //   897c2444             | mov                 dword ptr [esp + 0x44], edi
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax

        $sequence_6 = { f3ab 8dbc2474020000 83c9ff f2ae f7d1 2bf9 8bc1 }
            // n = 7, score = 100
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8dbc2474020000       | lea                 edi, [esp + 0x274]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   8bc1                 | mov                 eax, ecx

        $sequence_7 = { 4f c1e902 f3a5 8bcb 8d842450010000 83e103 }
            // n = 6, score = 100
            //   4f                   | dec                 edi
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bcb                 | mov                 ecx, ebx
            //   8d842450010000       | lea                 eax, [esp + 0x150]
            //   83e103               | and                 ecx, 3

        $sequence_8 = { ffd3 6870170000 8b2d???????? ffd5 }
            // n = 4, score = 100
            //   ffd3                 | call                ebx
            //   6870170000           | push                0x1770
            //   8b2d????????         |                     
            //   ffd5                 | call                ebp

        $sequence_9 = { e8???????? 83c408 85c0 7605 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7605                 | jbe                 7

    condition:
        7 of them and filesize < 155648
}