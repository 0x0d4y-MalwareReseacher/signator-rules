rule win_yoddos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.yoddos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yoddos"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c68505feffff65 c68506feffff72 c68507feffff2d c68508feffff6e }
            // n = 4, score = 100
            //   c68505feffff65       | mov                 byte ptr [ebp - 0x1fb], 0x65
            //   c68506feffff72       | mov                 byte ptr [ebp - 0x1fa], 0x72
            //   c68507feffff2d       | mov                 byte ptr [ebp - 0x1f9], 0x2d
            //   c68508feffff6e       | mov                 byte ptr [ebp - 0x1f8], 0x6e

        $sequence_1 = { 55 8bec 81ecb0010000 53 56 57 6888130000 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ecb0010000         | sub                 esp, 0x1b0
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6888130000           | push                0x1388

        $sequence_2 = { c645f95c e8???????? b863000000 90 b89dffffff 90 }
            // n = 6, score = 100
            //   c645f95c             | mov                 byte ptr [ebp - 7], 0x5c
            //   e8????????           |                     
            //   b863000000           | mov                 eax, 0x63
            //   90                   | nop                 
            //   b89dffffff           | mov                 eax, 0xffffff9d
            //   90                   | nop                 

        $sequence_3 = { 50 e8???????? 83c414 8d8554ffffff 53 6a64 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   8d8554ffffff         | lea                 eax, [ebp - 0xac]
            //   53                   | push                ebx
            //   6a64                 | push                0x64
            //   50                   | push                eax

        $sequence_4 = { 8d8544fcffff 57 50 8d8548f5ffff 50 e8???????? 8d8546fcffff }
            // n = 7, score = 100
            //   8d8544fcffff         | lea                 eax, [ebp - 0x3bc]
            //   57                   | push                edi
            //   50                   | push                eax
            //   8d8548f5ffff         | lea                 eax, [ebp - 0xab8]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d8546fcffff         | lea                 eax, [ebp - 0x3ba]

        $sequence_5 = { e8???????? 8d45f8 c645f868 50 8d853cf8ffff 50 c645f974 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   c645f868             | mov                 byte ptr [ebp - 8], 0x68
            //   50                   | push                eax
            //   8d853cf8ffff         | lea                 eax, [ebp - 0x7c4]
            //   50                   | push                eax
            //   c645f974             | mov                 byte ptr [ebp - 7], 0x74

        $sequence_6 = { c645b661 c645b774 c645b863 c645b96b c645ba2e c645bb63 c645bc6f }
            // n = 7, score = 100
            //   c645b661             | mov                 byte ptr [ebp - 0x4a], 0x61
            //   c645b774             | mov                 byte ptr [ebp - 0x49], 0x74
            //   c645b863             | mov                 byte ptr [ebp - 0x48], 0x63
            //   c645b96b             | mov                 byte ptr [ebp - 0x47], 0x6b
            //   c645ba2e             | mov                 byte ptr [ebp - 0x46], 0x2e
            //   c645bb63             | mov                 byte ptr [ebp - 0x45], 0x63
            //   c645bc6f             | mov                 byte ptr [ebp - 0x44], 0x6f

        $sequence_7 = { 83f908 7229 f3a5 ff2495e8c84000 8bc7 ba03000000 }
            // n = 6, score = 100
            //   83f908               | cmp                 ecx, 8
            //   7229                 | jb                  0x2b
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   ff2495e8c84000       | jmp                 dword ptr [edx*4 + 0x40c8e8]
            //   8bc7                 | mov                 eax, edi
            //   ba03000000           | mov                 edx, 3

        $sequence_8 = { c645c233 c645c332 c645c42e c645c564 }
            // n = 4, score = 100
            //   c645c233             | mov                 byte ptr [ebp - 0x3e], 0x33
            //   c645c332             | mov                 byte ptr [ebp - 0x3d], 0x32
            //   c645c42e             | mov                 byte ptr [ebp - 0x3c], 0x2e
            //   c645c564             | mov                 byte ptr [ebp - 0x3b], 0x64

        $sequence_9 = { ab c7459044000000 b863000000 90 b89dffffff 90 c745bc01000000 }
            // n = 7, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   c7459044000000       | mov                 dword ptr [ebp - 0x70], 0x44
            //   b863000000           | mov                 eax, 0x63
            //   90                   | nop                 
            //   b89dffffff           | mov                 eax, 0xffffff9d
            //   90                   | nop                 
            //   c745bc01000000       | mov                 dword ptr [ebp - 0x44], 1

    condition:
        7 of them and filesize < 557056
}