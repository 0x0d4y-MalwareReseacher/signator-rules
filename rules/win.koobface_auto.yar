rule win_koobface_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.koobface."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.koobface"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bc3 741a 8b08 50 ff5108 eb12 68???????? }
            // n = 7, score = 100
            //   3bc3                 | cmp                 eax, ebx
            //   741a                 | je                  0x1c
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   50                   | push                eax
            //   ff5108               | call                dword ptr [ecx + 8]
            //   eb12                 | jmp                 0x14
            //   68????????           |                     

        $sequence_1 = { 33c0 eb1b 8d3400 8bc6 e8???????? 8965f0 8bc4 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   eb1b                 | jmp                 0x1d
            //   8d3400               | lea                 esi, dword ptr [eax + eax]
            //   8bc6                 | mov                 eax, esi
            //   e8????????           |                     
            //   8965f0               | mov                 dword ptr [ebp - 0x10], esp
            //   8bc4                 | mov                 eax, esp

        $sequence_2 = { 0f84ac010000 395de4 0f84a3010000 ff75e8 8bce 68???????? ffb608040000 }
            // n = 7, score = 100
            //   0f84ac010000         | je                  0x1b2
            //   395de4               | cmp                 dword ptr [ebp - 0x1c], ebx
            //   0f84a3010000         | je                  0x1a9
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   8bce                 | mov                 ecx, esi
            //   68????????           |                     
            //   ffb608040000         | push                dword ptr [esi + 0x408]

        $sequence_3 = { c1e006 03048da0534200 eb02 8bc2 f6402480 7417 }
            // n = 6, score = 100
            //   c1e006               | shl                 eax, 6
            //   03048da0534200       | add                 eax, dword ptr [ecx*4 + 0x4253a0]
            //   eb02                 | jmp                 4
            //   8bc2                 | mov                 eax, edx
            //   f6402480             | test                byte ptr [eax + 0x24], 0x80
            //   7417                 | je                  0x19

        $sequence_4 = { e8???????? 8b8dccfdffff 8d850cffffff 50 c745fc28000000 e8???????? 834dfcff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b8dccfdffff         | mov                 ecx, dword ptr [ebp - 0x234]
            //   8d850cffffff         | lea                 eax, dword ptr [ebp - 0xf4]
            //   50                   | push                eax
            //   c745fc28000000       | mov                 dword ptr [ebp - 4], 0x28
            //   e8????????           |                     
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff

        $sequence_5 = { 53 8d45dc 50 68???????? ffb608040000 8bce c645fc06 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   8d45dc               | lea                 eax, dword ptr [ebp - 0x24]
            //   50                   | push                eax
            //   68????????           |                     
            //   ffb608040000         | push                dword ptr [esi + 0x408]
            //   8bce                 | mov                 ecx, esi
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6

        $sequence_6 = { 68???????? 64a100000000 50 b800a90000 e8???????? a1???????? 33c5 }
            // n = 7, score = 100
            //   68????????           |                     
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   50                   | push                eax
            //   b800a90000           | mov                 eax, 0xa900
            //   e8????????           |                     
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp

        $sequence_7 = { 6a28 b8???????? e8???????? 8b7508 8b5d10 8b7d0c 68???????? }
            // n = 7, score = 100
            //   6a28                 | push                0x28
            //   b8????????           |                     
            //   e8????????           |                     
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   68????????           |                     

        $sequence_8 = { ff15???????? 68???????? c6861801000001 e8???????? 8b3d???????? 59 889e70010000 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   68????????           |                     
            //   c6861801000001       | mov                 byte ptr [esi + 0x118], 1
            //   e8????????           |                     
            //   8b3d????????         |                     
            //   59                   | pop                 ecx
            //   889e70010000         | mov                 byte ptr [esi + 0x170], bl

        $sequence_9 = { 50 c745fc18000000 e8???????? 834dfcff 53 57 8d8d0cffffff }
            // n = 7, score = 100
            //   50                   | push                eax
            //   c745fc18000000       | mov                 dword ptr [ebp - 4], 0x18
            //   e8????????           |                     
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff
            //   53                   | push                ebx
            //   57                   | push                edi
            //   8d8d0cffffff         | lea                 ecx, dword ptr [ebp - 0xf4]

    condition:
        7 of them and filesize < 368640
}