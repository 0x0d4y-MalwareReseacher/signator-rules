rule win_petrwrap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.petrwrap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.petrwrap"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 894b04 c7430c00000000 85c9 7e17 8b03 49 }
            // n = 6, score = 100
            //   894b04               | mov                 dword ptr [ebx + 4], ecx
            //   c7430c00000000       | mov                 dword ptr [ebx + 0xc], 0
            //   85c9                 | test                ecx, ecx
            //   7e17                 | jle                 0x19
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   49                   | dec                 ecx

        $sequence_1 = { ff742450 8b4c2448 53 55 8d4118 50 }
            // n = 6, score = 100
            //   ff742450             | push                dword ptr [esp + 0x50]
            //   8b4c2448             | mov                 ecx, dword ptr [esp + 0x48]
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   8d4118               | lea                 eax, [ecx + 0x18]
            //   50                   | push                eax

        $sequence_2 = { 83c004 83f810 7cc4 56 57 e8???????? 68???????? }
            // n = 7, score = 100
            //   83c004               | add                 eax, 4
            //   83f810               | cmp                 eax, 0x10
            //   7cc4                 | jl                  0xffffffc6
            //   56                   | push                esi
            //   57                   | push                edi
            //   e8????????           |                     
            //   68????????           |                     

        $sequence_3 = { bd07000000 2be8 8bc1 8b4c2468 c1e803 89442424 8a0408 }
            // n = 7, score = 100
            //   bd07000000           | mov                 ebp, 7
            //   2be8                 | sub                 ebp, eax
            //   8bc1                 | mov                 eax, ecx
            //   8b4c2468             | mov                 ecx, dword ptr [esp + 0x68]
            //   c1e803               | shr                 eax, 3
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   8a0408               | mov                 al, byte ptr [eax + ecx]

        $sequence_4 = { 68???????? 6a64 eb96 83fb03 75ed 83f807 75e8 }
            // n = 7, score = 100
            //   68????????           |                     
            //   6a64                 | push                0x64
            //   eb96                 | jmp                 0xffffff98
            //   83fb03               | cmp                 ebx, 3
            //   75ed                 | jne                 0xffffffef
            //   83f807               | cmp                 eax, 7
            //   75e8                 | jne                 0xffffffea

        $sequence_5 = { 5b 83c414 c3 8b03 8b8880000000 8b8084000000 894c2410 }
            // n = 7, score = 100
            //   5b                   | pop                 ebx
            //   83c414               | add                 esp, 0x14
            //   c3                   | ret                 
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8b8880000000         | mov                 ecx, dword ptr [eax + 0x80]
            //   8b8084000000         | mov                 eax, dword ptr [eax + 0x84]
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx

        $sequence_6 = { 8d4500 50 ff75e4 ff55c4 85c0 744a }
            // n = 6, score = 100
            //   8d4500               | lea                 eax, [ebp]
            //   50                   | push                eax
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   ff55c4               | call                dword ptr [ebp - 0x3c]
            //   85c0                 | test                eax, eax
            //   744a                 | je                  0x4c

        $sequence_7 = { 7409 53 57 6a03 ffd0 83c40c 837c241c00 }
            // n = 7, score = 100
            //   7409                 | je                  0xb
            //   53                   | push                ebx
            //   57                   | push                edi
            //   6a03                 | push                3
            //   ffd0                 | call                eax
            //   83c40c               | add                 esp, 0xc
            //   837c241c00           | cmp                 dword ptr [esp + 0x1c], 0

        $sequence_8 = { 8b742408 8b06 85c0 743f 8b4020 85c0 740c }
            // n = 7, score = 100
            //   8b742408             | mov                 esi, dword ptr [esp + 8]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   85c0                 | test                eax, eax
            //   743f                 | je                  0x41
            //   8b4020               | mov                 eax, dword ptr [eax + 0x20]
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe

        $sequence_9 = { e8???????? 83c410 85c0 0f84c6020000 8b442428 83c020 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   0f84c6020000         | je                  0x2cc
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]
            //   83c020               | add                 eax, 0x20
            //   50                   | push                eax

    condition:
        7 of them and filesize < 1024000
}