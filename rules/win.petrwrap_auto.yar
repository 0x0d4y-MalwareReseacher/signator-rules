rule win_petrwrap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.petrwrap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.petrwrap"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 8b7508 833cf5c0bc460000 7513 56 e8???????? 59 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   833cf5c0bc460000     | cmp                 dword ptr [esi*8 + 0x46bcc0], 0
            //   7513                 | jne                 0x15
            //   56                   | push                esi
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_1 = { c3 8b442418 53 8b5c2414 56 8b742414 57 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   53                   | push                ebx
            //   8b5c2414             | mov                 ebx, dword ptr [esp + 0x14]
            //   56                   | push                esi
            //   8b742414             | mov                 esi, dword ptr [esp + 0x14]
            //   57                   | push                edi

        $sequence_2 = { 0facc81c 0bd0 8b442428 c1e91c c1e504 0be9 89542424 }
            // n = 7, score = 100
            //   0facc81c             | shrd                eax, ecx, 0x1c
            //   0bd0                 | or                  edx, eax
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]
            //   c1e91c               | shr                 ecx, 0x1c
            //   c1e504               | shl                 ebp, 4
            //   0be9                 | or                  ebp, ecx
            //   89542424             | mov                 dword ptr [esp + 0x24], edx

        $sequence_3 = { 894204 8b44242c c1e810 25ff000000 8b0c85d0244400 8bc3 c1e808 }
            // n = 7, score = 100
            //   894204               | mov                 dword ptr [edx + 4], eax
            //   8b44242c             | mov                 eax, dword ptr [esp + 0x2c]
            //   c1e810               | shr                 eax, 0x10
            //   25ff000000           | and                 eax, 0xff
            //   8b0c85d0244400       | mov                 ecx, dword ptr [eax*4 + 0x4424d0]
            //   8bc3                 | mov                 eax, ebx
            //   c1e808               | shr                 eax, 8

        $sequence_4 = { 53 89442434 e8???????? 83c40c 85c0 0f84ff020000 8b5304 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   89442434             | mov                 dword ptr [esp + 0x34], eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f84ff020000         | je                  0x305
            //   8b5304               | mov                 edx, dword ptr [ebx + 4]

        $sequence_5 = { c1e206 03148580db4600 eb05 ba???????? f6422480 7415 e8???????? }
            // n = 7, score = 100
            //   c1e206               | shl                 edx, 6
            //   03148580db4600       | add                 edx, dword ptr [eax*4 + 0x46db80]
            //   eb05                 | jmp                 7
            //   ba????????           |                     
            //   f6422480             | test                byte ptr [edx + 0x24], 0x80
            //   7415                 | je                  0x17
            //   e8????????           |                     

        $sequence_6 = { 8b4d00 89450c 8b03 894c2424 8d04b0 2bf2 c1fe1f }
            // n = 7, score = 100
            //   8b4d00               | mov                 ecx, dword ptr [ebp]
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   894c2424             | mov                 dword ptr [esp + 0x24], ecx
            //   8d04b0               | lea                 eax, dword ptr [eax + esi*4]
            //   2bf2                 | sub                 esi, edx
            //   c1fe1f               | sar                 esi, 0x1f

        $sequence_7 = { 89442470 53 8b5d0c 56 33f6 57 8b7d08 }
            // n = 7, score = 100
            //   89442470             | mov                 dword ptr [esp + 0x70], eax
            //   53                   | push                ebx
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   56                   | push                esi
            //   33f6                 | xor                 esi, esi
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

        $sequence_8 = { 33c8 8b442414 0fb6c0 c1e108 0fb680d0384400 33c8 }
            // n = 6, score = 100
            //   33c8                 | xor                 ecx, eax
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   0fb6c0               | movzx               eax, al
            //   c1e108               | shl                 ecx, 8
            //   0fb680d0384400       | movzx               eax, byte ptr [eax + 0x4438d0]
            //   33c8                 | xor                 ecx, eax

        $sequence_9 = { 8b44241c 03cf 13c2 03cd 13c3 8944241c 8b442458 }
            // n = 7, score = 100
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   03cf                 | add                 ecx, edi
            //   13c2                 | adc                 eax, edx
            //   03cd                 | add                 ecx, ebp
            //   13c3                 | adc                 eax, ebx
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   8b442458             | mov                 eax, dword ptr [esp + 0x58]

    condition:
        7 of them and filesize < 1024000
}