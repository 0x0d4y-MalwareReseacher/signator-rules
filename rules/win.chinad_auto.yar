rule win_chinad_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.chinad."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chinad"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 13f8 039dacfdffff 8b8504fdffff 8bf0 13bdb0fdffff }
            // n = 5, score = 200
            //   13f8                 | adc                 edi, eax
            //   039dacfdffff         | add                 ebx, dword ptr [ebp - 0x254]
            //   8b8504fdffff         | mov                 eax, dword ptr [ebp - 0x2fc]
            //   8bf0                 | mov                 esi, eax
            //   13bdb0fdffff         | adc                 edi, dword ptr [ebp - 0x250]

        $sequence_1 = { 8b049588ec4300 ff3418 ff15???????? 85c0 750e ff15???????? 85c0 }
            // n = 7, score = 200
            //   8b049588ec4300       | mov                 eax, dword ptr [edx*4 + 0x43ec88]
            //   ff3418               | push                dword ptr [eax + ebx]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   750e                 | jne                 0x10
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_2 = { 8b8508fdffff 8bf0 8b8d2cfdffff 0facc81c c1e604 0bd0 c1e91c }
            // n = 7, score = 200
            //   8b8508fdffff         | mov                 eax, dword ptr [ebp - 0x2f8]
            //   8bf0                 | mov                 esi, eax
            //   8b8d2cfdffff         | mov                 ecx, dword ptr [ebp - 0x2d4]
            //   0facc81c             | shrd                eax, ecx, 0x1c
            //   c1e604               | shl                 esi, 4
            //   0bd0                 | or                  edx, eax
            //   c1e91c               | shr                 ecx, 0x1c

        $sequence_3 = { 8bf0 13bd68fdffff 039df4fcffff 13bd04fdffff }
            // n = 4, score = 200
            //   8bf0                 | mov                 esi, eax
            //   13bd68fdffff         | adc                 edi, dword ptr [ebp - 0x298]
            //   039df4fcffff         | add                 ebx, dword ptr [ebp - 0x30c]
            //   13bd04fdffff         | adc                 edi, dword ptr [ebp - 0x2fc]

        $sequence_4 = { 0bf1 338520fdffff 33fe 8b8d08fdffff 33da 338d18fdffff 238d04fdffff }
            // n = 7, score = 200
            //   0bf1                 | or                  esi, ecx
            //   338520fdffff         | xor                 eax, dword ptr [ebp - 0x2e0]
            //   33fe                 | xor                 edi, esi
            //   8b8d08fdffff         | mov                 ecx, dword ptr [ebp - 0x2f8]
            //   33da                 | xor                 ebx, edx
            //   338d18fdffff         | xor                 ecx, dword ptr [ebp - 0x2e8]
            //   238d04fdffff         | and                 ecx, dword ptr [ebp - 0x2fc]

        $sequence_5 = { 898538ffffff 8b8d30ffffff 898d40ffffff 8b9540ffffff 899538feffff 8b8538ffffff 8a08 }
            // n = 7, score = 200
            //   898538ffffff         | mov                 dword ptr [ebp - 0xc8], eax
            //   8b8d30ffffff         | mov                 ecx, dword ptr [ebp - 0xd0]
            //   898d40ffffff         | mov                 dword ptr [ebp - 0xc0], ecx
            //   8b9540ffffff         | mov                 edx, dword ptr [ebp - 0xc0]
            //   899538feffff         | mov                 dword ptr [ebp - 0x1c8], edx
            //   8b8538ffffff         | mov                 eax, dword ptr [ebp - 0xc8]
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_6 = { 8b4d10 c1ea18 41 8850f2 894d10 3bcf 729f }
            // n = 7, score = 200
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   c1ea18               | shr                 edx, 0x18
            //   41                   | inc                 ecx
            //   8850f2               | mov                 byte ptr [eax - 0xe], dl
            //   894d10               | mov                 dword ptr [ebp + 0x10], ecx
            //   3bcf                 | cmp                 ecx, edi
            //   729f                 | jb                  0xffffffa1

        $sequence_7 = { 837d0c18 7704 33c0 eb6a 8b4508 }
            // n = 5, score = 200
            //   837d0c18             | cmp                 dword ptr [ebp + 0xc], 0x18
            //   7704                 | ja                  6
            //   33c0                 | xor                 eax, eax
            //   eb6a                 | jmp                 0x6c
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_8 = { c1e000 8b4dfc 833c0100 743a ba04000000 d1e2 }
            // n = 6, score = 200
            //   c1e000               | shl                 eax, 0
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   833c0100             | cmp                 dword ptr [ecx + eax], 0
            //   743a                 | je                  0x3c
            //   ba04000000           | mov                 edx, 4
            //   d1e2                 | shl                 edx, 1

        $sequence_9 = { 018dd8feffff 8bcf c1c007 8b9dd8feffff c1c90b 33c8 8bc7 }
            // n = 7, score = 200
            //   018dd8feffff         | add                 dword ptr [ebp - 0x128], ecx
            //   8bcf                 | mov                 ecx, edi
            //   c1c007               | rol                 eax, 7
            //   8b9dd8feffff         | mov                 ebx, dword ptr [ebp - 0x128]
            //   c1c90b               | ror                 ecx, 0xb
            //   33c8                 | xor                 ecx, eax
            //   8bc7                 | mov                 eax, edi

    condition:
        7 of them and filesize < 598016
}