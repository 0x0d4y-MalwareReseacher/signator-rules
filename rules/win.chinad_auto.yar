rule win_chinad_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.chinad."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chinad"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf1 0b75cc 0bd0 2395fcfcffff 23b50cfdffff 898504fdffff 8b8510fdffff }
            // n = 7, score = 200
            //   8bf1                 | mov                 esi, ecx
            //   0b75cc               | or                  esi, dword ptr [ebp - 0x34]
            //   0bd0                 | or                  edx, eax
            //   2395fcfcffff         | and                 edx, dword ptr [ebp - 0x304]
            //   23b50cfdffff         | and                 esi, dword ptr [ebp - 0x2f4]
            //   898504fdffff         | mov                 dword ptr [ebp - 0x2fc], eax
            //   8b8510fdffff         | mov                 eax, dword ptr [ebp - 0x2f0]

        $sequence_1 = { 8b8534fdffff 898d24fdffff 33ff 8b8d10fdffff 33d2 8bd9 0fa4c117 }
            // n = 7, score = 200
            //   8b8534fdffff         | mov                 eax, dword ptr [ebp - 0x2cc]
            //   898d24fdffff         | mov                 dword ptr [ebp - 0x2dc], ecx
            //   33ff                 | xor                 edi, edi
            //   8b8d10fdffff         | mov                 ecx, dword ptr [ebp - 0x2f0]
            //   33d2                 | xor                 edx, edx
            //   8bd9                 | mov                 ebx, ecx
            //   0fa4c117             | shld                ecx, eax, 0x17

        $sequence_2 = { 03f8 ff75bc 13f2 ffb570ffffff ffb578ffffff e8???????? ff75b0 }
            // n = 7, score = 200
            //   03f8                 | add                 edi, eax
            //   ff75bc               | push                dword ptr [ebp - 0x44]
            //   13f2                 | adc                 esi, edx
            //   ffb570ffffff         | push                dword ptr [ebp - 0x90]
            //   ffb578ffffff         | push                dword ptr [ebp - 0x88]
            //   e8????????           |                     
            //   ff75b0               | push                dword ptr [ebp - 0x50]

        $sequence_3 = { 039ddcfdffff 8b8518fdffff 8bf0 13bde0fdffff 039d08fdffff 13bd2cfdffff 81c375022b59 }
            // n = 7, score = 200
            //   039ddcfdffff         | add                 ebx, dword ptr [ebp - 0x224]
            //   8b8518fdffff         | mov                 eax, dword ptr [ebp - 0x2e8]
            //   8bf0                 | mov                 esi, eax
            //   13bde0fdffff         | adc                 edi, dword ptr [ebp - 0x220]
            //   039d08fdffff         | add                 ebx, dword ptr [ebp - 0x2f8]
            //   13bd2cfdffff         | adc                 edi, dword ptr [ebp - 0x2d4]
            //   81c375022b59         | add                 ebx, 0x592b0275

        $sequence_4 = { 8b7d0c 50 8b45f8 83c028 03c2 57 }
            // n = 6, score = 200
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c028               | add                 eax, 0x28
            //   03c2                 | add                 eax, edx
            //   57                   | push                edi

        $sequence_5 = { 03c6 8b8d38fdffff 13ca 03c3 898514fdffff 13cf 8b8508fdffff }
            // n = 7, score = 200
            //   03c6                 | add                 eax, esi
            //   8b8d38fdffff         | mov                 ecx, dword ptr [ebp - 0x2c8]
            //   13ca                 | adc                 ecx, edx
            //   03c3                 | add                 eax, ebx
            //   898514fdffff         | mov                 dword ptr [ebp - 0x2ec], eax
            //   13cf                 | adc                 ecx, edi
            //   8b8508fdffff         | mov                 eax, dword ptr [ebp - 0x2f8]

        $sequence_6 = { ba04000000 6bc203 8b4dfc 8b1401 52 e8???????? 83c404 }
            // n = 7, score = 200
            //   ba04000000           | mov                 edx, 4
            //   6bc203               | imul                eax, edx, 3
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b1401               | mov                 edx, dword ptr [ecx + eax]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_7 = { 8b8d0cfdffff 338d14fdffff 238d1cfdffff 338d0cfdffff 03d9 8b8d28fdffff 13f8 }
            // n = 7, score = 200
            //   8b8d0cfdffff         | mov                 ecx, dword ptr [ebp - 0x2f4]
            //   338d14fdffff         | xor                 ecx, dword ptr [ebp - 0x2ec]
            //   238d1cfdffff         | and                 ecx, dword ptr [ebp - 0x2e4]
            //   338d0cfdffff         | xor                 ecx, dword ptr [ebp - 0x2f4]
            //   03d9                 | add                 ebx, ecx
            //   8b8d28fdffff         | mov                 ecx, dword ptr [ebp - 0x2d8]
            //   13f8                 | adc                 edi, eax

        $sequence_8 = { 8d4250 03c7 50 e8???????? 83c40c 33c0 5f }
            // n = 7, score = 200
            //   8d4250               | lea                 eax, dword ptr [edx + 0x50]
            //   03c7                 | add                 eax, edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi

        $sequence_9 = { 8b45c4 3a5001 7517 8345cc02 8345c402 807df600 75cc }
            // n = 7, score = 200
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   3a5001               | cmp                 dl, byte ptr [eax + 1]
            //   7517                 | jne                 0x19
            //   8345cc02             | add                 dword ptr [ebp - 0x34], 2
            //   8345c402             | add                 dword ptr [ebp - 0x3c], 2
            //   807df600             | cmp                 byte ptr [ebp - 0xa], 0
            //   75cc                 | jne                 0xffffffce

    condition:
        7 of them and filesize < 598016
}