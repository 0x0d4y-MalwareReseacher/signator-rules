rule win_ghole_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.ghole."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ghole"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8910 48 8b05???????? 48 8d152cc40100 48 895008 }
            // n = 7, score = 100
            //   8910                 | mov                 dword ptr [eax], edx
            //   48                   | dec                 eax
            //   8b05????????         |                     
            //   48                   | dec                 eax
            //   8d152cc40100         | lea                 edx, dword ptr [0x1c42c]
            //   48                   | dec                 eax
            //   895008               | mov                 dword ptr [eax + 8], edx

        $sequence_1 = { e8???????? 48 8b45e0 c780b801000004000000 48 8d55d4 48 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   48                   | dec                 eax
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   c780b801000004000000     | mov    dword ptr [eax + 0x1b8], 4
            //   48                   | dec                 eax
            //   8d55d4               | lea                 edx, dword ptr [ebp - 0x2c]
            //   48                   | dec                 eax

        $sequence_2 = { 8945e4 8b45d4 83e002 85c0 7407 814de400000040 8b45d4 }
            // n = 7, score = 100
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8b45d4               | mov                 eax, dword ptr [ebp - 0x2c]
            //   83e002               | and                 eax, 2
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   814de400000040       | or                  dword ptr [ebp - 0x1c], 0x40000000
            //   8b45d4               | mov                 eax, dword ptr [ebp - 0x2c]

        $sequence_3 = { 0385c8fbffff 0fb600 2245e7 84c0 750b d06de7 807de700 }
            // n = 7, score = 100
            //   0385c8fbffff         | add                 eax, dword ptr [ebp - 0x438]
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   2245e7               | and                 al, byte ptr [ebp - 0x19]
            //   84c0                 | test                al, al
            //   750b                 | jne                 0xd
            //   d06de7               | shr                 byte ptr [ebp - 0x19], 1
            //   807de700             | cmp                 byte ptr [ebp - 0x19], 0

        $sequence_4 = { 01d0 48 8b00 48 83f803 74b7 48 }
            // n = 7, score = 100
            //   01d0                 | add                 eax, edx
            //   48                   | dec                 eax
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   48                   | dec                 eax
            //   83f803               | cmp                 eax, 3
            //   74b7                 | je                  0xffffffb9
            //   48                   | dec                 eax

        $sequence_5 = { c6040200 48 8d8570feffff 48 83c014 48 89c7 }
            // n = 7, score = 100
            //   c6040200             | mov                 byte ptr [edx + eax], 0
            //   48                   | dec                 eax
            //   8d8570feffff         | lea                 eax, dword ptr [ebp - 0x190]
            //   48                   | dec                 eax
            //   83c014               | add                 eax, 0x14
            //   48                   | dec                 eax
            //   89c7                 | mov                 edi, eax

        $sequence_6 = { 89c7 e8???????? 83f802 740a b8ffffffff e9???????? 48 }
            // n = 7, score = 100
            //   89c7                 | mov                 edi, eax
            //   e8????????           |                     
            //   83f802               | cmp                 eax, 2
            //   740a                 | je                  0xc
            //   b8ffffffff           | mov                 eax, 0xffffffff
            //   e9????????           |                     
            //   48                   | dec                 eax

        $sequence_7 = { 48 85c0 7429 48 8b45f8 48 8b4038 }
            // n = 7, score = 100
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax
            //   7429                 | je                  0x2b
            //   48                   | dec                 eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   48                   | dec                 eax
            //   8b4038               | mov                 eax, dword ptr [eax + 0x38]

        $sequence_8 = { 8b45e0 48 89c7 e8???????? 8b45ec eb25 8b55ec }
            // n = 7, score = 100
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   48                   | dec                 eax
            //   89c7                 | mov                 edi, eax
            //   e8????????           |                     
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   eb25                 | jmp                 0x27
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]

        $sequence_9 = { 48 89c7 e8???????? e9???????? 48 8d950cfdffff 48 }
            // n = 7, score = 100
            //   48                   | dec                 eax
            //   89c7                 | mov                 edi, eax
            //   e8????????           |                     
            //   e9????????           |                     
            //   48                   | dec                 eax
            //   8d950cfdffff         | lea                 edx, dword ptr [ebp - 0x2f4]
            //   48                   | dec                 eax

    condition:
        7 of them and filesize < 622592
}