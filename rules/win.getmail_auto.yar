rule win_getmail_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.getmail."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.getmail"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 49 51 68???????? eb15 bf???????? 83c9ff 33c0 }
            // n = 7, score = 100
            //   49                   | dec                 ecx
            //   51                   | push                ecx
            //   68????????           |                     
            //   eb15                 | jmp                 0x17
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 56 8b4304 85c0 7409 50 e8???????? 83c404 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_2 = { 50 885c241f c78424c400000008000000 c78424c80000001e001a00 89b424cc000000 c78424d00000001e001f0c c78424d40000000b001f0e }
            // n = 7, score = 100
            //   50                   | push                eax
            //   885c241f             | mov                 byte ptr [esp + 0x1f], bl
            //   c78424c400000008000000     | mov    dword ptr [esp + 0xc4], 8
            //   c78424c80000001e001a00     | mov    dword ptr [esp + 0xc8], 0x1a001e
            //   89b424cc000000       | mov                 dword ptr [esp + 0xcc], esi
            //   c78424d00000001e001f0c     | mov    dword ptr [esp + 0xd0], 0xc1f001e
            //   c78424d40000000b001f0e     | mov    dword ptr [esp + 0xd4], 0xe1f000b

        $sequence_3 = { e8???????? 83c404 8b4c245c 897c2448 897c244c 897c2450 3bcf }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4c245c             | mov                 ecx, dword ptr [esp + 0x5c]
            //   897c2448             | mov                 dword ptr [esp + 0x48], edi
            //   897c244c             | mov                 dword ptr [esp + 0x4c], edi
            //   897c2450             | mov                 dword ptr [esp + 0x50], edi
            //   3bcf                 | cmp                 ecx, edi

        $sequence_4 = { 33c0 896c2414 89442418 8b4c2440 8d7c2430 57 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   896c2414             | mov                 dword ptr [esp + 0x14], ebp
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   8b4c2440             | mov                 ecx, dword ptr [esp + 0x40]
            //   8d7c2430             | lea                 edi, [esp + 0x30]
            //   57                   | push                edi

        $sequence_5 = { 897c2420 897c2424 897c2428 8b10 c684243402000009 52 }
            // n = 6, score = 100
            //   897c2420             | mov                 dword ptr [esp + 0x20], edi
            //   897c2424             | mov                 dword ptr [esp + 0x24], edi
            //   897c2428             | mov                 dword ptr [esp + 0x28], edi
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   c684243402000009     | mov                 byte ptr [esp + 0x234], 9
            //   52                   | push                edx

        $sequence_6 = { 68???????? e8???????? 8b4c2428 83c404 64890d00000000 5f 5e }
            // n = 7, score = 100
            //   68????????           |                     
            //   e8????????           |                     
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   83c404               | add                 esp, 4
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_7 = { ff15???????? 68???????? 8bf0 ff15???????? 3bf3 0f85af020000 }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   68????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   ff15????????         |                     
            //   3bf3                 | cmp                 esi, ebx
            //   0f85af020000         | jne                 0x2b5

        $sequence_8 = { 53 56 8b74242c 8a06 897d04 884500 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b74242c             | mov                 esi, dword ptr [esp + 0x2c]
            //   8a06                 | mov                 al, byte ptr [esi]
            //   897d04               | mov                 dword ptr [ebp + 4], edi
            //   884500               | mov                 byte ptr [ebp], al

        $sequence_9 = { 8d54246c 51 52 c78424ec01000000000000 e8???????? 83c420 }
            // n = 6, score = 100
            //   8d54246c             | lea                 edx, [esp + 0x6c]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   c78424ec01000000000000     | mov    dword ptr [esp + 0x1ec], 0
            //   e8????????           |                     
            //   83c420               | add                 esp, 0x20

    condition:
        7 of them and filesize < 188416
}