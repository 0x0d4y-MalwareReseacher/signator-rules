rule win_lowball_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.lowball."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lowball"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 881c10 40 3bc6 7cf3 5b 5f }
            // n = 6, score = 100
            //   881c10               | mov                 byte ptr [eax + edx], bl
            //   40                   | inc                 eax
            //   3bc6                 | cmp                 eax, esi
            //   7cf3                 | jl                  0xfffffff5
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi

        $sequence_1 = { 85f6 7445 6a02 53 56 ffd5 }
            // n = 6, score = 100
            //   85f6                 | test                esi, esi
            //   7445                 | je                  0x47
            //   6a02                 | push                2
            //   53                   | push                ebx
            //   56                   | push                esi
            //   ffd5                 | call                ebp

        $sequence_2 = { f3a5 8bcb 8d842430060000 83e103 50 f3a4 8d8c2420010000 }
            // n = 7, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bcb                 | mov                 ecx, ebx
            //   8d842430060000       | lea                 eax, [esp + 0x630]
            //   83e103               | and                 ecx, 3
            //   50                   | push                eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8d8c2420010000       | lea                 ecx, [esp + 0x120]

        $sequence_3 = { aa b905000000 be???????? 8dbc24440b0000 33c0 f3a5 66a5 }
            // n = 7, score = 100
            //   aa                   | stosb               byte ptr es:[edi], al
            //   b905000000           | mov                 ecx, 5
            //   be????????           |                     
            //   8dbc24440b0000       | lea                 edi, [esp + 0xb44]
            //   33c0                 | xor                 eax, eax
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]

        $sequence_4 = { 50 ff15???????? 8b2d???????? 83c9ff bf???????? 33c0 8d542418 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b2d????????         |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   bf????????           |                     
            //   33c0                 | xor                 eax, eax
            //   8d542418             | lea                 edx, [esp + 0x18]

        $sequence_5 = { 8bf8 8d4f01 51 e8???????? 56 8bd8 ff15???????? }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   8d4f01               | lea                 ecx, [edi + 1]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   56                   | push                esi
            //   8bd8                 | mov                 ebx, eax
            //   ff15????????         |                     

        $sequence_6 = { 8bcd 8d84242c050000 83e103 50 }
            // n = 4, score = 100
            //   8bcd                 | mov                 ecx, ebp
            //   8d84242c050000       | lea                 eax, [esp + 0x52c]
            //   83e103               | and                 ecx, 3
            //   50                   | push                eax

        $sequence_7 = { 53 8b9c242c020000 33f6 85db 7412 8bfb 83c9ff }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   8b9c242c020000       | mov                 ebx, dword ptr [esp + 0x22c]
            //   33f6                 | xor                 esi, esi
            //   85db                 | test                ebx, ebx
            //   7412                 | je                  0x14
            //   8bfb                 | mov                 edi, ebx
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_8 = { 55 ff15???????? 8b442410 85c0 75ae }
            // n = 5, score = 100
            //   55                   | push                ebp
            //   ff15????????         |                     
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   85c0                 | test                eax, eax
            //   75ae                 | jne                 0xffffffb0

        $sequence_9 = { 68???????? aa ff15???????? 83c9ff bf???????? 33c0 8d942424030000 }
            // n = 7, score = 100
            //   68????????           |                     
            //   aa                   | stosb               byte ptr es:[edi], al
            //   ff15????????         |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   bf????????           |                     
            //   33c0                 | xor                 eax, eax
            //   8d942424030000       | lea                 edx, [esp + 0x324]

    condition:
        7 of them and filesize < 40960
}