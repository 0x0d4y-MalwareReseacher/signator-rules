rule win_bistromath_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.bistromath."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bistromath"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff471c 8b55fc 89548808 8b55d0 66c704880a00 c644880300 c744880400000000 }
            // n = 7, score = 400
            //   ff471c               | inc                 dword ptr [edi + 0x1c]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   89548808             | mov                 dword ptr [eax + ecx*4 + 8], edx
            //   8b55d0               | mov                 edx, dword ptr [ebp - 0x30]
            //   66c704880a00         | mov                 word ptr [eax + ecx*4], 0xa
            //   c644880300           | mov                 byte ptr [eax + ecx*4 + 3], 0
            //   c744880400000000     | mov                 dword ptr [eax + ecx*4 + 4], 0

        $sequence_1 = { f20f1145b4 c745b000000000 c645be00 e8???????? 6a00 68e8030000 ff7598 }
            // n = 7, score = 400
            //   f20f1145b4           | movsd               qword ptr [ebp - 0x4c], xmm0
            //   c745b000000000       | mov                 dword ptr [ebp - 0x50], 0
            //   c645be00             | mov                 byte ptr [ebp - 0x42], 0
            //   e8????????           |                     
            //   6a00                 | push                0
            //   68e8030000           | push                0x3e8
            //   ff7598               | push                dword ptr [ebp - 0x68]

        $sequence_2 = { ffb508ffffff e8???????? 8b85f8feffff 8d8df8feffff 83c404 50 ff30 }
            // n = 7, score = 400
            //   ffb508ffffff         | push                dword ptr [ebp - 0xf8]
            //   e8????????           |                     
            //   8b85f8feffff         | mov                 eax, dword ptr [ebp - 0x108]
            //   8d8df8feffff         | lea                 ecx, [ebp - 0x108]
            //   83c404               | add                 esp, 4
            //   50                   | push                eax
            //   ff30                 | push                dword ptr [eax]

        $sequence_3 = { ff461c 8b55f8 89548804 8b55d4 66c704885d00 c644880300 89548808 }
            // n = 7, score = 400
            //   ff461c               | inc                 dword ptr [esi + 0x1c]
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   89548804             | mov                 dword ptr [eax + ecx*4 + 4], edx
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]
            //   66c704885d00         | mov                 word ptr [eax + ecx*4], 0x5d
            //   c644880300           | mov                 byte ptr [eax + ecx*4 + 3], 0
            //   89548808             | mov                 dword ptr [eax + ecx*4 + 8], edx

        $sequence_4 = { ba04000000 8bcf e8???????? 8bf0 85f6 0f85c1000000 8b4740 }
            // n = 7, score = 400
            //   ba04000000           | mov                 edx, 4
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   0f85c1000000         | jne                 0xc7
            //   8b4740               | mov                 eax, dword ptr [edi + 0x40]

        $sequence_5 = { f77120 40 3bf8 7433 8b4c2414 8d44242c 6a00 }
            // n = 7, score = 400
            //   f77120               | div                 dword ptr [ecx + 0x20]
            //   40                   | inc                 eax
            //   3bf8                 | cmp                 edi, eax
            //   7433                 | je                  0x35
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   8d44242c             | lea                 eax, [esp + 0x2c]
            //   6a00                 | push                0

        $sequence_6 = { e8???????? 8b4c2434 0fb6c1 50 8b44242c c1e908 03c6 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8b4c2434             | mov                 ecx, dword ptr [esp + 0x34]
            //   0fb6c1               | movzx               eax, cl
            //   50                   | push                eax
            //   8b44242c             | mov                 eax, dword ptr [esp + 0x2c]
            //   c1e908               | shr                 ecx, 8
            //   03c6                 | add                 eax, esi

        $sequence_7 = { 8b434c 83c40c 8b7710 40 8b4b48 8945f4 894df0 }
            // n = 7, score = 400
            //   8b434c               | mov                 eax, dword ptr [ebx + 0x4c]
            //   83c40c               | add                 esp, 0xc
            //   8b7710               | mov                 esi, dword ptr [edi + 0x10]
            //   40                   | inc                 eax
            //   8b4b48               | mov                 ecx, dword ptr [ebx + 0x48]
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx

        $sequence_8 = { e9???????? 8b7c2414 8b5c2410 8b542430 8b4c2434 897c2420 895c2410 }
            // n = 7, score = 400
            //   e9????????           |                     
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   8b5c2410             | mov                 ebx, dword ptr [esp + 0x10]
            //   8b542430             | mov                 edx, dword ptr [esp + 0x30]
            //   8b4c2434             | mov                 ecx, dword ptr [esp + 0x34]
            //   897c2420             | mov                 dword ptr [esp + 0x20], edi
            //   895c2410             | mov                 dword ptr [esp + 0x10], ebx

        $sequence_9 = { e8???????? 85c0 740a 8b75fc bb01000000 eb33 8b4704 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   740a                 | je                  0xc
            //   8b75fc               | mov                 esi, dword ptr [ebp - 4]
            //   bb01000000           | mov                 ebx, 1
            //   eb33                 | jmp                 0x35
            //   8b4704               | mov                 eax, dword ptr [edi + 4]

    condition:
        7 of them and filesize < 33816576
}