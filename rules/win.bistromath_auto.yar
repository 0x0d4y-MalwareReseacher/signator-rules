rule win_bistromath_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.bistromath."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bistromath"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? eb10 8b5614 8bcf e8???????? eb04 8b7c2414 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   eb10                 | jmp                 0x12
            //   8b5614               | mov                 edx, dword ptr [esi + 0x14]
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   eb04                 | jmp                 6
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]

        $sequence_1 = { 894ddc 8b4b14 0fb6c0 894de0 8945ec 397e20 7f0b }
            // n = 7, score = 400
            //   894ddc               | mov                 dword ptr [ebp - 0x24], ecx
            //   8b4b14               | mov                 ecx, dword ptr [ebx + 0x14]
            //   0fb6c0               | movzx               eax, al
            //   894de0               | mov                 dword ptr [ebp - 0x20], ecx
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   397e20               | cmp                 dword ptr [esi + 0x20], edi
            //   7f0b                 | jg                  0xd

        $sequence_2 = { 8bf9 8bf2 3b772c 7624 68???????? 6821cb0000 68???????? }
            // n = 7, score = 400
            //   8bf9                 | mov                 edi, ecx
            //   8bf2                 | mov                 esi, edx
            //   3b772c               | cmp                 esi, dword ptr [edi + 0x2c]
            //   7624                 | jbe                 0x26
            //   68????????           |                     
            //   6821cb0000           | push                0xcb21
            //   68????????           |                     

        $sequence_3 = { 83f826 750c 8b4908 33d2 e8???????? 59 c3 }
            // n = 7, score = 400
            //   83f826               | cmp                 eax, 0x26
            //   750c                 | jne                 0xe
            //   8b4908               | mov                 ecx, dword ptr [ecx + 8]
            //   33d2                 | xor                 edx, edx
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   c3                   | ret                 

        $sequence_4 = { 894f48 8b4014 85c0 75f4 89542450 837c245800 7418 }
            // n = 7, score = 400
            //   894f48               | mov                 dword ptr [edi + 0x48], ecx
            //   8b4014               | mov                 eax, dword ptr [eax + 0x14]
            //   85c0                 | test                eax, eax
            //   75f4                 | jne                 0xfffffff6
            //   89542450             | mov                 dword ptr [esp + 0x50], edx
            //   837c245800           | cmp                 dword ptr [esp + 0x58], 0
            //   7418                 | je                  0x1a

        $sequence_5 = { c6462605 6683c801 66894624 8b4608 c7464007000000 c6464501 5e }
            // n = 7, score = 400
            //   c6462605             | mov                 byte ptr [esi + 0x26], 5
            //   6683c801             | or                  ax, 1
            //   66894624             | mov                 word ptr [esi + 0x24], ax
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   c7464007000000       | mov                 dword ptr [esi + 0x40], 7
            //   c6464501             | mov                 byte ptr [esi + 0x45], 1
            //   5e                   | pop                 esi

        $sequence_6 = { e8???????? 83c414 ba69000000 ff74241c ff74244c eb15 50 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   ba69000000           | mov                 edx, 0x69
            //   ff74241c             | push                dword ptr [esp + 0x1c]
            //   ff74244c             | push                dword ptr [esp + 0x4c]
            //   eb15                 | jmp                 0x17
            //   50                   | push                eax

        $sequence_7 = { e8???????? 8b0b 50 e8???????? 8b4c2428 894110 c64101ff }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8b0b                 | mov                 ecx, dword ptr [ebx]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   894110               | mov                 dword ptr [ecx + 0x10], eax
            //   c64101ff             | mov                 byte ptr [ecx + 1], 0xff

        $sequence_8 = { c68424c50000002e c68424c600000064 c68424c70000006c c68424c80000006c c68424c900000000 c68424d000000075 c68424d100000073 }
            // n = 7, score = 400
            //   c68424c50000002e     | mov                 byte ptr [esp + 0xc5], 0x2e
            //   c68424c600000064     | mov                 byte ptr [esp + 0xc6], 0x64
            //   c68424c70000006c     | mov                 byte ptr [esp + 0xc7], 0x6c
            //   c68424c80000006c     | mov                 byte ptr [esp + 0xc8], 0x6c
            //   c68424c900000000     | mov                 byte ptr [esp + 0xc9], 0
            //   c68424d000000075     | mov                 byte ptr [esp + 0xd0], 0x75
            //   c68424d100000073     | mov                 byte ptr [esp + 0xd1], 0x73

        $sequence_9 = { bf01000000 eb33 8b4604 8d0cbf ff461c 8b55fc 66c704889800 }
            // n = 7, score = 400
            //   bf01000000           | mov                 edi, 1
            //   eb33                 | jmp                 0x35
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   8d0cbf               | lea                 ecx, dword ptr [edi + edi*4]
            //   ff461c               | inc                 dword ptr [esi + 0x1c]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   66c704889800         | mov                 word ptr [eax + ecx*4], 0x98

    condition:
        7 of them and filesize < 33816576
}