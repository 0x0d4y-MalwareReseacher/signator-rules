rule win_yakuza_ransomware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.yakuza_ransomware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yakuza_ransomware"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645fc35 50 b9???????? e8???????? c705????????c0634d00 c705????????68634d00 c705????????10634d00 }
            // n = 7, score = 100
            //   c645fc35             | mov                 byte ptr [ebp - 4], 0x35
            //   50                   | push                eax
            //   b9????????           |                     
            //   e8????????           |                     
            //   c705????????c0634d00     |     
            //   c705????????68634d00     |     
            //   c705????????10634d00     |     

        $sequence_1 = { c745e0d4814d00 894de4 8945e8 8d45e0 c645fc01 50 8bce }
            // n = 7, score = 100
            //   c745e0d4814d00       | mov                 dword ptr [ebp - 0x20], 0x4d81d4
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi

        $sequence_2 = { e8???????? c645fc02 8d4dd8 e8???????? e9???????? c645fc00 8d4d08 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   e9????????           |                     
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   8d4d08               | lea                 ecx, [ebp + 8]

        $sequence_3 = { c645fc06 8d8d30f6ffff e8???????? c645fc00 8d8de8f5ffff e8???????? 51 }
            // n = 7, score = 100
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   8d8d30f6ffff         | lea                 ecx, [ebp - 0x9d0]
            //   e8????????           |                     
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   8d8de8f5ffff         | lea                 ecx, [ebp - 0xa18]
            //   e8????????           |                     
            //   51                   | push                ecx

        $sequence_4 = { c645fc66 50 b9???????? e8???????? c705????????5c6f4d00 c705????????10704d00 c705????????ec6f4d00 }
            // n = 7, score = 100
            //   c645fc66             | mov                 byte ptr [ebp - 4], 0x66
            //   50                   | push                eax
            //   b9????????           |                     
            //   e8????????           |                     
            //   c705????????5c6f4d00     |     
            //   c705????????10704d00     |     
            //   c705????????ec6f4d00     |     

        $sequence_5 = { e8???????? 8bf0 8b5608 8d4e04 c645fc16 c745f001000000 3b5108 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8b5608               | mov                 edx, dword ptr [esi + 8]
            //   8d4e04               | lea                 ecx, [esi + 4]
            //   c645fc16             | mov                 byte ptr [ebp - 4], 0x16
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   3b5108               | cmp                 edx, dword ptr [ecx + 8]

        $sequence_6 = { ff15???????? 8bd8 83fbff 7557 ff36 68???????? e8???????? }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   83fbff               | cmp                 ebx, -1
            //   7557                 | jne                 0x59
            //   ff36                 | push                dword ptr [esi]
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_7 = { ebc9 8b4608 32c9 83e001 3ac8 0f94c0 8945d8 }
            // n = 7, score = 100
            //   ebc9                 | jmp                 0xffffffcb
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   32c9                 | xor                 cl, cl
            //   83e001               | and                 eax, 1
            //   3ac8                 | cmp                 cl, al
            //   0f94c0               | sete                al
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax

        $sequence_8 = { ff74240c 8b4e4c 8b01 ff5010 f6465002 741d 8b06 }
            // n = 7, score = 100
            //   ff74240c             | push                dword ptr [esp + 0xc]
            //   8b4e4c               | mov                 ecx, dword ptr [esi + 0x4c]
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5010               | call                dword ptr [eax + 0x10]
            //   f6465002             | test                byte ptr [esi + 0x50], 2
            //   741d                 | je                  0x1f
            //   8b06                 | mov                 eax, dword ptr [esi]

        $sequence_9 = { 8d85fcfdffff 50 57 e8???????? 8b4dfc f7d8 5f }
            // n = 7, score = 100
            //   8d85fcfdffff         | lea                 eax, [ebp - 0x204]
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   f7d8                 | neg                 eax
            //   5f                   | pop                 edi

    condition:
        7 of them and filesize < 2811904
}