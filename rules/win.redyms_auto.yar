rule win_redyms_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.redyms."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.redyms"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 56 ff15???????? 8b5508 6a00 8d8ddcfeffff }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   6a00                 | push                0
            //   8d8ddcfeffff         | lea                 ecx, [ebp - 0x124]

        $sequence_1 = { 8bcf 51 ff15???????? 8985ecfeffff 3bc6 0f844b020000 }
            // n = 6, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8985ecfeffff         | mov                 dword ptr [ebp - 0x114], eax
            //   3bc6                 | cmp                 eax, esi
            //   0f844b020000         | je                  0x251

        $sequence_2 = { a1???????? 33c5 8945fc 53 56 8b35???????? 8d4dc8 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b35????????         |                     
            //   8d4dc8               | lea                 ecx, [ebp - 0x38]

        $sequence_3 = { 72ee 8b4508 50 68???????? 8d4dec 51 }
            // n = 6, score = 100
            //   72ee                 | jb                  0xfffffff0
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   50                   | push                eax
            //   68????????           |                     
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   51                   | push                ecx

        $sequence_4 = { 33c0 2bf3 8a1c0e 32d8 80f370 8819 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   2bf3                 | sub                 esi, ebx
            //   8a1c0e               | mov                 bl, byte ptr [esi + ecx]
            //   32d8                 | xor                 bl, al
            //   80f370               | xor                 bl, 0x70
            //   8819                 | mov                 byte ptr [ecx], bl

        $sequence_5 = { 8b55f4 51 52 8bf0 56 57 }
            // n = 6, score = 100
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_6 = { 8b35???????? 8d4dec 8bd1 33c0 c645eb00 2bf2 8a140e }
            // n = 7, score = 100
            //   8b35????????         |                     
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   8bd1                 | mov                 edx, ecx
            //   33c0                 | xor                 eax, eax
            //   c645eb00             | mov                 byte ptr [ebp - 0x15], 0
            //   2bf2                 | sub                 esi, edx
            //   8a140e               | mov                 dl, byte ptr [esi + ecx]

        $sequence_7 = { b9???????? b801000000 f00fb111 5f 5e 5b }
            // n = 6, score = 100
            //   b9????????           |                     
            //   b801000000           | mov                 eax, 1
            //   f00fb111             | lock cmpxchg        dword ptr [ecx], edx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_8 = { 40 41 6683f80c 72ee 8d45ec 50 }
            // n = 6, score = 100
            //   40                   | inc                 eax
            //   41                   | inc                 ecx
            //   6683f80c             | cmp                 ax, 0xc
            //   72ee                 | jb                  0xfffffff0
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax

        $sequence_9 = { c645ff00 c745e802000000 c745ec601cf403 ff15???????? 8d7e28 57 8945f0 }
            // n = 7, score = 100
            //   c645ff00             | mov                 byte ptr [ebp - 1], 0
            //   c745e802000000       | mov                 dword ptr [ebp - 0x18], 2
            //   c745ec601cf403       | mov                 dword ptr [ebp - 0x14], 0x3f41c60
            //   ff15????????         |                     
            //   8d7e28               | lea                 edi, [esi + 0x28]
            //   57                   | push                edi
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax

    condition:
        7 of them and filesize < 98304
}