rule win_redyms_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.redyms."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.redyms"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4628 50 ff15???????? 6a00 68???????? }
            // n = 5, score = 100
            //   8d4628               | lea                 eax, [esi + 0x28]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   68????????           |                     

        $sequence_1 = { 7509 8b45f0 2bc7 01441f02 035dec }
            // n = 5, score = 100
            //   7509                 | jne                 0xb
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   2bc7                 | sub                 eax, edi
            //   01441f02             | add                 dword ptr [edi + ebx + 2], eax
            //   035dec               | add                 ebx, dword ptr [ebp - 0x14]

        $sequence_2 = { ff15???????? 807dff00 8bd8 7507 56 ff550c 83c404 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   807dff00             | cmp                 byte ptr [ebp - 1], 0
            //   8bd8                 | mov                 ebx, eax
            //   7507                 | jne                 9
            //   56                   | push                esi
            //   ff550c               | call                dword ptr [ebp + 0xc]
            //   83c404               | add                 esp, 4

        $sequence_3 = { 33ff 83c0fc 0f84b9000000 8d642400 8b8598feffff 8b7004 0fbe0c3e }
            // n = 7, score = 100
            //   33ff                 | xor                 edi, edi
            //   83c0fc               | add                 eax, -4
            //   0f84b9000000         | je                  0xbf
            //   8d642400             | lea                 esp, [esp]
            //   8b8598feffff         | mov                 eax, dword ptr [ebp - 0x168]
            //   8b7004               | mov                 esi, dword ptr [eax + 4]
            //   0fbe0c3e             | movsx               ecx, byte ptr [esi + edi]

        $sequence_4 = { 8b3d???????? 83c40c 85c0 7502 ffd7 69c0fd430300 8d88c39e2600 }
            // n = 7, score = 100
            //   8b3d????????         |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   7502                 | jne                 4
            //   ffd7                 | call                edi
            //   69c0fd430300         | imul                eax, eax, 0x343fd
            //   8d88c39e2600         | lea                 ecx, [eax + 0x269ec3]

        $sequence_5 = { 8b9598feffff 8b4204 884df9 8b4df4 668b55f8 8d443803 8908 }
            // n = 7, score = 100
            //   8b9598feffff         | mov                 edx, dword ptr [ebp - 0x168]
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   884df9               | mov                 byte ptr [ebp - 7], cl
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   668b55f8             | mov                 dx, word ptr [ebp - 8]
            //   8d443803             | lea                 eax, [eax + edi + 3]
            //   8908                 | mov                 dword ptr [eax], ecx

        $sequence_6 = { 72ee 8b35???????? 8d4df0 8bd1 33c0 c645ef00 }
            // n = 6, score = 100
            //   72ee                 | jb                  0xfffffff0
            //   8b35????????         |                     
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   8bd1                 | mov                 edx, ecx
            //   33c0                 | xor                 eax, eax
            //   c645ef00             | mov                 byte ptr [ebp - 0x11], 0

        $sequence_7 = { e8???????? 6803010000 8d8de5feffff 6a00 51 c685e4feffff00 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   6803010000           | push                0x103
            //   8d8de5feffff         | lea                 ecx, [ebp - 0x11b]
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   c685e4feffff00       | mov                 byte ptr [ebp - 0x11c], 0
            //   e8????????           |                     

        $sequence_8 = { 8b35???????? 8d4dac 8bd9 33c0 8855bb 2bf3 }
            // n = 6, score = 100
            //   8b35????????         |                     
            //   8d4dac               | lea                 ecx, [ebp - 0x54]
            //   8bd9                 | mov                 ebx, ecx
            //   33c0                 | xor                 eax, eax
            //   8855bb               | mov                 byte ptr [ebp - 0x45], dl
            //   2bf3                 | sub                 esi, ebx

        $sequence_9 = { 7518 8b45fc 50 6a00 ffd3 50 ffd7 }
            // n = 7, score = 100
            //   7518                 | jne                 0x1a
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ffd3                 | call                ebx
            //   50                   | push                eax
            //   ffd7                 | call                edi

    condition:
        7 of them and filesize < 98304
}