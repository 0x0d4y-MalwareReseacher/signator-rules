rule win_domino_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.domino."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.domino"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 418d6e0e 488d442420 8bcd c60000 }
            // n = 4, score = 100
            //   418d6e0e             | dec                 eax
            //   488d442420           | sub                 esp, 0x40
            //   8bcd                 | dec                 eax
            //   c60000               | lea                 esi, [ecx + 4]

        $sequence_1 = { 448bc0 e8???????? 3bc6 740a 488bcf }
            // n = 5, score = 100
            //   448bc0               | jge                 0x6a6
            //   e8????????           |                     
            //   3bc6                 | mov                 byte ptr [eax], bl
            //   740a                 | dec                 eax
            //   488bcf               | inc                 eax

        $sequence_2 = { 48ffc9 418a0409 8801 48ffca 75f2 }
            // n = 5, score = 100
            //   48ffc9               | dec                 eax
            //   418a0409             | mov                 dword ptr [esp + 0x20], esi
            //   8801                 | dec                 eax
            //   48ffca               | mov                 ecx, dword ptr [ebp + 0x7f]
            //   75f2                 | xor                 edx, edx

        $sequence_3 = { 418bf8 8bf2 33db 488d4def }
            // n = 4, score = 100
            //   418bf8               | dec                 esp
            //   8bf2                 | lea                 ecx, [ebp - 0x69]
            //   33db                 | inc                 ecx
            //   488d4def             | cmp                 eax, dword ptr [ebp + 0x18]

        $sequence_4 = { 4885c0 7544 8b442450 4983c704 }
            // n = 4, score = 100
            //   4885c0               | inc                 ebp
            //   7544                 | xor                 ecx, ecx
            //   8b442450             | inc                 ebp
            //   4983c704             | xor                 eax, eax

        $sequence_5 = { 488d4c2440 4533c9 4533c0 ba00000040 c744242002000000 ff15???????? }
            // n = 6, score = 100
            //   488d4c2440           | dec                 eax
            //   4533c9               | arpl                bx, dx
            //   4533c0               | inc                 ebp
            //   ba00000040           | xor                 ecx, ecx
            //   c744242002000000     | inc                 esp
            //   ff15????????         |                     

        $sequence_6 = { 442bc7 4863c7 ffc7 4c8d542420 4488440420 4863c7 4963d0 }
            // n = 7, score = 100
            //   442bc7               | mov                 edx, ebx
            //   4863c7               | mov                 esi, 8
            //   ffc7                 | dec                 eax
            //   4c8d542420           | and                 dword ptr [esp + 0x20], 0
            //   4488440420           | dec                 esp
            //   4863c7               | lea                 ecx, [esp + 0x280]
            //   4963d0               | dec                 eax

        $sequence_7 = { 488bf8 ff15???????? 85c0 751e }
            // n = 4, score = 100
            //   488bf8               | test                eax, eax
            //   ff15????????         |                     
            //   85c0                 | dec                 eax
            //   751e                 | arpl                dx, di

        $sequence_8 = { ff15???????? b001 eb02 32c0 4881c4e0000000 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   b001                 | dec                 eax
            //   eb02                 | mov                 edx, esi
            //   32c0                 | dec                 eax
            //   4881c4e0000000       | mov                 edi, eax

        $sequence_9 = { b806000000 e9???????? 4c63fd 41b900300000 33d2 488bc8 4d8bc7 }
            // n = 7, score = 100
            //   b806000000           | mov                 al, byte ptr [ecx + eax]
            //   e9????????           |                     
            //   4c63fd               | mov                 byte ptr [ebp + ecx + 0x23], al
            //   41b900300000         | dec                 eax
            //   33d2                 | dec                 edx
            //   488bc8               | jne                 0xc3
            //   4d8bc7               | dec                 eax

    condition:
        7 of them and filesize < 50176
}