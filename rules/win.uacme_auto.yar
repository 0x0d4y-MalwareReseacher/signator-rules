rule win_uacme_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.uacme."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.uacme"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c038 50 ffd6 8b4710 68???????? 83c040 }
            // n = 6, score = 100
            //   83c038               | add                 eax, 0x38
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8b4710               | mov                 eax, dword ptr [edi + 0x10]
            //   68????????           |                     
            //   83c040               | add                 eax, 0x40

        $sequence_1 = { 85c0 0f84e2000000 8bcf 8d85e8fbffff c60000 40 83e901 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   0f84e2000000         | je                  0xe8
            //   8bcf                 | mov                 ecx, edi
            //   8d85e8fbffff         | lea                 eax, dword ptr [ebp - 0x418]
            //   c60000               | mov                 byte ptr [eax], 0
            //   40                   | inc                 eax
            //   83e901               | sub                 ecx, 1

        $sequence_2 = { 0f8443020000 e8???????? 83f864 0f8735020000 }
            // n = 4, score = 100
            //   0f8443020000         | je                  0x249
            //   e8????????           |                     
            //   83f864               | cmp                 eax, 0x64
            //   0f8735020000         | ja                  0x23b

        $sequence_3 = { 8d85b8f9ffff 68???????? 50 8d9598f1ffff 8d8dc8fdffff e8???????? 83c40c }
            // n = 7, score = 100
            //   8d85b8f9ffff         | lea                 eax, dword ptr [ebp - 0x648]
            //   68????????           |                     
            //   50                   | push                eax
            //   8d9598f1ffff         | lea                 edx, dword ptr [ebp - 0xe68]
            //   8d8dc8fdffff         | lea                 ecx, dword ptr [ebp - 0x238]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_4 = { 6a00 ff15???????? 8bf0 8975dc 85f6 7505 8975cc }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   8975dc               | mov                 dword ptr [ebp - 0x24], esi
            //   85f6                 | test                esi, esi
            //   7505                 | jne                 7
            //   8975cc               | mov                 dword ptr [ebp - 0x34], esi

        $sequence_5 = { ff750c 33c0 50 6824000004 50 50 50 }
            // n = 7, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   33c0                 | xor                 eax, eax
            //   50                   | push                eax
            //   6824000004           | push                0x4000024
            //   50                   | push                eax
            //   50                   | push                eax
            //   50                   | push                eax

        $sequence_6 = { 8818 40 83e901 75f8 53 56 }
            // n = 6, score = 100
            //   8818                 | mov                 byte ptr [eax], bl
            //   40                   | inc                 eax
            //   83e901               | sub                 ecx, 1
            //   75f8                 | jne                 0xfffffffa
            //   53                   | push                ebx
            //   56                   | push                esi

        $sequence_7 = { e8???????? 59 85c0 7458 8d85e8fbffff 50 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7458                 | je                  0x5a
            //   8d85e8fbffff         | lea                 eax, dword ptr [ebp - 0x418]
            //   50                   | push                eax

        $sequence_8 = { c3 55 8bec 81ec20040000 53 56 be0a020000 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec20040000         | sub                 esp, 0x420
            //   53                   | push                ebx
            //   56                   | push                esi
            //   be0a020000           | mov                 esi, 0x20a

        $sequence_9 = { 6683bdccf3ffff00 8b3d???????? 7409 8d85ccf3ffff 50 ffd7 }
            // n = 6, score = 100
            //   6683bdccf3ffff00     | cmp                 word ptr [ebp - 0xc34], 0
            //   8b3d????????         |                     
            //   7409                 | je                  0xb
            //   8d85ccf3ffff         | lea                 eax, dword ptr [ebp - 0xc34]
            //   50                   | push                eax
            //   ffd7                 | call                edi

    condition:
        7 of them and filesize < 565248
}