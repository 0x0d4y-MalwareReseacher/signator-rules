rule win_gh0sttimes_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.gh0sttimes."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gh0sttimes"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b5508 83c009 50 8bcf e8???????? 57 8bf0 }
            // n = 7, score = 800
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   83c009               | add                 eax, 9
            //   50                   | push                eax
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   57                   | push                edi
            //   8bf0                 | mov                 esi, eax

        $sequence_1 = { 6a01 51 ff15???????? 8b7604 e8???????? }
            // n = 5, score = 800
            //   6a01                 | push                1
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8b7604               | mov                 esi, dword ptr [esi + 4]
            //   e8????????           |                     

        $sequence_2 = { 8b1b 85db 0f8415020000 53 ffd7 }
            // n = 5, score = 800
            //   8b1b                 | mov                 ebx, dword ptr [ebx]
            //   85db                 | test                ebx, ebx
            //   0f8415020000         | je                  0x21b
            //   53                   | push                ebx
            //   ffd7                 | call                edi

        $sequence_3 = { 85c0 7527 8d55b8 52 8b55bc 8d45c0 50 }
            // n = 7, score = 800
            //   85c0                 | test                eax, eax
            //   7527                 | jne                 0x29
            //   8d55b8               | lea                 edx, [ebp - 0x48]
            //   52                   | push                edx
            //   8b55bc               | mov                 edx, dword ptr [ebp - 0x44]
            //   8d45c0               | lea                 eax, [ebp - 0x40]
            //   50                   | push                eax

        $sequence_4 = { 52 e8???????? 83c420 32d2 }
            // n = 4, score = 800
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c420               | add                 esp, 0x20
            //   32d2                 | xor                 dl, dl

        $sequence_5 = { c645ecdb c645ed50 c645ef62 8b55ec 8910 c645f07b }
            // n = 6, score = 800
            //   c645ecdb             | mov                 byte ptr [ebp - 0x14], 0xdb
            //   c645ed50             | mov                 byte ptr [ebp - 0x13], 0x50
            //   c645ef62             | mov                 byte ptr [ebp - 0x11], 0x62
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   8910                 | mov                 dword ptr [eax], edx
            //   c645f07b             | mov                 byte ptr [ebp - 0x10], 0x7b

        $sequence_6 = { 8985d8fdffff e8???????? 8bf0 83c404 89b5ccfdffff }
            // n = 5, score = 800
            //   8985d8fdffff         | mov                 dword ptr [ebp - 0x228], eax
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4
            //   89b5ccfdffff         | mov                 dword ptr [ebp - 0x234], esi

        $sequence_7 = { 50 0fb745ba 51 0fb74db8 52 }
            // n = 5, score = 800
            //   50                   | push                eax
            //   0fb745ba             | movzx               eax, word ptr [ebp - 0x46]
            //   51                   | push                ecx
            //   0fb74db8             | movzx               ecx, word ptr [ebp - 0x48]
            //   52                   | push                edx

        $sequence_8 = { 488b542440 488b5228 488b5210 488b4c2440 }
            // n = 4, score = 600
            //   488b542440           | dec                 eax
            //   488b5228             | mov                 eax, dword ptr [esp + 0x20]
            //   488b5210             | mov                 ecx, dword ptr [eax + 0x38]
            //   488b4c2440           | dec                 eax

        $sequence_9 = { 488b542420 488b5210 488b8424a0000000 8b484c }
            // n = 4, score = 600
            //   488b542420           | dec                 ecx
            //   488b5210             | mov                 dword ptr [ebx - 0x2f], eax
            //   488b8424a0000000     | dec                 ecx
            //   8b484c               | mov                 dword ptr [ebx - 0x27], eax

        $sequence_10 = { 498943b9 498943c1 498943c9 498943d1 498943d9 4d8d43a0 }
            // n = 6, score = 600
            //   498943b9             | dec                 ecx
            //   498943c1             | mov                 dword ptr [ebx - 0x47], eax
            //   498943c9             | dec                 ecx
            //   498943d1             | mov                 dword ptr [ebx - 0x3f], eax
            //   498943d9             | dec                 ecx
            //   4d8d43a0             | mov                 dword ptr [ebx - 0x37], eax

        $sequence_11 = { 488b542420 488b5230 488b442420 8b4838 }
            // n = 4, score = 600
            //   488b542420           | mov                 ecx, dword ptr [eax + 0x4c]
            //   488b5230             | dec                 eax
            //   488b442420           | mov                 edx, dword ptr [esp + 0x20]
            //   8b4838               | dec                 eax

        $sequence_12 = { 488b542430 8b4260 4123c0 83c802 }
            // n = 4, score = 600
            //   488b542430           | mov                 edx, dword ptr [edx + 0x30]
            //   8b4260               | dec                 eax
            //   4123c0               | mov                 eax, dword ptr [esp + 0x20]
            //   83c802               | mov                 ecx, dword ptr [eax + 0x38]

        $sequence_13 = { 488b542440 488b5228 488b5268 488b4c2440 }
            // n = 4, score = 600
            //   488b542440           | mov                 ecx, dword ptr [esp + 0x40]
            //   488b5228             | dec                 eax
            //   488b5268             | mov                 edx, dword ptr [esp + 0x40]
            //   488b4c2440           | dec                 eax

        $sequence_14 = { 488b542440 488b5228 488b5260 488b4c2440 }
            // n = 4, score = 600
            //   488b542440           | or                  eax, 2
            //   488b5228             | mov                 dword ptr [edx + 0x60], eax
            //   488b5260             | dec                 eax
            //   488b4c2440           | mov                 eax, dword ptr [esp + 0x30]

        $sequence_15 = { 488b542440 488b5228 488b5250 488b4c2440 }
            // n = 4, score = 600
            //   488b542440           | dec                 eax
            //   488b5228             | mov                 eax, dword ptr [edx + 0x30]
            //   488b5250             | movzx               eax, byte ptr [eax + ecx]
            //   488b4c2440           | mov                 dword ptr [esp + 0x44], eax

    condition:
        7 of them and filesize < 548864
}