rule win_ployx_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.ployx."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ployx"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8065fe00 8065ff00 80650b00 32c0 3b75f4 7d52 8a0433 }
            // n = 7, score = 100
            //   8065fe00             | and                 byte ptr [ebp - 2], 0
            //   8065ff00             | and                 byte ptr [ebp - 1], 0
            //   80650b00             | and                 byte ptr [ebp + 0xb], 0
            //   32c0                 | xor                 al, al
            //   3b75f4               | cmp                 esi, dword ptr [ebp - 0xc]
            //   7d52                 | jge                 0x54
            //   8a0433               | mov                 al, byte ptr [ebx + esi]

        $sequence_1 = { 0fb6d2 f682c17b270004 740c ff01 85f6 7406 }
            // n = 6, score = 100
            //   0fb6d2               | movzx               edx, dl
            //   f682c17b270004       | test                byte ptr [edx + 0x277bc1], 4
            //   740c                 | je                  0xe
            //   ff01                 | inc                 dword ptr [ecx]
            //   85f6                 | test                esi, esi
            //   7406                 | je                  8

        $sequence_2 = { 037514 68???????? 53 e8???????? 83c424 894514 85c0 }
            // n = 7, score = 100
            //   037514               | add                 esi, dword ptr [ebp + 0x14]
            //   68????????           |                     
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c424               | add                 esp, 0x24
            //   894514               | mov                 dword ptr [ebp + 0x14], eax
            //   85c0                 | test                eax, eax

        $sequence_3 = { 7410 55 ff35???????? 53 e8???????? 83c40c 55 }
            // n = 7, score = 100
            //   7410                 | je                  0x12
            //   55                   | push                ebp
            //   ff35????????         |                     
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   55                   | push                ebp

        $sequence_4 = { 895dfc 8d7b04 57 e8???????? 6a00 57 50 }
            // n = 7, score = 100
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   8d7b04               | lea                 edi, [ebx + 4]
            //   57                   | push                edi
            //   e8????????           |                     
            //   6a00                 | push                0
            //   57                   | push                edi
            //   50                   | push                eax

        $sequence_5 = { ff15???????? c3 8b442404 6a00 48 6a00 7410 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   c3                   | ret                 
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   6a00                 | push                0
            //   48                   | dec                 eax
            //   6a00                 | push                0
            //   7410                 | je                  0x12

        $sequence_6 = { 740f 53 e8???????? 3b5dfc 59 7503 8975fc }
            // n = 7, score = 100
            //   740f                 | je                  0x11
            //   53                   | push                ebx
            //   e8????????           |                     
            //   3b5dfc               | cmp                 ebx, dword ptr [ebp - 4]
            //   59                   | pop                 ecx
            //   7503                 | jne                 5
            //   8975fc               | mov                 dword ptr [ebp - 4], esi

        $sequence_7 = { 8bf8 8d4701 50 e8???????? 56 6a01 57 }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   8d4701               | lea                 eax, [edi + 1]
            //   50                   | push                eax
            //   e8????????           |                     
            //   56                   | push                esi
            //   6a01                 | push                1
            //   57                   | push                edi

        $sequence_8 = { 0f8486000000 48 746e 48 7456 48 743e }
            // n = 7, score = 100
            //   0f8486000000         | je                  0x8c
            //   48                   | dec                 eax
            //   746e                 | je                  0x70
            //   48                   | dec                 eax
            //   7456                 | je                  0x58
            //   48                   | dec                 eax
            //   743e                 | je                  0x40

        $sequence_9 = { 68???????? e8???????? 6a45 68???????? e8???????? }
            // n = 5, score = 100
            //   68????????           |                     
            //   e8????????           |                     
            //   6a45                 | push                0x45
            //   68????????           |                     
            //   e8????????           |                     

    condition:
        7 of them and filesize < 229376
}