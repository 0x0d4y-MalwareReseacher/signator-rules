rule win_mespinoza_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.mespinoza."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mespinoza"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c410 8b7ffc 85ff 7504 33d2 eb27 33f6 }
            // n = 7, score = 200
            //   83c410               | add                 esp, 0x10
            //   8b7ffc               | mov                 edi, dword ptr [edi - 4]
            //   85ff                 | test                edi, edi
            //   7504                 | jne                 6
            //   33d2                 | xor                 edx, edx
            //   eb27                 | jmp                 0x29
            //   33f6                 | xor                 esi, esi

        $sequence_1 = { 8a442413 84c0 8b442438 0f847a010000 8b542434 8b4c2448 }
            // n = 6, score = 200
            //   8a442413             | mov                 al, byte ptr [esp + 0x13]
            //   84c0                 | test                al, al
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]
            //   0f847a010000         | je                  0x180
            //   8b542434             | mov                 edx, dword ptr [esp + 0x34]
            //   8b4c2448             | mov                 ecx, dword ptr [esp + 0x48]

        $sequence_2 = { 8bf0 3bc1 7414 8bf9 8b06 8bce 6a00 }
            // n = 7, score = 200
            //   8bf0                 | mov                 esi, eax
            //   3bc1                 | cmp                 eax, ecx
            //   7414                 | je                  0x16
            //   8bf9                 | mov                 edi, ecx
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8bce                 | mov                 ecx, esi
            //   6a00                 | push                0

        $sequence_3 = { 51 e8???????? 83c410 0f1f4000 8b16 85d2 0f85ce000000 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   0f1f4000             | nop                 dword ptr [eax]
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   85d2                 | test                edx, edx
            //   0f85ce000000         | jne                 0xd4

        $sequence_4 = { 23f3 3374241c c1c90d 33c8 8b442424 c1c802 33c8 }
            // n = 7, score = 200
            //   23f3                 | and                 esi, ebx
            //   3374241c             | xor                 esi, dword ptr [esp + 0x1c]
            //   c1c90d               | ror                 ecx, 0xd
            //   33c8                 | xor                 ecx, eax
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   c1c802               | ror                 eax, 2
            //   33c8                 | xor                 ecx, eax

        $sequence_5 = { 897308 c74304ffffffff 8b4df4 64890d00000000 59 5f 5e }
            // n = 7, score = 200
            //   897308               | mov                 dword ptr [ebx + 8], esi
            //   c74304ffffffff       | mov                 dword ptr [ebx + 4], 0xffffffff
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_6 = { 75a3 8d8d5cffffff e8???????? 8b4df4 64890d00000000 59 5f }
            // n = 7, score = 200
            //   75a3                 | jne                 0xffffffa5
            //   8d8d5cffffff         | lea                 ecx, [ebp - 0xa4]
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_7 = { 33c3 c1c105 33c5 81c1d6c162ca 0344242c 03c6 }
            // n = 6, score = 200
            //   33c3                 | xor                 eax, ebx
            //   c1c105               | rol                 ecx, 5
            //   33c5                 | xor                 eax, ebp
            //   81c1d6c162ca         | add                 ecx, 0xca62c1d6
            //   0344242c             | add                 eax, dword ptr [esp + 0x2c]
            //   03c6                 | add                 eax, esi

        $sequence_8 = { eb05 e8???????? 83c404 8b4520 8d5524 3b4524 8d4d20 }
            // n = 7, score = 200
            //   eb05                 | jmp                 7
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4520               | mov                 eax, dword ptr [ebp + 0x20]
            //   8d5524               | lea                 edx, [ebp + 0x24]
            //   3b4524               | cmp                 eax, dword ptr [ebp + 0x24]
            //   8d4d20               | lea                 ecx, [ebp + 0x20]

        $sequence_9 = { 8b7508 ff501c 3bf0 0f86d1000000 6a0a 8d45b0 56 }
            // n = 7, score = 200
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   ff501c               | call                dword ptr [eax + 0x1c]
            //   3bf0                 | cmp                 esi, eax
            //   0f86d1000000         | jbe                 0xd7
            //   6a0a                 | push                0xa
            //   8d45b0               | lea                 eax, [ebp - 0x50]
            //   56                   | push                esi

    condition:
        7 of them and filesize < 1091584
}