rule win_poslurp_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.poslurp."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.poslurp"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 488bcb 4c897c2420 4803942490000000 ff15???????? }
            // n = 4, score = 100
            //   488bcb               | sub                 ecx, ebp
            //   4c897c2420           | dec                 eax
            //   4803942490000000     | sar                 ecx, 1
            //   ff15????????         |                     

        $sequence_1 = { ff15???????? cc 498b0cce 4533c0 33d2 e8???????? 8905???????? }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   cc                   | mov                 esi, eax
            //   498b0cce             | cmp                 dword ptr [esi + 0x10], 0
            //   4533c0               | inc                 ecx
            //   33d2                 | or                  eax, 0xffffffff
            //   e8????????           |                     
            //   8905????????         |                     

        $sequence_2 = { 498bc1 660f1f440000 443900 7434 }
            // n = 4, score = 100
            //   498bc1               | mov                 dword ptr [esp + 0x38], ebx
            //   660f1f440000         | dec                 eax
            //   443900               | mov                 dword ptr [esp + 0x30], ebx
            //   7434                 | mov                 dword ptr [esp + 0x28], 4

        $sequence_3 = { 33c9 ff15???????? 488bd8 48898424c0000000 4885c0 }
            // n = 5, score = 100
            //   33c9                 | nop                 dword ptr [eax + eax]
            //   ff15????????         |                     
            //   488bd8               | dec                 eax
            //   48898424c0000000     | add                 eax, -8
            //   4885c0               | inc                 ebp

        $sequence_4 = { 4533db 33d2 4c895c2428 8d4a01 4533c9 4533c0 4c895c2420 }
            // n = 7, score = 100
            //   4533db               | mov                 edi, ebp
            //   33d2                 | dec                 eax
            //   4c895c2428           | mov                 dword ptr [esp + 0x10], esi
            //   8d4a01               | push                edi
            //   4533c9               | dec                 eax
            //   4533c0               | sub                 esp, 0x260
            //   4c895c2420           | dec                 eax

        $sequence_5 = { ff15???????? cc 4c8b0d???????? 4883c9ff }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   cc                   | xor                 ebx, ebx
            //   4c8b0d????????       |                     
            //   4883c9ff             | dec                 ecx

        $sequence_6 = { c640ef0a c640f00b c640f10c c640f210 c640f316 c640f417 }
            // n = 6, score = 100
            //   c640ef0a             | xor                 ebx, ebx
            //   c640f00b             | mov                 word ptr [esp + 0x38], ax
            //   c640f10c             | mov                 eax, 0x52
            //   c640f210             | inc                 ebp
            //   c640f316             | xor                 ecx, ecx
            //   c640f417             | mov                 word ptr [esp + 0x3a], ax

        $sequence_7 = { ffc2 48ffc6 85c9 75ea }
            // n = 4, score = 100
            //   ffc2                 | ret                 
            //   48ffc6               | dec                 eax
            //   85c9                 | lea                 edx, [0x16e1]
            //   75ea                 | dec                 eax

        $sequence_8 = { ff15???????? 8b0d???????? 488d542420 498904ce }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   8b0d????????         |                     
            //   488d542420           | mov                 eax, ebp
            //   498904ce             | xor                 edx, edx

        $sequence_9 = { 488bd8 4883f8ff 0f84c8010000 448b05???????? 4889ac24a0020000 4889b424a8020000 4889bc24b0020000 }
            // n = 7, score = 100
            //   488bd8               | dec                 eax
            //   4883f8ff             | lea                 eax, [esp + 0x80]
            //   0f84c8010000         | inc                 ebp
            //   448b05????????       |                     
            //   4889ac24a0020000     | xor                 eax, eax
            //   4889b424a8020000     | dec                 eax
            //   4889bc24b0020000     | mov                 dword ptr [esp + 0x48], eax

    condition:
        7 of them and filesize < 50176
}