rule win_fengine_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.fengine."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fengine"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 8d85fcf7ffff 50 8d95fcefffff e8???????? 83c428 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d85fcf7ffff         | lea                 eax, [ebp - 0x804]
            //   50                   | push                eax
            //   8d95fcefffff         | lea                 edx, [ebp - 0x1004]
            //   e8????????           |                     
            //   83c428               | add                 esp, 0x28

        $sequence_1 = { 33c8 d1e8 83e101 7405 352083b8ed 8aca }
            // n = 6, score = 100
            //   33c8                 | xor                 ecx, eax
            //   d1e8                 | shr                 eax, 1
            //   83e101               | and                 ecx, 1
            //   7405                 | je                  7
            //   352083b8ed           | xor                 eax, 0xedb88320
            //   8aca                 | mov                 cl, dl

        $sequence_2 = { 55 8bec 83ec10 53 8b19 56 83bba400000000 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec10               | sub                 esp, 0x10
            //   53                   | push                ebx
            //   8b19                 | mov                 ebx, dword ptr [ecx]
            //   56                   | push                esi
            //   83bba400000000       | cmp                 dword ptr [ebx + 0xa4], 0

        $sequence_3 = { 83c414 85c0 74b1 83ec18 8bd0 8b8de0f7ffff e8???????? }
            // n = 7, score = 100
            //   83c414               | add                 esp, 0x14
            //   85c0                 | test                eax, eax
            //   74b1                 | je                  0xffffffb3
            //   83ec18               | sub                 esp, 0x18
            //   8bd0                 | mov                 edx, eax
            //   8b8de0f7ffff         | mov                 ecx, dword ptr [ebp - 0x820]
            //   e8????????           |                     

        $sequence_4 = { 3c58 770f 0fbec1 0fb680e8d74000 83e00f eb02 }
            // n = 6, score = 100
            //   3c58                 | cmp                 al, 0x58
            //   770f                 | ja                  0x11
            //   0fbec1               | movsx               eax, cl
            //   0fb680e8d74000       | movzx               eax, byte ptr [eax + 0x40d7e8]
            //   83e00f               | and                 eax, 0xf
            //   eb02                 | jmp                 4

        $sequence_5 = { 85ff 7407 807c17ff0d 7451 83fb03 }
            // n = 5, score = 100
            //   85ff                 | test                edi, edi
            //   7407                 | je                  9
            //   807c17ff0d           | cmp                 byte ptr [edi + edx - 1], 0xd
            //   7451                 | je                  0x53
            //   83fb03               | cmp                 ebx, 3

        $sequence_6 = { 8d7f04 8d5b02 8d4908 3b5618 72e3 8b45fc }
            // n = 6, score = 100
            //   8d7f04               | lea                 edi, [edi + 4]
            //   8d5b02               | lea                 ebx, [ebx + 2]
            //   8d4908               | lea                 ecx, [ecx + 8]
            //   3b5618               | cmp                 edx, dword ptr [esi + 0x18]
            //   72e3                 | jb                  0xffffffe5
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_7 = { ffd6 6a00 6a04 8d45fc 50 6a05 ff37 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   6a00                 | push                0
            //   6a04                 | push                4
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   6a05                 | push                5
            //   ff37                 | push                dword ptr [edi]

        $sequence_8 = { e8???????? 8b95f8efffff 33f6 33db 33c9 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8b95f8efffff         | mov                 edx, dword ptr [ebp - 0x1008]
            //   33f6                 | xor                 esi, esi
            //   33db                 | xor                 ebx, ebx
            //   33c9                 | xor                 ecx, ecx

        $sequence_9 = { 8bcf e8???????? 8b85dcf7ffff 89b008080000 }
            // n = 4, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   8b85dcf7ffff         | mov                 eax, dword ptr [ebp - 0x824]
            //   89b008080000         | mov                 dword ptr [eax + 0x808], esi

    condition:
        7 of them and filesize < 210944
}