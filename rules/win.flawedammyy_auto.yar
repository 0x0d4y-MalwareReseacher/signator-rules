rule win_flawedammyy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.flawedammyy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flawedammyy"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b08 56 52 50 ff511c }
            // n = 5, score = 200
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   56                   | push                esi
            //   52                   | push                edx
            //   50                   | push                eax
            //   ff511c               | call                dword ptr [ecx + 0x1c]

        $sequence_1 = { 00b3854200e5 854200 37 864200 }
            // n = 4, score = 200
            //   00b3854200e5         | add                 byte ptr [ebx - 0x1affbd7b], dh
            //   854200               | test                dword ptr [edx], eax
            //   37                   | aaa                 
            //   864200               | xchg                byte ptr [edx], al

        $sequence_2 = { ffd0 803e4d 0f85b2060000 807e015a }
            // n = 4, score = 200
            //   ffd0                 | call                eax
            //   803e4d               | cmp                 byte ptr [esi], 0x4d
            //   0f85b2060000         | jne                 0x6b8
            //   807e015a             | cmp                 byte ptr [esi + 1], 0x5a

        $sequence_3 = { 0062bf 42 0079bf 42 }
            // n = 4, score = 200
            //   0062bf               | add                 byte ptr [edx - 0x41], ah
            //   42                   | inc                 edx
            //   0079bf               | add                 byte ptr [ecx - 0x41], bh
            //   42                   | inc                 edx

        $sequence_4 = { 8b7510 57 32db 32f6 66c786000100000000 33c0 }
            // n = 6, score = 200
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]
            //   57                   | push                edi
            //   32db                 | xor                 bl, bl
            //   32f6                 | xor                 dh, dh
            //   66c786000100000000     | mov    word ptr [esi + 0x100], 0
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 83c408 68???????? ffd0 57 56 }
            // n = 5, score = 200
            //   83c408               | add                 esp, 8
            //   68????????           |                     
            //   ffd0                 | call                eax
            //   57                   | push                edi
            //   56                   | push                esi

        $sequence_6 = { 0022 8a4200 828a4200bb8a42 00ff }
            // n = 4, score = 200
            //   0022                 | add                 byte ptr [edx], ah
            //   8a4200               | mov                 al, byte ptr [edx]
            //   828a4200bb8a42       | or                  byte ptr [edx - 0x7544ffbe], 0x42
            //   00ff                 | add                 bh, bh

        $sequence_7 = { 0018 874200 58 874200 }
            // n = 4, score = 200
            //   0018                 | add                 byte ptr [eax], bl
            //   874200               | xchg                dword ptr [edx], eax
            //   58                   | pop                 eax
            //   874200               | xchg                dword ptr [edx], eax

        $sequence_8 = { 8d45ac 50 8d8548ffffff 50 6a00 6a00 }
            // n = 6, score = 200
            //   8d45ac               | lea                 eax, [ebp - 0x54]
            //   50                   | push                eax
            //   8d8548ffffff         | lea                 eax, [ebp - 0xb8]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_9 = { 004bbf 42 0062bf 42 }
            // n = 4, score = 200
            //   004bbf               | add                 byte ptr [ebx - 0x41], cl
            //   42                   | inc                 edx
            //   0062bf               | add                 byte ptr [edx - 0x41], ah
            //   42                   | inc                 edx

        $sequence_10 = { 898d30e5ffff 8b0c8d88ae4100 89b514e5ffff 8a5c0e24 02db d0fb }
            // n = 6, score = 200
            //   898d30e5ffff         | mov                 dword ptr [ebp - 0x1ad0], ecx
            //   8b0c8d88ae4100       | mov                 ecx, dword ptr [ecx*4 + 0x41ae88]
            //   89b514e5ffff         | mov                 dword ptr [ebp - 0x1aec], esi
            //   8a5c0e24             | mov                 bl, byte ptr [esi + ecx + 0x24]
            //   02db                 | add                 bl, bl
            //   d0fb                 | sar                 bl, 1

        $sequence_11 = { 0000 0404 0404 0404 0401 }
            // n = 5, score = 200
            //   0000                 | add                 byte ptr [eax], al
            //   0404                 | add                 al, 4
            //   0404                 | add                 al, 4
            //   0404                 | add                 al, 4
            //   0401                 | add                 al, 1

        $sequence_12 = { 6a00 ffd3 4e 75f9 8d45f4 50 }
            // n = 6, score = 200
            //   6a00                 | push                0
            //   ffd3                 | call                ebx
            //   4e                   | dec                 esi
            //   75f9                 | jne                 0xfffffffb
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax

        $sequence_13 = { 0039 e342 0048e3 42 }
            // n = 4, score = 200
            //   0039                 | add                 byte ptr [ecx], bh
            //   e342                 | jecxz               0x44
            //   0048e3               | add                 byte ptr [eax - 0x1d], cl
            //   42                   | inc                 edx

        $sequence_14 = { 002a e342 0039 e342 }
            // n = 4, score = 200
            //   002a                 | add                 byte ptr [edx], ch
            //   e342                 | jecxz               0x44
            //   0039                 | add                 byte ptr [ecx], bh
            //   e342                 | jecxz               0x44

        $sequence_15 = { 50 c745f4981d4100 e8???????? cc 55 8bec 833d????????00 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   c745f4981d4100       | mov                 dword ptr [ebp - 0xc], 0x411d98
            //   e8????????           |                     
            //   cc                   | int3                
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   833d????????00       |                     

        $sequence_16 = { 0f8781000000 ff248dfd243400 881f eb76 ff30 }
            // n = 5, score = 100
            //   0f8781000000         | ja                  0x87
            //   ff248dfd243400       | jmp                 dword ptr [ecx*4 + 0x3424fd]
            //   881f                 | mov                 byte ptr [edi], bl
            //   eb76                 | jmp                 0x78
            //   ff30                 | push                dword ptr [eax]

        $sequence_17 = { 83c708 c60720 68???????? 57 }
            // n = 4, score = 100
            //   83c708               | add                 edi, 8
            //   c60720               | mov                 byte ptr [edi], 0x20
            //   68????????           |                     
            //   57                   | push                edi

        $sequence_18 = { 8d85d0feffff 68???????? 50 ff15???????? 8b75d8 }
            // n = 5, score = 100
            //   8d85d0feffff         | lea                 eax, [ebp - 0x130]
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b75d8               | mov                 esi, dword ptr [ebp - 0x28]

        $sequence_19 = { 837efcff 7518 8b46f8 8b04855c303400 }
            // n = 4, score = 100
            //   837efcff             | cmp                 dword ptr [esi - 4], -1
            //   7518                 | jne                 0x1a
            //   8b46f8               | mov                 eax, dword ptr [esi - 8]
            //   8b04855c303400       | mov                 eax, dword ptr [eax*4 + 0x34305c]

        $sequence_20 = { 891d???????? 741f 8b3d???????? 53 }
            // n = 4, score = 100
            //   891d????????         |                     
            //   741f                 | je                  0x21
            //   8b3d????????         |                     
            //   53                   | push                ebx

        $sequence_21 = { 53 8bf0 53 6a02 56 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   8bf0                 | mov                 esi, eax
            //   53                   | push                ebx
            //   6a02                 | push                2
            //   56                   | push                esi

        $sequence_22 = { 33c0 8b7df4 8b0c855c303400 c1e705 33d2 }
            // n = 5, score = 100
            //   33c0                 | xor                 eax, eax
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]
            //   8b0c855c303400       | mov                 ecx, dword ptr [eax*4 + 0x34305c]
            //   c1e705               | shl                 edi, 5
            //   33d2                 | xor                 edx, edx

        $sequence_23 = { 50 ffd7 a3???????? 56 e8???????? }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   a3????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_24 = { ff248580233400 832700 e9???????? 55 e8???????? eb1a 55 }
            // n = 7, score = 100
            //   ff248580233400       | jmp                 dword ptr [eax*4 + 0x342380]
            //   832700               | and                 dword ptr [edi], 0
            //   e9????????           |                     
            //   55                   | push                ebp
            //   e8????????           |                     
            //   eb1a                 | jmp                 0x1c
            //   55                   | push                ebp

        $sequence_25 = { ff15???????? 8bf8 8d85ccfdffff 3bf8 77e1 8d85ccfdffff }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   8d85ccfdffff         | lea                 eax, [ebp - 0x234]
            //   3bf8                 | cmp                 edi, eax
            //   77e1                 | ja                  0xffffffe3
            //   8d85ccfdffff         | lea                 eax, [ebp - 0x234]

        $sequence_26 = { 895df4 8d41de 33db 83f855 0f872affffff 0fb6805a213400 ff2485f6203400 }
            // n = 7, score = 100
            //   895df4               | mov                 dword ptr [ebp - 0xc], ebx
            //   8d41de               | lea                 eax, [ecx - 0x22]
            //   33db                 | xor                 ebx, ebx
            //   83f855               | cmp                 eax, 0x55
            //   0f872affffff         | ja                  0xffffff30
            //   0fb6805a213400       | movzx               eax, byte ptr [eax + 0x34215a]
            //   ff2485f6203400       | jmp                 dword ptr [eax*4 + 0x3420f6]

        $sequence_27 = { 0f872affffff 0fb6805a213400 ff2485f6203400 8b8614080000 3b45f4 7e03 }
            // n = 6, score = 100
            //   0f872affffff         | ja                  0xffffff30
            //   0fb6805a213400       | movzx               eax, byte ptr [eax + 0x34215a]
            //   ff2485f6203400       | jmp                 dword ptr [eax*4 + 0x3420f6]
            //   8b8614080000         | mov                 eax, dword ptr [esi + 0x814]
            //   3b45f4               | cmp                 eax, dword ptr [ebp - 0xc]
            //   7e03                 | jle                 5

        $sequence_28 = { 8b35???????? eb08 3a4dff 7409 50 ffd6 8a08 }
            // n = 7, score = 100
            //   8b35????????         |                     
            //   eb08                 | jmp                 0xa
            //   3a4dff               | cmp                 cl, byte ptr [ebp - 1]
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_29 = { 3bc3 8945f8 7431 6aff ff75e8 ff15???????? 8d45f8 }
            // n = 7, score = 100
            //   3bc3                 | cmp                 eax, ebx
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   7431                 | je                  0x33
            //   6aff                 | push                -1
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   ff15????????         |                     
            //   8d45f8               | lea                 eax, [ebp - 8]

        $sequence_30 = { 8b4d08 8a0408 a2???????? eb07 c605????????00 c705????????4c403400 ff7508 }
            // n = 7, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8a0408               | mov                 al, byte ptr [eax + ecx]
            //   a2????????           |                     
            //   eb07                 | jmp                 9
            //   c605????????00       |                     
            //   c705????????4c403400     |     
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_31 = { 8b14957c303400 49 0fafd1 0155fc 46 83c020 }
            // n = 6, score = 100
            //   8b14957c303400       | mov                 edx, dword ptr [edx*4 + 0x34307c]
            //   49                   | dec                 ecx
            //   0fafd1               | imul                edx, ecx
            //   0155fc               | add                 dword ptr [ebp - 4], edx
            //   46                   | inc                 esi
            //   83c020               | add                 eax, 0x20

    condition:
        7 of them and filesize < 1350656
}