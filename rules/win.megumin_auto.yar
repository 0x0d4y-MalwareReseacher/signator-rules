rule win_megumin_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.megumin."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.megumin"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83bde8fbffff10 0f438dd4fbffff 2bf2 03cf 89b5e4fbffff 2bf7 46 }
            // n = 7, score = 200
            //   83bde8fbffff10       | cmp                 dword ptr [ebp - 0x418], 0x10
            //   0f438dd4fbffff       | cmovae              ecx, dword ptr [ebp - 0x42c]
            //   2bf2                 | sub                 esi, edx
            //   03cf                 | add                 ecx, edi
            //   89b5e4fbffff         | mov                 dword ptr [ebp - 0x41c], esi
            //   2bf7                 | sub                 esi, edi
            //   46                   | inc                 esi

        $sequence_1 = { c78514ffffff00000000 c78518ffffff0f000000 e8???????? 8b8d1cffffff 8b5318 41 c78514ffffff00000000 }
            // n = 7, score = 200
            //   c78514ffffff00000000     | mov    dword ptr [ebp - 0xec], 0
            //   c78518ffffff0f000000     | mov    dword ptr [ebp - 0xe8], 0xf
            //   e8????????           |                     
            //   8b8d1cffffff         | mov                 ecx, dword ptr [ebp - 0xe4]
            //   8b5318               | mov                 edx, dword ptr [ebx + 0x18]
            //   41                   | inc                 ecx
            //   c78514ffffff00000000     | mov    dword ptr [ebp - 0xec], 0

        $sequence_2 = { e8???????? 837b1c10 8d5308 c78550ffffff00000000 0f435308 8bca c78554ffffff0f000000 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   837b1c10             | cmp                 dword ptr [ebx + 0x1c], 0x10
            //   8d5308               | lea                 edx, dword ptr [ebx + 8]
            //   c78550ffffff00000000     | mov    dword ptr [ebp - 0xb0], 0
            //   0f435308             | cmovae              edx, dword ptr [ebx + 8]
            //   8bca                 | mov                 ecx, edx
            //   c78554ffffff0f000000     | mov    dword ptr [ebp - 0xac], 0xf

        $sequence_3 = { e8???????? 8d8dbcfaffff e8???????? 8d8d64fbffff e8???????? 8d8dd4faffff e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d8dbcfaffff         | lea                 ecx, dword ptr [ebp - 0x544]
            //   e8????????           |                     
            //   8d8d64fbffff         | lea                 ecx, dword ptr [ebp - 0x49c]
            //   e8????????           |                     
            //   8d8dd4faffff         | lea                 ecx, dword ptr [ebp - 0x52c]
            //   e8????????           |                     

        $sequence_4 = { e8???????? 8d9594fbffff c645fc02 8d4b08 e8???????? 8d8d94fbffff c645fc00 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d9594fbffff         | lea                 edx, dword ptr [ebp - 0x46c]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8d4b08               | lea                 ecx, dword ptr [ebx + 8]
            //   e8????????           |                     
            //   8d8d94fbffff         | lea                 ecx, dword ptr [ebp - 0x46c]
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0

        $sequence_5 = { c645dc00 8b8560ffffff 83c004 8945e0 8d45b0 50 ff7318 }
            // n = 7, score = 200
            //   c645dc00             | mov                 byte ptr [ebp - 0x24], 0
            //   8b8560ffffff         | mov                 eax, dword ptr [ebp - 0xa0]
            //   83c004               | add                 eax, 4
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   8d45b0               | lea                 eax, dword ptr [ebp - 0x50]
            //   50                   | push                eax
            //   ff7318               | push                dword ptr [ebx + 0x18]

        $sequence_6 = { 033485d0434700 f6462d01 7414 e8???????? c70016000000 e8???????? 32c0 }
            // n = 7, score = 200
            //   033485d0434700       | add                 esi, dword ptr [eax*4 + 0x4743d0]
            //   f6462d01             | test                byte ptr [esi + 0x2d], 1
            //   7414                 | je                  0x16
            //   e8????????           |                     
            //   c70016000000         | mov                 dword ptr [eax], 0x16
            //   e8????????           |                     
            //   32c0                 | xor                 al, al

        $sequence_7 = { 7508 3bf1 0f84ae000000 8b5de4 c745e800000000 }
            // n = 5, score = 200
            //   7508                 | jne                 0xa
            //   3bf1                 | cmp                 esi, ecx
            //   0f84ae000000         | je                  0xb4
            //   8b5de4               | mov                 ebx, dword ptr [ebp - 0x1c]
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0

        $sequence_8 = { 8d8df0fcffff ff7518 0f435508 e8???????? 83c404 8bd8 c645fc09 }
            // n = 7, score = 200
            //   8d8df0fcffff         | lea                 ecx, dword ptr [ebp - 0x310]
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   0f435508             | cmovae              edx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bd8                 | mov                 ebx, eax
            //   c645fc09             | mov                 byte ptr [ebp - 4], 9

        $sequence_9 = { 0f1145bc f30f7e45a8 660fd645cc c745a800000000 c745ac0f000000 e8???????? }
            // n = 6, score = 200
            //   0f1145bc             | movups              xmmword ptr [ebp - 0x44], xmm0
            //   f30f7e45a8           | movq                xmm0, qword ptr [ebp - 0x58]
            //   660fd645cc           | movq                qword ptr [ebp - 0x34], xmm0
            //   c745a800000000       | mov                 dword ptr [ebp - 0x58], 0
            //   c745ac0f000000       | mov                 dword ptr [ebp - 0x54], 0xf
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1007616
}