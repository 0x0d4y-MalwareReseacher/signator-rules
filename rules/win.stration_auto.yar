rule win_stration_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.stration."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stration"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 757c a1???????? 8b0d???????? 8b15???????? 89442404 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   757c                 | jne                 0x7e
            //   a1????????           |                     
            //   8b0d????????         |                     
            //   8b15????????         |                     
            //   89442404             | mov                 dword ptr [esp + 4], eax

        $sequence_1 = { 8bc8 e8???????? 85c0 744b 8d442414 50 }
            // n = 6, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   744b                 | je                  0x4d
            //   8d442414             | lea                 eax, dword ptr [esp + 0x14]
            //   50                   | push                eax

        $sequence_2 = { 89542478 33c0 90 8b4c2478 8a540470 c1e918 32d1 }
            // n = 7, score = 100
            //   89542478             | mov                 dword ptr [esp + 0x78], edx
            //   33c0                 | xor                 eax, eax
            //   90                   | nop                 
            //   8b4c2478             | mov                 ecx, dword ptr [esp + 0x78]
            //   8a540470             | mov                 dl, byte ptr [esp + eax + 0x70]
            //   c1e918               | shr                 ecx, 0x18
            //   32d1                 | xor                 dl, cl

        $sequence_3 = { 894c2410 89542414 33c0 8a54040c 8a4c2418 32d1 8854040c }
            // n = 7, score = 100
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx
            //   89542414             | mov                 dword ptr [esp + 0x14], edx
            //   33c0                 | xor                 eax, eax
            //   8a54040c             | mov                 dl, byte ptr [esp + eax + 0xc]
            //   8a4c2418             | mov                 cl, byte ptr [esp + 0x18]
            //   32d1                 | xor                 dl, cl
            //   8854040c             | mov                 byte ptr [esp + eax + 0xc], dl

        $sequence_4 = { 83c408 6817040000 56 e8???????? }
            // n = 4, score = 100
            //   83c408               | add                 esp, 8
            //   6817040000           | push                0x417
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_5 = { 5f 7512 a1???????? 03db 85c0 7407 }
            // n = 6, score = 100
            //   5f                   | pop                 edi
            //   7512                 | jne                 0x14
            //   a1????????           |                     
            //   03db                 | add                 ebx, ebx
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9

        $sequence_6 = { 32d0 a1???????? 884c2418 8b0d???????? }
            // n = 4, score = 100
            //   32d0                 | xor                 dl, al
            //   a1????????           |                     
            //   884c2418             | mov                 byte ptr [esp + 0x18], cl
            //   8b0d????????         |                     

        $sequence_7 = { 53 8b1d???????? 56 0f85bc000000 a1???????? }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   8b1d????????         |                     
            //   56                   | push                esi
            //   0f85bc000000         | jne                 0xc2
            //   a1????????           |                     

        $sequence_8 = { 66c1e808 32c8 884c2428 88542432 }
            // n = 4, score = 100
            //   66c1e808             | shr                 ax, 8
            //   32c8                 | xor                 cl, al
            //   884c2428             | mov                 byte ptr [esp + 0x28], cl
            //   88542432             | mov                 byte ptr [esp + 0x32], dl

        $sequence_9 = { 7c0a 80f95a 7f05 80c120 880a 8b0d???????? 0bcb }
            // n = 7, score = 100
            //   7c0a                 | jl                  0xc
            //   80f95a               | cmp                 cl, 0x5a
            //   7f05                 | jg                  7
            //   80c120               | add                 cl, 0x20
            //   880a                 | mov                 byte ptr [edx], cl
            //   8b0d????????         |                     
            //   0bcb                 | or                  ecx, ebx

    condition:
        7 of them and filesize < 49152
}