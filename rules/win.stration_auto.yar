rule win_stration_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.stration."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stration"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 7404 8b7c2408 56 ff15???????? 33f6 85ff }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6
            //   8b7c2408             | mov                 edi, dword ptr [esp + 8]
            //   56                   | push                esi
            //   ff15????????         |                     
            //   33f6                 | xor                 esi, esi
            //   85ff                 | test                edi, edi

        $sequence_1 = { a1???????? 80f253 83ec24 85c0 8815???????? }
            // n = 5, score = 100
            //   a1????????           |                     
            //   80f253               | xor                 dl, 0x53
            //   83ec24               | sub                 esp, 0x24
            //   85c0                 | test                eax, eax
            //   8815????????         |                     

        $sequence_2 = { 32c8 32d0 884c2420 8854241f 8b542420 c1ea08 32d0 }
            // n = 7, score = 100
            //   32c8                 | xor                 cl, al
            //   32d0                 | xor                 dl, al
            //   884c2420             | mov                 byte ptr [esp + 0x20], cl
            //   8854241f             | mov                 byte ptr [esp + 0x1f], dl
            //   8b542420             | mov                 edx, dword ptr [esp + 0x20]
            //   c1ea08               | shr                 edx, 8
            //   32d0                 | xor                 dl, al

        $sequence_3 = { 8a07 2ad3 84c0 8bcd 8815???????? 7421 }
            // n = 6, score = 100
            //   8a07                 | mov                 al, byte ptr [edi]
            //   2ad3                 | sub                 dl, bl
            //   84c0                 | test                al, al
            //   8bcd                 | mov                 ecx, ebp
            //   8815????????         |                     
            //   7421                 | je                  0x23

        $sequence_4 = { ba11010000 8bce e8???????? c705????????00000000 }
            // n = 4, score = 100
            //   ba11010000           | mov                 edx, 0x111
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   c705????????00000000     |     

        $sequence_5 = { 8b4c241c c1e910 32c8 884c241e 8b54241c 8a4c2420 }
            // n = 6, score = 100
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   c1e910               | shr                 ecx, 0x10
            //   32c8                 | xor                 cl, al
            //   884c241e             | mov                 byte ptr [esp + 0x1e], cl
            //   8b54241c             | mov                 edx, dword ptr [esp + 0x1c]
            //   8a4c2420             | mov                 cl, byte ptr [esp + 0x20]

        $sequence_6 = { 8bff 8a1404 8a4c240c 32d1 881404 40 83f80d }
            // n = 7, score = 100
            //   8bff                 | mov                 edi, edi
            //   8a1404               | mov                 dl, byte ptr [esp + eax]
            //   8a4c240c             | mov                 cl, byte ptr [esp + 0xc]
            //   32d1                 | xor                 dl, cl
            //   881404               | mov                 byte ptr [esp + eax], dl
            //   40                   | inc                 eax
            //   83f80d               | cmp                 eax, 0xd

        $sequence_7 = { 6a01 baf1000000 8bcb e8???????? 55 }
            // n = 5, score = 100
            //   6a01                 | push                1
            //   baf1000000           | mov                 edx, 0xf1
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   55                   | push                ebp

        $sequence_8 = { 32d0 884c2420 8854241f 8b542420 c1ea08 32d0 88542421 }
            // n = 7, score = 100
            //   32d0                 | xor                 dl, al
            //   884c2420             | mov                 byte ptr [esp + 0x20], cl
            //   8854241f             | mov                 byte ptr [esp + 0x1f], dl
            //   8b542420             | mov                 edx, dword ptr [esp + 0x20]
            //   c1ea08               | shr                 edx, 8
            //   32d0                 | xor                 dl, al
            //   88542421             | mov                 byte ptr [esp + 0x21], dl

        $sequence_9 = { 89442414 668bc1 8a4c2410 66c1e808 32c8 884c2410 }
            // n = 6, score = 100
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   668bc1               | mov                 ax, cx
            //   8a4c2410             | mov                 cl, byte ptr [esp + 0x10]
            //   66c1e808             | shr                 ax, 8
            //   32c8                 | xor                 cl, al
            //   884c2410             | mov                 byte ptr [esp + 0x10], cl

    condition:
        7 of them and filesize < 49152
}