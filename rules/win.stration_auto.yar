rule win_stration_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.stration."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stration"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f80b 7ce9 8d542408 52 33ff 57 }
            // n = 6, score = 100
            //   83f80b               | cmp                 eax, 0xb
            //   7ce9                 | jl                  0xffffffeb
            //   8d542408             | lea                 edx, [esp + 8]
            //   52                   | push                edx
            //   33ff                 | xor                 edi, edi
            //   57                   | push                edi

        $sequence_1 = { 8a4c2410 66c1e808 32c8 884c2410 8b542410 }
            // n = 5, score = 100
            //   8a4c2410             | mov                 cl, byte ptr [esp + 0x10]
            //   66c1e808             | shr                 ax, 8
            //   32c8                 | xor                 cl, al
            //   884c2410             | mov                 byte ptr [esp + 0x10], cl
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]

        $sequence_2 = { a1???????? 668b0d???????? 8b15???????? 89542428 8a15???????? 8944242c 668bc1 }
            // n = 7, score = 100
            //   a1????????           |                     
            //   668b0d????????       |                     
            //   8b15????????         |                     
            //   89542428             | mov                 dword ptr [esp + 0x28], edx
            //   8a15????????         |                     
            //   8944242c             | mov                 dword ptr [esp + 0x2c], eax
            //   668bc1               | mov                 ax, cx

        $sequence_3 = { 83f80d 7cee 8b942424040000 56 68ff030000 }
            // n = 5, score = 100
            //   83f80d               | cmp                 eax, 0xd
            //   7cee                 | jl                  0xfffffff0
            //   8b942424040000       | mov                 edx, dword ptr [esp + 0x424]
            //   56                   | push                esi
            //   68ff030000           | push                0x3ff

        $sequence_4 = { 8d4c2428 51 e8???????? 83c404 50 }
            // n = 5, score = 100
            //   8d4c2428             | lea                 ecx, [esp + 0x28]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   50                   | push                eax

        $sequence_5 = { 8b4c2478 8a540470 c1e918 32d1 88540470 40 }
            // n = 6, score = 100
            //   8b4c2478             | mov                 ecx, dword ptr [esp + 0x78]
            //   8a540470             | mov                 dl, byte ptr [esp + eax + 0x70]
            //   c1e918               | shr                 ecx, 0x18
            //   32d1                 | xor                 dl, cl
            //   88540470             | mov                 byte ptr [esp + eax + 0x70], dl
            //   40                   | inc                 eax

        $sequence_6 = { 8b54241c 8a4c040c c1ea10 32ca 884c040c 40 83f813 }
            // n = 7, score = 100
            //   8b54241c             | mov                 edx, dword ptr [esp + 0x1c]
            //   8a4c040c             | mov                 cl, byte ptr [esp + eax + 0xc]
            //   c1ea10               | shr                 edx, 0x10
            //   32ca                 | xor                 cl, dl
            //   884c040c             | mov                 byte ptr [esp + eax + 0xc], cl
            //   40                   | inc                 eax
            //   83f813               | cmp                 eax, 0x13

        $sequence_7 = { 8a540408 8a4c2414 32d1 88540408 }
            // n = 4, score = 100
            //   8a540408             | mov                 dl, byte ptr [esp + eax + 8]
            //   8a4c2414             | mov                 cl, byte ptr [esp + 0x14]
            //   32d1                 | xor                 dl, cl
            //   88540408             | mov                 byte ptr [esp + eax + 8], dl

        $sequence_8 = { 8d8c24b4000000 51 33f6 e8???????? }
            // n = 4, score = 100
            //   8d8c24b4000000       | lea                 ecx, [esp + 0xb4]
            //   51                   | push                ecx
            //   33f6                 | xor                 esi, esi
            //   e8????????           |                     

        $sequence_9 = { 6689442410 894c2408 8954240c 33c0 8a540404 8a4c2410 32d1 }
            // n = 7, score = 100
            //   6689442410           | mov                 word ptr [esp + 0x10], ax
            //   894c2408             | mov                 dword ptr [esp + 8], ecx
            //   8954240c             | mov                 dword ptr [esp + 0xc], edx
            //   33c0                 | xor                 eax, eax
            //   8a540404             | mov                 dl, byte ptr [esp + eax + 4]
            //   8a4c2410             | mov                 cl, byte ptr [esp + 0x10]
            //   32d1                 | xor                 dl, cl

    condition:
        7 of them and filesize < 49152
}