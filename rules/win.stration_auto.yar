rule win_stration_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.stration."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stration"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 8d54240c 52 33f6 56 8d442418 50 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8d54240c             | lea                 edx, dword ptr [esp + 0xc]
            //   52                   | push                edx
            //   33f6                 | xor                 esi, esi
            //   56                   | push                esi
            //   8d442418             | lea                 eax, dword ptr [esp + 0x18]
            //   50                   | push                eax

        $sequence_1 = { 899424a0000000 668b15???????? 898424a4000000 898c24a8000000 }
            // n = 4, score = 100
            //   899424a0000000       | mov                 dword ptr [esp + 0xa0], edx
            //   668b15????????       |                     
            //   898424a4000000       | mov                 dword ptr [esp + 0xa4], eax
            //   898c24a8000000       | mov                 dword ptr [esp + 0xa8], ecx

        $sequence_2 = { c744241000000000 eb0c 8a0d???????? 880d???????? 6a01 56 }
            // n = 6, score = 100
            //   c744241000000000     | mov                 dword ptr [esp + 0x10], 0
            //   eb0c                 | jmp                 0xe
            //   8a0d????????         |                     
            //   880d????????         |                     
            //   6a01                 | push                1
            //   56                   | push                esi

        $sequence_3 = { 8d9424a0000000 52 8d8424b4000000 50 }
            // n = 4, score = 100
            //   8d9424a0000000       | lea                 edx, dword ptr [esp + 0xa0]
            //   52                   | push                edx
            //   8d8424b4000000       | lea                 eax, dword ptr [esp + 0xb4]
            //   50                   | push                eax

        $sequence_4 = { 894c2414 89542418 33c0 8a540410 8a4c241c }
            // n = 5, score = 100
            //   894c2414             | mov                 dword ptr [esp + 0x14], ecx
            //   89542418             | mov                 dword ptr [esp + 0x18], edx
            //   33c0                 | xor                 eax, eax
            //   8a540410             | mov                 dl, byte ptr [esp + eax + 0x10]
            //   8a4c241c             | mov                 cl, byte ptr [esp + 0x1c]

        $sequence_5 = { 0f85ba000000 a1???????? 8b0d???????? 8b15???????? }
            // n = 4, score = 100
            //   0f85ba000000         | jne                 0xc0
            //   a1????????           |                     
            //   8b0d????????         |                     
            //   8b15????????         |                     

        $sequence_6 = { 8b54241c 8a4c040c c1ea10 32ca 884c040c 40 83f813 }
            // n = 7, score = 100
            //   8b54241c             | mov                 edx, dword ptr [esp + 0x1c]
            //   8a4c040c             | mov                 cl, byte ptr [esp + eax + 0xc]
            //   c1ea10               | shr                 edx, 0x10
            //   32ca                 | xor                 cl, dl
            //   884c040c             | mov                 byte ptr [esp + eax + 0xc], cl
            //   40                   | inc                 eax
            //   83f813               | cmp                 eax, 0x13

        $sequence_7 = { 83c408 57 8bcf e8???????? 50 ba11010000 }
            // n = 6, score = 100
            //   83c408               | add                 esp, 8
            //   57                   | push                edi
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   50                   | push                eax
            //   ba11010000           | mov                 edx, 0x111

        $sequence_8 = { 7451 85ed 744d 85c0 7449 56 }
            // n = 6, score = 100
            //   7451                 | je                  0x53
            //   85ed                 | test                ebp, ebp
            //   744d                 | je                  0x4f
            //   85c0                 | test                eax, eax
            //   7449                 | je                  0x4b
            //   56                   | push                esi

        $sequence_9 = { 32d0 a1???????? 884c2424 8b0d???????? 88542423 8b15???????? }
            // n = 6, score = 100
            //   32d0                 | xor                 dl, al
            //   a1????????           |                     
            //   884c2424             | mov                 byte ptr [esp + 0x24], cl
            //   8b0d????????         |                     
            //   88542423             | mov                 byte ptr [esp + 0x23], dl
            //   8b15????????         |                     

    condition:
        7 of them and filesize < 49152
}