rule win_socks5_systemz_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.socks5_systemz."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.socks5_systemz"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 89857cfdffff 68???????? 8d8d50fdffff }
            // n = 4, score = 200
            //   e8????????           |                     
            //   89857cfdffff         | mov                 dword ptr [ebp - 0x284], eax
            //   68????????           |                     
            //   8d8d50fdffff         | lea                 ecx, [ebp - 0x2b0]

        $sequence_1 = { c68546ffffff88 c68547ffffff88 c68548ffffff83 c68549ffffff85 c6854affffff92 c6854bffffff83 }
            // n = 6, score = 200
            //   c68546ffffff88       | mov                 byte ptr [ebp - 0xba], 0x88
            //   c68547ffffff88       | mov                 byte ptr [ebp - 0xb9], 0x88
            //   c68548ffffff83       | mov                 byte ptr [ebp - 0xb8], 0x83
            //   c68549ffffff85       | mov                 byte ptr [ebp - 0xb7], 0x85
            //   c6854affffff92       | mov                 byte ptr [ebp - 0xb6], 0x92
            //   c6854bffffff83       | mov                 byte ptr [ebp - 0xb5], 0x83

        $sequence_2 = { e8???????? c645fc0e 8d8dd0feffff e8???????? 83ec08 8bcc }
            // n = 6, score = 200
            //   e8????????           |                     
            //   c645fc0e             | mov                 byte ptr [ebp - 4], 0xe
            //   8d8dd0feffff         | lea                 ecx, [ebp - 0x130]
            //   e8????????           |                     
            //   83ec08               | sub                 esp, 8
            //   8bcc                 | mov                 ecx, esp

        $sequence_3 = { 8bf0 8d4ddc 56 e8???????? 03fe 8d4d10 }
            // n = 6, score = 200
            //   8bf0                 | mov                 esi, eax
            //   8d4ddc               | lea                 ecx, [ebp - 0x24]
            //   56                   | push                esi
            //   e8????????           |                     
            //   03fe                 | add                 edi, esi
            //   8d4d10               | lea                 ecx, [ebp + 0x10]

        $sequence_4 = { 8bce e8???????? 8906 8bc6 5e c20400 }
            // n = 6, score = 200
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8906                 | mov                 dword ptr [esi], eax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   c20400               | ret                 4

        $sequence_5 = { e8???????? 8bce e8???????? 8d4510 c645fc02 50 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8d4510               | lea                 eax, [ebp + 0x10]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   50                   | push                eax

        $sequence_6 = { 8b4508 eb0f 8d4dec 51 8b4d08 e8???????? }
            // n = 6, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   eb0f                 | jmp                 0x11
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   51                   | push                ecx
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     

        $sequence_7 = { 8b45f0 83c024 50 ff15???????? 8b4df0 83c12c e8???????? }
            // n = 7, score = 200
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   83c024               | add                 eax, 0x24
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   83c12c               | add                 ecx, 0x2c
            //   e8????????           |                     

    condition:
        7 of them and filesize < 491520
}