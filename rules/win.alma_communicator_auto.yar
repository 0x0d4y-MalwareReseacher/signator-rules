rule win_alma_communicator_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.alma_communicator."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_communicator"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b9???????? 668b10 33f6 46 33db 663b11 }
            // n = 6, score = 100
            //   b9????????           |                     
            //   668b10               | mov                 dx, word ptr [eax]
            //   33f6                 | xor                 esi, esi
            //   46                   | inc                 esi
            //   33db                 | xor                 ebx, ebx
            //   663b11               | cmp                 dx, word ptr [ecx]

        $sequence_1 = { e8???????? 59 8b950cf8ffff 8bce e8???????? e9???????? 8a8328924100 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8b950cf8ffff         | mov                 edx, dword ptr [ebp - 0x7f4]
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   e9????????           |                     
            //   8a8328924100         | mov                 al, byte ptr [ebx + 0x419228]

        $sequence_2 = { 8d8544f4ffff 50 56 ff15???????? 6aff ffb5f0f3ffff 8bf8 }
            // n = 7, score = 100
            //   8d8544f4ffff         | lea                 eax, dword ptr [ebp - 0xbbc]
            //   50                   | push                eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   6aff                 | push                -1
            //   ffb5f0f3ffff         | push                dword ptr [ebp - 0xc10]
            //   8bf8                 | mov                 edi, eax

        $sequence_3 = { 7330 8d8dfcfdffff c68405fcfdffff00 e8???????? 6a00 8d85fcfdffff 50 }
            // n = 7, score = 100
            //   7330                 | jae                 0x32
            //   8d8dfcfdffff         | lea                 ecx, dword ptr [ebp - 0x204]
            //   c68405fcfdffff00     | mov                 byte ptr [ebp + eax - 0x204], 0
            //   e8????????           |                     
            //   6a00                 | push                0
            //   8d85fcfdffff         | lea                 eax, dword ptr [ebp - 0x204]
            //   50                   | push                eax

        $sequence_4 = { 75f5 a1???????? 8d55d4 8907 8bf2 33ff 668b0a }
            // n = 7, score = 100
            //   75f5                 | jne                 0xfffffff7
            //   a1????????           |                     
            //   8d55d4               | lea                 edx, dword ptr [ebp - 0x2c]
            //   8907                 | mov                 dword ptr [edi], eax
            //   8bf2                 | mov                 esi, edx
            //   33ff                 | xor                 edi, edi
            //   668b0a               | mov                 cx, word ptr [edx]

        $sequence_5 = { 668b4f02 03fe 663bca 75f5 ffb53cf7ffff 8907 6bc328 }
            // n = 7, score = 100
            //   668b4f02             | mov                 cx, word ptr [edi + 2]
            //   03fe                 | add                 edi, esi
            //   663bca               | cmp                 cx, dx
            //   75f5                 | jne                 0xfffffff7
            //   ffb53cf7ffff         | push                dword ptr [ebp - 0x8c4]
            //   8907                 | mov                 dword ptr [edi], eax
            //   6bc328               | imul                eax, ebx, 0x28

        $sequence_6 = { 663bc3 75f4 8bca 8d856cfbffff c1e902 f3a5 53 }
            // n = 7, score = 100
            //   663bc3               | cmp                 ax, bx
            //   75f4                 | jne                 0xfffffff6
            //   8bca                 | mov                 ecx, edx
            //   8d856cfbffff         | lea                 eax, dword ptr [ebp - 0x494]
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   53                   | push                ebx

        $sequence_7 = { 8bf2 668907 8a02 42 84c0 }
            // n = 5, score = 100
            //   8bf2                 | mov                 esi, edx
            //   668907               | mov                 word ptr [edi], ax
            //   8a02                 | mov                 al, byte ptr [edx]
            //   42                   | inc                 edx
            //   84c0                 | test                al, al

        $sequence_8 = { eb4a 8d8d58ffffff 83e902 668b4102 }
            // n = 4, score = 100
            //   eb4a                 | jmp                 0x4c
            //   8d8d58ffffff         | lea                 ecx, dword ptr [ebp - 0xa8]
            //   83e902               | sub                 ecx, 2
            //   668b4102             | mov                 ax, word ptr [ecx + 2]

        $sequence_9 = { 0fb64102 84c0 750a 6a03 5b }
            // n = 5, score = 100
            //   0fb64102             | movzx               eax, byte ptr [ecx + 2]
            //   84c0                 | test                al, al
            //   750a                 | jne                 0xc
            //   6a03                 | push                3
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 245760
}