rule win_alma_communicator_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.alma_communicator."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_communicator"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 59 898514ddffff 899d18ddffff 398510ddffff 0f8e6e020000 8b3487 ba???????? }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   898514ddffff         | mov                 dword ptr [ebp - 0x22ec], eax
            //   899d18ddffff         | mov                 dword ptr [ebp - 0x22e8], ebx
            //   398510ddffff         | cmp                 dword ptr [ebp - 0x22f0], eax
            //   0f8e6e020000         | jle                 0x274
            //   8b3487               | mov                 esi, dword ptr [edi + eax*4]
            //   ba????????           |                     

        $sequence_1 = { 59 ffb5f0f3ffff ffd6 ffb5f4f3ffff ffd6 8b4dfc 8bc7 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   ffb5f0f3ffff         | push                dword ptr [ebp - 0xc10]
            //   ffd6                 | call                esi
            //   ffb5f4f3ffff         | push                dword ptr [ebp - 0xc0c]
            //   ffd6                 | call                esi
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8bc7                 | mov                 eax, edi

        $sequence_2 = { 59 8b4c2424 46 3bf1 7cc0 8b442418 8b74241c }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   8b4c2424             | mov                 ecx, dword ptr [esp + 0x24]
            //   46                   | inc                 esi
            //   3bf1                 | cmp                 esi, ecx
            //   7cc0                 | jl                  0xffffffc2
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   8b74241c             | mov                 esi, dword ptr [esp + 0x1c]

        $sequence_3 = { 8bce 0fb7840d6cffffff 8d4902 6689840d6afbffff }
            // n = 4, score = 100
            //   8bce                 | mov                 ecx, esi
            //   0fb7840d6cffffff     | movzx               eax, word ptr [ebp + ecx - 0x94]
            //   8d4902               | lea                 ecx, dword ptr [ecx + 2]
            //   6689840d6afbffff     | mov                 word ptr [ebp + ecx - 0x496], ax

        $sequence_4 = { 8be5 5d c3 8a55ff ebc0 55 }
            // n = 6, score = 100
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8a55ff               | mov                 dl, byte ptr [ebp - 1]
            //   ebc0                 | jmp                 0xffffffc2
            //   55                   | push                ebp

        $sequence_5 = { 84c0 75f8 be???????? a5 66a5 a4 68b80b0000 }
            // n = 7, score = 100
            //   84c0                 | test                al, al
            //   75f8                 | jne                 0xfffffffa
            //   be????????           |                     
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   68b80b0000           | push                0xbb8

        $sequence_6 = { 7ced 8a4df9 8a45f8 8a55fa }
            // n = 4, score = 100
            //   7ced                 | jl                  0xffffffef
            //   8a4df9               | mov                 cl, byte ptr [ebp - 7]
            //   8a45f8               | mov                 al, byte ptr [ebp - 8]
            //   8a55fa               | mov                 dl, byte ptr [ebp - 6]

        $sequence_7 = { c1fa06 8934b8 8bc7 83e03f 6bc830 8b0495f08f4100 }
            // n = 6, score = 100
            //   c1fa06               | sar                 edx, 6
            //   8934b8               | mov                 dword ptr [eax + edi*4], esi
            //   8bc7                 | mov                 eax, edi
            //   83e03f               | and                 eax, 0x3f
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b0495f08f4100       | mov                 eax, dword ptr [edx*4 + 0x418ff0]

        $sequence_8 = { 8bd0 2bf8 0fb70a 66890c17 8d5202 6685c9 75f1 }
            // n = 7, score = 100
            //   8bd0                 | mov                 edx, eax
            //   2bf8                 | sub                 edi, eax
            //   0fb70a               | movzx               ecx, word ptr [edx]
            //   66890c17             | mov                 word ptr [edi + edx], cx
            //   8d5202               | lea                 edx, dword ptr [edx + 2]
            //   6685c9               | test                cx, cx
            //   75f1                 | jne                 0xfffffff3

        $sequence_9 = { e9???????? c745e014514100 e9???????? c745dc02000000 c745e014514100 8b4508 8bcf }
            // n = 7, score = 100
            //   e9????????           |                     
            //   c745e014514100       | mov                 dword ptr [ebp - 0x20], 0x415114
            //   e9????????           |                     
            //   c745dc02000000       | mov                 dword ptr [ebp - 0x24], 2
            //   c745e014514100       | mov                 dword ptr [ebp - 0x20], 0x415114
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8bcf                 | mov                 ecx, edi

    condition:
        7 of them and filesize < 245760
}