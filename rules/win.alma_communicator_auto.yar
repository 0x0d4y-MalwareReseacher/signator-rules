rule win_alma_communicator_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.alma_communicator."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alma_communicator"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 803933 755a 80790133 7554 0fb64102 84c0 }
            // n = 6, score = 100
            //   803933               | cmp                 byte ptr [ecx], 0x33
            //   755a                 | jne                 0x5c
            //   80790133             | cmp                 byte ptr [ecx + 1], 0x33
            //   7554                 | jne                 0x56
            //   0fb64102             | movzx               eax, byte ptr [ecx + 2]
            //   84c0                 | test                al, al

        $sequence_1 = { 8bcf 8b06 8b1483 8a01 41 8802 }
            // n = 6, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b1483               | mov                 edx, dword ptr [ebx + eax*4]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx
            //   8802                 | mov                 byte ptr [edx], al

        $sequence_2 = { ff742414 e8???????? 59 59 e9???????? 68e8030000 }
            // n = 6, score = 100
            //   ff742414             | push                dword ptr [esp + 0x14]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   e9????????           |                     
            //   68e8030000           | push                0x3e8

        $sequence_3 = { 8d85fcfdffff 50 ff15???????? 83f8ff 7404 a810 }
            // n = 6, score = 100
            //   8d85fcfdffff         | lea                 eax, [ebp - 0x204]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   7404                 | je                  6
            //   a810                 | test                al, 0x10

        $sequence_4 = { 2bf9 8d4b01 8a03 43 84c0 75f9 8b55ec }
            // n = 7, score = 100
            //   2bf9                 | sub                 edi, ecx
            //   8d4b01               | lea                 ecx, [ebx + 1]
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   43                   | inc                 ebx
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]

        $sequence_5 = { 47 84c0 75f8 be???????? 8d85fcfbffff 68ff010000 50 }
            // n = 7, score = 100
            //   47                   | inc                 edi
            //   84c0                 | test                al, al
            //   75f8                 | jne                 0xfffffffa
            //   be????????           |                     
            //   8d85fcfbffff         | lea                 eax, [ebp - 0x404]
            //   68ff010000           | push                0x1ff
            //   50                   | push                eax

        $sequence_6 = { 68???????? 6a00 ff15???????? e8???????? 8b4dfc }
            // n = 5, score = 100
            //   68????????           |                     
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_7 = { 83c40c 03df 8b7df0 8b45ec c6041f00 8918 }
            // n = 6, score = 100
            //   83c40c               | add                 esp, 0xc
            //   03df                 | add                 ebx, edi
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   c6041f00             | mov                 byte ptr [edi + ebx], 0
            //   8918                 | mov                 dword ptr [eax], ebx

        $sequence_8 = { ba???????? 8d8d08faffff e8???????? 3df4010000 0f83d0010000 c6840508faffff00 33c9 }
            // n = 7, score = 100
            //   ba????????           |                     
            //   8d8d08faffff         | lea                 ecx, [ebp - 0x5f8]
            //   e8????????           |                     
            //   3df4010000           | cmp                 eax, 0x1f4
            //   0f83d0010000         | jae                 0x1d6
            //   c6840508faffff00     | mov                 byte ptr [ebp + eax - 0x5f8], 0
            //   33c9                 | xor                 ecx, ecx

        $sequence_9 = { a1???????? 8b15???????? 8bf2 8907 }
            // n = 4, score = 100
            //   a1????????           |                     
            //   8b15????????         |                     
            //   8bf2                 | mov                 esi, edx
            //   8907                 | mov                 dword ptr [edi], eax

    condition:
        7 of them and filesize < 245760
}