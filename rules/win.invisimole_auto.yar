rule win_invisimole_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.invisimole."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.invisimole"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645fe00 ff15???????? 8b15???????? 40 50 6a08 52 }
            // n = 7, score = 100
            //   c645fe00             | mov                 byte ptr [ebp - 2], 0
            //   ff15????????         |                     
            //   8b15????????         |                     
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   6a08                 | push                8
            //   52                   | push                edx

        $sequence_1 = { 83eb04 8b55f4 52 56 ff15???????? 837df800 7e23 }
            // n = 7, score = 100
            //   83eb04               | sub                 ebx, 4
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   52                   | push                edx
            //   56                   | push                esi
            //   ff15????????         |                     
            //   837df800             | cmp                 dword ptr [ebp - 8], 0
            //   7e23                 | jle                 0x25

        $sequence_2 = { 8b03 8b4808 53 ffd1 eb10 c7459302000000 }
            // n = 6, score = 100
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8b4808               | mov                 ecx, dword ptr [eax + 8]
            //   53                   | push                ebx
            //   ffd1                 | call                ecx
            //   eb10                 | jmp                 0x12
            //   c7459302000000       | mov                 dword ptr [ebp - 0x6d], 2

        $sequence_3 = { 8902 ff15???????? eb0b ff15???????? 8b4d1c 8901 8b55f0 }
            // n = 7, score = 100
            //   8902                 | mov                 dword ptr [edx], eax
            //   ff15????????         |                     
            //   eb0b                 | jmp                 0xd
            //   ff15????????         |                     
            //   8b4d1c               | mov                 ecx, dword ptr [ebp + 0x1c]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]

        $sequence_4 = { 8bec 83ec4c 53 56 8bf0 57 8d45b4 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   83ec4c               | sub                 esp, 0x4c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8bf0                 | mov                 esi, eax
            //   57                   | push                edi
            //   8d45b4               | lea                 eax, [ebp - 0x4c]

        $sequence_5 = { 57 b802000000 668945bd 8b4508 56 8d55bc 52 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   b802000000           | mov                 eax, 2
            //   668945bd             | mov                 word ptr [ebp - 0x43], ax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8d55bc               | lea                 edx, [ebp - 0x44]
            //   52                   | push                edx

        $sequence_6 = { 57 e8???????? 8b4604 291e 2918 8b4e04 8b5104 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   291e                 | sub                 dword ptr [esi], ebx
            //   2918                 | sub                 dword ptr [eax], ebx
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]

        $sequence_7 = { 8d8550faffff 50 ff15???????? 6683bc454efaffff2f c645fc01 7503 885dfc }
            // n = 7, score = 100
            //   8d8550faffff         | lea                 eax, [ebp - 0x5b0]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6683bc454efaffff2f     | cmp    word ptr [ebp + eax*2 - 0x5b2], 0x2f
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   7503                 | jne                 5
            //   885dfc               | mov                 byte ptr [ebp - 4], bl

        $sequence_8 = { 83c02a e8???????? 8b4f48 8b4508 8b5104 83c004 }
            // n = 6, score = 100
            //   83c02a               | add                 eax, 0x2a
            //   e8????????           |                     
            //   8b4f48               | mov                 ecx, dword ptr [edi + 0x48]
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   83c004               | add                 eax, 4

        $sequence_9 = { c3 8b0d???????? 8d441b02 50 }
            // n = 4, score = 100
            //   c3                   | ret                 
            //   8b0d????????         |                     
            //   8d441b02             | lea                 eax, [ebx + ebx + 2]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 139264
}