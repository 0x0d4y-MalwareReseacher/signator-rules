rule win_winsloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.winsloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.winsloader"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2bc1 0fb6f8 888435fefbffff 8d4701 50 }
            // n = 5, score = 200
            //   2bc1                 | sub                 eax, ecx
            //   0fb6f8               | movzx               edi, al
            //   888435fefbffff       | mov                 byte ptr [ebp + esi - 0x402], al
            //   8d4701               | lea                 eax, [edi + 1]
            //   50                   | push                eax

        $sequence_1 = { 8dbbdf000000 b911000000 be???????? f3a5 83c40c a4 }
            // n = 6, score = 200
            //   8dbbdf000000         | lea                 edi, [ebx + 0xdf]
            //   b911000000           | mov                 ecx, 0x11
            //   be????????           |                     
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   83c40c               | add                 esp, 0xc
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]

        $sequence_2 = { e8???????? 6689841dfcfbffff b8???????? 83c410 8d7001 8d9b00000000 8a08 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   6689841dfcfbffff     | mov                 word ptr [ebp + ebx - 0x404], ax
            //   b8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8d7001               | lea                 esi, [eax + 1]
            //   8d9b00000000         | lea                 ebx, [ebx]
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_3 = { 66c7841d0efcffff4501 8d7001 8a08 40 84c9 75f9 2bc6 }
            // n = 7, score = 200
            //   66c7841d0efcffff4501     | mov    word ptr [ebp + ebx - 0x3f2], 0x145
            //   8d7001               | lea                 esi, [eax + 1]
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl
            //   75f9                 | jne                 0xfffffffb
            //   2bc6                 | sub                 eax, esi

        $sequence_4 = { 33c0 e8???????? 8be5 5d c20400 3b0d???????? }
            // n = 6, score = 200
            //   33c0                 | xor                 eax, eax
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   3b0d????????         |                     

        $sequence_5 = { 8bd8 c745fcffffffff 85db 7516 56 }
            // n = 5, score = 200
            //   8bd8                 | mov                 ebx, eax
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   85db                 | test                ebx, ebx
            //   7516                 | jne                 0x18
            //   56                   | push                esi

        $sequence_6 = { 2bc1 0fb7c0 56 8bf0 56 668985fefbffff 8d8500fcffff }
            // n = 7, score = 200
            //   2bc1                 | sub                 eax, ecx
            //   0fb7c0               | movzx               eax, ax
            //   56                   | push                esi
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   668985fefbffff       | mov                 word ptr [ebp - 0x402], ax
            //   8d8500fcffff         | lea                 eax, [ebp - 0x400]

        $sequence_7 = { 8d4701 50 8d8c35fffbffff 68???????? 51 e8???????? }
            // n = 6, score = 200
            //   8d4701               | lea                 eax, [edi + 1]
            //   50                   | push                eax
            //   8d8c35fffbffff       | lea                 ecx, [ebp + esi - 0x401]
            //   68????????           |                     
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_8 = { 83c40c 6800040000 8d8dfcf7ffff 51 }
            // n = 4, score = 200
            //   83c40c               | add                 esp, 0xc
            //   6800040000           | push                0x400
            //   8d8dfcf7ffff         | lea                 ecx, [ebp - 0x804]
            //   51                   | push                ecx

        $sequence_9 = { 3bd3 72f3 8b742410 8b4c2414 }
            // n = 4, score = 100
            //   3bd3                 | cmp                 edx, ebx
            //   72f3                 | jb                  0xfffffff5
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]

        $sequence_10 = { 8bec 8b4508 33c9 53 56 57 8d1c85ccbf0110 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33c9                 | xor                 ecx, ecx
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d1c85ccbf0110       | lea                 ebx, [eax*4 + 0x1001bfcc]

        $sequence_11 = { 57 8bf9 33c0 8945fc 8a8f19800000 84c9 746c }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8bf9                 | mov                 edi, ecx
            //   33c0                 | xor                 eax, eax
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8a8f19800000         | mov                 cl, byte ptr [edi + 0x8019]
            //   84c9                 | test                cl, cl
            //   746c                 | je                  0x6e

        $sequence_12 = { 8b95f8f3ffff c68415fcfbffff45 8b85f8f3ffff 83c001 8985f8f3ffff 8b8df8f3ffff c6840dfcfbffff01 }
            // n = 7, score = 100
            //   8b95f8f3ffff         | mov                 edx, dword ptr [ebp - 0xc08]
            //   c68415fcfbffff45     | mov                 byte ptr [ebp + edx - 0x404], 0x45
            //   8b85f8f3ffff         | mov                 eax, dword ptr [ebp - 0xc08]
            //   83c001               | add                 eax, 1
            //   8985f8f3ffff         | mov                 dword ptr [ebp - 0xc08], eax
            //   8b8df8f3ffff         | mov                 ecx, dword ptr [ebp - 0xc08]
            //   c6840dfcfbffff01     | mov                 byte ptr [ebp + ecx - 0x404], 1

        $sequence_13 = { 8b95f8f3ffff 83c202 8995f8f3ffff 0fb785f0f3ffff 50 }
            // n = 5, score = 100
            //   8b95f8f3ffff         | mov                 edx, dword ptr [ebp - 0xc08]
            //   83c202               | add                 edx, 2
            //   8995f8f3ffff         | mov                 dword ptr [ebp - 0xc08], edx
            //   0fb785f0f3ffff       | movzx               eax, word ptr [ebp - 0xc10]
            //   50                   | push                eax

        $sequence_14 = { 50 e8???????? 83c408 85c0 7466 40 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7466                 | je                  0x68
            //   40                   | inc                 eax

        $sequence_15 = { 8d45e0 0f57c0 50 0f1145e0 e8???????? 6a10 }
            // n = 6, score = 100
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   0f57c0               | xorps               xmm0, xmm0
            //   50                   | push                eax
            //   0f1145e0             | movups              xmmword ptr [ebp - 0x20], xmm0
            //   e8????????           |                     
            //   6a10                 | push                0x10

    condition:
        7 of them and filesize < 270336
}