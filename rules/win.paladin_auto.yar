rule win_paladin_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.paladin."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.paladin"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffd3 8b17 8b4e10 2bc2 3bc1 7317 8b2d???????? }
            // n = 7, score = 200
            //   ffd3                 | call                ebx
            //   8b17                 | mov                 edx, dword ptr [edi]
            //   8b4e10               | mov                 ecx, dword ptr [esi + 0x10]
            //   2bc2                 | sub                 eax, edx
            //   3bc1                 | cmp                 eax, ecx
            //   7317                 | jae                 0x19
            //   8b2d????????         |                     

        $sequence_1 = { 57 a3???????? ff15???????? 85c0 752b 8b3f }
            // n = 6, score = 200
            //   57                   | push                edi
            //   a3????????           |                     
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   752b                 | jne                 0x2d
            //   8b3f                 | mov                 edi, dword ptr [edi]

        $sequence_2 = { ffd3 8d55ef 6a01 52 8d8de8feffff 8bf8 c645ef2b }
            // n = 7, score = 200
            //   ffd3                 | call                ebx
            //   8d55ef               | lea                 edx, [ebp - 0x11]
            //   6a01                 | push                1
            //   52                   | push                edx
            //   8d8de8feffff         | lea                 ecx, [ebp - 0x118]
            //   8bf8                 | mov                 edi, eax
            //   c645ef2b             | mov                 byte ptr [ebp - 0x11], 0x2b

        $sequence_3 = { 56 ffd7 68???????? 56 ffd7 8bd8 }
            // n = 6, score = 200
            //   56                   | push                esi
            //   ffd7                 | call                edi
            //   68????????           |                     
            //   56                   | push                esi
            //   ffd7                 | call                edi
            //   8bd8                 | mov                 ebx, eax

        $sequence_4 = { c744241430a80010 8b7c2414 8b2d???????? 57 56 8d842478020000 68???????? }
            // n = 7, score = 200
            //   c744241430a80010     | mov                 dword ptr [esp + 0x14], 0x1000a830
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   8b2d????????         |                     
            //   57                   | push                edi
            //   56                   | push                esi
            //   8d842478020000       | lea                 eax, [esp + 0x278]
            //   68????????           |                     

        $sequence_5 = { 50 c705????????01000000 ff15???????? 8b2d???????? 8d8c249c010000 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   c705????????01000000     |     
            //   ff15????????         |                     
            //   8b2d????????         |                     
            //   8d8c249c010000       | lea                 ecx, [esp + 0x19c]

        $sequence_6 = { 8d8db8feffff 51 56 ffd3 85c0 }
            // n = 5, score = 200
            //   8d8db8feffff         | lea                 ecx, [ebp - 0x148]
            //   51                   | push                ecx
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax

        $sequence_7 = { e8???????? 8b4c2440 83c438 894614 8bc6 5e 64890d00000000 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8b4c2440             | mov                 ecx, dword ptr [esp + 0x40]
            //   83c438               | add                 esp, 0x38
            //   894614               | mov                 dword ptr [esi + 0x14], eax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx

        $sequence_8 = { 6a05 57 8bcb e8???????? 8d6e7c 8bcd }
            // n = 6, score = 200
            //   6a05                 | push                5
            //   57                   | push                edi
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   8d6e7c               | lea                 ebp, [esi + 0x7c]
            //   8bcd                 | mov                 ecx, ebp

        $sequence_9 = { e8???????? 84c0 0f84bf000000 ffd3 }
            // n = 4, score = 200
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   0f84bf000000         | je                  0xc5
            //   ffd3                 | call                ebx

    condition:
        7 of them and filesize < 106496
}