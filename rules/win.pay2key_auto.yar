rule win_pay2key_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.pay2key."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pay2key"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5b 5d c3 8b7508 6a09 56 e8???????? }
            // n = 7, score = 300
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   6a09                 | push                9
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_1 = { 6a00 8d8598e5ffff 50 ff15???????? 85c0 0f8500010000 837d1c08 }
            // n = 7, score = 300
            //   6a00                 | push                0
            //   8d8598e5ffff         | lea                 eax, dword ptr [ebp - 0x1a68]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8500010000         | jne                 0x106
            //   837d1c08             | cmp                 dword ptr [ebp + 0x1c], 8

        $sequence_2 = { e8???????? 8d4d08 e8???????? 8b4528 83f808 720d 40 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   8d4d08               | lea                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8b4528               | mov                 eax, dword ptr [ebp + 0x28]
            //   83f808               | cmp                 eax, 8
            //   720d                 | jb                  0xf
            //   40                   | inc                 eax

        $sequence_3 = { 683f270000 e8???????? 8bc7 5f c3 81fafa2a0000 7f3b }
            // n = 7, score = 300
            //   683f270000           | push                0x273f
            //   e8????????           |                     
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi
            //   c3                   | ret                 
            //   81fafa2a0000         | cmp                 edx, 0x2afa
            //   7f3b                 | jg                  0x3d

        $sequence_4 = { c745e00f000000 c745dc00000000 c645cc00 e8???????? 0fb6461c 8845e4 8b4620 }
            // n = 7, score = 300
            //   c745e00f000000       | mov                 dword ptr [ebp - 0x20], 0xf
            //   c745dc00000000       | mov                 dword ptr [ebp - 0x24], 0
            //   c645cc00             | mov                 byte ptr [ebp - 0x34], 0
            //   e8????????           |                     
            //   0fb6461c             | movzx               eax, byte ptr [esi + 0x1c]
            //   8845e4               | mov                 byte ptr [ebp - 0x1c], al
            //   8b4620               | mov                 eax, dword ptr [esi + 0x20]

        $sequence_5 = { 8d7370 ff7140 ff713c 8d4b70 50 56 e8???????? }
            // n = 7, score = 300
            //   8d7370               | lea                 esi, dword ptr [ebx + 0x70]
            //   ff7140               | push                dword ptr [ecx + 0x40]
            //   ff713c               | push                dword ptr [ecx + 0x3c]
            //   8d4b70               | lea                 ecx, dword ptr [ebx + 0x70]
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_6 = { 7426 c702???????? 8b4608 894208 8b460c 89420c 0fb64e10 }
            // n = 7, score = 300
            //   7426                 | je                  0x28
            //   c702????????         |                     
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   894208               | mov                 dword ptr [edx + 8], eax
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   89420c               | mov                 dword ptr [edx + 0xc], eax
            //   0fb64e10             | movzx               ecx, byte ptr [esi + 0x10]

        $sequence_7 = { c6455000 83f810 720d 40 8d4d68 50 ff7568 }
            // n = 7, score = 300
            //   c6455000             | mov                 byte ptr [ebp + 0x50], 0
            //   83f810               | cmp                 eax, 0x10
            //   720d                 | jb                  0xf
            //   40                   | inc                 eax
            //   8d4d68               | lea                 ecx, dword ptr [ebp + 0x68]
            //   50                   | push                eax
            //   ff7568               | push                dword ptr [ebp + 0x68]

        $sequence_8 = { ff7608 ffd7 85c0 7517 68a0000000 68???????? }
            // n = 6, score = 300
            //   ff7608               | push                dword ptr [esi + 8]
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   7517                 | jne                 0x19
            //   68a0000000           | push                0xa0
            //   68????????           |                     

        $sequence_9 = { 668910 e8???????? 83ec18 c645fc07 8bcc c7411407000000 c7411000000000 }
            // n = 7, score = 300
            //   668910               | mov                 word ptr [eax], dx
            //   e8????????           |                     
            //   83ec18               | sub                 esp, 0x18
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   8bcc                 | mov                 ecx, esp
            //   c7411407000000       | mov                 dword ptr [ecx + 0x14], 7
            //   c7411000000000       | mov                 dword ptr [ecx + 0x10], 0

    condition:
        7 of them and filesize < 2252800
}