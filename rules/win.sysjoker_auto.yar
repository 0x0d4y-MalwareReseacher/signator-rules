rule win_sysjoker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.sysjoker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sysjoker"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc7 8b55b4 83c2f0 f00fc1420c 48 85c0 7f08 }
            // n = 7, score = 100
            //   8bc7                 | mov                 eax, edi
            //   8b55b4               | mov                 edx, dword ptr [ebp - 0x4c]
            //   83c2f0               | add                 edx, -0x10
            //   f00fc1420c           | lock xadd           dword ptr [edx + 0xc], eax
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax
            //   7f08                 | jg                  0xa

        $sequence_1 = { c745fc00000000 8d4da4 e8???????? 83c404 8bc8 c645fc01 }
            // n = 6, score = 100
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   8d4da4               | lea                 ecx, [ebp - 0x5c]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bc8                 | mov                 ecx, eax
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1

        $sequence_2 = { 8bc1 83e13f c1f806 6bc938 8b0485c0fc4500 f644082801 7406 }
            // n = 7, score = 100
            //   8bc1                 | mov                 eax, ecx
            //   83e13f               | and                 ecx, 0x3f
            //   c1f806               | sar                 eax, 6
            //   6bc938               | imul                ecx, ecx, 0x38
            //   8b0485c0fc4500       | mov                 eax, dword ptr [eax*4 + 0x45fcc0]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7406                 | je                  8

        $sequence_3 = { e9???????? c3 8d8d28ffffff e9???????? 8d8d3cffffff e9???????? }
            // n = 6, score = 100
            //   e9????????           |                     
            //   c3                   | ret                 
            //   8d8d28ffffff         | lea                 ecx, [ebp - 0xd8]
            //   e9????????           |                     
            //   8d8d3cffffff         | lea                 ecx, [ebp - 0xc4]
            //   e9????????           |                     

        $sequence_4 = { 8945e4 c745fc00000000 8bce ff750c e8???????? 8b45e0 8975cc }
            // n = 7, score = 100
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   8bce                 | mov                 ecx, esi
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8975cc               | mov                 dword ptr [ebp - 0x34], esi

        $sequence_5 = { 52 e8???????? eb12 2bd1 740b 8bfb 8bca }
            // n = 7, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   eb12                 | jmp                 0x14
            //   2bd1                 | sub                 edx, ecx
            //   740b                 | je                  0xd
            //   8bfb                 | mov                 edi, ebx
            //   8bca                 | mov                 ecx, edx

        $sequence_6 = { c645fc33 8d8df4fdffff e8???????? 83c404 50 ba31010000 c645fc34 }
            // n = 7, score = 100
            //   c645fc33             | mov                 byte ptr [ebp - 4], 0x33
            //   8d8df4fdffff         | lea                 ecx, [ebp - 0x20c]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   50                   | push                eax
            //   ba31010000           | mov                 edx, 0x131
            //   c645fc34             | mov                 byte ptr [ebp - 4], 0x34

        $sequence_7 = { c645fc05 8bc7 8b55e8 83c2f0 f00fc1420c 48 85c0 }
            // n = 7, score = 100
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5
            //   8bc7                 | mov                 eax, edi
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   83c2f0               | add                 edx, -0x10
            //   f00fc1420c           | lock xadd           dword ptr [edx + 0xc], eax
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax

        $sequence_8 = { e9???????? e8???????? 8b5588 83fa10 722f 8b8d74ffffff 42 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   e8????????           |                     
            //   8b5588               | mov                 edx, dword ptr [ebp - 0x78]
            //   83fa10               | cmp                 edx, 0x10
            //   722f                 | jb                  0x31
            //   8b8d74ffffff         | mov                 ecx, dword ptr [ebp - 0x8c]
            //   42                   | inc                 edx

        $sequence_9 = { c745dc00000000 6afe 8d45f0 50 68???????? e8???????? 83c40c }
            // n = 7, score = 100
            //   c745dc00000000       | mov                 dword ptr [ebp - 0x24], 0
            //   6afe                 | push                -2
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

    condition:
        7 of them and filesize < 832512
}