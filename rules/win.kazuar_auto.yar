rule win_kazuar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.kazuar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kazuar"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb07 48ffc3 ebc8 31c0 4883c420 5b }
            // n = 6, score = 300
            //   eb07                 | mov                 ecx, ebx
            //   48ffc3               | test                eax, eax
            //   ebc8                 | jne                 0x183
            //   31c0                 | mov                 dword ptr [ebx], 0x80004005
            //   4883c420             | mov                 dword ptr [ebx + 4], 0x168
            //   5b                   | mov                 edi, 0x80004005

        $sequence_1 = { 31c0 4885db 7428 4989db }
            // n = 4, score = 300
            //   31c0                 | dec                 ecx
            //   4885db               | mov                 edx, ecx
            //   7428                 | je                  0x32
            //   4989db               | xor                 eax, eax

        $sequence_2 = { 894c2414 8d8b00020000 890424 894c2410 8d8b80030000 894c240c }
            // n = 6, score = 300
            //   894c2414             | mov                 ecx, ebx
            //   8d8b00020000         | dec                 eax
            //   890424               | lea                 ebx, [esp + 0x2c]
            //   894c2410             | dec                 eax
            //   8d8b80030000         | mov                 edx, ebx
            //   894c240c             | test                eax, eax

        $sequence_3 = { 890424 89542408 ffd1 83ec0c 85c0 }
            // n = 5, score = 300
            //   890424               | push                ebx
            //   89542408             | dec                 eax
            //   ffd1                 | sub                 esp, 0x20
            //   83ec0c               | xor                 ebx, ebx
            //   85c0                 | dec                 eax

        $sequence_4 = { 4889c1 4989c0 e8???????? 4c8d4c2428 31d2 31c9 01c0 }
            // n = 7, score = 300
            //   4889c1               | push                ebp
            //   4989c0               | cmp                 cx, 0x19
            //   e8????????           |                     
            //   4c8d4c2428           | lea                 eax, [ebp - 0x14]
            //   31d2                 | mov                 dword ptr [esp], 0
            //   31c9                 | mov                 dword ptr [esp + 0xc], eax
            //   01c0                 | lea                 eax, [ebp - 0x10]

        $sequence_5 = { 4c89442438 6689442430 4c8d442430 83c002 6689442432 48c744242800000000 }
            // n = 6, score = 300
            //   4c89442438           | dec                 eax
            //   6689442430           | lea                 edx, [0xf13]
            //   4c8d442430           | dec                 eax
            //   83c002               | mov                 ecx, ebx
            //   6689442432           | test                eax, eax
            //   48c744242800000000     | dec    ecx

        $sequence_6 = { 31d2 31c9 01c0 4c89442438 6689442430 4c8d442430 }
            // n = 6, score = 300
            //   31d2                 | mov                 dword ptr [esp + 4], eax
            //   31c9                 | mov                 edx, dword ptr [ebp - 0x2c]
            //   01c0                 | mov                 dword ptr [esp + 0xc], edi
            //   4c89442438           | mov                 dword ptr [esp + 0x14], esi
            //   6689442430           | mov                 dword ptr [esp + 8], 0
            //   4c8d442430           | mov                 dword ptr [esp + 4], eax

        $sequence_7 = { e8???????? 0fbec0 41ffc1 4131c0 4569c097010001 ebdd 4489c0 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   0fbec0               | mov                 dword ptr [esp + 0xc], eax
            //   41ffc1               | mov                 word ptr [ebp - 0xe], ax
            //   4131c0               | lea                 eax, [ebp - 0x14]
            //   4569c097010001       | mov                 dword ptr [esp], 0
            //   ebdd                 | mov                 dword ptr [esp + 0xc], eax
            //   4489c0               | lea                 eax, [ebp - 0x10]

        $sequence_8 = { 4989cb 89d7 7463 4863493c }
            // n = 4, score = 300
            //   4989cb               | je                  0xe6
            //   89d7                 | inc                 ebp
            //   7463                 | xor                 ecx, ecx
            //   4863493c             | dec                 eax

        $sequence_9 = { 4989cb 89d7 7463 4863493c 4c01d9 }
            // n = 5, score = 300
            //   4989cb               | je                  0x99
            //   89d7                 | cmp                 word ptr [eax + edx*2], 0
            //   7463                 | xor                 eax, ebx
            //   4863493c             | imul                ebx, eax, 0x1000197
            //   4c01d9               | jmp                 0x80

    condition:
        7 of them and filesize < 81920
}