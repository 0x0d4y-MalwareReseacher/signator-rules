rule win_xbtl_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.xbtl."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xbtl"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? ff4f24 56 ff15???????? 8b8c24a4000000 5f 5e }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   ff4f24               | dec                 dword ptr [edi + 0x24]
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b8c24a4000000       | mov                 ecx, dword ptr [esp + 0xa4]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_1 = { 8d45fc 50 33ff 6a08 897df8 }
            // n = 5, score = 100
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   33ff                 | xor                 edi, edi
            //   6a08                 | push                8
            //   897df8               | mov                 dword ptr [ebp - 8], edi

        $sequence_2 = { 8b4320 8b95e0fcffff 50 8d8df4feffff 68???????? 51 c6047200 }
            // n = 7, score = 100
            //   8b4320               | mov                 eax, dword ptr [ebx + 0x20]
            //   8b95e0fcffff         | mov                 edx, dword ptr [ebp - 0x320]
            //   50                   | push                eax
            //   8d8df4feffff         | lea                 ecx, [ebp - 0x10c]
            //   68????????           |                     
            //   51                   | push                ecx
            //   c6047200             | mov                 byte ptr [edx + esi*2], 0

        $sequence_3 = { 49 0fbfd1 66894804 8b480c 837c91fc00 74e4 }
            // n = 6, score = 100
            //   49                   | dec                 ecx
            //   0fbfd1               | movsx               edx, cx
            //   66894804             | mov                 word ptr [eax + 4], cx
            //   8b480c               | mov                 ecx, dword ptr [eax + 0xc]
            //   837c91fc00           | cmp                 dword ptr [ecx + edx*4 - 4], 0
            //   74e4                 | je                  0xffffffe6

        $sequence_4 = { c3 8b720c 0fbfc9 57 8b780c 49 33c0 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8b720c               | mov                 esi, dword ptr [edx + 0xc]
            //   0fbfc9               | movsx               ecx, cx
            //   57                   | push                edi
            //   8b780c               | mov                 edi, dword ptr [eax + 0xc]
            //   49                   | dec                 ecx
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 84c0 7429 0fb63e 0fb6c0 eb12 8b45e0 8a803c884100 }
            // n = 7, score = 100
            //   84c0                 | test                al, al
            //   7429                 | je                  0x2b
            //   0fb63e               | movzx               edi, byte ptr [esi]
            //   0fb6c0               | movzx               eax, al
            //   eb12                 | jmp                 0x14
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8a803c884100         | mov                 al, byte ptr [eax + 0x41883c]

        $sequence_6 = { 8d0cdd00000000 d3e7 43 0138 83fb04 7506 33db }
            // n = 7, score = 100
            //   8d0cdd00000000       | lea                 ecx, [ebx*8]
            //   d3e7                 | shl                 edi, cl
            //   43                   | inc                 ebx
            //   0138                 | add                 dword ptr [eax], edi
            //   83fb04               | cmp                 ebx, 4
            //   7506                 | jne                 8
            //   33db                 | xor                 ebx, ebx

        $sequence_7 = { 57 ff15???????? 85c0 740d 8b45f8 3945fc 7505 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   3945fc               | cmp                 dword ptr [ebp - 4], eax
            //   7505                 | jne                 7

        $sequence_8 = { 33ce 81e200ff0000 33ca 3308 }
            // n = 4, score = 100
            //   33ce                 | xor                 ecx, esi
            //   81e200ff0000         | and                 edx, 0xff00
            //   33ca                 | xor                 ecx, edx
            //   3308                 | xor                 ecx, dword ptr [eax]

        $sequence_9 = { 8930 8b5104 8bf2 c1ce08 81e600ff00ff c1c208 }
            // n = 6, score = 100
            //   8930                 | mov                 dword ptr [eax], esi
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   8bf2                 | mov                 esi, edx
            //   c1ce08               | ror                 esi, 8
            //   81e600ff00ff         | and                 esi, 0xff00ff00
            //   c1c208               | rol                 edx, 8

    condition:
        7 of them and filesize < 401408
}