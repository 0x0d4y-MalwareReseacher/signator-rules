rule win_lilith_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.lilith."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lilith"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b55e8 8b0485a84b4300 f644022880 74a9 807dff02 7417 }
            // n = 6, score = 200
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   8b0485a84b4300       | mov                 eax, dword ptr [eax*4 + 0x434ba8]
            //   f644022880           | test                byte ptr [edx + eax + 0x28], 0x80
            //   74a9                 | je                  0xffffffab
            //   807dff02             | cmp                 byte ptr [ebp - 1], 2
            //   7417                 | je                  0x19

        $sequence_1 = { 837de800 0f8480000000 8b4df8 6a0a 8b048da84b4300 }
            // n = 5, score = 200
            //   837de800             | cmp                 dword ptr [ebp - 0x18], 0
            //   0f8480000000         | je                  0x86
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   6a0a                 | push                0xa
            //   8b048da84b4300       | mov                 eax, dword ptr [ecx*4 + 0x434ba8]

        $sequence_2 = { 8bc1 8b4d08 894df0 8d4df8 51 }
            // n = 5, score = 200
            //   8bc1                 | mov                 eax, ecx
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   8d4df8               | lea                 ecx, [ebp - 8]
            //   51                   | push                ecx

        $sequence_3 = { 6880000000 8d8564ffffff c78560ffffff00000000 6a00 }
            // n = 4, score = 200
            //   6880000000           | push                0x80
            //   8d8564ffffff         | lea                 eax, [ebp - 0x9c]
            //   c78560ffffff00000000     | mov    dword ptr [ebp - 0xa0], 0
            //   6a00                 | push                0

        $sequence_4 = { 32dc 326c3974 397c3984 398c3994399c39 }
            // n = 4, score = 200
            //   32dc                 | xor                 bl, ah
            //   326c3974             | xor                 ch, byte ptr [ecx + edi + 0x74]
            //   397c3984             | cmp                 dword ptr [ecx + edi - 0x7c], edi
            //   398c3994399c39       | cmp                 dword ptr [ecx + edi + 0x399c3994], ecx

        $sequence_5 = { 8d7e90 8b4004 c744309048ef4200 8b07 8b4804 8d4190 }
            // n = 6, score = 200
            //   8d7e90               | lea                 edi, [esi - 0x70]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   c744309048ef4200     | mov                 dword ptr [eax + esi - 0x70], 0x42ef48
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8d4190               | lea                 eax, [ecx - 0x70]

        $sequence_6 = { eb12 0c80 88441628 8b0cbda84b4300 }
            // n = 4, score = 200
            //   eb12                 | jmp                 0x14
            //   0c80                 | or                  al, 0x80
            //   88441628             | mov                 byte ptr [esi + edx + 0x28], al
            //   8b0cbda84b4300       | mov                 ecx, dword ptr [edi*4 + 0x434ba8]

        $sequence_7 = { 33c9 8bc1 3914c5e0864200 7408 40 }
            // n = 5, score = 200
            //   33c9                 | xor                 ecx, ecx
            //   8bc1                 | mov                 eax, ecx
            //   3914c5e0864200       | cmp                 dword ptr [eax*8 + 0x4286e0], edx
            //   7408                 | je                  0xa
            //   40                   | inc                 eax

        $sequence_8 = { 6bc830 8b0495a84b4300 8a440828 a848 7404 33c0 }
            // n = 6, score = 200
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b0495a84b4300       | mov                 eax, dword ptr [edx*4 + 0x434ba8]
            //   8a440828             | mov                 al, byte ptr [eax + ecx + 0x28]
            //   a848                 | test                al, 0x48
            //   7404                 | je                  6
            //   33c0                 | xor                 eax, eax

        $sequence_9 = { 7553 e8???????? 89049da84b4300 85c0 742f }
            // n = 5, score = 200
            //   7553                 | jne                 0x55
            //   e8????????           |                     
            //   89049da84b4300       | mov                 dword ptr [ebx*4 + 0x434ba8], eax
            //   85c0                 | test                eax, eax
            //   742f                 | je                  0x31

    condition:
        7 of them and filesize < 499712
}