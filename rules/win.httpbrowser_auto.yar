rule win_httpbrowser_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.httpbrowser."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.httpbrowser"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d45b8 50 57 6a1a }
            // n = 4, score = 200
            //   8d45b8               | lea                 eax, [ebp - 0x48]
            //   50                   | push                eax
            //   57                   | push                edi
            //   6a1a                 | push                0x1a

        $sequence_1 = { 881c38 56 ff15???????? 33c0 40 eb09 56 }
            // n = 7, score = 200
            //   881c38               | mov                 byte ptr [eax + edi], bl
            //   56                   | push                esi
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   eb09                 | jmp                 0xb
            //   56                   | push                esi

        $sequence_2 = { 68e9fd0000 ffd6 8b45fc 881c38 5f 5e }
            // n = 6, score = 200
            //   68e9fd0000           | push                0xfde9
            //   ffd6                 | call                esi
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   881c38               | mov                 byte ptr [eax + edi], bl
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_3 = { 50 e8???????? 898530eeffff e9???????? }
            // n = 4, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   898530eeffff         | mov                 dword ptr [ebp - 0x11d0], eax
            //   e9????????           |                     

        $sequence_4 = { 41 6a06 66898de8fdffff 59 }
            // n = 4, score = 200
            //   41                   | inc                 ecx
            //   6a06                 | push                6
            //   66898de8fdffff       | mov                 word ptr [ebp - 0x218], cx
            //   59                   | pop                 ecx

        $sequence_5 = { 8d861c020000 50 ff55f4 85c0 7534 }
            // n = 5, score = 200
            //   8d861c020000         | lea                 eax, [esi + 0x21c]
            //   50                   | push                eax
            //   ff55f4               | call                dword ptr [ebp - 0xc]
            //   85c0                 | test                eax, eax
            //   7534                 | jne                 0x36

        $sequence_6 = { ff15???????? 8b8530eeffff eb02 33c0 8b4df8 5f }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   8b8530eeffff         | mov                 eax, dword ptr [ebp - 0x11d0]
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   5f                   | pop                 edi

        $sequence_7 = { 7512 68???????? 8d85f0fdffff 50 ff15???????? 8d856853ffff }
            // n = 6, score = 200
            //   7512                 | jne                 0x14
            //   68????????           |                     
            //   8d85f0fdffff         | lea                 eax, [ebp - 0x210]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d856853ffff         | lea                 eax, [ebp - 0xac98]

        $sequence_8 = { 8b8548fdffff 50 6a00 6810040000 ff15???????? 8bf0 }
            // n = 6, score = 100
            //   8b8548fdffff         | mov                 eax, dword ptr [ebp - 0x2b8]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6810040000           | push                0x410
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_9 = { 9d 5d 58 68c6968752 }
            // n = 4, score = 100
            //   9d                   | popfd               
            //   5d                   | pop                 ebp
            //   58                   | pop                 eax
            //   68c6968752           | push                0x528796c6

        $sequence_10 = { b91f000000 33c0 8dbd3effffff 6689953cffffff }
            // n = 4, score = 100
            //   b91f000000           | mov                 ecx, 0x1f
            //   33c0                 | xor                 eax, eax
            //   8dbd3effffff         | lea                 edi, [ebp - 0xc2]
            //   6689953cffffff       | mov                 word ptr [ebp - 0xc4], dx

        $sequence_11 = { 8955f8 8955fc aa 50 55 8bec 9c }
            // n = 7, score = 100
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   aa                   | stosb               byte ptr es:[edi], al
            //   50                   | push                eax
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   9c                   | pushfd              

        $sequence_12 = { 68f4217dea 56 a3???????? e8???????? }
            // n = 4, score = 100
            //   68f4217dea           | push                0xea7d21f4
            //   56                   | push                esi
            //   a3????????           |                     
            //   e8????????           |                     

        $sequence_13 = { 52 56 ff15???????? 8b7d0c 8d45ec 6a00 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   6a00                 | push                0

        $sequence_14 = { c3 eb68 c422 40 0068ae 224000 50 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   eb68                 | jmp                 0x6a
            //   c422                 | les                 esp, ptr [edx]
            //   40                   | inc                 eax
            //   0068ae               | add                 byte ptr [eax - 0x52], ch
            //   224000               | and                 al, byte ptr [eax]
            //   50                   | push                eax

        $sequence_15 = { 83e11f 8b048500644100 8d04c8 8b0b }
            // n = 4, score = 100
            //   83e11f               | and                 ecx, 0x1f
            //   8b048500644100       | mov                 eax, dword ptr [eax*4 + 0x416400]
            //   8d04c8               | lea                 eax, [eax + ecx*8]
            //   8b0b                 | mov                 ecx, dword ptr [ebx]

    condition:
        7 of them and filesize < 188416
}