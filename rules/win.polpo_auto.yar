rule win_polpo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.polpo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.polpo"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 ff15???????? 8b4dfc f7d8 5f 1bc0 5e }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   f7d8                 | neg                 eax
            //   5f                   | pop                 edi
            //   1bc0                 | sbb                 eax, eax
            //   5e                   | pop                 esi

        $sequence_1 = { 50 81ecd0080000 a1???????? 33c5 8945ec 53 56 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   81ecd0080000         | sub                 esp, 0x8d0
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   53                   | push                ebx
            //   56                   | push                esi

        $sequence_2 = { 56 ff15???????? a1???????? 50 ff15???????? 5f 5b }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   a1????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx

        $sequence_3 = { 83c40c 57 8d955cebffff 52 68320a0000 8d8564ebffff 50 }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   57                   | push                edi
            //   8d955cebffff         | lea                 edx, [ebp - 0x14a4]
            //   52                   | push                edx
            //   68320a0000           | push                0xa32
            //   8d8564ebffff         | lea                 eax, [ebp - 0x149c]
            //   50                   | push                eax

        $sequence_4 = { 03c8 8b8614040000 51 8d95ecfbffff 52 50 ff15???????? }
            // n = 7, score = 100
            //   03c8                 | add                 ecx, eax
            //   8b8614040000         | mov                 eax, dword ptr [esi + 0x414]
            //   51                   | push                ecx
            //   8d95ecfbffff         | lea                 edx, [ebp - 0x414]
            //   52                   | push                edx
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_5 = { 8d9b00000000 8a5703 b103 8d4703 8a58ff 8818 48 }
            // n = 7, score = 100
            //   8d9b00000000         | lea                 ebx, [ebx]
            //   8a5703               | mov                 dl, byte ptr [edi + 3]
            //   b103                 | mov                 cl, 3
            //   8d4703               | lea                 eax, [edi + 3]
            //   8a58ff               | mov                 bl, byte ptr [eax - 1]
            //   8818                 | mov                 byte ptr [eax], bl
            //   48                   | dec                 eax

        $sequence_6 = { 668955d4 8945d6 8945da 8945de 668945e2 668985acfbffff e8???????? }
            // n = 7, score = 100
            //   668955d4             | mov                 word ptr [ebp - 0x2c], dx
            //   8945d6               | mov                 dword ptr [ebp - 0x2a], eax
            //   8945da               | mov                 dword ptr [ebp - 0x26], eax
            //   8945de               | mov                 dword ptr [ebp - 0x22], eax
            //   668945e2             | mov                 word ptr [ebp - 0x1e], ax
            //   668985acfbffff       | mov                 word ptr [ebp - 0x454], ax
            //   e8????????           |                     

        $sequence_7 = { 8945ed 8945f1 8945f5 668945f9 8845fb 8b03 83c40c }
            // n = 7, score = 100
            //   8945ed               | mov                 dword ptr [ebp - 0x13], eax
            //   8945f1               | mov                 dword ptr [ebp - 0xf], eax
            //   8945f5               | mov                 dword ptr [ebp - 0xb], eax
            //   668945f9             | mov                 word ptr [ebp - 7], ax
            //   8845fb               | mov                 byte ptr [ebp - 5], al
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   83c40c               | add                 esp, 0xc

        $sequence_8 = { 8d8dd6fdffff 33c0 53 51 89bdccfdffff 668985d4fdffff }
            // n = 6, score = 100
            //   8d8dd6fdffff         | lea                 ecx, [ebp - 0x22a]
            //   33c0                 | xor                 eax, eax
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   89bdccfdffff         | mov                 dword ptr [ebp - 0x234], edi
            //   668985d4fdffff       | mov                 word ptr [ebp - 0x22c], ax

        $sequence_9 = { 8b4d10 c60600 8901 8d5001 8a08 40 84c9 }
            // n = 7, score = 100
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   c60600               | mov                 byte ptr [esi], 0
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8d5001               | lea                 edx, [eax + 1]
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl

    condition:
        7 of them and filesize < 250880
}