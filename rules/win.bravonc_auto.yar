rule win_bravonc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.bravonc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bravonc"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 8b0d???????? 53 6bc93c 03c1 }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   8b0d????????         |                     
            //   53                   | push                ebx
            //   6bc93c               | imul                ecx, ecx, 0x3c
            //   03c1                 | add                 eax, ecx

        $sequence_1 = { 2bc1 8bce 50 8d8500ffffff }
            // n = 4, score = 100
            //   2bc1                 | sub                 eax, ecx
            //   8bce                 | mov                 ecx, esi
            //   50                   | push                eax
            //   8d8500ffffff         | lea                 eax, [ebp - 0x100]

        $sequence_2 = { 334dfc 57 ff75f0 334df0 034a08 034df8 8d8401d6c162ca }
            // n = 7, score = 100
            //   334dfc               | xor                 ecx, dword ptr [ebp - 4]
            //   57                   | push                edi
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   334df0               | xor                 ecx, dword ptr [ebp - 0x10]
            //   034a08               | add                 ecx, dword ptr [edx + 8]
            //   034df8               | add                 ecx, dword ptr [ebp - 8]
            //   8d8401d6c162ca       | lea                 eax, [ecx + eax - 0x359d3e2a]

        $sequence_3 = { 8907 8b45f4 2bfb 59 59 8907 8b45fc }
            // n = 7, score = 100
            //   8907                 | mov                 dword ptr [edi], eax
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   2bfb                 | sub                 edi, ebx
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8907                 | mov                 dword ptr [edi], eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_4 = { e8???????? 8b8ec0000000 53 ff75f0 89410c e8???????? 8b4df8 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b8ec0000000         | mov                 ecx, dword ptr [esi + 0xc0]
            //   53                   | push                ebx
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   89410c               | mov                 dword ptr [ecx + 0xc], eax
            //   e8????????           |                     
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_5 = { 8bf1 57 8b7d0c 8b460c 8d0c38 3b4e08 }
            // n = 6, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   57                   | push                edi
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   8d0c38               | lea                 ecx, [eax + edi]
            //   3b4e08               | cmp                 ecx, dword ptr [esi + 8]

        $sequence_6 = { 7c41 bbec130000 8b45f4 895df8 2bc7 3bc3 7f03 }
            // n = 7, score = 100
            //   7c41                 | jl                  0x43
            //   bbec130000           | mov                 ebx, 0x13ec
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   895df8               | mov                 dword ptr [ebp - 8], ebx
            //   2bc7                 | sub                 eax, edi
            //   3bc3                 | cmp                 eax, ebx
            //   7f03                 | jg                  5

        $sequence_7 = { 8b01 53 56 57 50 894dec }
            // n = 6, score = 100
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   50                   | push                eax
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx

        $sequence_8 = { 53 ff75f8 894138 e8???????? 8b4df4 8b96c0000000 334dfc }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   894138               | mov                 dword ptr [ecx + 0x38], eax
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b96c0000000         | mov                 edx, dword ptr [esi + 0xc0]
            //   334dfc               | xor                 ecx, dword ptr [ebp - 4]

        $sequence_9 = { eb7d 83e848 7471 48 7410 48 }
            // n = 6, score = 100
            //   eb7d                 | jmp                 0x7f
            //   83e848               | sub                 eax, 0x48
            //   7471                 | je                  0x73
            //   48                   | dec                 eax
            //   7410                 | je                  0x12
            //   48                   | dec                 eax

    condition:
        7 of them and filesize < 131072
}