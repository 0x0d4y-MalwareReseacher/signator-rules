rule win_krbanker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.krbanker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.krbanker"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03fd 2bdd 83f8ff 7419 }
            // n = 4, score = 400
            //   03fd                 | add                 edi, ebp
            //   2bdd                 | sub                 ebx, ebp
            //   83f8ff               | cmp                 eax, -1
            //   7419                 | je                  0x1b

        $sequence_1 = { 58 e9???????? 50 8b5dfc }
            // n = 4, score = 400
            //   58                   | pop                 eax
            //   e9????????           |                     
            //   50                   | push                eax
            //   8b5dfc               | mov                 ebx, dword ptr [ebp - 4]

        $sequence_2 = { 6a00 6869000000 6801000000 bb40010000 e8???????? 83c410 }
            // n = 6, score = 400
            //   6a00                 | push                0
            //   6869000000           | push                0x69
            //   6801000000           | push                1
            //   bb40010000           | mov                 ebx, 0x140
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

        $sequence_3 = { 53 57 e8???????? 8bf0 83c40c 83feff }
            // n = 6, score = 400
            //   53                   | push                ebx
            //   57                   | push                edi
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c40c               | add                 esp, 0xc
            //   83feff               | cmp                 esi, -1

        $sequence_4 = { 83c410 8945c4 ff75c4 ff75c8 ff75cc ff75d0 }
            // n = 6, score = 400
            //   83c410               | add                 esp, 0x10
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax
            //   ff75c4               | push                dword ptr [ebp - 0x3c]
            //   ff75c8               | push                dword ptr [ebp - 0x38]
            //   ff75cc               | push                dword ptr [ebp - 0x34]
            //   ff75d0               | push                dword ptr [ebp - 0x30]

        $sequence_5 = { 6801000000 bb40010000 e8???????? 83c410 8945e4 }
            // n = 5, score = 400
            //   6801000000           | push                1
            //   bb40010000           | mov                 ebx, 0x140
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax

        $sequence_6 = { 8d45f4 50 8b45fc 50 6810000000 }
            // n = 5, score = 400
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   6810000000           | push                0x10

        $sequence_7 = { b8???????? eb11 81f905000080 7509 85c0 }
            // n = 5, score = 400
            //   b8????????           |                     
            //   eb11                 | jmp                 0x13
            //   81f905000080         | cmp                 ecx, 0x80000005
            //   7509                 | jne                 0xb
            //   85c0                 | test                eax, eax

        $sequence_8 = { bb40010000 e8???????? 83c410 8945cc ff75cc ff75d0 }
            // n = 6, score = 400
            //   bb40010000           | mov                 ebx, 0x140
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   ff75cc               | push                dword ptr [ebp - 0x34]
            //   ff75d0               | push                dword ptr [ebp - 0x30]

        $sequence_9 = { 8945b8 8955bc dd45b8 e8???????? }
            // n = 4, score = 400
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   8955bc               | mov                 dword ptr [ebp - 0x44], edx
            //   dd45b8               | fld                 qword ptr [ebp - 0x48]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1826816
}