rule win_exaramel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.exaramel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.exaramel"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 8b75ec 83c414 85c0 7404 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   83c414               | add                 esp, 0x14
            //   85c0                 | test                eax, eax
            //   7404                 | je                  6

        $sequence_1 = { 53 8b5d08 85db 750a b857000780 5b }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   85db                 | test                ebx, ebx
            //   750a                 | jne                 0xc
            //   b857000780           | mov                 eax, 0x80070057
            //   5b                   | pop                 ebx

        $sequence_2 = { 50 57 8b11 51 8b8a90000000 ffd1 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   57                   | push                edi
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   51                   | push                ecx
            //   8b8a90000000         | mov                 ecx, dword ptr [edx + 0x90]
            //   ffd1                 | call                ecx

        $sequence_3 = { ffd3 83c610 85ff 75ef ff75dc e8???????? }
            // n = 6, score = 100
            //   ffd3                 | call                ebx
            //   83c610               | add                 esi, 0x10
            //   85ff                 | test                edi, edi
            //   75ef                 | jne                 0xfffffff1
            //   ff75dc               | push                dword ptr [ebp - 0x24]
            //   e8????????           |                     

        $sequence_4 = { 56 8b750c 8d044502000000 50 e8???????? 89460c 8b45f4 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8d044502000000       | lea                 eax, dword ptr [eax*2 + 2]
            //   50                   | push                eax
            //   e8????????           |                     
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]

        $sequence_5 = { 8b5d08 57 68???????? 50 8dbb18020000 57 }
            // n = 6, score = 100
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   57                   | push                edi
            //   68????????           |                     
            //   50                   | push                eax
            //   8dbb18020000         | lea                 edi, dword ptr [ebx + 0x218]
            //   57                   | push                edi

        $sequence_6 = { 8d85eefdffff 68???????? 6800010000 50 ff15???????? 83c410 c685eefcffff00 }
            // n = 7, score = 100
            //   8d85eefdffff         | lea                 eax, dword ptr [ebp - 0x212]
            //   68????????           |                     
            //   6800010000           | push                0x100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   c685eefcffff00       | mov                 byte ptr [ebp - 0x312], 0

        $sequence_7 = { 8d858cfdffff 6a44 50 c785ecfdffff00000000 33db e8???????? 8d85d0fdffff }
            // n = 7, score = 100
            //   8d858cfdffff         | lea                 eax, dword ptr [ebp - 0x274]
            //   6a44                 | push                0x44
            //   50                   | push                eax
            //   c785ecfdffff00000000     | mov    dword ptr [ebp - 0x214], 0
            //   33db                 | xor                 ebx, ebx
            //   e8????????           |                     
            //   8d85d0fdffff         | lea                 eax, dword ptr [ebp - 0x230]

        $sequence_8 = { 55 8bec 51 56 6802000100 68???????? ff35???????? }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   56                   | push                esi
            //   6802000100           | push                0x10002
            //   68????????           |                     
            //   ff35????????         |                     

        $sequence_9 = { 6bd830 8b04bd60dd4100 f644032801 7444 837c0318ff 743d e8???????? }
            // n = 7, score = 100
            //   6bd830               | imul                ebx, eax, 0x30
            //   8b04bd60dd4100       | mov                 eax, dword ptr [edi*4 + 0x41dd60]
            //   f644032801           | test                byte ptr [ebx + eax + 0x28], 1
            //   7444                 | je                  0x46
            //   837c0318ff           | cmp                 dword ptr [ebx + eax + 0x18], -1
            //   743d                 | je                  0x3f
            //   e8????????           |                     

    condition:
        7 of them and filesize < 294912
}