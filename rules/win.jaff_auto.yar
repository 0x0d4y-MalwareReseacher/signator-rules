rule win_jaff_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.jaff."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jaff"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 8906 33c0 394608 7619 8d9b00000000 8b55dc }
            // n = 7, score = 600
            //   ff15????????         |                     
            //   8906                 | mov                 dword ptr [esi], eax
            //   33c0                 | xor                 eax, eax
            //   394608               | cmp                 dword ptr [esi + 8], eax
            //   7619                 | jbe                 0x1b
            //   8d9b00000000         | lea                 ebx, [ebx]
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]

        $sequence_1 = { 3b7a04 72e8 897dec 8945fc }
            // n = 4, score = 600
            //   3b7a04               | cmp                 edi, dword ptr [edx + 4]
            //   72e8                 | jb                  0xffffffea
            //   897dec               | mov                 dword ptr [ebp - 0x14], edi
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_2 = { 8b4d08 80790c00 740d 8b5510 807a0c00 7504 c645e800 }
            // n = 7, score = 600
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   80790c00             | cmp                 byte ptr [ecx + 0xc], 0
            //   740d                 | je                  0xf
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   807a0c00             | cmp                 byte ptr [edx + 0xc], 0
            //   7504                 | jne                 6
            //   c645e800             | mov                 byte ptr [ebp - 0x18], 0

        $sequence_3 = { 8b45dc 66891448 41 3b4df8 76a8 }
            // n = 5, score = 600
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   66891448             | mov                 word ptr [eax + ecx*2], dx
            //   41                   | inc                 ecx
            //   3b4df8               | cmp                 ecx, dword ptr [ebp - 8]
            //   76a8                 | jbe                 0xffffffaa

        $sequence_4 = { 8b5708 8b1e 668b1c4b 66891c48 41 3bca 72f1 }
            // n = 7, score = 600
            //   8b5708               | mov                 edx, dword ptr [edi + 8]
            //   8b1e                 | mov                 ebx, dword ptr [esi]
            //   668b1c4b             | mov                 bx, word ptr [ebx + ecx*2]
            //   66891c48             | mov                 word ptr [eax + ecx*2], bx
            //   41                   | inc                 ecx
            //   3bca                 | cmp                 ecx, edx
            //   72f1                 | jb                  0xfffffff3

        $sequence_5 = { 56 57 8b3d???????? 6a14 6a08 c745ec0a000000 }
            // n = 6, score = 600
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b3d????????         |                     
            //   6a14                 | push                0x14
            //   6a08                 | push                8
            //   c745ec0a000000       | mov                 dword ptr [ebp - 0x14], 0xa

        $sequence_6 = { 5e 33c0 5b 8be5 5d c20800 8bd1 }
            // n = 7, score = 600
            //   5e                   | pop                 esi
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   8bd1                 | mov                 edx, ecx

        $sequence_7 = { ff15???????? 50 ff15???????? 33c9 394e04 7610 8b16 }
            // n = 7, score = 600
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   33c9                 | xor                 ecx, ecx
            //   394e04               | cmp                 dword ptr [esi + 4], ecx
            //   7610                 | jbe                 0x12
            //   8b16                 | mov                 edx, dword ptr [esi]

        $sequence_8 = { 8b4ddc 8b3d???????? 51 6a00 ffd7 50 ffd3 }
            // n = 7, score = 600
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   8b3d????????         |                     
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   ffd3                 | call                ebx

        $sequence_9 = { 57 8bf0 6a14 6a08 c7460400000000 c746080a000000 c6460c01 }
            // n = 7, score = 600
            //   57                   | push                edi
            //   8bf0                 | mov                 esi, eax
            //   6a14                 | push                0x14
            //   6a08                 | push                8
            //   c7460400000000       | mov                 dword ptr [esi + 4], 0
            //   c746080a000000       | mov                 dword ptr [esi + 8], 0xa
            //   c6460c01             | mov                 byte ptr [esi + 0xc], 1

    condition:
        7 of them and filesize < 106496
}