rule win_tabmsgsql_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.tabmsgsql."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tabmsgsql"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 0f848b000000 8b4c2408 8d542414 }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   0f848b000000         | je                  0x91
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   8d542414             | lea                 edx, dword ptr [esp + 0x14]

        $sequence_1 = { 33c0 52 f2ae f7d1 49 53 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   52                   | push                edx
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   53                   | push                ebx

        $sequence_2 = { 8d842488000000 6800040000 50 6a01 51 }
            // n = 5, score = 100
            //   8d842488000000       | lea                 eax, dword ptr [esp + 0x88]
            //   6800040000           | push                0x400
            //   50                   | push                eax
            //   6a01                 | push                1
            //   51                   | push                ecx

        $sequence_3 = { 83f901 7636 8b5514 bf???????? 83c9ff 8802 }
            // n = 6, score = 100
            //   83f901               | cmp                 ecx, 1
            //   7636                 | jbe                 0x38
            //   8b5514               | mov                 edx, dword ptr [ebp + 0x14]
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   8802                 | mov                 byte ptr [edx], al

        $sequence_4 = { 3bc3 0f8474fdffff 8b942470f50100 52 50 e8???????? }
            // n = 6, score = 100
            //   3bc3                 | cmp                 eax, ebx
            //   0f8474fdffff         | je                  0xfffffd7a
            //   8b942470f50100       | mov                 edx, dword ptr [esp + 0x1f570]
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_5 = { c1eb06 41 8a8483c8254100 884429ff 8a4437ff 83e03f 41 }
            // n = 7, score = 100
            //   c1eb06               | shr                 ebx, 6
            //   41                   | inc                 ecx
            //   8a8483c8254100       | mov                 al, byte ptr [ebx + eax*4 + 0x4125c8]
            //   884429ff             | mov                 byte ptr [ecx + ebp - 1], al
            //   8a4437ff             | mov                 al, byte ptr [edi + esi - 1]
            //   83e03f               | and                 eax, 0x3f
            //   41                   | inc                 ecx

        $sequence_6 = { 51 8b4e0c 52 51 ff15???????? 85c0 }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8b4e0c               | mov                 ecx, dword ptr [esi + 0xc]
            //   52                   | push                edx
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_7 = { 8a07 3c3c 740f 3c3e 740b 3b5c241c }
            // n = 6, score = 100
            //   8a07                 | mov                 al, byte ptr [edi]
            //   3c3c                 | cmp                 al, 0x3c
            //   740f                 | je                  0x11
            //   3c3e                 | cmp                 al, 0x3e
            //   740b                 | je                  0xd
            //   3b5c241c             | cmp                 ebx, dword ptr [esp + 0x1c]

        $sequence_8 = { 55 56 57 33ed b9ff000000 }
            // n = 5, score = 100
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi
            //   33ed                 | xor                 ebp, ebp
            //   b9ff000000           | mov                 ecx, 0xff

        $sequence_9 = { 33c0 8a443901 c0fb02 8a80c8244100 c0e004 02c3 880416 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   8a443901             | mov                 al, byte ptr [ecx + edi + 1]
            //   c0fb02               | sar                 bl, 2
            //   8a80c8244100         | mov                 al, byte ptr [eax + 0x4124c8]
            //   c0e004               | shl                 al, 4
            //   02c3                 | add                 al, bl
            //   880416               | mov                 byte ptr [esi + edx], al

    condition:
        7 of them and filesize < 163840
}