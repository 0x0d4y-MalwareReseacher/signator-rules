rule win_kimjongrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.kimjongrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.kimjongrat"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e9???????? c6840d7cdfffff3a e9???????? c6840d7cdfffff23 e9???????? c6840d7cdfffff21 e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   c6840d7cdfffff3a     | mov                 byte ptr [ebp + ecx - 0x2084], 0x3a
            //   e9????????           |                     
            //   c6840d7cdfffff23     | mov                 byte ptr [ebp + ecx - 0x2084], 0x23
            //   e9????????           |                     
            //   c6840d7cdfffff21     | mov                 byte ptr [ebp + ecx - 0x2084], 0x21
            //   e9????????           |                     

        $sequence_1 = { eb12 c6840dccf3ffff2e eb08 c6840dccf3ffff2c 85f6 7408 80840dccf3ffffe0 }
            // n = 7, score = 100
            //   eb12                 | jmp                 0x14
            //   c6840dccf3ffff2e     | mov                 byte ptr [ebp + ecx - 0xc34], 0x2e
            //   eb08                 | jmp                 0xa
            //   c6840dccf3ffff2c     | mov                 byte ptr [ebp + ecx - 0xc34], 0x2c
            //   85f6                 | test                esi, esi
            //   7408                 | je                  0xa
            //   80840dccf3ffffe0     | add                 byte ptr [ebp + ecx - 0xc34], 0xe0

        $sequence_2 = { ff750c e8???????? 8b5df8 0345e8 8b7dfc 83c404 8945e8 }
            // n = 7, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   8b5df8               | mov                 ebx, dword ptr [ebp - 8]
            //   0345e8               | add                 eax, dword ptr [ebp - 0x18]
            //   8b7dfc               | mov                 edi, dword ptr [ebp - 4]
            //   83c404               | add                 esp, 4
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax

        $sequence_3 = { c6840de0b7ffff6b e9???????? c6840de0b7ffff79 e9???????? c6840de0b7ffff77 e9???????? c6840de0b7ffff76 }
            // n = 7, score = 100
            //   c6840de0b7ffff6b     | mov                 byte ptr [ebp + ecx - 0x4820], 0x6b
            //   e9????????           |                     
            //   c6840de0b7ffff79     | mov                 byte ptr [ebp + ecx - 0x4820], 0x79
            //   e9????????           |                     
            //   c6840de0b7ffff77     | mov                 byte ptr [ebp + ecx - 0x4820], 0x77
            //   e9????????           |                     
            //   c6840de0b7ffff76     | mov                 byte ptr [ebp + ecx - 0x4820], 0x76

        $sequence_4 = { eb48 68???????? 8d4301 50 8d85fcfbffff 50 e8???????? }
            // n = 7, score = 100
            //   eb48                 | jmp                 0x4a
            //   68????????           |                     
            //   8d4301               | lea                 eax, dword ptr [ebx + 1]
            //   50                   | push                eax
            //   8d85fcfbffff         | lea                 eax, dword ptr [ebp - 0x404]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_5 = { 8b5110 33c0 8945c8 8b45d8 83c404 8b4830 c745e800000000 }
            // n = 7, score = 100
            //   8b5110               | mov                 edx, dword ptr [ecx + 0x10]
            //   33c0                 | xor                 eax, eax
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   8b45d8               | mov                 eax, dword ptr [ebp - 0x28]
            //   83c404               | add                 esp, 4
            //   8b4830               | mov                 ecx, dword ptr [eax + 0x30]
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0

        $sequence_6 = { e9???????? 56 e8???????? 83c404 85c0 7517 6827290200 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   7517                 | jne                 0x19
            //   6827290200           | push                0x22927

        $sequence_7 = { 898554ffffff 8b8538ffffff 2bc1 8d0c30 3bca 7509 0fb64f09 }
            // n = 7, score = 100
            //   898554ffffff         | mov                 dword ptr [ebp - 0xac], eax
            //   8b8538ffffff         | mov                 eax, dword ptr [ebp - 0xc8]
            //   2bc1                 | sub                 eax, ecx
            //   8d0c30               | lea                 ecx, dword ptr [eax + esi]
            //   3bca                 | cmp                 ecx, edx
            //   7509                 | jne                 0xb
            //   0fb64f09             | movzx               ecx, byte ptr [edi + 9]

        $sequence_8 = { 83c404 85c0 754a 8bf7 8b45e4 85c0 7402 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   754a                 | jne                 0x4c
            //   8bf7                 | mov                 esi, edi
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   85c0                 | test                eax, eax
            //   7402                 | je                  4

        $sequence_9 = { ff750c 57 e8???????? 8b0f 83c414 80794500 8bf0 }
            // n = 7, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   57                   | push                edi
            //   e8????????           |                     
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   83c414               | add                 esp, 0x14
            //   80794500             | cmp                 byte ptr [ecx + 0x45], 0
            //   8bf0                 | mov                 esi, eax

    condition:
        7 of them and filesize < 1572864
}