rule win_taurus_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.taurus_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.taurus_stealer"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4604 3906 7512 8b4508 33ff 8938 897804 }
            // n = 7, score = 200
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   3906                 | cmp                 dword ptr [esi], eax
            //   7512                 | jne                 0x14
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33ff                 | xor                 edi, edi
            //   8938                 | mov                 dword ptr [eax], edi
            //   897804               | mov                 dword ptr [eax + 4], edi

        $sequence_1 = { 03fb 8b5df0 81e100ff00ff c1c008 25ff00ff00 8955e0 0bc8 }
            // n = 7, score = 200
            //   03fb                 | add                 edi, ebx
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   81e100ff00ff         | and                 ecx, 0xff00ff00
            //   c1c008               | rol                 eax, 8
            //   25ff00ff00           | and                 eax, 0xff00ff
            //   8955e0               | mov                 dword ptr [ebp - 0x20], edx
            //   0bc8                 | or                  ecx, eax

        $sequence_2 = { 88442423 58 885c241c c644241d4d 66c74424207573 88442422 66c74424237d00 }
            // n = 7, score = 200
            //   88442423             | mov                 byte ptr [esp + 0x23], al
            //   58                   | pop                 eax
            //   885c241c             | mov                 byte ptr [esp + 0x1c], bl
            //   c644241d4d           | mov                 byte ptr [esp + 0x1d], 0x4d
            //   66c74424207573       | mov                 word ptr [esp + 0x20], 0x7375
            //   88442422             | mov                 byte ptr [esp + 0x22], al
            //   66c74424237d00       | mov                 word ptr [esp + 0x23], 0x7d

        $sequence_3 = { c645ff00 8d5101 8a01 41 84c0 75f9 2bca }
            // n = 7, score = 200
            //   c645ff00             | mov                 byte ptr [ebp - 1], 0
            //   8d5101               | lea                 edx, [ecx + 1]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   2bca                 | sub                 ecx, edx

        $sequence_4 = { c645f500 f6c301 740b 8d8df0feffff e8???????? 807df500 0f846a060000 }
            // n = 7, score = 200
            //   c645f500             | mov                 byte ptr [ebp - 0xb], 0
            //   f6c301               | test                bl, 1
            //   740b                 | je                  0xd
            //   8d8df0feffff         | lea                 ecx, [ebp - 0x110]
            //   e8????????           |                     
            //   807df500             | cmp                 byte ptr [ebp - 0xb], 0
            //   0f846a060000         | je                  0x670

        $sequence_5 = { 8d4dcb 8845cf e8???????? 6a69 8d4dcb 8845d0 e8???????? }
            // n = 7, score = 200
            //   8d4dcb               | lea                 ecx, [ebp - 0x35]
            //   8845cf               | mov                 byte ptr [ebp - 0x31], al
            //   e8????????           |                     
            //   6a69                 | push                0x69
            //   8d4dcb               | lea                 ecx, [ebp - 0x35]
            //   8845d0               | mov                 byte ptr [ebp - 0x30], al
            //   e8????????           |                     

        $sequence_6 = { e8???????? 50 8d8c244c010000 e8???????? 389c249f0f0000 8d8c2448010000 0f95c0 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   50                   | push                eax
            //   8d8c244c010000       | lea                 ecx, [esp + 0x14c]
            //   e8????????           |                     
            //   389c249f0f0000       | cmp                 byte ptr [esp + 0xf9f], bl
            //   8d8c2448010000       | lea                 ecx, [esp + 0x148]
            //   0f95c0               | setne               al

        $sequence_7 = { e8???????? 8d45b4 50 8d4b30 e8???????? 8b4508 83400448 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d45b4               | lea                 eax, [ebp - 0x4c]
            //   50                   | push                eax
            //   8d4b30               | lea                 ecx, [ebx + 0x30]
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83400448             | add                 dword ptr [eax + 4], 0x48

        $sequence_8 = { 56 8d4df4 e8???????? 8d4df3 0fb600 50 e8???????? }
            // n = 7, score = 200
            //   56                   | push                esi
            //   8d4df4               | lea                 ecx, [ebp - 0xc]
            //   e8????????           |                     
            //   8d4df3               | lea                 ecx, [ebp - 0xd]
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_9 = { 8d82dcbc1b8f 03c1 8b7df8 8b4dc4 8bd0 334dc0 334df4 }
            // n = 7, score = 200
            //   8d82dcbc1b8f         | lea                 eax, [edx - 0x70e44324]
            //   03c1                 | add                 eax, ecx
            //   8b7df8               | mov                 edi, dword ptr [ebp - 8]
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   8bd0                 | mov                 edx, eax
            //   334dc0               | xor                 ecx, dword ptr [ebp - 0x40]
            //   334df4               | xor                 ecx, dword ptr [ebp - 0xc]

    condition:
        7 of them and filesize < 524288
}