rule win_taurus_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.taurus_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.taurus_stealer"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f903 7305 8a55f7 ebf1 6a04 57 8d8578ffffff }
            // n = 7, score = 200
            //   83f903               | cmp                 ecx, 3
            //   7305                 | jae                 7
            //   8a55f7               | mov                 dl, byte ptr [ebp - 9]
            //   ebf1                 | jmp                 0xfffffff3
            //   6a04                 | push                4
            //   57                   | push                edi
            //   8d8578ffffff         | lea                 eax, dword ptr [ebp - 0x88]

        $sequence_1 = { c78554ffffff0f000000 50 c68540ffffff00 e8???????? 8b473c 2b4738 6a0c }
            // n = 7, score = 200
            //   c78554ffffff0f000000     | mov    dword ptr [ebp - 0xac], 0xf
            //   50                   | push                eax
            //   c68540ffffff00       | mov                 byte ptr [ebp - 0xc0], 0
            //   e8????????           |                     
            //   8b473c               | mov                 eax, dword ptr [edi + 0x3c]
            //   2b4738               | sub                 eax, dword ptr [edi + 0x38]
            //   6a0c                 | push                0xc

        $sequence_2 = { 8b5d1c 8b75f8 8b5740 8b0f e8???????? 8d8d04feffff 51 }
            // n = 7, score = 200
            //   8b5d1c               | mov                 ebx, dword ptr [ebp + 0x1c]
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   8b5740               | mov                 edx, dword ptr [edi + 0x40]
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   e8????????           |                     
            //   8d8d04feffff         | lea                 ecx, dword ptr [ebp - 0x1fc]
            //   51                   | push                ecx

        $sequence_3 = { 6a68 58 32c1 88542460 88442456 6a79 }
            // n = 6, score = 200
            //   6a68                 | push                0x68
            //   58                   | pop                 eax
            //   32c1                 | xor                 al, cl
            //   88542460             | mov                 byte ptr [esp + 0x60], dl
            //   88442456             | mov                 byte ptr [esp + 0x56], al
            //   6a79                 | push                0x79

        $sequence_4 = { 51 6a2e 8d4dd0 c645fa00 e8???????? 40 8d4dd0 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   6a2e                 | push                0x2e
            //   8d4dd0               | lea                 ecx, dword ptr [ebp - 0x30]
            //   c645fa00             | mov                 byte ptr [ebp - 6], 0
            //   e8????????           |                     
            //   40                   | inc                 eax
            //   8d4dd0               | lea                 ecx, dword ptr [ebp - 0x30]

        $sequence_5 = { 8818 83fe0c 72d8 6a0c 8d4ddf e8???????? 8d4ddf }
            // n = 7, score = 200
            //   8818                 | mov                 byte ptr [eax], bl
            //   83fe0c               | cmp                 esi, 0xc
            //   72d8                 | jb                  0xffffffda
            //   6a0c                 | push                0xc
            //   8d4ddf               | lea                 ecx, dword ptr [ebp - 0x21]
            //   e8????????           |                     
            //   8d4ddf               | lea                 ecx, dword ptr [ebp - 0x21]

        $sequence_6 = { 28440df1 41 83f904 7305 8a45f0 ebe2 6a08 }
            // n = 7, score = 200
            //   28440df1             | sub                 byte ptr [ebp + ecx - 0xf], al
            //   41                   | inc                 ecx
            //   83f904               | cmp                 ecx, 4
            //   7305                 | jae                 7
            //   8a45f0               | mov                 al, byte ptr [ebp - 0x10]
            //   ebe2                 | jmp                 0xffffffe4
            //   6a08                 | push                8

        $sequence_7 = { e8???????? 8d4c2450 e8???????? 8b7508 895e10 c746140f000000 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   8d4c2450             | lea                 ecx, dword ptr [esp + 0x50]
            //   e8????????           |                     
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   895e10               | mov                 dword ptr [esi + 0x10], ebx
            //   c746140f000000       | mov                 dword ptr [esi + 0x14], 0xf

        $sequence_8 = { c645b621 8855b7 66c745b8213c 885dba 304c05b1 40 83f809 }
            // n = 7, score = 200
            //   c645b621             | mov                 byte ptr [ebp - 0x4a], 0x21
            //   8855b7               | mov                 byte ptr [ebp - 0x49], dl
            //   66c745b8213c         | mov                 word ptr [ebp - 0x48], 0x3c21
            //   885dba               | mov                 byte ptr [ebp - 0x46], bl
            //   304c05b1             | xor                 byte ptr [ebp + eax - 0x4f], cl
            //   40                   | inc                 eax
            //   83f809               | cmp                 eax, 9

        $sequence_9 = { 0345dc 03f8 8b45e8 3345bc 03f9 3345c8 8bcf }
            // n = 7, score = 200
            //   0345dc               | add                 eax, dword ptr [ebp - 0x24]
            //   03f8                 | add                 edi, eax
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   3345bc               | xor                 eax, dword ptr [ebp - 0x44]
            //   03f9                 | add                 edi, ecx
            //   3345c8               | xor                 eax, dword ptr [ebp - 0x38]
            //   8bcf                 | mov                 ecx, edi

    condition:
        7 of them and filesize < 524288
}