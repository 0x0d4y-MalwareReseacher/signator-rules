rule win_taurus_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.taurus_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.taurus_stealer"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8d4dd4 e8???????? e9???????? 55 8bec 51 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]
            //   e8????????           |                     
            //   e9????????           |                     
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx

        $sequence_1 = { e8???????? 8d8c24e8070000 e8???????? 80bc24ef00000000 7434 8d8424940f0000 50 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d8c24e8070000       | lea                 ecx, [esp + 0x7e8]
            //   e8????????           |                     
            //   80bc24ef00000000     | cmp                 byte ptr [esp + 0xef], 0
            //   7434                 | je                  0x36
            //   8d8424940f0000       | lea                 eax, [esp + 0xf94]
            //   50                   | push                eax

        $sequence_2 = { 8d4d80 88458d e8???????? 6a61 8d4d80 88458e e8???????? }
            // n = 7, score = 200
            //   8d4d80               | lea                 ecx, [ebp - 0x80]
            //   88458d               | mov                 byte ptr [ebp - 0x73], al
            //   e8????????           |                     
            //   6a61                 | push                0x61
            //   8d4d80               | lea                 ecx, [ebp - 0x80]
            //   88458e               | mov                 byte ptr [ebp - 0x72], al
            //   e8????????           |                     

        $sequence_3 = { 8d4dd0 e8???????? 8d4de8 e8???????? 8d4df4 e8???????? 8d4d9c }
            // n = 7, score = 200
            //   8d4dd0               | lea                 ecx, [ebp - 0x30]
            //   e8????????           |                     
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   e8????????           |                     
            //   8d4df4               | lea                 ecx, [ebp - 0xc]
            //   e8????????           |                     
            //   8d4d9c               | lea                 ecx, [ebp - 0x64]

        $sequence_4 = { 8d4dc4 8bf0 e8???????? 85f6 0f8486000000 8b872c020000 33c9 }
            // n = 7, score = 200
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   8bf0                 | mov                 esi, eax
            //   e8????????           |                     
            //   85f6                 | test                esi, esi
            //   0f8486000000         | je                  0x8c
            //   8b872c020000         | mov                 eax, dword ptr [edi + 0x22c]
            //   33c9                 | xor                 ecx, ecx

        $sequence_5 = { 8d8548fcffff 8bcb 50 e8???????? eb0b 85f6 7511 }
            // n = 7, score = 200
            //   8d8548fcffff         | lea                 eax, [ebp - 0x3b8]
            //   8bcb                 | mov                 ecx, ebx
            //   50                   | push                eax
            //   e8????????           |                     
            //   eb0b                 | jmp                 0xd
            //   85f6                 | test                esi, esi
            //   7511                 | jne                 0x13

        $sequence_6 = { 8a45f1 ebe2 8d45f2 885dfb 50 8d4dd4 e8???????? }
            // n = 7, score = 200
            //   8a45f1               | mov                 al, byte ptr [ebp - 0xf]
            //   ebe2                 | jmp                 0xffffffe4
            //   8d45f2               | lea                 eax, [ebp - 0xe]
            //   885dfb               | mov                 byte ptr [ebp - 5], bl
            //   50                   | push                eax
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]
            //   e8????????           |                     

        $sequence_7 = { 8a4df1 ebf1 6a09 53 8d8508ffffff c645f400 50 }
            // n = 7, score = 200
            //   8a4df1               | mov                 cl, byte ptr [ebp - 0xf]
            //   ebf1                 | jmp                 0xfffffff3
            //   6a09                 | push                9
            //   53                   | push                ebx
            //   8d8508ffffff         | lea                 eax, [ebp - 0xf8]
            //   c645f400             | mov                 byte ptr [ebp - 0xc], 0
            //   50                   | push                eax

        $sequence_8 = { 59 6bd048 8bce e8???????? 5f 5e 5b }
            // n = 7, score = 200
            //   59                   | pop                 ecx
            //   6bd048               | imul                edx, eax, 0x48
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_9 = { 33c2 c1cf02 05d6c162ca 81c2d6c162ca 0345c8 0345fc 03c8 }
            // n = 7, score = 200
            //   33c2                 | xor                 eax, edx
            //   c1cf02               | ror                 edi, 2
            //   05d6c162ca           | add                 eax, 0xca62c1d6
            //   81c2d6c162ca         | add                 edx, 0xca62c1d6
            //   0345c8               | add                 eax, dword ptr [ebp - 0x38]
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   03c8                 | add                 ecx, eax

    condition:
        7 of them and filesize < 524288
}