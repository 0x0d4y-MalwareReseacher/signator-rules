rule win_webc2_div_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.webc2_div."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_div"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 ff15???????? 85c0 0f8482000000 b941000000 33c0 8d7c2414 }
            // n = 7, score = 100
            //   52                   | push                edx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8482000000         | je                  0x88
            //   b941000000           | mov                 ecx, 0x41
            //   33c0                 | xor                 eax, eax
            //   8d7c2414             | lea                 edi, [esp + 0x14]

        $sequence_1 = { ffd3 8bf8 83c408 47 83c9ff }
            // n = 5, score = 100
            //   ffd3                 | call                ebx
            //   8bf8                 | mov                 edi, eax
            //   83c408               | add                 esp, 8
            //   47                   | inc                 edi
            //   83c9ff               | or                  ecx, 0xffffffff

        $sequence_2 = { 50 6a07 6a00 ff15???????? 8b54240c 8d4c2414 51 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   6a07                 | push                7
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8b54240c             | mov                 edx, dword ptr [esp + 0xc]
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   51                   | push                ecx

        $sequence_3 = { ff15???????? 3bc6 894508 7509 }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   3bc6                 | cmp                 eax, esi
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   7509                 | jne                 0xb

        $sequence_4 = { 59 8dbdf0feffff f3a5 6a38 33c0 }
            // n = 5, score = 100
            //   59                   | pop                 ecx
            //   8dbdf0feffff         | lea                 edi, [ebp - 0x110]
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   6a38                 | push                0x38
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { ffd6 53 e8???????? 59 33c0 eb1f }
            // n = 6, score = 100
            //   ffd6                 | call                esi
            //   53                   | push                ebx
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   33c0                 | xor                 eax, eax
            //   eb1f                 | jmp                 0x21

        $sequence_6 = { f73b 85d2 75e7 8b048e 8b17 2bc2 }
            // n = 6, score = 100
            //   f73b                 | idiv                dword ptr [ebx]
            //   85d2                 | test                edx, edx
            //   75e7                 | jne                 0xffffffe9
            //   8b048e               | mov                 eax, dword ptr [esi + ecx*4]
            //   8b17                 | mov                 edx, dword ptr [edi]
            //   2bc2                 | sub                 eax, edx

        $sequence_7 = { f7f9 81c2b4000000 69d260ea0000 895604 }
            // n = 4, score = 100
            //   f7f9                 | idiv                ecx
            //   81c2b4000000         | add                 edx, 0xb4
            //   69d260ea0000         | imul                edx, edx, 0xea60
            //   895604               | mov                 dword ptr [esi + 4], edx

        $sequence_8 = { 7cd0 33c9 85db 0f8ed2000000 8b542458 8a0411 3c2a }
            // n = 7, score = 100
            //   7cd0                 | jl                  0xffffffd2
            //   33c9                 | xor                 ecx, ecx
            //   85db                 | test                ebx, ebx
            //   0f8ed2000000         | jle                 0xd8
            //   8b542458             | mov                 edx, dword ptr [esp + 0x58]
            //   8a0411               | mov                 al, byte ptr [ecx + edx]
            //   3c2a                 | cmp                 al, 0x2a

        $sequence_9 = { 53 55 8b2d???????? bbe0930400 56 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   8b2d????????         |                     
            //   bbe0930400           | mov                 ebx, 0x493e0
            //   56                   | push                esi

    condition:
        7 of them and filesize < 32768
}