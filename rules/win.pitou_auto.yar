rule win_pitou_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.pitou."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pitou"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc2 5e 5a 59 5b }
            // n = 5, score = 700
            //   8bc2                 | push                ecx
            //   5e                   | mov                 eax, dword ptr [esi + 0x7ef40]
            //   5a                   | cmp                 dword ptr [esi + 0x7ef44], eax
            //   59                   | jne                 0x1bbbe
            //   5b                   | add                 ecx, 0x7ef48

        $sequence_1 = { 8bc2 5e 5a 59 }
            // n = 4, score = 700
            //   8bc2                 | test                eax, eax
            //   5e                   | je                  0x1241b
            //   5a                   | cmp                 dword ptr [edi + 0x94], 0
            //   59                   | mov                 eax, dword ptr [edi + 0x2510]

        $sequence_2 = { 03c3 8bda c1eb02 03c3 }
            // n = 4, score = 700
            //   03c3                 | movzx               edx, ax
            //   8bda                 | mov                 dword ptr [ebp - 0xc], 0x14
            //   c1eb02               | add                 eax, edx
            //   03c3                 | not                 eax

        $sequence_3 = { 8a6201 80f457 8acc 80e103 8aec }
            // n = 5, score = 700
            //   8a6201               | cmp                 eax, esi
            //   80f457               | jne                 0x147f8
            //   8acc                 | mov                 dword ptr [ebp - 0xc], esi
            //   80e103               | mov                 dword ptr [ebp - 0x10], esi
            //   8aec                 | mov                 dword ptr [ebp - 0x14], esi

        $sequence_4 = { 8afb 80e703 c0eb05 80e303 80ff00 }
            // n = 5, score = 700
            //   8afb                 | mov                 eax, dword ptr [ebp + 0xc]
            //   80e703               | mov                 cx, word ptr [edi + 6]
            //   c0eb05               | mov                 dword ptr [ebp - 8], edi
            //   80e303               | test                ecx, ecx
            //   80ff00               | jne                 0x8339

        $sequence_5 = { 8bda c1e305 03c3 8bda c1eb02 03c3 33d0 }
            // n = 7, score = 700
            //   8bda                 | or                  ecx, eax
            //   c1e305               | mov                 eax, edx
            //   03c3                 | shl                 edx, 0x10
            //   8bda                 | and                 eax, 0xff00
            //   c1eb02               | shr                 ecx, 8
            //   03c3                 | mov                 eax, edx
            //   33d0                 | shr                 eax, 0x10

        $sequence_6 = { 33c0 ac 8bda c1e305 03c3 8bda }
            // n = 6, score = 700
            //   33c0                 | xor                 al, cl
            //   ac                   | inc                 ecx
            //   8bda                 | mov                 byte ptr [ebx - 1], al
            //   c1e305               | movzx               eax, cl
            //   03c3                 | add                 cl, cl
            //   8bda                 | shr                 al, 1

        $sequence_7 = { 8bda c1e305 03c3 8bda c1eb02 }
            // n = 5, score = 700
            //   8bda                 | mov                 eax, ebx
            //   c1e305               | test                al, al
            //   03c3                 | jne                 0x3491
            //   8bda                 | mov                 eax, esi
            //   c1eb02               | mov                 eax, ebx

        $sequence_8 = { c1e305 03c3 8bda c1eb02 03c3 }
            // n = 5, score = 700
            //   c1e305               | cmp                 bl, 0
            //   03c3                 | shr                 bl, 5
            //   8bda                 | and                 bl, 3
            //   c1eb02               | cmp                 bh, 0
            //   03c3                 | jne                 0xffff195d

        $sequence_9 = { 8a12 80f257 8ada c0eb02 }
            // n = 4, score = 700
            //   8a12                 | mov                 dword ptr [ebx + 0x16], 0x10202
            //   80f257               | mov                 dword ptr [ebx + 0x38], eax
            //   8ada                 | mov                 dword ptr [ebx + 0x44], eax
            //   c0eb02               | movzx               eax, word ptr [ecx + 0xe]

    condition:
        7 of them and filesize < 1106944
}