rule win_pitou_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.pitou."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pitou"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 80e703 c0eb05 80e303 80ff00 }
            // n = 4, score = 700
            //   80e703               | mov                 eax, ecx
            //   c0eb05               | test                ax, dx
            //   80e303               | mov                 dx, word ptr [esi + 0x4c]
            //   80ff00               | mov                 ax, bx

        $sequence_1 = { 80f457 8acc 80e103 8aec }
            // n = 4, score = 700
            //   80f457               | sar                 dx, 3
            //   8acc                 | sub                 cx, dx
            //   80e103               | sub                 cx, word ptr [esi + 0x44]
            //   8aec                 | mov                 dx, ax

        $sequence_2 = { 8acc 80e103 8aec c0ed03 }
            // n = 4, score = 700
            //   8acc                 | mov                 dword ptr [ebp - 0x58], ebx
            //   80e103               | mov                 dword ptr [ebp - 0x54], ebx
            //   8aec                 | mov                 dword ptr [ebp - 0x38], ecx
            //   c0ed03               | mov                 dword ptr [ebp - 0x34], 0

        $sequence_3 = { 33c0 ac 8bda c1e305 03c3 8bda }
            // n = 6, score = 700
            //   33c0                 | push                edi
            //   ac                   | push                ebx
            //   8bda                 | adc                 eax, 0x3063a24
            //   c1e305               | adc                 eax, 0x125a3a24
            //   03c3                 | add                 ebx, dword ptr [edx + 0x139a1413]
            //   8bda                 | scasd               eax, dword ptr es:[edi]

        $sequence_4 = { 53 80ef18 80ff10 5b }
            // n = 4, score = 700
            //   53                   | add                 dword ptr [eax], eax
            //   80ef18               | add                 byte ptr [eax], al
            //   80ff10               | dec                 eax
            //   5b                   | mov                 ebp, esp

        $sequence_5 = { 80e103 8aec c0ed03 80e507 }
            // n = 4, score = 700
            //   80e103               | mov                 cx, word ptr [ebp - 4]
            //   8aec                 | cmp                 cx, word ptr [ebx + 0xc]
            //   c0ed03               | jb                  0xffffb972
            //   80e507               | mov                 ebx, dword ptr [ebx]

        $sequence_6 = { 8bda c1e305 03c3 8bda c1eb02 03c3 33d0 }
            // n = 7, score = 700
            //   8bda                 | mov                 edx, dword ptr [ecx]
            //   c1e305               | mov                 dword ptr [eax + 0x88], edx
            //   03c3                 | movzx               ecx, word ptr [ecx + 4]
            //   8bda                 | mov                 word ptr [eax + 0x8c], cx
            //   c1eb02               | mov                 ecx, dword ptr [ebp + 0xc]
            //   03c3                 | mov                 edx, dword ptr [ecx]
            //   33d0                 | mov                 dword ptr [eax + 0x8e], edx

        $sequence_7 = { 80f457 8acc 80e103 8aec c0ed03 }
            // n = 5, score = 700
            //   80f457               | pushfd              
            //   8acc                 | das                 
            //   80e103               | push                edx
            //   8aec                 | pop                 edx
            //   c0ed03               | adc                 byte ptr [ebx], al

        $sequence_8 = { 8bda c1eb02 03c3 33d0 }
            // n = 4, score = 700
            //   8bda                 | cmp                 dword ptr [eax], 0
            //   c1eb02               | je                  0xdf83
            //   03c3                 | mov                 edx, dword ptr [edi + 0xe04]
            //   33d0                 | mov                 eax, dword ptr [ebx + 0x558]

        $sequence_9 = { 33c0 ac 8bda c1e305 }
            // n = 4, score = 700
            //   33c0                 | pop                 ds
            //   ac                   | sbb                 al, 0
            //   8bda                 | cmp                 dword ptr [edi], eax
            //   c1e305               | test                eax, 0x9a139511

    condition:
        7 of them and filesize < 1106944
}