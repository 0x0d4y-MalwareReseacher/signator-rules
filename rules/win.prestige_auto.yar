rule win_prestige_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.prestige."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.prestige"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bca e8???????? 8bc8 2b45c8 83e80a 894df8 8945f4 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   2b45c8               | sub                 eax, dword ptr [ebp - 0x38]
            //   83e80a               | sub                 eax, 0xa
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax

        $sequence_1 = { 8d7da1 89bd50ffffff 80bd5fffffff00 7427 3bf8 7423 8bb554ffffff }
            // n = 7, score = 100
            //   8d7da1               | lea                 edi, [ebp - 0x5f]
            //   89bd50ffffff         | mov                 dword ptr [ebp - 0xb0], edi
            //   80bd5fffffff00       | cmp                 byte ptr [ebp - 0xa1], 0
            //   7427                 | je                  0x29
            //   3bf8                 | cmp                 edi, eax
            //   7423                 | je                  0x25
            //   8bb554ffffff         | mov                 esi, dword ptr [ebp - 0xac]

        $sequence_2 = { e8???????? 59 59 8365c800 8d8d70ffffff 8975cc c645b800 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8365c800             | and                 dword ptr [ebp - 0x38], 0
            //   8d8d70ffffff         | lea                 ecx, [ebp - 0x90]
            //   8975cc               | mov                 dword ptr [ebp - 0x34], esi
            //   c645b800             | mov                 byte ptr [ebp - 0x48], 0

        $sequence_3 = { 5e 8b5d0c 0bc0 0f8450000000 0f8858000000 6a01 ff7508 }
            // n = 7, score = 100
            //   5e                   | pop                 esi
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   0bc0                 | or                  eax, eax
            //   0f8450000000         | je                  0x56
            //   0f8858000000         | js                  0x5e
            //   6a01                 | push                1
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_4 = { e8???????? 51 68???????? 8d8de0fdffff c645fcab e8???????? 51 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   51                   | push                ecx
            //   68????????           |                     
            //   8d8de0fdffff         | lea                 ecx, [ebp - 0x220]
            //   c645fcab             | mov                 byte ptr [ebp - 4], 0xab
            //   e8????????           |                     
            //   51                   | push                ecx

        $sequence_5 = { ff75f4 e8???????? 8b45f8 83c40c 8b4d10 2bf1 1b7dfc }
            // n = 7, score = 100
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   e8????????           |                     
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c40c               | add                 esp, 0xc
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   2bf1                 | sub                 esi, ecx
            //   1b7dfc               | sbb                 edi, dword ptr [ebp - 4]

        $sequence_6 = { 33c0 0bc3 8945c4 8b45ac 8b7008 8b400c 8945cc }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   0bc3                 | or                  eax, ebx
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax
            //   8b45ac               | mov                 eax, dword ptr [ebp - 0x54]
            //   8b7008               | mov                 esi, dword ptr [eax + 8]
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax

        $sequence_7 = { 8b4530 8b17 8b08 03ce 8d4118 50 51 }
            // n = 7, score = 100
            //   8b4530               | mov                 eax, dword ptr [ebp + 0x30]
            //   8b17                 | mov                 edx, dword ptr [edi]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   03ce                 | add                 ecx, esi
            //   8d4118               | lea                 eax, [ecx + 0x18]
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_8 = { 8d4104 85c9 0f44c1 8b4e0c 334c2438 5e 5b }
            // n = 7, score = 100
            //   8d4104               | lea                 eax, [ecx + 4]
            //   85c9                 | test                ecx, ecx
            //   0f44c1               | cmove               eax, ecx
            //   8b4e0c               | mov                 ecx, dword ptr [esi + 0xc]
            //   334c2438             | xor                 ecx, dword ptr [esp + 0x38]
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_9 = { ff750c 8bc8 ff7508 8b10 ff5248 5e 8b4df4 }
            // n = 7, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8bc8                 | mov                 ecx, eax
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   ff5248               | call                dword ptr [edx + 0x48]
            //   5e                   | pop                 esi
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]

    condition:
        7 of them and filesize < 1518592
}