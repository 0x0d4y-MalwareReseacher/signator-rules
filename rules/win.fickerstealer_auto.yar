rule win_fickerstealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.fickerstealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fickerstealer"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { bb80000000 899568fdffff 898d58fdffff 8937 8db184000000 894704 895f08 }
            // n = 7, score = 200
            //   bb80000000           | mov                 ebx, 0x80
            //   899568fdffff         | mov                 dword ptr [ebp - 0x298], edx
            //   898d58fdffff         | mov                 dword ptr [ebp - 0x2a8], ecx
            //   8937                 | mov                 dword ptr [edi], esi
            //   8db184000000         | lea                 esi, [ecx + 0x84]
            //   894704               | mov                 dword ptr [edi + 4], eax
            //   895f08               | mov                 dword ptr [edi + 8], ebx

        $sequence_1 = { f20f114808 f20f1100 8d4dd4 6a03 58 50 e8???????? }
            // n = 7, score = 200
            //   f20f114808           | movsd               qword ptr [eax + 8], xmm1
            //   f20f1100             | movsd               qword ptr [eax], xmm0
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]
            //   6a03                 | push                3
            //   58                   | pop                 eax
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_2 = { ff7508 e8???????? 83c410 5d c3 0f0b 0f0b }
            // n = 7, score = 200
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   0f0b                 | ud2                 
            //   0f0b                 | ud2                 

        $sequence_3 = { b33f b780 80cae0 8810 89ca 20d9 c1ea06 }
            // n = 7, score = 200
            //   b33f                 | mov                 bl, 0x3f
            //   b780                 | mov                 bh, 0x80
            //   80cae0               | or                  dl, 0xe0
            //   8810                 | mov                 byte ptr [eax], dl
            //   89ca                 | mov                 edx, ecx
            //   20d9                 | and                 cl, bl
            //   c1ea06               | shr                 edx, 6

        $sequence_4 = { f3a5 8db550feffff 8dbdd0feffff 89f1 89fa 53 e8???????? }
            // n = 7, score = 200
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8db550feffff         | lea                 esi, [ebp - 0x1b0]
            //   8dbdd0feffff         | lea                 edi, [ebp - 0x130]
            //   89f1                 | mov                 ecx, esi
            //   89fa                 | mov                 edx, edi
            //   53                   | push                ebx
            //   e8????????           |                     

        $sequence_5 = { be00000000 897dd8 8b7ddc 0f43fe f6dd 89de 897ddc }
            // n = 7, score = 200
            //   be00000000           | mov                 esi, 0
            //   897dd8               | mov                 dword ptr [ebp - 0x28], edi
            //   8b7ddc               | mov                 edi, dword ptr [ebp - 0x24]
            //   0f43fe               | cmovae              edi, esi
            //   f6dd                 | neg                 ch
            //   89de                 | mov                 esi, ebx
            //   897ddc               | mov                 dword ptr [ebp - 0x24], edi

        $sequence_6 = { 6801010000 6a00 50 6802000080 e8???????? 89f9 89c3 }
            // n = 7, score = 200
            //   6801010000           | push                0x101
            //   6a00                 | push                0
            //   50                   | push                eax
            //   6802000080           | push                0x80000002
            //   e8????????           |                     
            //   89f9                 | mov                 ecx, edi
            //   89c3                 | mov                 ebx, eax

        $sequence_7 = { e8???????? 89d9 e8???????? c7471001000000 f20f1045e8 f20f114610 f20f1045d8 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   89d9                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   c7471001000000       | mov                 dword ptr [edi + 0x10], 1
            //   f20f1045e8           | movsd               xmm0, qword ptr [ebp - 0x18]
            //   f20f114610           | movsd               qword ptr [esi + 0x10], xmm0
            //   f20f1045d8           | movsd               xmm0, qword ptr [ebp - 0x28]

        $sequence_8 = { 8b55e0 8b4de4 894a1c 0f845fffffff 83622400 8b4de4 c745dc00000000 }
            // n = 7, score = 200
            //   8b55e0               | mov                 edx, dword ptr [ebp - 0x20]
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   894a1c               | mov                 dword ptr [edx + 0x1c], ecx
            //   0f845fffffff         | je                  0xffffff65
            //   83622400             | and                 dword ptr [edx + 0x24], 0
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   c745dc00000000       | mov                 dword ptr [ebp - 0x24], 0

        $sequence_9 = { 8948f8 684c020000 8d8c244c0b0000 51 50 e8???????? 83c40c }
            // n = 7, score = 200
            //   8948f8               | mov                 dword ptr [eax - 8], ecx
            //   684c020000           | push                0x24c
            //   8d8c244c0b0000       | lea                 ecx, [esp + 0xb4c]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

    condition:
        7 of them and filesize < 598016
}