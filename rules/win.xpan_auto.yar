rule win_xpan_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.xpan."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xpan"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f7d2 21d0 2580808080 74ea 89c2 8b6c2418 c1ea10 }
            // n = 7, score = 400
            //   f7d2                 | not                 edx
            //   21d0                 | and                 eax, edx
            //   2580808080           | and                 eax, 0x80808080
            //   74ea                 | je                  0xffffffec
            //   89c2                 | mov                 edx, eax
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   c1ea10               | shr                 edx, 0x10

        $sequence_1 = { ebc1 8b742418 89cb e9???????? 8b4c2458 80e5f3 894c241c }
            // n = 7, score = 400
            //   ebc1                 | jmp                 0xffffffc3
            //   8b742418             | mov                 esi, dword ptr [esp + 0x18]
            //   89cb                 | mov                 ebx, ecx
            //   e9????????           |                     
            //   8b4c2458             | mov                 ecx, dword ptr [esp + 0x58]
            //   80e5f3               | and                 ch, 0xf3
            //   894c241c             | mov                 dword ptr [esp + 0x1c], ecx

        $sequence_2 = { e9???????? 8b6c2440 31db ba57000780 e9???????? 31db 8b6c2440 }
            // n = 7, score = 400
            //   e9????????           |                     
            //   8b6c2440             | mov                 ebp, dword ptr [esp + 0x40]
            //   31db                 | xor                 ebx, ebx
            //   ba57000780           | mov                 edx, 0x80070057
            //   e9????????           |                     
            //   31db                 | xor                 ebx, ebx
            //   8b6c2440             | mov                 ebp, dword ptr [esp + 0x40]

        $sequence_3 = { 38d0 0f8439fdffff 90 8b4d08 85c9 0f8515010000 beffffffff }
            // n = 7, score = 400
            //   38d0                 | cmp                 al, dl
            //   0f8439fdffff         | je                  0xfffffd3f
            //   90                   | nop                 
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   85c9                 | test                ecx, ecx
            //   0f8515010000         | jne                 0x11b
            //   beffffffff           | mov                 esi, 0xffffffff

        $sequence_4 = { 0f83ad030000 83c001 c7450cffffffff 894108 8b4108 3b410c 0f83d4030000 }
            // n = 7, score = 400
            //   0f83ad030000         | jae                 0x3b3
            //   83c001               | add                 eax, 1
            //   c7450cffffffff       | mov                 dword ptr [ebp + 0xc], 0xffffffff
            //   894108               | mov                 dword ptr [ecx + 8], eax
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   3b410c               | cmp                 eax, dword ptr [ecx + 0xc]
            //   0f83d4030000         | jae                 0x3da

        $sequence_5 = { f644241420 0f8585120000 8b4904 85c9 0f8431200000 8b442414 89c6 }
            // n = 7, score = 400
            //   f644241420           | test                byte ptr [esp + 0x14], 0x20
            //   0f8585120000         | jne                 0x128b
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   85c9                 | test                ecx, ecx
            //   0f8431200000         | je                  0x2037
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   89c6                 | mov                 esi, eax

        $sequence_6 = { e8???????? eb94 c74308feffffff e9???????? 83e801 894308 e9???????? }
            // n = 7, score = 400
            //   e8????????           |                     
            //   eb94                 | jmp                 0xffffff96
            //   c74308feffffff       | mov                 dword ptr [ebx + 8], 0xfffffffe
            //   e9????????           |                     
            //   83e801               | sub                 eax, 1
            //   894308               | mov                 dword ptr [ebx + 8], eax
            //   e9????????           |                     

        $sequence_7 = { ff9308010000 83832001000001 b801000000 31c9 0fb6542414 eba1 8b742414 }
            // n = 7, score = 400
            //   ff9308010000         | call                dword ptr [ebx + 0x108]
            //   83832001000001       | add                 dword ptr [ebx + 0x120], 1
            //   b801000000           | mov                 eax, 1
            //   31c9                 | xor                 ecx, ecx
            //   0fb6542414           | movzx               edx, byte ptr [esp + 0x14]
            //   eba1                 | jmp                 0xffffffa3
            //   8b742414             | mov                 esi, dword ptr [esp + 0x14]

        $sequence_8 = { c745c400000000 c645cd00 0f8433050000 837dc010 0f8437070000 8b45c0 8945d0 }
            // n = 7, score = 400
            //   c745c400000000       | mov                 dword ptr [ebp - 0x3c], 0
            //   c645cd00             | mov                 byte ptr [ebp - 0x33], 0
            //   0f8433050000         | je                  0x539
            //   837dc010             | cmp                 dword ptr [ebp - 0x40], 0x10
            //   0f8437070000         | je                  0x73d
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax

        $sequence_9 = { 85d2 0f8412030000 8b8424b8000000 83c001 39442440 898424b8000000 0f95c0 }
            // n = 7, score = 400
            //   85d2                 | test                edx, edx
            //   0f8412030000         | je                  0x318
            //   8b8424b8000000       | mov                 eax, dword ptr [esp + 0xb8]
            //   83c001               | add                 eax, 1
            //   39442440             | cmp                 dword ptr [esp + 0x40], eax
            //   898424b8000000       | mov                 dword ptr [esp + 0xb8], eax
            //   0f95c0               | setne               al

    condition:
        7 of them and filesize < 3235840
}