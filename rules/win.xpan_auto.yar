rule win_xpan_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.xpan."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xpan"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 89433c c744240c00000000 c744240800000000 c744240401000000 c7042400000000 ff15???????? }
            // n = 7, score = 400
            //   ff15????????         |                     
            //   89433c               | mov                 dword ptr [ebx + 0x3c], eax
            //   c744240c00000000     | mov                 dword ptr [esp + 0xc], 0
            //   c744240800000000     | mov                 dword ptr [esp + 8], 0
            //   c744240401000000     | mov                 dword ptr [esp + 4], 1
            //   c7042400000000       | mov                 dword ptr [esp], 0
            //   ff15????????         |                     

        $sequence_1 = { 893424 e8???????? 85c0 753b 8d431c c744240400000000 890424 }
            // n = 7, score = 400
            //   893424               | mov                 dword ptr [esp], esi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   753b                 | jne                 0x3d
            //   8d431c               | lea                 eax, dword ptr [ebx + 0x1c]
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0
            //   890424               | mov                 dword ptr [esp], eax

        $sequence_2 = { 75e9 8b6c2418 8b8314010000 8b542414 8d4d04 890424 89d8 }
            // n = 7, score = 400
            //   75e9                 | jne                 0xffffffeb
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   8b8314010000         | mov                 eax, dword ptr [ebx + 0x114]
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   8d4d04               | lea                 ecx, dword ptr [ebp + 4]
            //   890424               | mov                 dword ptr [esp], eax
            //   89d8                 | mov                 eax, ebx

        $sequence_3 = { 83c601 e8???????? 8b4728 89470c 8b4704 89c2 83e020 }
            // n = 7, score = 400
            //   83c601               | add                 esi, 1
            //   e8????????           |                     
            //   8b4728               | mov                 eax, dword ptr [edi + 0x28]
            //   89470c               | mov                 dword ptr [edi + 0xc], eax
            //   8b4704               | mov                 eax, dword ptr [edi + 4]
            //   89c2                 | mov                 edx, eax
            //   83e020               | and                 eax, 0x20

        $sequence_4 = { 31c0 89f2 38c2 0f84adfdffff 8b4d08 85c9 0f843a020000 }
            // n = 7, score = 400
            //   31c0                 | xor                 eax, eax
            //   89f2                 | mov                 edx, esi
            //   38c2                 | cmp                 dl, al
            //   0f84adfdffff         | je                  0xfffffdb3
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   85c9                 | test                ecx, ecx
            //   0f843a020000         | je                  0x240

        $sequence_5 = { 0f8d1afeffff 8b4610 8d0c52 83c201 895614 8d0488 85c0 }
            // n = 7, score = 400
            //   0f8d1afeffff         | jge                 0xfffffe20
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]
            //   8d0c52               | lea                 ecx, dword ptr [edx + edx*2]
            //   83c201               | add                 edx, 1
            //   895614               | mov                 dword ptr [esi + 0x14], edx
            //   8d0488               | lea                 eax, dword ptr [eax + ecx*4]
            //   85c0                 | test                eax, eax

        $sequence_6 = { 8b4de4 c645c400 8b59f4 85db 0f84cefdffff 0fbe45b8 8d5de4 }
            // n = 7, score = 400
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   c645c400             | mov                 byte ptr [ebp - 0x3c], 0
            //   8b59f4               | mov                 ebx, dword ptr [ecx - 0xc]
            //   85db                 | test                ebx, ebx
            //   0f84cefdffff         | je                  0xfffffdd4
            //   0fbe45b8             | movsx               eax, byte ptr [ebp - 0x48]
            //   8d5de4               | lea                 ebx, dword ptr [ebp - 0x1c]

        $sequence_7 = { 85c0 0f94c0 3a45b1 0f8784feffff 807db000 0f857afeffff 807db300 }
            // n = 7, score = 400
            //   85c0                 | test                eax, eax
            //   0f94c0               | sete                al
            //   3a45b1               | cmp                 al, byte ptr [ebp - 0x4f]
            //   0f8784feffff         | ja                  0xfffffe8a
            //   807db000             | cmp                 byte ptr [ebp - 0x50], 0
            //   0f857afeffff         | jne                 0xfffffe80
            //   807db300             | cmp                 byte ptr [ebp - 0x4d], 0

        $sequence_8 = { b801000000 c744243200000000 c744242600000000 c744242a00000000 c744242e00000000 891c24 6689442434 }
            // n = 7, score = 400
            //   b801000000           | mov                 eax, 1
            //   c744243200000000     | mov                 dword ptr [esp + 0x32], 0
            //   c744242600000000     | mov                 dword ptr [esp + 0x26], 0
            //   c744242a00000000     | mov                 dword ptr [esp + 0x2a], 0
            //   c744242e00000000     | mov                 dword ptr [esp + 0x2e], 0
            //   891c24               | mov                 dword ptr [esp], ebx
            //   6689442434           | mov                 word ptr [esp + 0x34], ax

        $sequence_9 = { 20c2 8854240f 0f8559010000 8b542408 01da 837c24604f 0fb702 }
            // n = 7, score = 400
            //   20c2                 | and                 dl, al
            //   8854240f             | mov                 byte ptr [esp + 0xf], dl
            //   0f8559010000         | jne                 0x15f
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   01da                 | add                 edx, ebx
            //   837c24604f           | cmp                 dword ptr [esp + 0x60], 0x4f
            //   0fb702               | movzx               eax, word ptr [edx]

    condition:
        7 of them and filesize < 3235840
}