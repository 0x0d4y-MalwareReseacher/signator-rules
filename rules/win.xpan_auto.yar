rule win_xpan_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.xpan."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xpan"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f83d0010000 0fb600 894514 31c0 38c3 0f843afeffff 8d4d08 }
            // n = 7, score = 400
            //   0f83d0010000         | jae                 0x1d6
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   894514               | mov                 dword ptr [ebp + 0x14], eax
            //   31c0                 | xor                 eax, eax
            //   38c3                 | cmp                 bl, al
            //   0f843afeffff         | je                  0xfffffe40
            //   8d4d08               | lea                 ecx, [ebp + 8]

        $sequence_1 = { 83ee01 0f840a020000 f6430510 74d8 66837b1c00 74d1 }
            // n = 6, score = 400
            //   83ee01               | sub                 esi, 1
            //   0f840a020000         | je                  0x210
            //   f6430510             | test                byte ptr [ebx + 5], 0x10
            //   74d8                 | je                  0xffffffda
            //   66837b1c00           | cmp                 word ptr [ebx + 0x1c], 0
            //   74d1                 | je                  0xffffffd3

        $sequence_2 = { 8945d0 31c0 668945d8 8d45d8 8945a4 8b5d08 83c218 }
            // n = 7, score = 400
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   31c0                 | xor                 eax, eax
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   8945a4               | mov                 dword ptr [ebp - 0x5c], eax
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   83c218               | add                 edx, 0x18

        $sequence_3 = { f744245400040000 0f85d6000000 85ed 7415 f744245400080000 740b 8b442440 }
            // n = 7, score = 400
            //   f744245400040000     | test                dword ptr [esp + 0x54], 0x400
            //   0f85d6000000         | jne                 0xdc
            //   85ed                 | test                ebp, ebp
            //   7415                 | je                  0x17
            //   f744245400080000     | test                dword ptr [esp + 0x54], 0x800
            //   740b                 | je                  0xd
            //   8b442440             | mov                 eax, dword ptr [esp + 0x40]

        $sequence_4 = { 85c0 7443 8138edf0b1ba bb16000000 7416 c70424???????? e8???????? }
            // n = 7, score = 400
            //   85c0                 | test                eax, eax
            //   7443                 | je                  0x45
            //   8138edf0b1ba         | cmp                 dword ptr [eax], 0xbab1f0ed
            //   bb16000000           | mov                 ebx, 0x16
            //   7416                 | je                  0x18
            //   c70424????????       |                     
            //   e8????????           |                     

        $sequence_5 = { 8901 8b8500ffffff 01c2 890424 89542404 e8???????? 8b450c }
            // n = 7, score = 400
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b8500ffffff         | mov                 eax, dword ptr [ebp - 0x100]
            //   01c2                 | add                 edx, eax
            //   890424               | mov                 dword ptr [esp], eax
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   e8????????           |                     
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_6 = { c7450cffffffff 894108 8b4108 3b410c 0f83cb050000 0fb600 8b4d10 }
            // n = 7, score = 400
            //   c7450cffffffff       | mov                 dword ptr [ebp + 0xc], 0xffffffff
            //   894108               | mov                 dword ptr [ecx + 8], eax
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   3b410c               | cmp                 eax, dword ptr [ecx + 0xc]
            //   0f83cb050000         | jae                 0x5d1
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]

        $sequence_7 = { 8b5c2430 891c24 e8???????? 8b442438 895c2404 c744240800000000 c7042400600000 }
            // n = 7, score = 400
            //   8b5c2430             | mov                 ebx, dword ptr [esp + 0x30]
            //   891c24               | mov                 dword ptr [esp], ebx
            //   e8????????           |                     
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]
            //   895c2404             | mov                 dword ptr [esp + 4], ebx
            //   c744240800000000     | mov                 dword ptr [esp + 8], 0
            //   c7042400600000       | mov                 dword ptr [esp], 0x6000

        $sequence_8 = { 85c0 0f94c0 3a45b7 0f875cffffff 807db600 0f8552ffffff 807dd000 }
            // n = 7, score = 400
            //   85c0                 | test                eax, eax
            //   0f94c0               | sete                al
            //   3a45b7               | cmp                 al, byte ptr [ebp - 0x49]
            //   0f875cffffff         | ja                  0xffffff62
            //   807db600             | cmp                 byte ptr [ebp - 0x4a], 0
            //   0f8552ffffff         | jne                 0xffffff58
            //   807dd000             | cmp                 byte ptr [ebp - 0x30], 0

        $sequence_9 = { e9???????? 8b01 8854242e ff5024 83f8ff 0fb654242e 0f8598feffff }
            // n = 7, score = 400
            //   e9????????           |                     
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   8854242e             | mov                 byte ptr [esp + 0x2e], dl
            //   ff5024               | call                dword ptr [eax + 0x24]
            //   83f8ff               | cmp                 eax, -1
            //   0fb654242e           | movzx               edx, byte ptr [esp + 0x2e]
            //   0f8598feffff         | jne                 0xfffffe9e

    condition:
        7 of them and filesize < 3235840
}