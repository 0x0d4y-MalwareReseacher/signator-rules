rule win_crosswalk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.crosswalk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crosswalk"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 418bc0 f7e9 03d1 c1fa0b }
            // n = 4, score = 1300
            //   418bc0               | inc                 ecx
            //   f7e9                 | mov                 eax, eax
            //   03d1                 | imul                ecx
            //   c1fa0b               | add                 edx, ecx

        $sequence_1 = { ff15???????? 448bf0 4533c9 4533c0 }
            // n = 4, score = 1300
            //   ff15????????         |                     
            //   448bf0               | xor                 edx, edx
            //   4533c9               | dec                 eax
            //   4533c0               | mov                 ecx, eax

        $sequence_2 = { 03d1 c1fa0b 8bc2 c1e81f 03d0 69c2890e0000 }
            // n = 6, score = 1300
            //   03d1                 | sar                 edx, 0xb
            //   c1fa0b               | dec                 esp
            //   8bc2                 | mov                 eax, esi
            //   c1e81f               | xor                 edx, edx
            //   03d0                 | inc                 ecx
            //   69c2890e0000         | movsx               eax, byte ptr [eax]

        $sequence_3 = { 458d7ee0 418bd7 ff15???????? 4821742420 }
            // n = 4, score = 1300
            //   458d7ee0             | xor                 edx, edx
            //   418bd7               | dec                 eax
            //   ff15????????         |                     
            //   4821742420           | mov                 ecx, eax

        $sequence_4 = { 458bc6 33d2 488bc8 e8???????? 4533c9 4533c0 }
            // n = 6, score = 1300
            //   458bc6               | dec                 ecx
            //   33d2                 | inc                 eax
            //   488bc8               | ror                 edx, cl
            //   e8????????           |                     
            //   4533c9               | add                 edx, ecx
            //   4533c0               | sar                 edx, 0xb

        $sequence_5 = { 4c8bc6 33d2 410fbe00 49ffc0 d3ca }
            // n = 5, score = 1300
            //   4c8bc6               | mov                 eax, 0x8ce6568d
            //   33d2                 | inc                 ecx
            //   410fbe00             | mov                 eax, eax
            //   49ffc0               | imul                ecx
            //   d3ca                 | add                 edx, ecx

        $sequence_6 = { d3ca 03d0 4183ef01 75ef }
            // n = 4, score = 1300
            //   d3ca                 | dec                 ecx
            //   03d0                 | inc                 eax
            //   4183ef01             | ror                 edx, cl
            //   75ef                 | add                 edx, eax

        $sequence_7 = { 33f6 8d6e20 8bcd e8???????? }
            // n = 4, score = 1300
            //   33f6                 | add                 edx, eax
            //   8d6e20               | inc                 ecx
            //   8bcd                 | sub                 edi, 1
            //   e8????????           |                     

        $sequence_8 = { 57 56 ff15???????? 85c0 7f32 }
            // n = 5, score = 200
            //   57                   | push                edi
            //   56                   | push                esi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7f32                 | jg                  0x34

        $sequence_9 = { ff15???????? 68a0860100 ff15???????? 68???????? e8???????? }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   68a0860100           | push                0x186a0
            //   ff15????????         |                     
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_10 = { 56 ff15???????? 6a00 6a00 8d78f4 57 56 }
            // n = 7, score = 200
            //   56                   | push                esi
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d78f4               | lea                 edi, [eax - 0xc]
            //   57                   | push                edi
            //   56                   | push                esi

        $sequence_11 = { c1fa06 6bc830 8b0495808e4100 f644082801 7414 }
            // n = 5, score = 200
            //   c1fa06               | sar                 edx, 6
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b0495808e4100       | mov                 eax, dword ptr [edx*4 + 0x418e80]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7414                 | je                  0x16

        $sequence_12 = { 8365fc00 8b049d808e4100 8b4de0 f644082801 7515 }
            // n = 5, score = 200
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8b049d808e4100       | mov                 eax, dword ptr [ebx*4 + 0x418e80]
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7515                 | jne                 0x17

        $sequence_13 = { eb07 8b0cc50c644100 894de4 85c9 }
            // n = 4, score = 200
            //   eb07                 | jmp                 9
            //   8b0cc50c644100       | mov                 ecx, dword ptr [eax*8 + 0x41640c]
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   85c9                 | test                ecx, ecx

        $sequence_14 = { 8bec 8b4508 83f80b 7719 ff2485a2364000 6a04 }
            // n = 6, score = 200
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83f80b               | cmp                 eax, 0xb
            //   7719                 | ja                  0x1b
            //   ff2485a2364000       | jmp                 dword ptr [eax*4 + 0x4036a2]
            //   6a04                 | push                4

        $sequence_15 = { 8b85b4f8ffff 0fb70485c4574100 8d0485c04e4100 50 8d8590faffff 03c7 50 }
            // n = 7, score = 200
            //   8b85b4f8ffff         | mov                 eax, dword ptr [ebp - 0x74c]
            //   0fb70485c4574100     | movzx               eax, word ptr [eax*4 + 0x4157c4]
            //   8d0485c04e4100       | lea                 eax, [eax*4 + 0x414ec0]
            //   50                   | push                eax
            //   8d8590faffff         | lea                 eax, [ebp - 0x570]
            //   03c7                 | add                 eax, edi
            //   50                   | push                eax

    condition:
        7 of them and filesize < 286720
}