rule win_crosswalk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.crosswalk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crosswalk"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33f6 8d6e20 8bcd e8???????? }
            // n = 4, score = 1300
            //   33f6                 | movsx               eax, byte ptr [eax]
            //   8d6e20               | dec                 ecx
            //   8bcd                 | inc                 eax
            //   e8????????           |                     

        $sequence_1 = { 410fbe00 49ffc0 d3ca 03d0 4183ef01 }
            // n = 5, score = 1300
            //   410fbe00             | dec                 eax
            //   49ffc0               | mov                 ecx, eax
            //   d3ca                 | inc                 ebp
            //   03d0                 | xor                 ecx, ecx
            //   4183ef01             | inc                 ebp

        $sequence_2 = { 8bc2 c1e81f 03d0 69c2890e0000 }
            // n = 4, score = 1300
            //   8bc2                 | mov                 eax, eax
            //   c1e81f               | imul                ecx
            //   03d0                 | add                 edx, ecx
            //   69c2890e0000         | sar                 edx, 0xb

        $sequence_3 = { 33d2 488bc8 e8???????? 4533c9 4533c0 33d2 }
            // n = 6, score = 1300
            //   33d2                 | inc                 ecx
            //   488bc8               | movsx               eax, byte ptr [eax]
            //   e8????????           |                     
            //   4533c9               | dec                 ecx
            //   4533c0               | inc                 eax
            //   33d2                 | xor                 edx, edx

        $sequence_4 = { 4883ec28 4885c9 7402 ffd1 }
            // n = 4, score = 1300
            //   4883ec28             | add                 edx, eax
            //   4885c9               | imul                eax, edx, 0xe89
            //   7402                 | inc                 ecx
            //   ffd1                 | mov                 eax, eax

        $sequence_5 = { ff15???????? 448bf0 4533c9 4533c0 }
            // n = 4, score = 1300
            //   ff15????????         |                     
            //   448bf0               | ror                 edx, cl
            //   4533c9               | mov                 eax, edx
            //   4533c0               | shr                 eax, 0x1f

        $sequence_6 = { 4c8bc6 33d2 410fbe00 49ffc0 }
            // n = 4, score = 1300
            //   4c8bc6               | shr                 eax, 0x1f
            //   33d2                 | dec                 esp
            //   410fbe00             | mov                 eax, esi
            //   49ffc0               | xor                 edx, edx

        $sequence_7 = { 418bc0 f7e9 03d1 c1fa0b 8bc2 c1e81f }
            // n = 6, score = 1300
            //   418bc0               | inc                 ecx
            //   f7e9                 | mov                 eax, eax
            //   03d1                 | imul                ecx
            //   c1fa0b               | add                 edx, ecx
            //   8bc2                 | sar                 edx, 0xb
            //   c1e81f               | mov                 eax, edx

        $sequence_8 = { c745e0245b4100 e9???????? c745dc02000000 c745e0245b4100 }
            // n = 4, score = 200
            //   c745e0245b4100       | xor                 edx, edx
            //   e9????????           |                     
            //   c745dc02000000       | dec                 eax
            //   c745e0245b4100       | mov                 ecx, eax

        $sequence_9 = { 735f 8bc6 8bfe 83e03f c1ff06 6bd830 8b04bd808e4100 }
            // n = 7, score = 200
            //   735f                 | shr                 eax, 0x1f
            //   8bc6                 | add                 edx, eax
            //   8bfe                 | imul                eax, edx, 0xe89
            //   83e03f               | cmp                 ecx, eax
            //   c1ff06               | add                 edx, ecx
            //   6bd830               | sar                 edx, 0xb
            //   8b04bd808e4100       | mov                 eax, edx

        $sequence_10 = { c1fb06 83e03f 6bd030 895de4 8b049d808e4100 }
            // n = 5, score = 200
            //   c1fb06               | add                 edx, eax
            //   83e03f               | inc                 ecx
            //   6bd030               | sub                 edi, 1
            //   895de4               | inc                 ebp
            //   8b049d808e4100       | mov                 eax, esi

        $sequence_11 = { ff15???????? 8bf0 83feff 0f84b2000000 85f6 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   8bf0                 | ror                 edx, cl
            //   83feff               | add                 edx, eax
            //   0f84b2000000         | inc                 ecx
            //   85f6                 | sub                 edi, 1

        $sequence_12 = { 8b0485808e4100 0fb6440828 83e040 5d c3 e8???????? }
            // n = 6, score = 200
            //   8b0485808e4100       | add                 edx, ecx
            //   0fb6440828           | sar                 edx, 0xb
            //   83e040               | dec                 ecx
            //   5d                   | inc                 eax
            //   c3                   | ror                 edx, cl
            //   e8????????           |                     

        $sequence_13 = { 6bd030 8b45fc 03148d808e4100 8b00 894218 8a03 }
            // n = 6, score = 200
            //   6bd030               | xor                 edx, edx
            //   8b45fc               | xor                 edx, edx
            //   03148d808e4100       | inc                 ecx
            //   8b00                 | movsx               eax, byte ptr [eax]
            //   894218               | dec                 ecx
            //   8a03                 | inc                 eax

        $sequence_14 = { 55 8bec 8b4508 57 8d3c85a88d4100 }
            // n = 5, score = 200
            //   55                   | lea                 ebp, [esi + 0x20]
            //   8bec                 | mov                 ecx, ebp
            //   8b4508               | inc                 ecx
            //   57                   | mov                 eax, eax
            //   8d3c85a88d4100       | imul                ecx

        $sequence_15 = { f2c3 f2e991020000 55 8bec }
            // n = 4, score = 200
            //   f2c3                 | inc                 ebp
            //   f2e991020000         | xor                 ecx, ecx
            //   55                   | inc                 ebp
            //   8bec                 | xor                 eax, eax

    condition:
        7 of them and filesize < 286720
}