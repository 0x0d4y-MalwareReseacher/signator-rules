rule win_crosswalk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.crosswalk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crosswalk"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33f6 8d6e20 8bcd e8???????? }
            // n = 4, score = 1300
            //   33f6                 | dec                 eax
            //   8d6e20               | test                ecx, ecx
            //   8bcd                 | je                  4
            //   e8????????           |                     

        $sequence_1 = { d3ca 03d0 4183ef01 75ef }
            // n = 4, score = 1300
            //   d3ca                 | movsx               eax, byte ptr [eax]
            //   03d0                 | dec                 ecx
            //   4183ef01             | inc                 eax
            //   75ef                 | ror                 edx, cl

        $sequence_2 = { 418bc0 f7e9 03d1 c1fa0b 8bc2 c1e81f }
            // n = 6, score = 1300
            //   418bc0               | xor                 edx, edx
            //   f7e9                 | inc                 ecx
            //   03d1                 | movsx               eax, byte ptr [eax]
            //   c1fa0b               | dec                 ecx
            //   8bc2                 | inc                 eax
            //   c1e81f               | ror                 edx, cl

        $sequence_3 = { 8bc2 c1e81f 03d0 69c2890e0000 }
            // n = 4, score = 1300
            //   8bc2                 | inc                 ecx
            //   c1e81f               | mov                 eax, eax
            //   03d0                 | imul                ecx
            //   69c2890e0000         | add                 edx, ecx

        $sequence_4 = { 4883ec28 4885c9 7402 ffd1 }
            // n = 4, score = 1300
            //   4883ec28             | xor                 edx, edx
            //   4885c9               | inc                 ecx
            //   7402                 | mov                 eax, 0x8ce6568d
            //   ffd1                 | inc                 ecx

        $sequence_5 = { ff15???????? 448bf0 4533c9 4533c0 }
            // n = 4, score = 1300
            //   ff15????????         |                     
            //   448bf0               | dec                 ecx
            //   4533c9               | inc                 eax
            //   4533c0               | ror                 edx, cl

        $sequence_6 = { 4c8bc6 33d2 410fbe00 49ffc0 d3ca }
            // n = 5, score = 1300
            //   4c8bc6               | inc                 ebp
            //   33d2                 | xor                 eax, eax
            //   410fbe00             | xor                 edx, edx
            //   49ffc0               | dec                 esp
            //   d3ca                 | mov                 eax, esi

        $sequence_7 = { 488bc8 e8???????? 4533c9 4533c0 33d2 }
            // n = 5, score = 1300
            //   488bc8               | dec                 eax
            //   e8????????           |                     
            //   4533c9               | mov                 ecx, eax
            //   4533c0               | inc                 ebp
            //   33d2                 | xor                 ecx, ecx

        $sequence_8 = { c3 6a40 6800100000 50 6a00 }
            // n = 5, score = 200
            //   c3                   | ret                 
            //   6a40                 | push                0x40
            //   6800100000           | push                0x1000
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_9 = { 8d90fc814100 5f 668b02 8d5202 668901 }
            // n = 5, score = 200
            //   8d90fc814100         | lea                 edx, dword ptr [eax + 0x4181fc]
            //   5f                   | pop                 edi
            //   668b02               | mov                 ax, word ptr [edx]
            //   8d5202               | lea                 edx, dword ptr [edx + 2]
            //   668901               | mov                 word ptr [ecx], ax

        $sequence_10 = { 8bc6 8bde c1fb06 83e03f 6bd030 895de4 8b049d808e4100 }
            // n = 7, score = 200
            //   8bc6                 | mov                 eax, esi
            //   8bde                 | mov                 ebx, esi
            //   c1fb06               | sar                 ebx, 6
            //   83e03f               | and                 eax, 0x3f
            //   6bd030               | imul                edx, eax, 0x30
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   8b049d808e4100       | mov                 eax, dword ptr [ebx*4 + 0x418e80]

        $sequence_11 = { 83e03f c1ff06 6bd830 8b04bd808e4100 }
            // n = 4, score = 200
            //   83e03f               | and                 eax, 0x3f
            //   c1ff06               | sar                 edi, 6
            //   6bd830               | imul                ebx, eax, 0x30
            //   8b04bd808e4100       | mov                 eax, dword ptr [edi*4 + 0x418e80]

        $sequence_12 = { 85c9 0f84d3000000 8b048d5c584100 89859cf8ffff }
            // n = 4, score = 200
            //   85c9                 | test                ecx, ecx
            //   0f84d3000000         | je                  0xd9
            //   8b048d5c584100       | mov                 eax, dword ptr [ecx*4 + 0x41585c]
            //   89859cf8ffff         | mov                 dword ptr [ebp - 0x764], eax

        $sequence_13 = { 8d45fc 50 8b04bd808e4100 ff743018 ff15???????? 85c0 0f95c0 }
            // n = 7, score = 200
            //   8d45fc               | lea                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   8b04bd808e4100       | mov                 eax, dword ptr [edi*4 + 0x418e80]
            //   ff743018             | push                dword ptr [eax + esi + 0x18]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f95c0               | setne               al

        $sequence_14 = { b802000000 833d????????00 0f85a0110000 8d0dc0584100 ba1b000000 e8???????? }
            // n = 6, score = 200
            //   b802000000           | mov                 eax, 2
            //   833d????????00       |                     
            //   0f85a0110000         | jne                 0x11a6
            //   8d0dc0584100         | lea                 ecx, dword ptr [0x4158c0]
            //   ba1b000000           | mov                 edx, 0x1b
            //   e8????????           |                     

        $sequence_15 = { 894de0 8b049d808e4100 0fb6440828 83e001 }
            // n = 4, score = 200
            //   894de0               | mov                 dword ptr [ebp - 0x20], ecx
            //   8b049d808e4100       | mov                 eax, dword ptr [ebx*4 + 0x418e80]
            //   0fb6440828           | movzx               eax, byte ptr [eax + ecx + 0x28]
            //   83e001               | and                 eax, 1

    condition:
        7 of them and filesize < 286720
}