rule win_radamant_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.radamant."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.radamant"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8901 8b4df4 83c130 8b55f4 }
            // n = 4, score = 100
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   83c130               | add                 ecx, 0x30
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]

        $sequence_1 = { 55 89e5 81ec68090000 a1???????? 8945c8 a1???????? 8945cc }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   81ec68090000         | sub                 esp, 0x968
            //   a1????????           |                     
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   a1????????           |                     
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax

        $sequence_2 = { 8b55f4 83c20c 8b45f4 83c028 8b00 3302 8901 }
            // n = 7, score = 100
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   83c20c               | add                 edx, 0xc
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83c028               | add                 eax, 0x28
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   3302                 | xor                 eax, dword ptr [edx]
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_3 = { 0345d8 0345f0 2d76b3d572 8945f0 8d45f0 c10014 }
            // n = 6, score = 100
            //   0345d8               | add                 eax, dword ptr [ebp - 0x28]
            //   0345f0               | add                 eax, dword ptr [ebp - 0x10]
            //   2d76b3d572           | sub                 eax, 0x72d5b376
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   c10014               | rol                 dword ptr [eax], 0x14

        $sequence_4 = { 8945e8 8d45e8 c1000b 8b55f4 8d45e8 0110 }
            // n = 6, score = 100
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   8d45e8               | lea                 eax, dword ptr [ebp - 0x18]
            //   c1000b               | rol                 dword ptr [eax], 0xb
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   8d45e8               | lea                 eax, dword ptr [ebp - 0x18]
            //   0110                 | add                 dword ptr [eax], edx

        $sequence_5 = { 8945dc 8d45fc 830010 8b55fc 8b45e8 c1e818 0fb6c0 }
            // n = 7, score = 100
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   8d45fc               | lea                 eax, dword ptr [ebp - 4]
            //   830010               | add                 dword ptr [eax], 0x10
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   c1e818               | shr                 eax, 0x18
            //   0fb6c0               | movzx               eax, al

        $sequence_6 = { 8b45f0 f7d0 2345e8 09d0 0345d8 0345f4 052211906b }
            // n = 7, score = 100
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   f7d0                 | not                 eax
            //   2345e8               | and                 eax, dword ptr [ebp - 0x18]
            //   09d0                 | or                  eax, edx
            //   0345d8               | add                 eax, dword ptr [ebp - 0x28]
            //   0345f4               | add                 eax, dword ptr [ebp - 0xc]
            //   052211906b           | add                 eax, 0x6b901122

        $sequence_7 = { 898550feffff a1???????? 898554feffff a1???????? 898558feffff a1???????? 89855cfeffff }
            // n = 7, score = 100
            //   898550feffff         | mov                 dword ptr [ebp - 0x1b0], eax
            //   a1????????           |                     
            //   898554feffff         | mov                 dword ptr [ebp - 0x1ac], eax
            //   a1????????           |                     
            //   898558feffff         | mov                 dword ptr [ebp - 0x1a8], eax
            //   a1????????           |                     
            //   89855cfeffff         | mov                 dword ptr [ebp - 0x1a4], eax

        $sequence_8 = { 897c2418 8b55b0 89542414 8b55ac }
            // n = 4, score = 100
            //   897c2418             | mov                 dword ptr [esp + 0x18], edi
            //   8b55b0               | mov                 edx, dword ptr [ebp - 0x50]
            //   89542414             | mov                 dword ptr [esp + 0x14], edx
            //   8b55ac               | mov                 edx, dword ptr [ebp - 0x54]

        $sequence_9 = { 890495b00a4100 8b55f4 8b45f4 8b0485b00a4100 c1c018 }
            // n = 5, score = 100
            //   890495b00a4100       | mov                 dword ptr [edx*4 + 0x410ab0], eax
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   8b0485b00a4100       | mov                 eax, dword ptr [eax*4 + 0x410ab0]
            //   c1c018               | rol                 eax, 0x18

    condition:
        7 of them and filesize < 204800
}