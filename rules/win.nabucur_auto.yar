rule win_nabucur_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.nabucur."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nabucur"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 48 43 0bf9 85c0 }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   43                   | inc                 ebx
            //   0bf9                 | or                  edi, ecx
            //   85c0                 | test                eax, eax

        $sequence_1 = { 48 49 85c0 75fa }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   49                   | dec                 ecx
            //   85c0                 | test                eax, eax
            //   75fa                 | jne                 0xfffffffc

        $sequence_2 = { 51 e8???????? 013e 8b06 83c40c }
            // n = 5, score = 200
            //   51                   | push                ecx
            //   e8????????           |                     
            //   013e                 | add                 dword ptr [esi], edi
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   83c40c               | add                 esp, 0xc

        $sequence_3 = { 009eaa030000 0fb686aa030000 57 83f80a 0f876d010000 }
            // n = 5, score = 200
            //   009eaa030000         | add                 byte ptr [esi + 0x3aa], bl
            //   0fb686aa030000       | movzx               eax, byte ptr [esi + 0x3aa]
            //   57                   | push                edi
            //   83f80a               | cmp                 eax, 0xa
            //   0f876d010000         | ja                  0x173

        $sequence_4 = { 48 3bc8 7cee 8d742418 }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   3bc8                 | cmp                 ecx, eax
            //   7cee                 | jl                  0xfffffff0
            //   8d742418             | lea                 esi, dword ptr [esp + 0x18]

        $sequence_5 = { 48 3bc3 8d54bafc 7c12 2bc3 }
            // n = 5, score = 200
            //   48                   | dec                 eax
            //   3bc3                 | cmp                 eax, ebx
            //   8d54bafc             | lea                 edx, dword ptr [edx + edi*4 - 4]
            //   7c12                 | jl                  0x14
            //   2bc3                 | sub                 eax, ebx

        $sequence_6 = { 48 41 0bf2 85c0 }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   41                   | inc                 ecx
            //   0bf2                 | or                  esi, edx
            //   85c0                 | test                eax, eax

        $sequence_7 = { 48 45 0bf1 85c0 }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   45                   | inc                 ebp
            //   0bf1                 | or                  esi, ecx
            //   85c0                 | test                eax, eax

        $sequence_8 = { bbe43ee7f8 ebb8 83e904 83f905 }
            // n = 4, score = 100
            //   bbe43ee7f8           | mov                 ebx, 0xf8e73ee4
            //   ebb8                 | jmp                 0xffffffba
            //   83e904               | sub                 ecx, 4
            //   83f905               | cmp                 ecx, 5

        $sequence_9 = { 09a86685f6cd 6e 6d b626 99 7a63 }
            // n = 6, score = 100
            //   09a86685f6cd         | or                  dword ptr [eax - 0x32097a9a], ebp
            //   6e                   | outsb               dx, byte ptr [esi]
            //   6d                   | insd                dword ptr es:[edi], dx
            //   b626                 | mov                 dh, 0x26
            //   99                   | cdq                 
            //   7a63                 | jp                  0x65

        $sequence_10 = { 8b5d10 2b9decfeffff 6a00 53 8b450c }
            // n = 5, score = 100
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   2b9decfeffff         | sub                 ebx, dword ptr [ebp - 0x114]
            //   6a00                 | push                0
            //   53                   | push                ebx
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_11 = { 3106 e9???????? 83e904 ba273bfbfe }
            // n = 4, score = 100
            //   3106                 | xor                 dword ptr [esi], eax
            //   e9????????           |                     
            //   83e904               | sub                 ecx, 4
            //   ba273bfbfe           | mov                 edx, 0xfefb3b27

        $sequence_12 = { 2aee a3???????? e12b ee a7 }
            // n = 5, score = 100
            //   2aee                 | sub                 ch, dh
            //   a3????????           |                     
            //   e12b                 | loope               0x2d
            //   ee                   | out                 dx, al
            //   a7                   | cmpsd               dword ptr [esi], dword ptr es:[edi]

        $sequence_13 = { 81f33e565300 81f2760dfdfb bb38c2cdf8 3dd452c440 }
            // n = 4, score = 100
            //   81f33e565300         | xor                 ebx, 0x53563e
            //   81f2760dfdfb         | xor                 edx, 0xfbfd0d76
            //   bb38c2cdf8           | mov                 ebx, 0xf8cdc238
            //   3dd452c440           | cmp                 eax, 0x40c452d4

        $sequence_14 = { ff35???????? ff15???????? 83f800 759d ff35???????? }
            // n = 5, score = 100
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   83f800               | cmp                 eax, 0
            //   759d                 | jne                 0xffffff9f
            //   ff35????????         |                     

        $sequence_15 = { 83f8ff 7402 eb17 837dfc00 }
            // n = 4, score = 100
            //   83f8ff               | cmp                 eax, -1
            //   7402                 | je                  4
            //   eb17                 | jmp                 0x19
            //   837dfc00             | cmp                 dword ptr [ebp - 4], 0

    condition:
        7 of them and filesize < 1949696
}