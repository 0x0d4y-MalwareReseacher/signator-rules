rule win_ayegent_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.ayegent."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ayegent"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 e8???????? 8b842424020000 83c408 }
            // n = 4, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   8b842424020000       | mov                 eax, dword ptr [esp + 0x224]
            //   83c408               | add                 esp, 8

        $sequence_1 = { 50 6a00 68ff0f1f00 ff15???????? 8bf0 6a00 56 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   6a00                 | push                0
            //   68ff0f1f00           | push                0x1f0fff
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   6a00                 | push                0
            //   56                   | push                esi

        $sequence_2 = { e8???????? 8bf0 83c603 ffd5 0fafc6 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c603               | add                 esi, 3
            //   ffd5                 | call                ebp
            //   0fafc6               | imul                eax, esi

        $sequence_3 = { 53 51 ff15???????? 5f 5e 5d 33c0 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { 8d9e10784000 803b00 8bcb 742c 8a5101 84d2 7425 }
            // n = 7, score = 100
            //   8d9e10784000         | lea                 ebx, dword ptr [esi + 0x407810]
            //   803b00               | cmp                 byte ptr [ebx], 0
            //   8bcb                 | mov                 ecx, ebx
            //   742c                 | je                  0x2e
            //   8a5101               | mov                 dl, byte ptr [ecx + 1]
            //   84d2                 | test                dl, dl
            //   7425                 | je                  0x27

        $sequence_5 = { c1e604 aa 8d9e10784000 803b00 }
            // n = 4, score = 100
            //   c1e604               | shl                 esi, 4
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8d9e10784000         | lea                 ebx, dword ptr [esi + 0x407810]
            //   803b00               | cmp                 byte ptr [ebx], 0

        $sequence_6 = { 68ac0d0000 e8???????? 83c438 68???????? e8???????? 83c404 }
            // n = 6, score = 100
            //   68ac0d0000           | push                0xdac
            //   e8????????           |                     
            //   83c438               | add                 esp, 0x38
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_7 = { 6802000080 e8???????? 83c410 8d4c2460 51 ff15???????? }
            // n = 6, score = 100
            //   6802000080           | push                0x80000002
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8d4c2460             | lea                 ecx, dword ptr [esp + 0x60]
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_8 = { 8bcf c1f805 83e11f 8b0485809f4000 }
            // n = 4, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   c1f805               | sar                 eax, 5
            //   83e11f               | and                 ecx, 0x1f
            //   8b0485809f4000       | mov                 eax, dword ptr [eax*4 + 0x409f80]

        $sequence_9 = { 51 53 68???????? 68???????? ffd6 8bf8 33f6 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   53                   | push                ebx
            //   68????????           |                     
            //   68????????           |                     
            //   ffd6                 | call                esi
            //   8bf8                 | mov                 edi, eax
            //   33f6                 | xor                 esi, esi

    condition:
        7 of them and filesize < 90112
}