rule win_emdivi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.emdivi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.emdivi"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bec 807d0880 730d 0fb64508 }
            // n = 4, score = 300
            //   8bec                 | mov                 ebp, esp
            //   807d0880             | cmp                 byte ptr [ebp + 8], 0x80
            //   730d                 | jae                 0xf
            //   0fb64508             | movzx               eax, byte ptr [ebp + 8]

        $sequence_1 = { 7404 8bf3 eb17 f6c307 740f 8d73ff }
            // n = 6, score = 300
            //   7404                 | je                  6
            //   8bf3                 | mov                 esi, ebx
            //   eb17                 | jmp                 0x19
            //   f6c307               | test                bl, 7
            //   740f                 | je                  0x11
            //   8d73ff               | lea                 esi, [ebx - 1]

        $sequence_2 = { 8945f8 eb37 8b4491fc 8bd8 c1eb05 }
            // n = 5, score = 300
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   eb37                 | jmp                 0x39
            //   8b4491fc             | mov                 eax, dword ptr [ecx + edx*4 - 4]
            //   8bd8                 | mov                 ebx, eax
            //   c1eb05               | shr                 ebx, 5

        $sequence_3 = { c645f000 8d7df1 ab 33f6 }
            // n = 4, score = 300
            //   c645f000             | mov                 byte ptr [ebp - 0x10], 0
            //   8d7df1               | lea                 edi, [ebp - 0xf]
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   33f6                 | xor                 esi, esi

        $sequence_4 = { ab ab ab ab 68???????? ab 8d45e4 }
            // n = 7, score = 300
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   68????????           |                     
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   8d45e4               | lea                 eax, [ebp - 0x1c]

        $sequence_5 = { 881f 59 47 8a06 }
            // n = 4, score = 300
            //   881f                 | mov                 byte ptr [edi], bl
            //   59                   | pop                 ecx
            //   47                   | inc                 edi
            //   8a06                 | mov                 al, byte ptr [esi]

        $sequence_6 = { eb03 8975fc 3975fc 74cb 56 56 }
            // n = 6, score = 300
            //   eb03                 | jmp                 5
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   3975fc               | cmp                 dword ptr [ebp - 4], esi
            //   74cb                 | je                  0xffffffcd
            //   56                   | push                esi
            //   56                   | push                esi

        $sequence_7 = { 51 e8???????? ff75b8 e8???????? }
            // n = 4, score = 300
            //   51                   | push                ecx
            //   e8????????           |                     
            //   ff75b8               | push                dword ptr [ebp - 0x48]
            //   e8????????           |                     

        $sequence_8 = { 23c3 c1e004 c1ea04 0bc2 }
            // n = 4, score = 300
            //   23c3                 | and                 eax, ebx
            //   c1e004               | shl                 eax, 4
            //   c1ea04               | shr                 edx, 4
            //   0bc2                 | or                  eax, edx

        $sequence_9 = { 8bcf 897df0 e8???????? 68???????? 68???????? 6a0b }
            // n = 6, score = 300
            //   8bcf                 | mov                 ecx, edi
            //   897df0               | mov                 dword ptr [ebp - 0x10], edi
            //   e8????????           |                     
            //   68????????           |                     
            //   68????????           |                     
            //   6a0b                 | push                0xb

    condition:
        7 of them and filesize < 581632
}