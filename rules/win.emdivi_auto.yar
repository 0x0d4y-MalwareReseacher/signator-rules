rule win_emdivi_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.emdivi."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.emdivi"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03ca 51 8d443001 50 e8???????? 83c40c 5f }
            // n = 7, score = 300
            //   03ca                 | add                 ecx, edx
            //   51                   | push                ecx
            //   8d443001             | lea                 eax, [eax + esi + 1]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   5f                   | pop                 edi

        $sequence_1 = { 8bd8 43 85db 7f03 33db 43 6800400000 }
            // n = 7, score = 300
            //   8bd8                 | mov                 ebx, eax
            //   43                   | inc                 ebx
            //   85db                 | test                ebx, ebx
            //   7f03                 | jg                  5
            //   33db                 | xor                 ebx, ebx
            //   43                   | inc                 ebx
            //   6800400000           | push                0x4000

        $sequence_2 = { 59 c745e401000000 c745e803000000 c745ec05000000 894df0 c745f408000000 c745f80a000000 }
            // n = 7, score = 300
            //   59                   | pop                 ecx
            //   c745e401000000       | mov                 dword ptr [ebp - 0x1c], 1
            //   c745e803000000       | mov                 dword ptr [ebp - 0x18], 3
            //   c745ec05000000       | mov                 dword ptr [ebp - 0x14], 5
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   c745f408000000       | mov                 dword ptr [ebp - 0xc], 8
            //   c745f80a000000       | mov                 dword ptr [ebp - 8], 0xa

        $sequence_3 = { 0f8785000000 8a45ff c0fb04 c0e002 0ad8 881f 47 }
            // n = 7, score = 300
            //   0f8785000000         | ja                  0x8b
            //   8a45ff               | mov                 al, byte ptr [ebp - 1]
            //   c0fb04               | sar                 bl, 4
            //   c0e002               | shl                 al, 2
            //   0ad8                 | or                  bl, al
            //   881f                 | mov                 byte ptr [edi], bl
            //   47                   | inc                 edi

        $sequence_4 = { 6a31 8d45b9 53 50 885db8 }
            // n = 5, score = 300
            //   6a31                 | push                0x31
            //   8d45b9               | lea                 eax, [ebp - 0x47]
            //   53                   | push                ebx
            //   50                   | push                eax
            //   885db8               | mov                 byte ptr [ebp - 0x48], bl

        $sequence_5 = { 7410 83fa06 740b 8b45f8 3b4508 }
            // n = 5, score = 300
            //   7410                 | je                  0x12
            //   83fa06               | cmp                 edx, 6
            //   740b                 | je                  0xd
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   3b4508               | cmp                 eax, dword ptr [ebp + 8]

        $sequence_6 = { 8bf0 8bfb c1ef05 c1e602 }
            // n = 4, score = 300
            //   8bf0                 | mov                 esi, eax
            //   8bfb                 | mov                 edi, ebx
            //   c1ef05               | shr                 edi, 5
            //   c1e602               | shl                 esi, 2

        $sequence_7 = { 7532 8bc7 2503000080 7905 48 83c8fc 40 }
            // n = 7, score = 300
            //   7532                 | jne                 0x34
            //   8bc7                 | mov                 eax, edi
            //   2503000080           | and                 eax, 0x80000003
            //   7905                 | jns                 7
            //   48                   | dec                 eax
            //   83c8fc               | or                  eax, 0xfffffffc
            //   40                   | inc                 eax

        $sequence_8 = { 58 6a05 eb05 6a0f 58 6a0a }
            // n = 6, score = 300
            //   58                   | pop                 eax
            //   6a05                 | push                5
            //   eb05                 | jmp                 7
            //   6a0f                 | push                0xf
            //   58                   | pop                 eax
            //   6a0a                 | push                0xa

        $sequence_9 = { 8bce e8???????? ff75b8 e8???????? 59 }
            // n = 5, score = 300
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   ff75b8               | push                dword ptr [ebp - 0x48]
            //   e8????????           |                     
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 581632
}