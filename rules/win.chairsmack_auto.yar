rule win_chairsmack_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.chairsmack."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chairsmack"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 55 8bec 81ec9c000000 c745dc00000000 c645ff00 8a45ff 8845f7 }
            // n = 7, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec9c000000         | sub                 esp, 0x9c
            //   c745dc00000000       | mov                 dword ptr [ebp - 0x24], 0
            //   c645ff00             | mov                 byte ptr [ebp - 1], 0
            //   8a45ff               | mov                 al, byte ptr [ebp - 1]
            //   8845f7               | mov                 byte ptr [ebp - 9], al

        $sequence_1 = { 7758 6a6d 68???????? 68???????? e8???????? 83c40c 68???????? }
            // n = 7, score = 200
            //   7758                 | ja                  0x5a
            //   6a6d                 | push                0x6d
            //   68????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   68????????           |                     

        $sequence_2 = { 837dec10 8d7dd8 8b75e8 0f437dd8 6a00 6a00 6a00 }
            // n = 7, score = 200
            //   837dec10             | cmp                 dword ptr [ebp - 0x14], 0x10
            //   8d7dd8               | lea                 edi, [ebp - 0x28]
            //   8b75e8               | mov                 esi, dword ptr [ebp - 0x18]
            //   0f437dd8             | cmovae              edi, dword ptr [ebp - 0x28]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_3 = { 0f8411010000 8b4de8 c645fc02 83791808 c7411400000000 7205 8b4104 }
            // n = 7, score = 200
            //   0f8411010000         | je                  0x117
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   83791808             | cmp                 dword ptr [ecx + 0x18], 8
            //   c7411400000000       | mov                 dword ptr [ecx + 0x14], 0
            //   7205                 | jb                  7
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]

        $sequence_4 = { 8b4df8 85c9 7420 837d3c08 8d55f4 8d4528 0f434528 }
            // n = 7, score = 200
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   85c9                 | test                ecx, ecx
            //   7420                 | je                  0x22
            //   837d3c08             | cmp                 dword ptr [ebp + 0x3c], 8
            //   8d55f4               | lea                 edx, [ebp - 0xc]
            //   8d4528               | lea                 eax, [ebp + 0x28]
            //   0f434528             | cmovae              eax, dword ptr [ebp + 0x28]

        $sequence_5 = { 3305???????? b904000000 6bd112 8982a0784a00 68???????? 8b45fc 50 }
            // n = 7, score = 200
            //   3305????????         |                     
            //   b904000000           | mov                 ecx, 4
            //   6bd112               | imul                edx, ecx, 0x12
            //   8982a0784a00         | mov                 dword ptr [edx + 0x4a78a0], eax
            //   68????????           |                     
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax

        $sequence_6 = { 8b551c 0fb7040a 85c0 7412 837d0802 750c c785d0ddffffa0bd4800 }
            // n = 7, score = 200
            //   8b551c               | mov                 edx, dword ptr [ebp + 0x1c]
            //   0fb7040a             | movzx               eax, word ptr [edx + ecx]
            //   85c0                 | test                eax, eax
            //   7412                 | je                  0x14
            //   837d0802             | cmp                 dword ptr [ebp + 8], 2
            //   750c                 | jne                 0xe
            //   c785d0ddffffa0bd4800     | mov    dword ptr [ebp - 0x2230], 0x48bda0

        $sequence_7 = { c20800 55 8bec 8b01 8b4020 }
            // n = 5, score = 200
            //   c20800               | ret                 8
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   8b4020               | mov                 eax, dword ptr [eax + 0x20]

        $sequence_8 = { 68b50a0000 68???????? 68???????? e8???????? 83c40c 85db }
            // n = 6, score = 200
            //   68b50a0000           | push                0xab5
            //   68????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85db                 | test                ebx, ebx

        $sequence_9 = { 8b4df8 c1f905 8b55f8 83e21f c1e206 03148dd06d4a00 8955f0 }
            // n = 7, score = 200
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   c1f905               | sar                 ecx, 5
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   83e21f               | and                 edx, 0x1f
            //   c1e206               | shl                 edx, 6
            //   03148dd06d4a00       | add                 edx, dword ptr [ecx*4 + 0x4a6dd0]
            //   8955f0               | mov                 dword ptr [ebp - 0x10], edx

    condition:
        7 of them and filesize < 1974272
}