rule win_rambo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.rambo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rambo"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6804010000 ff15???????? ff7508 8d85f8feffff 50 e8???????? }
            // n = 6, score = 200
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d85f8feffff         | lea                 eax, [ebp - 0x108]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { c645f532 c645f632 c645f72e c645f874 }
            // n = 4, score = 200
            // 
            //   c645f632             | mov                 byte ptr [ebp - 0xa], 0x32
            //   c645f72e             | mov                 byte ptr [ebp - 9], 0x2e
            //   c645f874             | mov                 byte ptr [ebp - 8], 0x74

        $sequence_2 = { ff15???????? 8bf0 83c410 85f6 745e }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   83c410               | add                 esp, 0x10
            //   85f6                 | test                esi, esi
            //   745e                 | je                  0x60

        $sequence_3 = { 55 8bec 81ec14020000 8d85f0feffff 56 50 6804010000 }
            // n = 7, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec14020000         | sub                 esp, 0x214
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   56                   | push                esi
            //   50                   | push                eax
            //   6804010000           | push                0x104

        $sequence_4 = { 8d85fcfeffff 59 50 ff15???????? 33c0 c9 c3 }
            // n = 7, score = 200
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   59                   | pop                 ecx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   c9                   | leave               
            //   c3                   | ret                 

        $sequence_5 = { 6804010000 ff15???????? 8d85f0feffff 50 8d85ecfdffff 50 e8???????? }
            // n = 7, score = 200
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   50                   | push                eax
            //   8d85ecfdffff         | lea                 eax, [ebp - 0x214]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { 50 e8???????? ff750c 8d85ecfdffff 50 e8???????? 8065fb00 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8d85ecfdffff         | lea                 eax, [ebp - 0x214]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8065fb00             | and                 byte ptr [ebp - 5], 0

        $sequence_7 = { ff15???????? 56 57 8d85f8faffff 6a01 50 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   56                   | push                esi
            //   57                   | push                edi
            //   8d85f8faffff         | lea                 eax, [ebp - 0x508]
            //   6a01                 | push                1
            //   50                   | push                eax

        $sequence_8 = { 8bca 8d542474 83e103 f3aa 8bcb 8d7c2474 8bc1 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   8d542474             | lea                 edx, [esp + 0x74]
            //   83e103               | and                 ecx, 3
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   8bcb                 | mov                 ecx, ebx
            //   8d7c2474             | lea                 edi, [esp + 0x74]
            //   8bc1                 | mov                 eax, ecx

        $sequence_9 = { 8bc7 c1e805 03c3 8bdf c1e304 }
            // n = 5, score = 100
            //   8bc7                 | mov                 eax, edi
            //   c1e805               | shr                 eax, 5
            //   03c3                 | add                 eax, ebx
            //   8bdf                 | mov                 ebx, edi
            //   c1e304               | shl                 ebx, 4

        $sequence_10 = { 8d4c241c c68424000400000f e8???????? 8d8c249c000000 c68424000400000b e8???????? 8d4c2420 }
            // n = 7, score = 100
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]
            //   c68424000400000f     | mov                 byte ptr [esp + 0x400], 0xf
            //   e8????????           |                     
            //   8d8c249c000000       | lea                 ecx, [esp + 0x9c]
            //   c68424000400000b     | mov                 byte ptr [esp + 0x400], 0xb
            //   e8????????           |                     
            //   8d4c2420             | lea                 ecx, [esp + 0x20]

        $sequence_11 = { c644245052 c644245135 885c2452 c644245438 }
            // n = 4, score = 100
            //   c644245052           | mov                 byte ptr [esp + 0x50], 0x52
            //   c644245135           | mov                 byte ptr [esp + 0x51], 0x35
            //   885c2452             | mov                 byte ptr [esp + 0x52], bl
            //   c644245438           | mov                 byte ptr [esp + 0x54], 0x38

        $sequence_12 = { 8d4c246c e8???????? 8d4c2430 e8???????? 6804010000 6804010000 }
            // n = 6, score = 100
            //   8d4c246c             | lea                 ecx, [esp + 0x6c]
            //   e8????????           |                     
            //   8d4c2430             | lea                 ecx, [esp + 0x30]
            //   e8????????           |                     
            //   6804010000           | push                0x104
            //   6804010000           | push                0x104

        $sequence_13 = { f3a5 8bc8 83e103 f3a4 eb4f 8b942cf0010000 8b842cf4010000 }
            // n = 7, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bc8                 | mov                 ecx, eax
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   eb4f                 | jmp                 0x51
            //   8b942cf0010000       | mov                 edx, dword ptr [esp + ebp + 0x1f0]
            //   8b842cf4010000       | mov                 eax, dword ptr [esp + ebp + 0x1f4]

        $sequence_14 = { 8bde c1e304 03dd 33c3 8d1c31 33c3 }
            // n = 6, score = 100
            //   8bde                 | mov                 ebx, esi
            //   c1e304               | shl                 ebx, 4
            //   03dd                 | add                 ebx, ebp
            //   33c3                 | xor                 eax, ebx
            //   8d1c31               | lea                 ebx, [ecx + esi]
            //   33c3                 | xor                 eax, ebx

        $sequence_15 = { e8???????? 6a02 68fcfeffff 8d4c246c }
            // n = 4, score = 100
            //   e8????????           |                     
            //   6a02                 | push                2
            //   68fcfeffff           | push                0xfffffefc
            //   8d4c246c             | lea                 ecx, [esp + 0x6c]

    condition:
        7 of them and filesize < 57344
}