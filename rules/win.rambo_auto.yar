rule win_rambo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.rambo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rambo"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5e c9 c3 55 8bec 81ec08050000 }
            // n = 6, score = 200
            //   5e                   | pop                 esi
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec08050000         | sub                 esp, 0x508

        $sequence_1 = { 50 8d85f8feffff 50 c645fc72 }
            // n = 4, score = 200
            //   50                   | push                eax
            //   8d85f8feffff         | lea                 eax, [ebp - 0x108]
            //   50                   | push                eax
            //   c645fc72             | mov                 byte ptr [ebp - 4], 0x72

        $sequence_2 = { 50 e8???????? ff750c 8d85ecfdffff 50 e8???????? 8065fb00 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8d85ecfdffff         | lea                 eax, [ebp - 0x214]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8065fb00             | and                 byte ptr [ebp - 5], 0

        $sequence_3 = { ff15???????? 80a43df8faffff00 56 ff15???????? 83c428 6a32 ff15???????? }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   80a43df8faffff00     | and                 byte ptr [ebp + edi - 0x508], 0
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83c428               | add                 esp, 0x28
            //   6a32                 | push                0x32
            //   ff15????????         |                     

        $sequence_4 = { 50 6804010000 ff15???????? 8d85f0feffff 50 8d85ecfdffff 50 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   50                   | push                eax
            //   8d85ecfdffff         | lea                 eax, [ebp - 0x214]
            //   50                   | push                eax

        $sequence_5 = { 6a01 50 ff15???????? 80a43df8faffff00 }
            // n = 4, score = 200
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ff15????????         |                     
            //   80a43df8faffff00     | and                 byte ptr [ebp + edi - 0x508], 0

        $sequence_6 = { 6804010000 ff15???????? ff7508 8d85f8feffff 50 e8???????? }
            // n = 6, score = 200
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d85f8feffff         | lea                 eax, [ebp - 0x108]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_7 = { 83c41c 6a01 58 5e }
            // n = 4, score = 200
            //   83c41c               | add                 esp, 0x1c
            //   6a01                 | push                1
            //   58                   | pop                 eax
            //   5e                   | pop                 esi

        $sequence_8 = { e8???????? 8d4c242c c7842400040000ffffffff e8???????? 33c0 8b8c24f8030000 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8d4c242c             | lea                 ecx, [esp + 0x2c]
            //   c7842400040000ffffffff     | mov    dword ptr [esp + 0x400], 0xffffffff
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   8b8c24f8030000       | mov                 ecx, dword ptr [esp + 0x3f8]

        $sequence_9 = { 52 8d8c24c0000000 89842480000000 e8???????? 8b44245c }
            // n = 5, score = 100
            //   52                   | push                edx
            //   8d8c24c0000000       | lea                 ecx, [esp + 0xc0]
            //   89842480000000       | mov                 dword ptr [esp + 0x80], eax
            //   e8????????           |                     
            //   8b44245c             | mov                 eax, dword ptr [esp + 0x5c]

        $sequence_10 = { e8???????? 50 8d4c2418 c68424040400000c e8???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   50                   | push                eax
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   c68424040400000c     | mov                 byte ptr [esp + 0x404], 0xc
            //   e8????????           |                     

        $sequence_11 = { 8844244c b030 b243 8844244f 88442455 8d442434 }
            // n = 6, score = 100
            //   8844244c             | mov                 byte ptr [esp + 0x4c], al
            //   b030                 | mov                 al, 0x30
            //   b243                 | mov                 dl, 0x43
            //   8844244f             | mov                 byte ptr [esp + 0x4f], al
            //   88442455             | mov                 byte ptr [esp + 0x55], al
            //   8d442434             | lea                 eax, [esp + 0x34]

        $sequence_12 = { 8dbc24ec000000 be???????? f3ab b906000000 8dbc24d0000000 }
            // n = 5, score = 100
            //   8dbc24ec000000       | lea                 edi, [esp + 0xec]
            //   be????????           |                     
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   b906000000           | mov                 ecx, 6
            //   8dbc24d0000000       | lea                 edi, [esp + 0xd0]

        $sequence_13 = { 03dd 8b6c2418 33c3 8d1c39 33c3 }
            // n = 5, score = 100
            //   03dd                 | add                 ebx, ebp
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   33c3                 | xor                 eax, ebx
            //   8d1c39               | lea                 ebx, [ecx + edi]
            //   33c3                 | xor                 eax, ebx

        $sequence_14 = { f3a4 8d4c245c 51 52 8d8c24c0000000 e8???????? 8bcb }
            // n = 7, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8d4c245c             | lea                 ecx, [esp + 0x5c]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   8d8c24c0000000       | lea                 ecx, [esp + 0xc0]
            //   e8????????           |                     
            //   8bcb                 | mov                 ecx, ebx

        $sequence_15 = { 8b442410 c684240004000010 85c0 7577 }
            // n = 4, score = 100
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   c684240004000010     | mov                 byte ptr [esp + 0x400], 0x10
            //   85c0                 | test                eax, eax
            //   7577                 | jne                 0x79

    condition:
        7 of them and filesize < 57344
}