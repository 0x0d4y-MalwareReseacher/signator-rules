rule win_rambo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.rambo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rambo"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 56 8bf8 ff15???????? 56 57 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   56                   | push                esi
            //   8bf8                 | mov                 edi, eax
            //   ff15????????         |                     
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_1 = { 8d85f0feffff 56 50 6804010000 ff15???????? 8d85f0feffff 50 }
            // n = 7, score = 200
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   56                   | push                esi
            //   50                   | push                eax
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   50                   | push                eax

        $sequence_2 = { 81ec08050000 56 6800040000 8d85f8faffff }
            // n = 4, score = 200
            //   81ec08050000         | sub                 esp, 0x508
            //   56                   | push                esi
            //   6800040000           | push                0x400
            //   8d85f8faffff         | lea                 eax, [ebp - 0x508]

        $sequence_3 = { 50 c645fc72 c645fd62 ff15???????? }
            // n = 4, score = 200
            //   50                   | push                eax
            //   c645fc72             | mov                 byte ptr [ebp - 4], 0x72
            //   c645fd62             | mov                 byte ptr [ebp - 3], 0x62
            //   ff15????????         |                     

        $sequence_4 = { 8d85f8faffff 50 68???????? e8???????? 59 59 6a01 }
            // n = 7, score = 200
            //   8d85f8faffff         | lea                 eax, [ebp - 0x508]
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   6a01                 | push                1

        $sequence_5 = { c3 55 8bec 81ec14020000 8d85f0feffff }
            // n = 5, score = 200
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec14020000         | sub                 esp, 0x214
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]

        $sequence_6 = { ff15???????? 80a43df8faffff00 56 ff15???????? 83c428 6a32 ff15???????? }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   80a43df8faffff00     | and                 byte ptr [ebp + edi - 0x508], 0
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83c428               | add                 esp, 0x28
            //   6a32                 | push                0x32
            //   ff15????????         |                     

        $sequence_7 = { ff15???????? ff7508 8d85fcfeffff 50 e8???????? 59 8d85fcfeffff }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]

        $sequence_8 = { 8bca 8d542474 83e103 f3aa 8bcb }
            // n = 5, score = 100
            //   8bca                 | mov                 ecx, edx
            //   8d542474             | lea                 edx, [esp + 0x74]
            //   83e103               | and                 ecx, 3
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   8bcb                 | mov                 ecx, ebx

        $sequence_9 = { 8bcb 33c0 8d7c2474 c1e902 f3ab 8bca }
            // n = 6, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   33c0                 | xor                 eax, eax
            //   8d7c2474             | lea                 edi, [esp + 0x74]
            //   c1e902               | shr                 ecx, 2
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8bca                 | mov                 ecx, edx

        $sequence_10 = { 4a 85c0 7452 42 8b5c2424 8b6c2410 }
            // n = 6, score = 100
            //   4a                   | dec                 edx
            //   85c0                 | test                eax, eax
            //   7452                 | je                  0x54
            //   42                   | inc                 edx
            //   8b5c2424             | mov                 ebx, dword ptr [esp + 0x24]
            //   8b6c2410             | mov                 ebp, dword ptr [esp + 0x10]

        $sequence_11 = { 8d0c1e 8907 46 83c704 81fe80841e00 }
            // n = 5, score = 100
            //   8d0c1e               | lea                 ecx, [esi + ebx]
            //   8907                 | mov                 dword ptr [edi], eax
            //   46                   | inc                 esi
            //   83c704               | add                 edi, 4
            //   81fe80841e00         | cmp                 esi, 0x1e8480

        $sequence_12 = { e8???????? 8d4c2414 c684240004000004 e8???????? 8d4c2428 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   c684240004000004     | mov                 byte ptr [esp + 0x400], 4
            //   e8????????           |                     
            //   8d4c2428             | lea                 ecx, [esp + 0x28]

        $sequence_13 = { 89842494000000 8b442424 6a00 50 8d8c24a4000000 e8???????? 8d4c241c }
            // n = 7, score = 100
            //   89842494000000       | mov                 dword ptr [esp + 0x94], eax
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   8d8c24a4000000       | lea                 ecx, [esp + 0xa4]
            //   e8????????           |                     
            //   8d4c241c             | lea                 ecx, [esp + 0x1c]

        $sequence_14 = { e8???????? 6804010000 8d4c2424 c68424040400000b e8???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   6804010000           | push                0x104
            //   8d4c2424             | lea                 ecx, [esp + 0x24]
            //   c68424040400000b     | mov                 byte ptr [esp + 0x404], 0xb
            //   e8????????           |                     

        $sequence_15 = { c644244539 c644244634 c644244738 88542448 8854244a }
            // n = 5, score = 100
            //   c644244539           | mov                 byte ptr [esp + 0x45], 0x39
            //   c644244634           | mov                 byte ptr [esp + 0x46], 0x34
            //   c644244738           | mov                 byte ptr [esp + 0x47], 0x38
            //   88542448             | mov                 byte ptr [esp + 0x48], dl
            //   8854244a             | mov                 byte ptr [esp + 0x4a], dl

    condition:
        7 of them and filesize < 57344
}