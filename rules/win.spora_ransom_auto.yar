rule win_spora_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.spora_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.spora_ransom"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 57 bf00020000 57 6a40 ff15???????? }
            // n = 6, score = 200
            //   56                   | push                esi
            //   57                   | push                edi
            //   bf00020000           | mov                 edi, 0x200
            //   57                   | push                edi
            //   6a40                 | push                0x40
            //   ff15????????         |                     

        $sequence_1 = { ff750c 33c0 668945f4 8d45f0 50 ff15???????? }
            // n = 6, score = 200
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   33c0                 | xor                 eax, eax
            //   668945f4             | mov                 word ptr [ebp - 0xc], ax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_2 = { ff75fc 57 ff35???????? ff15???????? 85c0 }
            // n = 5, score = 200
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   57                   | push                edi
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_3 = { c20400 33c0 40 ebf7 53 55 }
            // n = 6, score = 200
            //   c20400               | ret                 4
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   ebf7                 | jmp                 0xfffffff9
            //   53                   | push                ebx
            //   55                   | push                ebp

        $sequence_4 = { 8d4dfc 51 50 53 6a07 53 }
            // n = 6, score = 200
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   53                   | push                ebx
            //   6a07                 | push                7
            //   53                   | push                ebx

        $sequence_5 = { ff7510 668945f2 ff750c 33c0 }
            // n = 4, score = 200
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   668945f2             | mov                 word ptr [ebp - 0xe], ax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { 57 ff15???????? 57 e8???????? 57 ff15???????? 83c620 }
            // n = 7, score = 200
            //   57                   | push                edi
            //   ff15????????         |                     
            //   57                   | push                edi
            //   e8????????           |                     
            //   57                   | push                edi
            //   ff15????????         |                     
            //   83c620               | add                 esi, 0x20

        $sequence_7 = { c20400 b001 ebf5 b002 ebf1 }
            // n = 5, score = 200
            //   c20400               | ret                 4
            //   b001                 | mov                 al, 1
            //   ebf5                 | jmp                 0xfffffff7
            //   b002                 | mov                 al, 2
            //   ebf1                 | jmp                 0xfffffff3

        $sequence_8 = { ff15???????? 50 8d45f0 50 ff5508 d1eb }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   ff5508               | call                dword ptr [ebp + 8]
            //   d1eb                 | shr                 ebx, 1

        $sequence_9 = { 50 ff757c 57 57 }
            // n = 4, score = 200
            //   50                   | push                eax
            //   ff757c               | push                dword ptr [ebp + 0x7c]
            //   57                   | push                edi
            //   57                   | push                edi

    condition:
        7 of them and filesize < 73728
}