rule win_powerpool_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.powerpool."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.powerpool"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7403 50 ffd6 8b8564f9ffff 3bc3 }
            // n = 5, score = 200
            //   7403                 | je                  5
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8b8564f9ffff         | mov                 eax, dword ptr [ebp - 0x69c]
            //   3bc3                 | cmp                 eax, ebx

        $sequence_1 = { 8944244c 33c0 c744245044000000 c744247c01010000 894c2444 89542448 }
            // n = 6, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   33c0                 | xor                 eax, eax
            //   c744245044000000     | mov                 dword ptr [esp + 0x50], 0x44
            //   c744247c01010000     | mov                 dword ptr [esp + 0x7c], 0x101
            //   894c2444             | mov                 dword ptr [esp + 0x44], ecx
            //   89542448             | mov                 dword ptr [esp + 0x48], edx

        $sequence_2 = { 7403 830801 85db 7905 830802 eb08 8b4d94 }
            // n = 7, score = 200
            //   7403                 | je                  5
            //   830801               | or                  dword ptr [eax], 1
            //   85db                 | test                ebx, ebx
            //   7905                 | jns                 7
            //   830802               | or                  dword ptr [eax], 2
            //   eb08                 | jmp                 0xa
            //   8b4d94               | mov                 ecx, dword ptr [ebp - 0x6c]

        $sequence_3 = { 7403 50 ffd7 885e78 }
            // n = 4, score = 200
            //   7403                 | je                  5
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   885e78               | mov                 byte ptr [esi + 0x78], bl

        $sequence_4 = { 7403 830801 397db8 741a }
            // n = 4, score = 200
            //   7403                 | je                  5
            //   830801               | or                  dword ptr [eax], 1
            //   397db8               | cmp                 dword ptr [ebp - 0x48], edi
            //   741a                 | je                  0x1c

        $sequence_5 = { 006711 40 0000 0303 }
            // n = 4, score = 200
            //   006711               | add                 byte ptr [edi + 0x11], ah
            //   40                   | inc                 eax
            //   0000                 | add                 byte ptr [eax], al
            //   0303                 | add                 eax, dword ptr [ebx]

        $sequence_6 = { 8944244c 89442450 ff15???????? 8bd8 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   89442450             | mov                 dword ptr [esp + 0x50], eax
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_7 = { 8944244c 8d442474 50 53 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   8d442474             | lea                 eax, dword ptr [esp + 0x74]
            //   50                   | push                eax
            //   53                   | push                ebx

        $sequence_8 = { 7403 56 ffd3 8b3f }
            // n = 4, score = 200
            //   7403                 | je                  5
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   8b3f                 | mov                 edi, dword ptr [edi]

        $sequence_9 = { 7403 57 ffd6 83c8ff }
            // n = 4, score = 200
            //   7403                 | je                  5
            //   57                   | push                edi
            //   ffd6                 | call                esi
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_10 = { 8944244c 8b4508 52 50 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_11 = { 7417 c707???????? c74758ac884400 895dfc c745f001000000 8b07 }
            // n = 6, score = 200
            //   7417                 | je                  0x19
            //   c707????????         |                     
            //   c74758ac884400       | mov                 dword ptr [edi + 0x58], 0x4488ac
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   8b07                 | mov                 eax, dword ptr [edi]

        $sequence_12 = { 005311 40 005d11 40 006711 }
            // n = 5, score = 200
            //   005311               | add                 byte ptr [ebx + 0x11], dl
            //   40                   | inc                 eax
            //   005d11               | add                 byte ptr [ebp + 0x11], bl
            //   40                   | inc                 eax
            //   006711               | add                 byte ptr [edi + 0x11], ah

        $sequence_13 = { 7403 57 ffd3 83c8ff }
            // n = 4, score = 200
            //   7403                 | je                  5
            //   57                   | push                edi
            //   ffd3                 | call                ebx
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_14 = { 83e800 743d 48 7416 83c8ff }
            // n = 5, score = 200
            //   83e800               | sub                 eax, 0
            //   743d                 | je                  0x3f
            //   48                   | dec                 eax
            //   7416                 | je                  0x18
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_15 = { 8944244c 89442450 8b4508 8bf0 }
            // n = 4, score = 200
            //   8944244c             | mov                 dword ptr [esp + 0x4c], eax
            //   89442450             | mov                 dword ptr [esp + 0x50], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8bf0                 | mov                 esi, eax

    condition:
        7 of them and filesize < 819200
}