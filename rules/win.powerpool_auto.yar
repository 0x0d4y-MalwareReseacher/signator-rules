rule win_powerpool_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.powerpool."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.powerpool"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7404 c645ff01 8b4d08 56 }
            // n = 4, score = 200
            //   7404                 | je                  6
            //   c645ff01             | mov                 byte ptr [ebp - 1], 1
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   56                   | push                esi

        $sequence_1 = { 7405 397154 75e4 8b4154 }
            // n = 4, score = 200
            //   7405                 | je                  7
            //   397154               | cmp                 dword ptr [ecx + 0x54], esi
            //   75e4                 | jne                 0xffffffe6
            //   8b4154               | mov                 eax, dword ptr [ecx + 0x54]

        $sequence_2 = { 8945fc 56 57 8bf1 e8???????? 84c0 }
            // n = 6, score = 200
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bf1                 | mov                 esi, ecx
            //   e8????????           |                     
            //   84c0                 | test                al, al

        $sequence_3 = { 013e 017e08 5b 8bc7 }
            // n = 4, score = 200
            //   013e                 | add                 dword ptr [esi], edi
            //   017e08               | add                 dword ptr [esi + 8], edi
            //   5b                   | pop                 ebx
            //   8bc7                 | mov                 eax, edi

        $sequence_4 = { 7405 40 3bc1 75f7 8b4b1c }
            // n = 5, score = 200
            //   7405                 | je                  7
            //   40                   | inc                 eax
            //   3bc1                 | cmp                 eax, ecx
            //   75f7                 | jne                 0xfffffff9
            //   8b4b1c               | mov                 ecx, dword ptr [ebx + 0x1c]

        $sequence_5 = { 005311 40 005d11 40 006711 }
            // n = 5, score = 200
            //   005311               | add                 byte ptr [ebx + 0x11], dl
            //   40                   | inc                 eax
            //   005d11               | add                 byte ptr [ebp + 0x11], bl
            //   40                   | inc                 eax
            //   006711               | add                 byte ptr [edi + 0x11], ah

        $sequence_6 = { 013e 017e08 894630 5b }
            // n = 4, score = 200
            //   013e                 | add                 dword ptr [esi], edi
            //   017e08               | add                 dword ptr [esi + 8], edi
            //   894630               | mov                 dword ptr [esi + 0x30], eax
            //   5b                   | pop                 ebx

        $sequence_7 = { 7405 83fb10 7514 8bce }
            // n = 4, score = 200
            //   7405                 | je                  7
            //   83fb10               | cmp                 ebx, 0x10
            //   7514                 | jne                 0x16
            //   8bce                 | mov                 ecx, esi

        $sequence_8 = { 741e 8b55fc 52 8b5608 8d4e10 51 }
            // n = 6, score = 200
            //   741e                 | je                  0x20
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   52                   | push                edx
            //   8b5608               | mov                 edx, dword ptr [esi + 8]
            //   8d4e10               | lea                 ecx, [esi + 0x10]
            //   51                   | push                ecx

        $sequence_9 = { 014140 8b45cc 8bc8 d3ea 8b4df8 }
            // n = 5, score = 200
            //   014140               | add                 dword ptr [ecx + 0x40], eax
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   8bc8                 | mov                 ecx, eax
            //   d3ea                 | shr                 edx, cl
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_10 = { 006711 40 0000 0303 }
            // n = 4, score = 200
            //   006711               | add                 byte ptr [edi + 0x11], ah
            //   40                   | inc                 eax
            //   0000                 | add                 byte ptr [eax], al
            //   0303                 | add                 eax, dword ptr [ebx]

        $sequence_11 = { 7405 80fa45 753a 8b7150 }
            // n = 4, score = 200
            //   7405                 | je                  7
            //   80fa45               | cmp                 dl, 0x45
            //   753a                 | jne                 0x3c
            //   8b7150               | mov                 esi, dword ptr [ecx + 0x50]

        $sequence_12 = { 01411c 8b7df0 85c0 742c }
            // n = 4, score = 200
            //   01411c               | add                 dword ptr [ecx + 0x1c], eax
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   85c0                 | test                eax, eax
            //   742c                 | je                  0x2e

        $sequence_13 = { 8b45d8 8b4d14 c1e002 0101 8b45ec 8b4d18 5f }
            // n = 7, score = 200
            //   8b45d8               | mov                 eax, dword ptr [ebp - 0x28]
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   c1e002               | shl                 eax, 2
            //   0101                 | add                 dword ptr [ecx], eax
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8b4d18               | mov                 ecx, dword ptr [ebp + 0x18]
            //   5f                   | pop                 edi

        $sequence_14 = { 7405 80fa2d 750a 894154 }
            // n = 4, score = 200
            //   7405                 | je                  7
            //   80fa2d               | cmp                 dl, 0x2d
            //   750a                 | jne                 0xc
            //   894154               | mov                 dword ptr [ecx + 0x54], eax

        $sequence_15 = { 7405 397154 75d6 33c0 }
            // n = 4, score = 200
            //   7405                 | je                  7
            //   397154               | cmp                 dword ptr [ecx + 0x54], esi
            //   75d6                 | jne                 0xffffffd8
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 819200
}