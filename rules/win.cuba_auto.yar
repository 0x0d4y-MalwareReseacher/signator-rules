rule win_cuba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.cuba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cuba"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0019 43 41 00444341 }
            // n = 4, score = 100
            //   0019                 | add                 byte ptr [ecx], bl
            //   43                   | inc                 ebx
            //   41                   | inc                 ecx
            //   00444341             | add                 byte ptr [ebx + eax*2 + 0x41], al

        $sequence_1 = { 8b85e0feffff 03b40514ffffff 03b0f8b14100 03b5e4feffff }
            // n = 4, score = 100
            //   8b85e0feffff         | mov                 eax, dword ptr [ebp - 0x120]
            //   03b40514ffffff       | add                 esi, dword ptr [ebp + eax - 0xec]
            //   03b0f8b14100         | add                 esi, dword ptr [eax + 0x41b1f8]
            //   03b5e4feffff         | add                 esi, dword ptr [ebp - 0x11c]

        $sequence_2 = { 3d0000800c 7704 6a40 eb14 83f902 7f0d }
            // n = 6, score = 100
            //   3d0000800c           | cmp                 eax, 0xc800000
            //   7704                 | ja                  6
            //   6a40                 | push                0x40
            //   eb14                 | jmp                 0x16
            //   83f902               | cmp                 ecx, 2
            //   7f0d                 | jg                  0xf

        $sequence_3 = { 8985c4fbffff 85c0 745e 8bc8 e8???????? ffb5c4fbffff 8bd8 }
            // n = 7, score = 100
            //   8985c4fbffff         | mov                 dword ptr [ebp - 0x43c], eax
            //   85c0                 | test                eax, eax
            //   745e                 | je                  0x60
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ffb5c4fbffff         | push                dword ptr [ebp - 0x43c]
            //   8bd8                 | mov                 ebx, eax

        $sequence_4 = { 0026 45 41 003a }
            // n = 4, score = 100
            //   0026                 | add                 byte ptr [esi], ah
            //   45                   | inc                 ebp
            //   41                   | inc                 ecx
            //   003a                 | add                 byte ptr [edx], bh

        $sequence_5 = { 7412 ff75e8 8b35???????? ffd6 ff75ec ffd6 }
            // n = 6, score = 100
            //   7412                 | je                  0x14
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   8b35????????         |                     
            //   ffd6                 | call                esi
            //   ff75ec               | push                dword ptr [ebp - 0x14]
            //   ffd6                 | call                esi

        $sequence_6 = { 0012 45 41 0026 }
            // n = 4, score = 100
            //   0012                 | add                 byte ptr [edx], dl
            //   45                   | inc                 ebp
            //   41                   | inc                 ecx
            //   0026                 | add                 byte ptr [esi], ah

        $sequence_7 = { 742b 8d45f8 50 6a01 6a02 6a00 688b010000 }
            // n = 7, score = 100
            //   742b                 | je                  0x2d
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   6a01                 | push                1
            //   6a02                 | push                2
            //   6a00                 | push                0
            //   688b010000           | push                0x18b

        $sequence_8 = { 6a10 ff15???????? 33d2 85c0 7e0c }
            // n = 5, score = 100
            //   6a10                 | push                0x10
            //   ff15????????         |                     
            //   33d2                 | xor                 edx, edx
            //   85c0                 | test                eax, eax
            //   7e0c                 | jle                 0xe

        $sequence_9 = { 0026 43 41 00b043410062 }
            // n = 4, score = 100
            //   0026                 | add                 byte ptr [esi], ah
            //   43                   | inc                 ebx
            //   41                   | inc                 ecx
            //   00b043410062         | add                 byte ptr [eax + 0x62004143], dh

        $sequence_10 = { 33c9 8bc1 3914c5e89b4100 7408 40 83f81d 7cf1 }
            // n = 7, score = 100
            //   33c9                 | xor                 ecx, ecx
            //   8bc1                 | mov                 eax, ecx
            //   3914c5e89b4100       | cmp                 dword ptr [eax*8 + 0x419be8], edx
            //   7408                 | je                  0xa
            //   40                   | inc                 eax
            //   83f81d               | cmp                 eax, 0x1d
            //   7cf1                 | jl                  0xfffffff3

        $sequence_11 = { ff15???????? eb16 39bdc8f9ffff 7414 8d85c0f9ffff }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   eb16                 | jmp                 0x18
            //   39bdc8f9ffff         | cmp                 dword ptr [ebp - 0x638], edi
            //   7414                 | je                  0x16
            //   8d85c0f9ffff         | lea                 eax, [ebp - 0x640]

        $sequence_12 = { 000446 41 00d1 45 }
            // n = 4, score = 100
            //   000446               | add                 byte ptr [esi + eax*2], al
            //   41                   | inc                 ecx
            //   00d1                 | add                 cl, dl
            //   45                   | inc                 ebp

        $sequence_13 = { 003a 45 41 004245 }
            // n = 4, score = 100
            //   003a                 | add                 byte ptr [edx], bh
            //   45                   | inc                 ebp
            //   41                   | inc                 ecx
            //   004245               | add                 byte ptr [edx + 0x45], al

        $sequence_14 = { 000c43 41 0035???????? 43 }
            // n = 4, score = 100
            //   000c43               | add                 byte ptr [ebx + eax*2], cl
            //   41                   | inc                 ecx
            //   0035????????         |                     
            //   43                   | inc                 ebx

        $sequence_15 = { 000d???????? 384100 b538 41 }
            // n = 4, score = 100
            //   000d????????         |                     
            //   384100               | cmp                 byte ptr [ecx], al
            //   b538                 | mov                 ch, 0x38
            //   41                   | inc                 ecx

    condition:
        7 of them and filesize < 1094656
}