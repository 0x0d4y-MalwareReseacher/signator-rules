rule win_finfisher_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.finfisher."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.finfisher"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 56 8d85ccf9ffff 50 e8???????? }
            // n = 5, score = 200
            //   57                   | push                edi
            //   56                   | push                esi
            //   8d85ccf9ffff         | lea                 eax, [ebp - 0x634]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { 68???????? 6804010000 8d85ccf9ffff 50 }
            // n = 4, score = 200
            //   68????????           |                     
            //   6804010000           | push                0x104
            //   8d85ccf9ffff         | lea                 eax, [ebp - 0x634]
            //   50                   | push                eax

        $sequence_2 = { 8d8570f7ffff 898580f7ffff 89b588f7ffff 89b58cf7ffff }
            // n = 4, score = 100
            //   8d8570f7ffff         | lea                 eax, [ebp - 0x890]
            //   898580f7ffff         | mov                 dword ptr [ebp - 0x880], eax
            //   89b588f7ffff         | mov                 dword ptr [ebp - 0x878], esi
            //   89b58cf7ffff         | mov                 dword ptr [ebp - 0x874], esi

        $sequence_3 = { 0145d4 ebce 8975e4 eb07 }
            // n = 4, score = 100
            //   0145d4               | add                 dword ptr [ebp - 0x2c], eax
            //   ebce                 | jmp                 0xffffffd0
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   eb07                 | jmp                 9

        $sequence_4 = { 897dfc 8bcb ff15???????? 8b5dfc 32d2 8bce }
            // n = 6, score = 100
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   8bcb                 | mov                 ecx, ebx
            //   ff15????????         |                     
            //   8b5dfc               | mov                 ebx, dword ptr [ebp - 4]
            //   32d2                 | xor                 dl, dl
            //   8bce                 | mov                 ecx, esi

        $sequence_5 = { 57 8b7e60 8bcb c745fc020000c0 ff15???????? 0fb607 33ff }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8b7e60               | mov                 edi, dword ptr [esi + 0x60]
            //   8bcb                 | mov                 ecx, ebx
            //   c745fc020000c0       | mov                 dword ptr [ebp - 4], 0xc0000002
            //   ff15????????         |                     
            //   0fb607               | movzx               eax, byte ptr [edi]
            //   33ff                 | xor                 edi, edi

        $sequence_6 = { 397714 7408 ff15???????? eb06 ff15???????? }
            // n = 5, score = 100
            //   397714               | cmp                 dword ptr [edi + 0x14], esi
            //   7408                 | je                  0xa
            //   ff15????????         |                     
            //   eb06                 | jmp                 8
            //   ff15????????         |                     

        $sequence_7 = { 0118 8b45f0 83450802 4f }
            // n = 4, score = 100
            //   0118                 | add                 dword ptr [eax], ebx
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   83450802             | add                 dword ptr [ebp + 8], 2
            //   4f                   | dec                 edi

        $sequence_8 = { 8d8548f7ffff 50 8d8570f7ffff 50 ffb5acf7ffff ff15???????? }
            // n = 6, score = 100
            //   8d8548f7ffff         | lea                 eax, [ebp - 0x8b8]
            //   50                   | push                eax
            //   8d8570f7ffff         | lea                 eax, [ebp - 0x890]
            //   50                   | push                eax
            //   ffb5acf7ffff         | push                dword ptr [ebp - 0x854]
            //   ff15????????         |                     

        $sequence_9 = { 0108 83500400 a1???????? 8380780300003c }
            // n = 4, score = 100
            //   0108                 | add                 dword ptr [eax], ecx
            //   83500400             | adc                 dword ptr [eax + 4], 0
            //   a1????????           |                     
            //   8380780300003c       | add                 dword ptr [eax + 0x378], 0x3c

        $sequence_10 = { 011a 8b55f0 83450802 49 }
            // n = 4, score = 100
            //   011a                 | add                 dword ptr [edx], ebx
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   83450802             | add                 dword ptr [ebp + 8], 2
            //   49                   | dec                 ecx

        $sequence_11 = { 0145d8 ebcc 8975e4 eb07 }
            // n = 4, score = 100
            //   0145d8               | add                 dword ptr [ebp - 0x28], eax
            //   ebcc                 | jmp                 0xffffffce
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   eb07                 | jmp                 9

        $sequence_12 = { 0145d8 ebcd 897dd4 c745fcfeffffff }
            // n = 4, score = 100
            //   0145d8               | add                 dword ptr [ebp - 0x28], eax
            //   ebcd                 | jmp                 0xffffffcf
            //   897dd4               | mov                 dword ptr [ebp - 0x2c], edi
            //   c745fcfeffffff       | mov                 dword ptr [ebp - 4], 0xfffffffe

        $sequence_13 = { 6878563412 53 ff15???????? 8bc6 5e 5b }
            // n = 6, score = 100
            //   6878563412           | push                0x12345678
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 262144
}