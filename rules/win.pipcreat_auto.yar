rule win_pipcreat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.pipcreat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pipcreat"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 53 e8???????? 85c0 75cb }
            // n = 4, score = 100
            //   53                   | push                ebx
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   75cb                 | jne                 0xffffffcd

        $sequence_1 = { 751d 56 6880000000 6a02 }
            // n = 4, score = 100
            //   751d                 | jne                 0x1f
            //   56                   | push                esi
            //   6880000000           | push                0x80
            //   6a02                 | push                2

        $sequence_2 = { 83c418 85c0 7436 56 ff35???????? ff15???????? }
            // n = 6, score = 100
            //   83c418               | add                 esp, 0x18
            //   85c0                 | test                eax, eax
            //   7436                 | je                  0x38
            //   56                   | push                esi
            //   ff35????????         |                     
            //   ff15????????         |                     

        $sequence_3 = { ff35???????? e8???????? 83c420 5f 5e }
            // n = 5, score = 100
            //   ff35????????         |                     
            //   e8????????           |                     
            //   83c420               | add                 esp, 0x20
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_4 = { 68f80f0000 51 50 ff15???????? 85c0 }
            // n = 5, score = 100
            //   68f80f0000           | push                0xff8
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_5 = { 5f 5e c20800 55 8bec 83ec1c 8b4508 }
            // n = 7, score = 100
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c20800               | ret                 8
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec1c               | sub                 esp, 0x1c
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_6 = { 8945fc 57 ffd3 68fc0f0000 8d450c 56 50 }
            // n = 7, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   57                   | push                edi
            //   ffd3                 | call                ebx
            //   68fc0f0000           | push                0xffc
            //   8d450c               | lea                 eax, dword ptr [ebp + 0xc]
            //   56                   | push                esi
            //   50                   | push                eax

        $sequence_7 = { 33c0 f3a5 b975000000 8d7c2448 f3ab 8b3d???????? 68???????? }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   b975000000           | mov                 ecx, 0x75
            //   8d7c2448             | lea                 edi, dword ptr [esp + 0x48]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b3d????????         |                     
            //   68????????           |                     

        $sequence_8 = { 6800000080 6838470010 8975fc ffd7 8bf8 }
            // n = 5, score = 100
            //   6800000080           | push                0x80000000
            //   6838470010           | push                0x10004738
            //   8975fc               | mov                 dword ptr [ebp - 4], esi
            //   ffd7                 | call                edi
            //   8bf8                 | mov                 edi, eax

        $sequence_9 = { 74c8 68fc0f0000 8d85aceeffff 53 }
            // n = 4, score = 100
            //   74c8                 | je                  0xffffffca
            //   68fc0f0000           | push                0xffc
            //   8d85aceeffff         | lea                 eax, dword ptr [ebp - 0x1154]
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 65536
}