rule win_agendacrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.agendacrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.agendacrypt"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff3424 e9???????? 8b84248c000000 897004 8bb424b0000000 8908 c7400802000000 }
            // n = 7, score = 100
            //   ff3424               | push                dword ptr [esp]
            //   e9????????           |                     
            //   8b84248c000000       | mov                 eax, dword ptr [esp + 0x8c]
            //   897004               | mov                 dword ptr [eax + 4], esi
            //   8bb424b0000000       | mov                 esi, dword ptr [esp + 0xb0]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   c7400802000000       | mov                 dword ptr [eax + 8], 2

        $sequence_1 = { 8b5d0c e8???????? 89c6 8b03 89d7 85c0 740c }
            // n = 7, score = 100
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   89c6                 | mov                 esi, eax
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   89d7                 | mov                 edi, edx
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe

        $sequence_2 = { ba???????? 894c240c 52 ff742408 50 ff742418 57 }
            // n = 7, score = 100
            //   ba????????           |                     
            //   894c240c             | mov                 dword ptr [esp + 0xc], ecx
            //   52                   | push                edx
            //   ff742408             | push                dword ptr [esp + 8]
            //   50                   | push                eax
            //   ff742418             | push                dword ptr [esp + 0x18]
            //   57                   | push                edi

        $sequence_3 = { 8d5e08 c745d800000000 8d45d8 ba???????? 8d4df0 68???????? 50 }
            // n = 7, score = 100
            //   8d5e08               | lea                 ebx, [esi + 8]
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   ba????????           |                     
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_4 = { 8b4dd4 0fb65508 85c9 750e c745d805000000 e9???????? 89f9 }
            // n = 7, score = 100
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   0fb65508             | movzx               edx, byte ptr [ebp + 8]
            //   85c9                 | test                ecx, ecx
            //   750e                 | jne                 0x10
            //   c745d805000000       | mov                 dword ptr [ebp - 0x28], 5
            //   e9????????           |                     
            //   89f9                 | mov                 ecx, edi

        $sequence_5 = { c745c001000000 c745c400000000 c745cc50675600 c745d000000000 c74590fc6b5600 89854cffffff c78550ffffff205e4100 }
            // n = 7, score = 100
            //   c745c001000000       | mov                 dword ptr [ebp - 0x40], 1
            //   c745c400000000       | mov                 dword ptr [ebp - 0x3c], 0
            //   c745cc50675600       | mov                 dword ptr [ebp - 0x34], 0x566750
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   c74590fc6b5600       | mov                 dword ptr [ebp - 0x70], 0x566bfc
            //   89854cffffff         | mov                 dword ptr [ebp - 0xb4], eax
            //   c78550ffffff205e4100     | mov    dword ptr [ebp - 0xb0], 0x415e20

        $sequence_6 = { e8???????? 83c40c 84c0 0f851afcffff 8b442404 31db c70000000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   84c0                 | test                al, al
            //   0f851afcffff         | jne                 0xfffffc20
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   31db                 | xor                 ebx, ebx
            //   c70000000000         | mov                 dword ptr [eax], 0

        $sequence_7 = { e8???????? eb29 f20f10442420 f20f104c2428 8d442408 f20f114c2410 f20f11442408 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb29                 | jmp                 0x2b
            //   f20f10442420         | movsd               xmm0, qword ptr [esp + 0x20]
            //   f20f104c2428         | movsd               xmm1, qword ptr [esp + 0x28]
            //   8d442408             | lea                 eax, [esp + 8]
            //   f20f114c2410         | movsd               qword ptr [esp + 0x10], xmm1
            //   f20f11442408         | movsd               qword ptr [esp + 8], xmm0

        $sequence_8 = { 83c703 89fb ebd0 83c702 39cb 0f44fb 31db }
            // n = 7, score = 100
            //   83c703               | add                 edi, 3
            //   89fb                 | mov                 ebx, edi
            //   ebd0                 | jmp                 0xffffffd2
            //   83c702               | add                 edi, 2
            //   39cb                 | cmp                 ebx, ecx
            //   0f44fb               | cmove               edi, ebx
            //   31db                 | xor                 ebx, ebx

        $sequence_9 = { 8d442478 50 e8???????? 83c40c 8b442460 8b4c2474 8b742470 }
            // n = 7, score = 100
            //   8d442478             | lea                 eax, [esp + 0x78]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8b442460             | mov                 eax, dword ptr [esp + 0x60]
            //   8b4c2474             | mov                 ecx, dword ptr [esp + 0x74]
            //   8b742470             | mov                 esi, dword ptr [esp + 0x70]

    condition:
        7 of them and filesize < 3340288
}