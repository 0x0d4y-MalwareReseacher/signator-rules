rule win_rgdoor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rgdoor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rgdoor"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 483305???????? 488d15da580100 488bcb 488905???????? }
            // n = 5, score = 100
            //   ff15????????         |                     
            //   483305????????       |                     
            //   488d15da580100       | inc                 esp
            //   488bcb               | add                 edi, dword ptr [ebp + 0x1f0]
            //   488905????????       |                     

        $sequence_1 = { 4863ca 8a441918 42888401901a0300 ffc2 ebe1 }
            // n = 5, score = 100
            //   4863ca               | mov                 esp, ebx
            //   8a441918             | xor                 eax, eax
            //   42888401901a0300     | mov                 al, byte ptr [edi]
            //   ffc2                 | dec                 esp
            //   ebe1                 | mov                 edi, dword ptr [esp + 0x48]

        $sequence_2 = { 743f 4803d9 3c22 7410 }
            // n = 4, score = 100
            //   743f                 | mov                 eax, dword ptr [ebx - 0xa8]
            //   4803d9               | dec                 eax
            //   3c22                 | arpl                word ptr [eax + 4], cx
            //   7410                 | dec                 eax

        $sequence_3 = { 48393d???????? 742b b90c000000 e8???????? 90 488bd7 488d0d5df90100 }
            // n = 7, score = 100
            //   48393d????????       |                     
            //   742b                 | inc                 ecx
            //   b90c000000           | mov                 byte ptr [esi], al
            //   e8????????           |                     
            //   90                   | dec                 eax
            //   488bd7               | add                 ebx, ecx
            //   488d0d5df90100       | test                al, al

        $sequence_4 = { 4c8d45d8 488b4dd8 4883ff10 4c0f43c1 4c8bc8 }
            // n = 5, score = 100
            //   4c8d45d8             | dec                 eax
            //   488b4dd8             | test                eax, eax
            //   4883ff10             | je                  0xe2a
            //   4c0f43c1             | dec                 eax
            //   4c8bc8               | mov                 eax, dword ptr [ebx]

        $sequence_5 = { c781c800000001000000 b843000000 66898164010000 6689816a020000 488d05a3f40100 }
            // n = 5, score = 100
            //   c781c800000001000000     | test    eax, eax
            //   b843000000           | je                  0x1cd2
            //   66898164010000       | dec                 eax
            //   6689816a020000       | lea                 edx, [0x17230]
            //   488d05a3f40100       | dec                 eax

        $sequence_6 = { e8???????? cc 4c8d05d5940200 e8???????? 488d0531970200 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   cc                   | and                 dword ptr [esp + 0x20], 0
            //   4c8d05d5940200       | dec                 eax
            //   e8????????           |                     
            //   488d0531970200       | lea                 ecx, [esp + 0x60]

        $sequence_7 = { 4053 4883ec20 f6417001 488d051f7b0200 488bd9 488901 }
            // n = 6, score = 100
            //   4053                 | nop                 dword ptr [eax + eax]
            //   4883ec20             | dec                 ebp
            //   f6417001             | lea                 eax, [eax + 1]
            //   488d051f7b0200       | dec                 ebp
            //   488bd9               | lea                 ecx, [ecx + 1]
            //   488901               | test                dl, dl

        $sequence_8 = { 488b45f0 48634804 488d05e0930200 4889440df0 488b45f0 48634804 8d51f0 }
            // n = 7, score = 100
            //   488b45f0             | dec                 eax
            //   48634804             | mov                 dword ptr [ebx], eax
            //   488d05e0930200       | dec                 eax
            //   4889440df0           | mov                 ebx, dword ptr [ebx + 0x60]
            //   488b45f0             | dec                 eax
            //   48634804             | test                ebx, ebx
            //   8d51f0               | je                  0x1773

        $sequence_9 = { b90c000000 e8???????? 90 488bd7 488d0d5df90100 e8???????? 488905???????? }
            // n = 7, score = 100
            //   b90c000000           | dec                 eax
            //   e8????????           |                     
            //   90                   | mov                 ecx, esi
            //   488bd7               | jmp                 0x1b7
            //   488d0d5df90100       | xor                 ebx, ebx
            //   e8????????           |                     
            //   488905????????       |                     

    condition:
        7 of them and filesize < 475136
}