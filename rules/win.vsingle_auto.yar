rule win_vsingle_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.vsingle."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.vsingle"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c6458e00 c6458f00 c6459000 c6459100 c6459200 c6459346 c645949b }
            // n = 7, score = 200
            //   c6458e00             | mov                 byte ptr [ebp - 0x72], 0
            //   c6458f00             | mov                 byte ptr [ebp - 0x71], 0
            //   c6459000             | mov                 byte ptr [ebp - 0x70], 0
            //   c6459100             | mov                 byte ptr [ebp - 0x6f], 0
            //   c6459200             | mov                 byte ptr [ebp - 0x6e], 0
            //   c6459346             | mov                 byte ptr [ebp - 0x6d], 0x46
            //   c645949b             | mov                 byte ptr [ebp - 0x6c], 0x9b

        $sequence_1 = { 0345a0 3945c8 0f83fe000000 8b4dc8 }
            // n = 4, score = 200
            //   0345a0               | add                 eax, dword ptr [ebp - 0x60]
            //   3945c8               | cmp                 dword ptr [ebp - 0x38], eax
            //   0f83fe000000         | jae                 0x104
            //   8b4dc8               | mov                 ecx, dword ptr [ebp - 0x38]

        $sequence_2 = { e8???????? 0faff8 03f7 56 8d950cffffff }
            // n = 5, score = 200
            //   e8????????           |                     
            //   0faff8               | imul                edi, eax
            //   03f7                 | add                 esi, edi
            //   56                   | push                esi
            //   8d950cffffff         | lea                 edx, [ebp - 0xf4]

        $sequence_3 = { c68524f7ffff00 6800080000 6a00 8d8d25f7ffff 51 e8???????? 83c40c }
            // n = 7, score = 200
            //   c68524f7ffff00       | mov                 byte ptr [ebp - 0x8dc], 0
            //   6800080000           | push                0x800
            //   6a00                 | push                0
            //   8d8d25f7ffff         | lea                 ecx, [ebp - 0x8db]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_4 = { 89450c c745fc00000000 837d0800 745c 837d0c00 }
            // n = 5, score = 200
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   745c                 | je                  0x5e
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0

        $sequence_5 = { 8945f8 8b4df8 83e901 894df8 837df803 7750 }
            // n = 6, score = 200
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   83e901               | sub                 ecx, 1
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   837df803             | cmp                 dword ptr [ebp - 8], 3
            //   7750                 | ja                  0x52

        $sequence_6 = { 8b4508 0345fc 8b4d0c 8a1411 885002 e9???????? 837d1002 }
            // n = 7, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8a1411               | mov                 dl, byte ptr [ecx + edx]
            //   885002               | mov                 byte ptr [eax + 2], dl
            //   e9????????           |                     
            //   837d1002             | cmp                 dword ptr [ebp + 0x10], 2

        $sequence_7 = { 8d8dacf7ffff 898d80f7ffff 8b9580f7ffff 83c201 899560f7ffff }
            // n = 5, score = 200
            //   8d8dacf7ffff         | lea                 ecx, [ebp - 0x854]
            //   898d80f7ffff         | mov                 dword ptr [ebp - 0x880], ecx
            //   8b9580f7ffff         | mov                 edx, dword ptr [ebp - 0x880]
            //   83c201               | add                 edx, 1
            //   899560f7ffff         | mov                 dword ptr [ebp - 0x8a0], edx

        $sequence_8 = { b801000000 6bc803 b804000000 d1e0 034508 be01000000 6bf603 }
            // n = 7, score = 200
            //   b801000000           | mov                 eax, 1
            //   6bc803               | imul                ecx, eax, 3
            //   b804000000           | mov                 eax, 4
            //   d1e0                 | shl                 eax, 1
            //   034508               | add                 eax, dword ptr [ebp + 8]
            //   be01000000           | mov                 esi, 1
            //   6bf603               | imul                esi, esi, 3

        $sequence_9 = { 8b9584f7ffff 8a02 88858ff7ffff 838584f7ffff01 80bd8ff7ffff00 75e2 }
            // n = 6, score = 200
            //   8b9584f7ffff         | mov                 edx, dword ptr [ebp - 0x87c]
            //   8a02                 | mov                 al, byte ptr [edx]
            //   88858ff7ffff         | mov                 byte ptr [ebp - 0x871], al
            //   838584f7ffff01       | add                 dword ptr [ebp - 0x87c], 1
            //   80bd8ff7ffff00       | cmp                 byte ptr [ebp - 0x871], 0
            //   75e2                 | jne                 0xffffffe4

    condition:
        7 of them and filesize < 940032
}