rule win_screencap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.screencap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.screencap"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 6810304700 e8???????? 83c40c 83be6810000003 7553 6a41 }
            // n = 7, score = 100
            //   50                   | mov                 eax, dword ptr [esi + 0x30]
            //   6810304700           | test                eax, eax
            //   e8????????           |                     
            //   83c40c               | je                  0x116
            //   83be6810000003       | or                  byte ptr [esp + 0x70], 8
            //   7553                 | mov                 ecx, ebx
            //   6a41                 | inc                 edi

        $sequence_1 = { 8b45d0 0500040000 8945e8 8d8600fcffff 8b4d08 50 }
            // n = 6, score = 100
            //   8b45d0               | mov                 dword ptr [esp + 0x10], ecx
            //   0500040000           | mov                 dword ptr [esp + 0x1c], edx
            //   8945e8               | test                ebp, ebp
            //   8d8600fcffff         | je                  0xc3e
            //   8b4d08               | lea                 ebx, [ebx]
            //   50                   | xor                 cl, cl

        $sequence_2 = { 735b 03c3 892e 894604 478b442420 894e08 }
            // n = 6, score = 100
            //   735b                 | mov                 dword ptr fs:[0], eax
            //   03c3                 | mov                 esi, ecx
            //   892e                 | lea                 ecx, [ebp + 0x4c]
            //   894604               | mov                 dword ptr [ebp + 0x8c], 0
            //   478b442420           | mov                 dword ptr [ebp + 0x90], 0
            //   894e08               | push                edi

        $sequence_3 = { 8983c4450100 85c0 750a b958174900 e8???????? 89b3c8450100 8b442470 }
            // n = 7, score = 100
            //   8983c4450100         | push                dword ptr [ebx + 0x14]
            //   85c0                 | mov                 eax, dword ptr [esp + 0x20]
            //   750a                 | mov                 dword ptr [esp + 0x24], edx
            //   b958174900           | shr                 eax, cl
            //   e8????????           |                     
            //   89b3c8450100         | lea                 ecx, [ebx + 0xc]
            //   8b442470             | or                  dword ptr [ebx + 0x14], eax

        $sequence_4 = { 7302 8bc6 894504 83ff01 741f 837c241c02 7218 }
            // n = 7, score = 100
            //   7302                 | push                ebp
            //   8bc6                 | push                dword ptr [esp + 0x2c]
            //   894504               | lea                 eax, [esi + 0xa4ac]
            //   83ff01               | push                eax
            //   741f                 | test                al, al
            //   837c241c02           | push                0
            //   7218                 | push                esi

        $sequence_5 = { 89442424 3be9 7709 2bcd d3e0 094314 eb24 }
            // n = 7, score = 100
            //   89442424             | test                esi, esi
            //   3be9                 | je                  0x1ad0
            //   7709                 | mov                 edi, dword ptr [esp + 0x18]
            //   2bcd                 | mov                 eax, dword ptr [edi + 0x100c]
            //   d3e0                 | mov                 byte ptr [edi + 0x30e8], 1
            //   094314               | test                eax, eax
            //   eb24                 | je                  0x1989

        $sequence_6 = { 6bf630 8b04bd28b64900 f644302880 741f e8???????? 8b404c 83b8a800000000 }
            // n = 7, score = 100
            //   6bf630               | push                0xa5d0
            //   8b04bd28b64900       | mov                 eax, dword ptr [ebp - 0x10]
            //   f644302880           | push                eax
            //   741f                 | add                 esp, 8
            //   e8????????           |                     
            //   8b404c               | ret                 
            //   83b8a800000000       | push                0x2158

        $sequence_7 = { 8b5c2420 85db 0f8438010000 8b4d14 e8???????? 33f6 85db }
            // n = 7, score = 100
            //   8b5c2420             | mov                 edx, dword ptr [esp + 8]
            //   85db                 | lea                 eax, [edx + 0xc]
            //   0f8438010000         | mov                 ecx, dword ptr [edx - 0x1c]
            //   8b4d14               | xor                 ecx, eax
            //   e8????????           |                     
            //   33f6                 | mov                 ecx, dword ptr [edx + 0x107c]
            //   85db                 | xor                 ecx, eax

        $sequence_8 = { 438d41ce 47895dcc 3bd8 0f8c69ffffff 8b5dd4 8b75e8 }
            // n = 6, score = 100
            //   438d41ce             | shr                 ebx, cl
            //   47895dcc             | add                 ebx, dword ptr [eax*4 + 0x47ea40]
            //   3bd8                 | jmp                 0xb3e
            //   0f8c69ffffff         | mov                 eax, 4
            //   8b5dd4               | mov                 dword ptr [esp + 0x14], eax
            //   8b75e8               | sub                 ecx, eax

        $sequence_9 = { 8b4014 ffd0 8b5d98 8b4dbc 3b54cb04 8b5dd4 7c38 }
            // n = 7, score = 100
            //   8b4014               | call                dword ptr [eax + 0xc]
            //   ffd0                 | mov                 ebx, eax
            //   8b5d98               | mov                 eax, dword ptr [edx]
            //   8b4dbc               | mov                 byte ptr [ecx + eax], bl
            //   3b54cb04             | mov                 eax, dword ptr [esp + 0x20]
            //   8b5dd4               | or                  eax, ebp
            //   7c38                 | mov                 eax, dword ptr [esp + 0x20]

    condition:
        7 of them and filesize < 1391616
}