rule win_mbrlock_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.mbrlock."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mbrlock"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a8228934a00 8801 b8cdcccccc f7e6 c1ea03 8bf2 eb41 }
            // n = 7, score = 100
            //   8a8228934a00         | mov                 al, byte ptr [edx + 0x4a9328]
            //   8801                 | mov                 byte ptr [ecx], al
            //   b8cdcccccc           | mov                 eax, 0xcccccccd
            //   f7e6                 | mul                 esi
            //   c1ea03               | shr                 edx, 3
            //   8bf2                 | mov                 esi, edx
            //   eb41                 | jmp                 0x43

        $sequence_1 = { 5f 5e 5d b857000780 5b 59 }
            // n = 6, score = 100
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   b857000780           | mov                 eax, 0x80070057
            //   5b                   | pop                 ebx
            //   59                   | pop                 ecx

        $sequence_2 = { 7407 c74508001b0000 8b4e04 8b55fc 6a00 8d45f8 6a00 }
            // n = 7, score = 100
            //   7407                 | je                  9
            //   c74508001b0000       | mov                 dword ptr [ebp + 8], 0x1b00
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   6a00                 | push                0
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   6a00                 | push                0

        $sequence_3 = { ff15???????? 8b442454 83c440 66c7869e0500000000 8938 8b4604 5f }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8b442454             | mov                 eax, dword ptr [esp + 0x54]
            //   83c440               | add                 esp, 0x40
            //   66c7869e0500000000     | mov    word ptr [esi + 0x59e], 0
            //   8938                 | mov                 dword ptr [eax], edi
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   5f                   | pop                 edi

        $sequence_4 = { 8965f0 c745fc00000000 f6862001000003 7419 68085d0110 6a01 680a060000 }
            // n = 7, score = 100
            //   8965f0               | mov                 dword ptr [ebp - 0x10], esp
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   f6862001000003       | test                byte ptr [esi + 0x120], 3
            //   7419                 | je                  0x1b
            //   68085d0110           | push                0x10015d08
            //   6a01                 | push                1
            //   680a060000           | push                0x60a

        $sequence_5 = { 8a96908a4a00 0fafd0 668b047590864a00 c1ea0c 03d0 8bc3 c1e008 }
            // n = 7, score = 100
            //   8a96908a4a00         | mov                 dl, byte ptr [esi + 0x4a8a90]
            //   0fafd0               | imul                edx, eax
            //   668b047590864a00     | mov                 ax, word ptr [esi*2 + 0x4a8690]
            //   c1ea0c               | shr                 edx, 0xc
            //   03d0                 | add                 edx, eax
            //   8bc3                 | mov                 eax, ebx
            //   c1e008               | shl                 eax, 8

        $sequence_6 = { 68d4580110 e8???????? 83c410 817dec00000100 7419 689c5a0110 }
            // n = 6, score = 100
            //   68d4580110           | push                0x100158d4
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   817dec00000100       | cmp                 dword ptr [ebp - 0x14], 0x10000
            //   7419                 | je                  0x1b
            //   689c5a0110           | push                0x10015a9c

        $sequence_7 = { c7442468ffffffff c744244c98664a00 e8???????? 8b542478 8b442474 8b4c2420 52 }
            // n = 7, score = 100
            //   c7442468ffffffff     | mov                 dword ptr [esp + 0x68], 0xffffffff
            //   c744244c98664a00     | mov                 dword ptr [esp + 0x4c], 0x4a6698
            //   e8????????           |                     
            //   8b542478             | mov                 edx, dword ptr [esp + 0x78]
            //   8b442474             | mov                 eax, dword ptr [esp + 0x74]
            //   8b4c2420             | mov                 ecx, dword ptr [esp + 0x20]
            //   52                   | push                edx

        $sequence_8 = { bb???????? e8???????? 83c410 8945e0 8965dc 6800000000 ff75e0 }
            // n = 7, score = 100
            //   bb????????           |                     
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   8965dc               | mov                 dword ptr [ebp - 0x24], esp
            //   6800000000           | push                0
            //   ff75e0               | push                dword ptr [ebp - 0x20]

        $sequence_9 = { 8bc8 8b442418 85c0 894c2428 0f84c2000000 390f 0f8eba000000 }
            // n = 7, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   85c0                 | test                eax, eax
            //   894c2428             | mov                 dword ptr [esp + 0x28], ecx
            //   0f84c2000000         | je                  0xc8
            //   390f                 | cmp                 dword ptr [edi], ecx
            //   0f8eba000000         | jle                 0xc0

    condition:
        7 of them and filesize < 2031616
}