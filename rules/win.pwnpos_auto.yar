rule win_pwnpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.pwnpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pwnpos"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4df4 c745108cea4300 e8???????? 68???????? }
            // n = 4, score = 100
            //   8d4df4               | lea                 ecx, dword ptr [ebp - 0xc]
            //   c745108cea4300       | mov                 dword ptr [ebp + 0x10], 0x43ea8c
            //   e8????????           |                     
            //   68????????           |                     

        $sequence_1 = { 803800 0f8e2e010000 53 56 8d4c2458 e8???????? 8b5c2428 }
            // n = 7, score = 100
            //   803800               | cmp                 byte ptr [eax], 0
            //   0f8e2e010000         | jle                 0x134
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8d4c2458             | lea                 ecx, dword ptr [esp + 0x58]
            //   e8????????           |                     
            //   8b5c2428             | mov                 ebx, dword ptr [esp + 0x28]

        $sequence_2 = { 34ce 34da 34ed 34ff }
            // n = 4, score = 100
            //   34ce                 | xor                 al, 0xce
            //   34da                 | xor                 al, 0xda
            //   34ed                 | xor                 al, 0xed
            //   34ff                 | xor                 al, 0xff

        $sequence_3 = { 894614 e8???????? 8b7ddc 8b0f 8945d4 8955d8 8a11 }
            // n = 7, score = 100
            //   894614               | mov                 dword ptr [esi + 0x14], eax
            //   e8????????           |                     
            //   8b7ddc               | mov                 edi, dword ptr [ebp - 0x24]
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   8955d8               | mov                 dword ptr [ebp - 0x28], edx
            //   8a11                 | mov                 dl, byte ptr [ecx]

        $sequence_4 = { 8b750c 8b5dec 8b15???????? 895dfc 84c0 7433 3b1a }
            // n = 7, score = 100
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8b5dec               | mov                 ebx, dword ptr [ebp - 0x14]
            //   8b15????????         |                     
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   84c0                 | test                al, al
            //   7433                 | je                  0x35
            //   3b1a                 | cmp                 ebx, dword ptr [edx]

        $sequence_5 = { e8???????? 8b08 03f3 83c430 295c2410 8b5c2410 894d10 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   03f3                 | add                 esi, ebx
            //   83c430               | add                 esp, 0x30
            //   295c2410             | sub                 dword ptr [esp + 0x10], ebx
            //   8b5c2410             | mov                 ebx, dword ptr [esp + 0x10]
            //   894d10               | mov                 dword ptr [ebp + 0x10], ecx

        $sequence_6 = { eb58 837c241c00 762a 8b4514 8b4d10 6a01 56 }
            // n = 7, score = 100
            //   eb58                 | jmp                 0x5a
            //   837c241c00           | cmp                 dword ptr [esp + 0x1c], 0
            //   762a                 | jbe                 0x2c
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   6a01                 | push                1
            //   56                   | push                esi

        $sequence_7 = { 8d45f4 64a300000000 c745fc00000000 e8???????? 68???????? e8???????? 83c404 }
            // n = 7, score = 100
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   e8????????           |                     
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_8 = { 56 8d71f0 8b0e 8b5104 8d4610 c74402f048ed4300 50 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   8d71f0               | lea                 esi, dword ptr [ecx - 0x10]
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   8b5104               | mov                 edx, dword ptr [ecx + 4]
            //   8d4610               | lea                 eax, dword ptr [esi + 0x10]
            //   c74402f048ed4300     | mov                 dword ptr [edx + eax - 0x10], 0x43ed48
            //   50                   | push                eax

        $sequence_9 = { 8d442430 8b550c 51 8b4d10 50 51 52 }
            // n = 7, score = 100
            //   8d442430             | lea                 eax, dword ptr [esp + 0x30]
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   51                   | push                ecx
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   52                   | push                edx

    condition:
        7 of them and filesize < 638976
}