rule win_deltas_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.deltas."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.deltas"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7210 5f 5e 5d b803000000 5b 81c444040000 }
            // n = 7, score = 200
            //   7210                 | jb                  0x12
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   b803000000           | mov                 eax, 3
            //   5b                   | pop                 ebx
            //   81c444040000         | add                 esp, 0x444

        $sequence_1 = { 2be8 8d1c08 8d868c440000 50 8d4c2440 }
            // n = 5, score = 200
            //   2be8                 | sub                 ebp, eax
            //   8d1c08               | lea                 ebx, [eax + ecx]
            //   8d868c440000         | lea                 eax, [esi + 0x448c]
            //   50                   | push                eax
            //   8d4c2440             | lea                 ecx, [esp + 0x40]

        $sequence_2 = { b910000000 8bf0 8d7c2454 8d442454 f3a5 eb45 8b8c249c000000 }
            // n = 7, score = 200
            //   b910000000           | mov                 ecx, 0x10
            //   8bf0                 | mov                 esi, eax
            //   8d7c2454             | lea                 edi, [esp + 0x54]
            //   8d442454             | lea                 eax, [esp + 0x54]
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   eb45                 | jmp                 0x47
            //   8b8c249c000000       | mov                 ecx, dword ptr [esp + 0x9c]

        $sequence_3 = { 8bc8 c1fa02 83e103 8b1496 c1e103 d3ea 40 }
            // n = 7, score = 200
            //   8bc8                 | mov                 ecx, eax
            //   c1fa02               | sar                 edx, 2
            //   83e103               | and                 ecx, 3
            //   8b1496               | mov                 edx, dword ptr [esi + edx*4]
            //   c1e103               | shl                 ecx, 3
            //   d3ea                 | shr                 edx, cl
            //   40                   | inc                 eax

        $sequence_4 = { 6804010000 52 ff15???????? 68???????? 8d44242c 68???????? 50 }
            // n = 7, score = 200
            //   6804010000           | push                0x104
            //   52                   | push                edx
            //   ff15????????         |                     
            //   68????????           |                     
            //   8d44242c             | lea                 eax, [esp + 0x2c]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_5 = { 66894c2435 33ff 89442418 884c2437 8d4c2438 897c2424 897c2410 }
            // n = 7, score = 200
            //   66894c2435           | mov                 word ptr [esp + 0x35], cx
            //   33ff                 | xor                 edi, edi
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   884c2437             | mov                 byte ptr [esp + 0x37], cl
            //   8d4c2438             | lea                 ecx, [esp + 0x38]
            //   897c2424             | mov                 dword ptr [esp + 0x24], edi
            //   897c2410             | mov                 dword ptr [esp + 0x10], edi

        $sequence_6 = { 81c418020000 c20c00 8b4e04 51 }
            // n = 4, score = 200
            //   81c418020000         | add                 esp, 0x218
            //   c20c00               | ret                 0xc
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   51                   | push                ecx

        $sequence_7 = { 4a 83cafe 42 b940000000 33c0 8d7c2418 }
            // n = 6, score = 200
            //   4a                   | dec                 edx
            //   83cafe               | or                  edx, 0xfffffffe
            //   42                   | inc                 edx
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   8d7c2418             | lea                 edi, [esp + 0x18]

        $sequence_8 = { 6a01 56 ff15???????? 8d4c2408 51 68???????? 6802000080 }
            // n = 7, score = 200
            //   6a01                 | push                1
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8d4c2408             | lea                 ecx, [esp + 8]
            //   51                   | push                ecx
            //   68????????           |                     
            //   6802000080           | push                0x80000002

        $sequence_9 = { 50 6801100000 bf00000100 68ffff0000 }
            // n = 4, score = 200
            //   50                   | push                eax
            //   6801100000           | push                0x1001
            //   bf00000100           | mov                 edi, 0x10000
            //   68ffff0000           | push                0xffff

    condition:
        7 of them and filesize < 90112
}