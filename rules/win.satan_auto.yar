rule win_satan_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.satan."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.satan"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7212 40 6a01 50 ffb570feffff e8???????? }
            // n = 6, score = 100
            //   7212                 | jb                  0x14
            //   40                   | inc                 eax
            //   6a01                 | push                1
            //   50                   | push                eax
            //   ffb570feffff         | push                dword ptr [ebp - 0x190]
            //   e8????????           |                     

        $sequence_1 = { 0f8f1a010000 8b4dfc c1e104 8b5508 817c0a20e0c24700 7452 8b45fc }
            // n = 7, score = 100
            //   0f8f1a010000         | jg                  0x120
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   c1e104               | shl                 ecx, 4
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   817c0a20e0c24700     | cmp                 dword ptr [edx + ecx + 0x20], 0x47c2e0
            //   7452                 | je                  0x54
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_2 = { e9???????? e8???????? c3 8d4dd4 e9???????? 8d4da8 e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   e8????????           |                     
            //   c3                   | ret                 
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]
            //   e9????????           |                     
            //   8d4da8               | lea                 ecx, [ebp - 0x58]
            //   e9????????           |                     

        $sequence_3 = { c744389818734700 8b4798 8b5004 8d4298 89443a94 c747b0d8724700 }
            // n = 6, score = 100
            //   c744389818734700     | mov                 dword ptr [eax + edi - 0x68], 0x477318
            //   8b4798               | mov                 eax, dword ptr [edi - 0x68]
            //   8b5004               | mov                 edx, dword ptr [eax + 4]
            //   8d4298               | lea                 eax, [edx - 0x68]
            //   89443a94             | mov                 dword ptr [edx + edi - 0x6c], eax
            //   c747b0d8724700       | mov                 dword ptr [edi - 0x50], 0x4772d8

        $sequence_4 = { b902000000 6bd100 8b45f8 0fb70c10 51 e8???????? 83c404 }
            // n = 7, score = 100
            //   b902000000           | mov                 ecx, 2
            //   6bd100               | imul                edx, ecx, 0
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   0fb70c10             | movzx               ecx, word ptr [eax + edx]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_5 = { 83e23f 6bc230 03048d40e04700 8945cc eb07 }
            // n = 5, score = 100
            //   83e23f               | and                 edx, 0x3f
            //   6bc230               | imul                eax, edx, 0x30
            //   03048d40e04700       | add                 eax, dword ptr [ecx*4 + 0x47e040]
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   eb07                 | jmp                 9

        $sequence_6 = { 8b45fc 50 ff15???????? 3305???????? b904000000 6bd117 8982d0d14700 }
            // n = 7, score = 100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   3305????????         |                     
            //   b904000000           | mov                 ecx, 4
            //   6bd117               | imul                edx, ecx, 0x17
            //   8982d0d14700         | mov                 dword ptr [edx + 0x47d1d0], eax

        $sequence_7 = { 6bd130 8b048540e04700 8b4c1018 894dec 837d1000 7445 8b550c }
            // n = 7, score = 100
            //   6bd130               | imul                edx, ecx, 0x30
            //   8b048540e04700       | mov                 eax, dword ptr [eax*4 + 0x47e040]
            //   8b4c1018             | mov                 ecx, dword ptr [eax + edx + 0x18]
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0
            //   7445                 | je                  0x47
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]

        $sequence_8 = { 33c5 8945fc 8b4508 83f81a 7654 56 57 }
            // n = 7, score = 100
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83f81a               | cmp                 eax, 0x1a
            //   7654                 | jbe                 0x56
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_9 = { 6bd130 8b048540e04700 0fb64c1028 83e102 7407 33c0 e9???????? }
            // n = 7, score = 100
            //   6bd130               | imul                edx, ecx, 0x30
            //   8b048540e04700       | mov                 eax, dword ptr [eax*4 + 0x47e040]
            //   0fb64c1028           | movzx               ecx, byte ptr [eax + edx + 0x28]
            //   83e102               | and                 ecx, 2
            //   7407                 | je                  9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     

    condition:
        7 of them and filesize < 1163264
}