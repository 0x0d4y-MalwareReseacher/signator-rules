rule win_onliner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.onliner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.onliner"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 057df4efff ba0f000000 e8???????? 0345fc 8bf8 8bc3 f7d0 }
            // n = 7, score = 100
            //   057df4efff           | add                 eax, 0xffeff47d
            //   ba0f000000           | mov                 edx, 0xf
            //   e8????????           |                     
            //   0345fc               | add                 eax, dword ptr [ebp - 4]
            //   8bf8                 | mov                 edi, eax
            //   8bc3                 | mov                 eax, ebx
            //   f7d0                 | not                 eax

        $sequence_1 = { ff512c 8b45fc 83b8b801000000 0f9445fb 33c0 5a 59 }
            // n = 7, score = 100
            //   ff512c               | call                dword ptr [ecx + 0x2c]
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   83b8b801000000       | cmp                 dword ptr [eax + 0x1b8], 0
            //   0f9445fb             | sete                byte ptr [ebp - 5]
            //   33c0                 | xor                 eax, eax
            //   5a                   | pop                 edx
            //   59                   | pop                 ecx

        $sequence_2 = { 8b4508 83c0c0 33c9 ba40000000 e8???????? 5f 5e }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c0c0               | add                 eax, -0x40
            //   33c9                 | xor                 ecx, ecx
            //   ba40000000           | mov                 edx, 0x40
            //   e8????????           |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_3 = { 8b00 ffd0 8bc3 e8???????? 8bc3 e8???????? 5b }
            // n = 7, score = 100
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   ffd0                 | call                eax
            //   8bc3                 | mov                 eax, ebx
            //   e8????????           |                     
            //   8bc3                 | mov                 eax, ebx
            //   e8????????           |                     
            //   5b                   | pop                 ebx

        $sequence_4 = { 8b10 ff5214 3bd8 7d09 83fb14 0f8c59feffff 895df8 }
            // n = 7, score = 100
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   ff5214               | call                dword ptr [edx + 0x14]
            //   3bd8                 | cmp                 ebx, eax
            //   7d09                 | jge                 0xb
            //   83fb14               | cmp                 ebx, 0x14
            //   0f8c59feffff         | jl                  0xfffffe5f
            //   895df8               | mov                 dword ptr [ebp - 8], ebx

        $sequence_5 = { 740d 51 8bd8 8bca 8bd0 8b430c ff5308 }
            // n = 7, score = 100
            //   740d                 | je                  0xf
            //   51                   | push                ecx
            //   8bd8                 | mov                 ebx, eax
            //   8bca                 | mov                 ecx, edx
            //   8bd0                 | mov                 edx, eax
            //   8b430c               | mov                 eax, dword ptr [ebx + 0xc]
            //   ff5308               | call                dword ptr [ebx + 8]

        $sequence_6 = { 8b5870 85db 7f0d 8b45fc 83787400 0f8e83000000 8b45fc }
            // n = 7, score = 100
            //   8b5870               | mov                 ebx, dword ptr [eax + 0x70]
            //   85db                 | test                ebx, ebx
            //   7f0d                 | jg                  0xf
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   83787400             | cmp                 dword ptr [eax + 0x74], 0
            //   0f8e83000000         | jle                 0x89
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_7 = { 3a1c24 741a 8b442404 e8???????? 8b542408 885c10ff }
            // n = 6, score = 100
            //   3a1c24               | cmp                 bl, byte ptr [esp]
            //   741a                 | je                  0x1c
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   e8????????           |                     
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   885c10ff             | mov                 byte ptr [eax + edx - 1], bl

        $sequence_8 = { 8d45e4 668b55ee c1e202 0fbf4df0 c1e904 0ad1 }
            // n = 6, score = 100
            //   8d45e4               | lea                 eax, dword ptr [ebp - 0x1c]
            //   668b55ee             | mov                 dx, word ptr [ebp - 0x12]
            //   c1e202               | shl                 edx, 2
            //   0fbf4df0             | movsx               ecx, word ptr [ebp - 0x10]
            //   c1e904               | shr                 ecx, 4
            //   0ad1                 | or                  dl, cl

        $sequence_9 = { 8d4701 50 8b85e8fcffff 50 e8???????? e8???????? }
            // n = 6, score = 100
            //   8d4701               | lea                 eax, dword ptr [edi + 1]
            //   50                   | push                eax
            //   8b85e8fcffff         | mov                 eax, dword ptr [ebp - 0x318]
            //   50                   | push                eax
            //   e8????????           |                     
            //   e8????????           |                     

    condition:
        7 of them and filesize < 1736704
}