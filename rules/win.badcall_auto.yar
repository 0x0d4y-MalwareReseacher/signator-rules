rule win_badcall_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.badcall."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.badcall"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c705????????04000000 ff15???????? c20400 a1???????? }
            // n = 4, score = 300
            //   c705????????04000000     |     
            //   ff15????????         |                     
            //   c20400               | ret                 4
            //   a1????????           |                     

        $sequence_1 = { 8bc1 8bd1 8d7c240c 89442408 c1e902 f3a5 }
            // n = 6, score = 300
            //   8bc1                 | mov                 eax, ecx
            //   8bd1                 | mov                 edx, ecx
            //   8d7c240c             | lea                 edi, [esp + 0xc]
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]

        $sequence_2 = { c20400 c705????????01000000 a1???????? 68???????? }
            // n = 4, score = 300
            //   c20400               | ret                 4
            //   c705????????01000000     |     
            //   a1????????           |                     
            //   68????????           |                     

        $sequence_3 = { 8bf0 83feff 7450 6a14 6a40 }
            // n = 5, score = 300
            //   8bf0                 | mov                 esi, eax
            //   83feff               | cmp                 esi, -1
            //   7450                 | je                  0x52
            //   6a14                 | push                0x14
            //   6a40                 | push                0x40

        $sequence_4 = { 8b542408 83c108 8901 8b44240c }
            // n = 4, score = 300
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   83c108               | add                 ecx, 8
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]

        $sequence_5 = { 85c0 7573 33c0 8d4c2414 }
            // n = 4, score = 300
            //   85c0                 | test                eax, eax
            //   7573                 | jne                 0x75
            //   33c0                 | xor                 eax, eax
            //   8d4c2414             | lea                 ecx, [esp + 0x14]

        $sequence_6 = { f2ae f7d1 49 be???????? 8bc1 8bd1 }
            // n = 6, score = 300
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   be????????           |                     
            //   8bc1                 | mov                 eax, ecx
            //   8bd1                 | mov                 edx, ecx

        $sequence_7 = { a3???????? a1???????? 50 c705????????04000000 ff15???????? }
            // n = 5, score = 300
            //   a3????????           |                     
            //   a1????????           |                     
            //   50                   | push                eax
            //   c705????????04000000     |     
            //   ff15????????         |                     

        $sequence_8 = { 7557 33c0 68???????? a3???????? }
            // n = 4, score = 300
            //   7557                 | jne                 0x59
            //   33c0                 | xor                 eax, eax
            //   68????????           |                     
            //   a3????????           |                     

        $sequence_9 = { 33c0 8d7c2411 895c2408 f3ab 66ab }
            // n = 5, score = 300
            //   33c0                 | xor                 eax, eax
            //   8d7c2411             | lea                 edi, [esp + 0x11]
            //   895c2408             | mov                 dword ptr [esp + 8], ebx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax

        $sequence_10 = { 6a01 8d542420 53 52 50 ff15???????? }
            // n = 6, score = 300
            //   6a01                 | push                1
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   53                   | push                ebx
            //   52                   | push                edx
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_11 = { 66ab 8d4c242c c744240800000000 aa }
            // n = 4, score = 300
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   8d4c242c             | lea                 ecx, [esp + 0x2c]
            //   c744240800000000     | mov                 dword ptr [esp + 8], 0
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_12 = { 8b442404 48 7455 48 7434 }
            // n = 5, score = 300
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   48                   | dec                 eax
            //   7455                 | je                  0x57
            //   48                   | dec                 eax
            //   7434                 | je                  0x36

        $sequence_13 = { 48 7434 83e803 7557 }
            // n = 4, score = 300
            //   48                   | dec                 eax
            //   7434                 | je                  0x36
            //   83e803               | sub                 eax, 3
            //   7557                 | jne                 0x59

        $sequence_14 = { c644241e00 8b542414 bf???????? 8a443201 8a0c16 8844241d 884c241c }
            // n = 7, score = 200
            //   c644241e00           | mov                 byte ptr [esp + 0x1e], 0
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   bf????????           |                     
            //   8a443201             | mov                 al, byte ptr [edx + esi + 1]
            //   8a0c16               | mov                 cl, byte ptr [esi + edx]
            //   8844241d             | mov                 byte ptr [esp + 0x1d], al
            //   884c241c             | mov                 byte ptr [esp + 0x1c], cl

    condition:
        7 of them and filesize < 483328
}