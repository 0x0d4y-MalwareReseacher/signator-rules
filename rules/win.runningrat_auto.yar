rule win_runningrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.runningrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.runningrat"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 56 ff15???????? 8b8c2418010000 }
            // n = 4, score = 300
            //   ff15????????         |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b8c2418010000       | mov                 ecx, dword ptr [esp + 0x118]

        $sequence_1 = { 5e 33cb 5b 8ac1 c20800 8b7c2410 }
            // n = 6, score = 200
            //   5e                   | pop                 esi
            //   33cb                 | xor                 ecx, ebx
            //   5b                   | pop                 ebx
            //   8ac1                 | mov                 al, cl
            //   c20800               | ret                 8
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]

        $sequence_2 = { c744240800000000 50 6a04 57 }
            // n = 4, score = 200
            //   c744240800000000     | mov                 dword ptr [esp + 8], 0
            //   50                   | push                eax
            //   6a04                 | push                4
            //   57                   | push                edi

        $sequence_3 = { 8d542410 83e103 f3aa b900010000 33c0 }
            // n = 5, score = 200
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   83e103               | and                 ecx, 3
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   b900010000           | mov                 ecx, 0x100
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { 8dbc248c000000 83c9ff 33c0 891c2e 8d542e04 f2ae }
            // n = 6, score = 200
            //   8dbc248c000000       | lea                 edi, [esp + 0x8c]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   891c2e               | mov                 dword ptr [esi + ebp], ebx
            //   8d542e04             | lea                 edx, [esi + ebp + 4]
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]

        $sequence_5 = { 8bfd 8b6c2418 33d2 8b4e04 33c0 85c9 }
            // n = 6, score = 200
            //   8bfd                 | mov                 edi, ebp
            //   8b6c2418             | mov                 ebp, dword ptr [esp + 0x18]
            //   33d2                 | xor                 edx, edx
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   33c0                 | xor                 eax, eax
            //   85c9                 | test                ecx, ecx

        $sequence_6 = { 8b461c 8b5c2418 bd05000000 c7461824cc0110 896804 e9???????? f6c120 }
            // n = 7, score = 200
            //   8b461c               | mov                 eax, dword ptr [esi + 0x1c]
            //   8b5c2418             | mov                 ebx, dword ptr [esp + 0x18]
            //   bd05000000           | mov                 ebp, 5
            //   c7461824cc0110       | mov                 dword ptr [esi + 0x18], 0x1001cc24
            //   896804               | mov                 dword ptr [eax + 4], ebp
            //   e9????????           |                     
            //   f6c120               | test                cl, 0x20

        $sequence_7 = { 51 e8???????? 8bf0 85f6 7445 8d942490010000 6838020000 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7445                 | je                  0x47
            //   8d942490010000       | lea                 edx, [esp + 0x190]
            //   6838020000           | push                0x238

        $sequence_8 = { 745f 8d0424 50 ff15???????? 0fb74c240c 0fb754240a }
            // n = 6, score = 100
            //   745f                 | je                  0x61
            //   8d0424               | lea                 eax, [esp]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   0fb74c240c           | movzx               ecx, word ptr [esp + 0xc]
            //   0fb754240a           | movzx               edx, word ptr [esp + 0xa]

        $sequence_9 = { e9???????? 8b442414 c70008000000 6a01 e9???????? }
            // n = 5, score = 100
            //   e9????????           |                     
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   c70008000000         | mov                 dword ptr [eax], 8
            //   6a01                 | push                1
            //   e9????????           |                     

        $sequence_10 = { 8b74242c 8b5c243c 895320 8d14f500000000 2bc2 2bee 89431c }
            // n = 7, score = 100
            //   8b74242c             | mov                 esi, dword ptr [esp + 0x2c]
            //   8b5c243c             | mov                 ebx, dword ptr [esp + 0x3c]
            //   895320               | mov                 dword ptr [ebx + 0x20], edx
            //   8d14f500000000       | lea                 edx, [esi*8]
            //   2bc2                 | sub                 eax, edx
            //   2bee                 | sub                 ebp, esi
            //   89431c               | mov                 dword ptr [ebx + 0x1c], eax

        $sequence_11 = { 8d44244f 6a00 50 885c244d c644244e50 c644244f72 c64424506f }
            // n = 7, score = 100
            //   8d44244f             | lea                 eax, [esp + 0x4f]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   885c244d             | mov                 byte ptr [esp + 0x4d], bl
            //   c644244e50           | mov                 byte ptr [esp + 0x4e], 0x50
            //   c644244f72           | mov                 byte ptr [esp + 0x4f], 0x72
            //   c64424506f           | mov                 byte ptr [esp + 0x50], 0x6f

        $sequence_12 = { 6afd e9???????? 8b460c 8b4f28 8b5724 50 51 }
            // n = 7, score = 100
            //   6afd                 | push                -3
            //   e9????????           |                     
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   8b4f28               | mov                 ecx, dword ptr [edi + 0x28]
            //   8b5724               | mov                 edx, dword ptr [edi + 0x24]
            //   50                   | push                eax
            //   51                   | push                ecx

        $sequence_13 = { e8???????? 81c40c020000 c20c00 8b8c240c020000 5f 33cc b801000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   81c40c020000         | add                 esp, 0x20c
            //   c20c00               | ret                 0xc
            //   8b8c240c020000       | mov                 ecx, dword ptr [esp + 0x20c]
            //   5f                   | pop                 edi
            //   33cc                 | xor                 ecx, esp
            //   b801000000           | mov                 eax, 1

        $sequence_14 = { c684244001000000 e8???????? 83c40c 68???????? }
            // n = 4, score = 100
            //   c684244001000000     | mov                 byte ptr [esp + 0x140], 0
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   68????????           |                     

    condition:
        7 of them and filesize < 278528
}