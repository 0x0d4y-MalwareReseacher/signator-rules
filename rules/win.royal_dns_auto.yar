rule win_royal_dns_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.royal_dns."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.royal_dns"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bd6 c1fa05 8b149580502500 83e61f c1e606 }
            // n = 5, score = 100
            //   8bd6                 | mov                 edx, esi
            //   c1fa05               | sar                 edx, 5
            //   8b149580502500       | mov                 edx, dword ptr [edx*4 + 0x255080]
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6

        $sequence_1 = { 6a0d 58 5d c3 8b04cd84372500 5d }
            // n = 6, score = 100
            //   6a0d                 | push                0xd
            //   58                   | pop                 eax
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04cd84372500       | mov                 eax, dword ptr [ecx*8 + 0x253784]
            //   5d                   | pop                 ebp

        $sequence_2 = { 84c9 745c 80f93f 0f879e010000 0fb6d9 43 }
            // n = 6, score = 100
            //   84c9                 | test                cl, cl
            //   745c                 | je                  0x5e
            //   80f93f               | cmp                 cl, 0x3f
            //   0f879e010000         | ja                  0x1a4
            //   0fb6d9               | movzx               ebx, cl
            //   43                   | inc                 ebx

        $sequence_3 = { 884804 8b54b7fc 8a85a0fcffff 884205 c785acfcffff01000000 }
            // n = 5, score = 100
            //   884804               | mov                 byte ptr [eax + 4], cl
            //   8b54b7fc             | mov                 edx, dword ptr [edi + esi*4 - 4]
            //   8a85a0fcffff         | mov                 al, byte ptr [ebp - 0x360]
            //   884205               | mov                 byte ptr [edx + 5], al
            //   c785acfcffff01000000     | mov    dword ptr [ebp - 0x354], 1

        $sequence_4 = { 68ff070000 8d85fdf5ffff 6a00 bb???????? 50 c785f8f5ffff02000080 c785f0f5ffff00000000 }
            // n = 7, score = 100
            //   68ff070000           | push                0x7ff
            //   8d85fdf5ffff         | lea                 eax, [ebp - 0xa03]
            //   6a00                 | push                0
            //   bb????????           |                     
            //   50                   | push                eax
            //   c785f8f5ffff02000080     | mov    dword ptr [ebp - 0xa08], 0x80000002
            //   c785f0f5ffff00000000     | mov    dword ptr [ebp - 0xa10], 0

        $sequence_5 = { 52 ffd6 57 8d85f0fdffff 50 ffd6 68???????? }
            // n = 7, score = 100
            //   52                   | push                edx
            //   ffd6                 | call                esi
            //   57                   | push                edi
            //   8d85f0fdffff         | lea                 eax, [ebp - 0x210]
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   68????????           |                     

        $sequence_6 = { 8b8df8fbffff 8b4508 6a10 51 6a00 53 8d95fcfbffff }
            // n = 7, score = 100
            //   8b8df8fbffff         | mov                 ecx, dword ptr [ebp - 0x408]
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   6a10                 | push                0x10
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   53                   | push                ebx
            //   8d95fcfbffff         | lea                 edx, [ebp - 0x404]

        $sequence_7 = { e8???????? 6a06 89430c 8d4310 8d893c342500 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   6a06                 | push                6
            //   89430c               | mov                 dword ptr [ebx + 0xc], eax
            //   8d4310               | lea                 eax, [ebx + 0x10]
            //   8d893c342500         | lea                 ecx, [ecx + 0x25343c]

        $sequence_8 = { 32c0 eb04 8a4405b4 6a0c }
            // n = 4, score = 100
            //   32c0                 | xor                 al, al
            //   eb04                 | jmp                 6
            //   8a4405b4             | mov                 al, byte ptr [ebp + eax - 0x4c]
            //   6a0c                 | push                0xc

        $sequence_9 = { e8???????? 8b4d10 8b55e8 8b45e4 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]

    condition:
        7 of them and filesize < 204800
}