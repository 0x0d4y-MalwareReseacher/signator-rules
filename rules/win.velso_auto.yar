rule win_velso_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.velso."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.velso"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb9d 8b8340010000 f644241804 898b40010000 8944241c 8b8314010000 c7831401000000000000 }
            // n = 7, score = 200
            //   eb9d                 | jmp                 0xffffff9f
            //   8b8340010000         | mov                 eax, dword ptr [ebx + 0x140]
            //   f644241804           | test                byte ptr [esp + 0x18], 4
            //   898b40010000         | mov                 dword ptr [ebx + 0x140], ecx
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   8b8314010000         | mov                 eax, dword ptr [ebx + 0x114]
            //   c7831401000000000000     | mov    dword ptr [ebx + 0x114], 0

        $sequence_1 = { c745c801000000 894dbc e8???????? 8b4dbc 83ec08 e8???????? 84c0 }
            // n = 7, score = 200
            //   c745c801000000       | mov                 dword ptr [ebp - 0x38], 1
            //   894dbc               | mov                 dword ptr [ebp - 0x44], ecx
            //   e8????????           |                     
            //   8b4dbc               | mov                 ecx, dword ptr [ebp - 0x44]
            //   83ec08               | sub                 esp, 8
            //   e8????????           |                     
            //   84c0                 | test                al, al

        $sequence_2 = { 8b45a4 80781000 0f857b060000 b8ffff0000 99 f77d84 894588 }
            // n = 7, score = 200
            //   8b45a4               | mov                 eax, dword ptr [ebp - 0x5c]
            //   80781000             | cmp                 byte ptr [eax + 0x10], 0
            //   0f857b060000         | jne                 0x681
            //   b8ffff0000           | mov                 eax, 0xffff
            //   99                   | cdq                 
            //   f77d84               | idiv                dword ptr [ebp - 0x7c]
            //   894588               | mov                 dword ptr [ebp - 0x78], eax

        $sequence_3 = { ff5018 84c0 0f8577ffffff 807b5000 0f85ab000000 8b7c2438 8b4330 }
            // n = 7, score = 200
            //   ff5018               | call                dword ptr [eax + 0x18]
            //   84c0                 | test                al, al
            //   0f8577ffffff         | jne                 0xffffff7d
            //   807b5000             | cmp                 byte ptr [ebx + 0x50], 0
            //   0f85ab000000         | jne                 0xb1
            //   8b7c2438             | mov                 edi, dword ptr [esp + 0x38]
            //   8b4330               | mov                 eax, dword ptr [ebx + 0x30]

        $sequence_4 = { 0fb6542418 eba1 8d5104 89d8 e8???????? 85c0 0f8490e5ffff }
            // n = 7, score = 200
            //   0fb6542418           | movzx               edx, byte ptr [esp + 0x18]
            //   eba1                 | jmp                 0xffffffa3
            //   8d5104               | lea                 edx, [ecx + 4]
            //   89d8                 | mov                 eax, ebx
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f8490e5ffff         | je                  0xffffe596

        $sequence_5 = { 8b480c 894dbc b9???????? e8???????? 8b4dbc 8b55b8 891481 }
            // n = 7, score = 200
            //   8b480c               | mov                 ecx, dword ptr [eax + 0xc]
            //   894dbc               | mov                 dword ptr [ebp - 0x44], ecx
            //   b9????????           |                     
            //   e8????????           |                     
            //   8b4dbc               | mov                 ecx, dword ptr [ebp - 0x44]
            //   8b55b8               | mov                 edx, dword ptr [ebp - 0x48]
            //   891481               | mov                 dword ptr [ecx + eax*4], edx

        $sequence_6 = { 8d7600 8b33 891c24 ff5304 85f6 89f3 75f2 }
            // n = 7, score = 200
            //   8d7600               | lea                 esi, [esi]
            //   8b33                 | mov                 esi, dword ptr [ebx]
            //   891c24               | mov                 dword ptr [esp], ebx
            //   ff5304               | call                dword ptr [ebx + 4]
            //   85f6                 | test                esi, esi
            //   89f3                 | mov                 ebx, esi
            //   75f2                 | jne                 0xfffffff4

        $sequence_7 = { 0f8790020000 8b859cfeffff 89442404 8d85e8feffff 890424 8b4d0c c785a8feffff01000000 }
            // n = 7, score = 200
            //   0f8790020000         | ja                  0x296
            //   8b859cfeffff         | mov                 eax, dword ptr [ebp - 0x164]
            //   89442404             | mov                 dword ptr [esp + 4], eax
            //   8d85e8feffff         | lea                 eax, [ebp - 0x118]
            //   890424               | mov                 dword ptr [esp], eax
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   c785a8feffff01000000     | mov    dword ptr [ebp - 0x158], 1

        $sequence_8 = { 8d4c245f c744240400000000 c7442420ffffffff 890424 e8???????? 83ec08 807c245f00 }
            // n = 7, score = 200
            //   8d4c245f             | lea                 ecx, [esp + 0x5f]
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0
            //   c7442420ffffffff     | mov                 dword ptr [esp + 0x20], 0xffffffff
            //   890424               | mov                 dword ptr [esp], eax
            //   e8????????           |                     
            //   83ec08               | sub                 esp, 8
            //   807c245f00           | cmp                 byte ptr [esp + 0x5f], 0

        $sequence_9 = { c7042400000000 e8???????? 83ec04 a1???????? 85c0 75dc }
            // n = 6, score = 200
            //   c7042400000000       | mov                 dword ptr [esp], 0
            //   e8????????           |                     
            //   83ec04               | sub                 esp, 4
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   75dc                 | jne                 0xffffffde

    condition:
        7 of them and filesize < 1736704
}