rule win_velso_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.velso."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.velso"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c7442420ffffffff e8???????? 85c0 0f85ae000000 8b742418 bb10000000 89f0 }
            // n = 7, score = 200
            //   c7442420ffffffff     | mov                 dword ptr [esp + 0x20], 0xffffffff
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f85ae000000         | jne                 0xb4
            //   8b742418             | mov                 esi, dword ptr [esp + 0x18]
            //   bb10000000           | mov                 ebx, 0x10
            //   89f0                 | mov                 eax, esi

        $sequence_1 = { 8b6c2410 0fb700 66894500 ebbe 89742408 894c2404 890424 }
            // n = 7, score = 200
            //   8b6c2410             | mov                 ebp, dword ptr [esp + 0x10]
            //   0fb700               | movzx               eax, word ptr [eax]
            //   66894500             | mov                 word ptr [ebp], ax
            //   ebbe                 | jmp                 0xffffffc0
            //   89742408             | mov                 dword ptr [esp + 8], esi
            //   894c2404             | mov                 dword ptr [esp + 4], ecx
            //   890424               | mov                 dword ptr [esp], eax

        $sequence_2 = { 0f852ef1ffff 8b8424fc000000 8bbc2468010000 89eb 83e801 894710 e9???????? }
            // n = 7, score = 200
            //   0f852ef1ffff         | jne                 0xfffff134
            //   8b8424fc000000       | mov                 eax, dword ptr [esp + 0xfc]
            //   8bbc2468010000       | mov                 edi, dword ptr [esp + 0x168]
            //   89eb                 | mov                 ebx, ebp
            //   83e801               | sub                 eax, 1
            //   894710               | mov                 dword ptr [edi + 0x10], eax
            //   e9????????           |                     

        $sequence_3 = { 8b4db8 c745c802000000 e8???????? 8b550c 83ec04 83ca08 89542404 }
            // n = 7, score = 200
            //   8b4db8               | mov                 ecx, dword ptr [ebp - 0x48]
            //   c745c802000000       | mov                 dword ptr [ebp - 0x38], 2
            //   e8????????           |                     
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   83ec04               | sub                 esp, 4
            //   83ca08               | or                  edx, 8
            //   89542404             | mov                 dword ptr [esp + 4], edx

        $sequence_4 = { 8b55b0 894814 c6041100 8b4df4 895018 b8ffffffff f00fc141fc }
            // n = 7, score = 200
            //   8b55b0               | mov                 edx, dword ptr [ebp - 0x50]
            //   894814               | mov                 dword ptr [eax + 0x14], ecx
            //   c6041100             | mov                 byte ptr [ecx + edx], 0
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   895018               | mov                 dword ptr [eax + 0x18], edx
            //   b8ffffffff           | mov                 eax, 0xffffffff
            //   f00fc141fc           | lock xadd           dword ptr [ecx - 4], eax

        $sequence_5 = { 8d4101 31ed 89430c 0fb65101 80fa74 0f8583000000 83c102 }
            // n = 7, score = 200
            //   8d4101               | lea                 eax, dword ptr [ecx + 1]
            //   31ed                 | xor                 ebp, ebp
            //   89430c               | mov                 dword ptr [ebx + 0xc], eax
            //   0fb65101             | movzx               edx, byte ptr [ecx + 1]
            //   80fa74               | cmp                 dl, 0x74
            //   0f8583000000         | jne                 0x89
            //   83c102               | add                 ecx, 2

        $sequence_6 = { 0f840d0c0000 837d0cff 0f84660b0000 8b4d10 85c9 0f84780b0000 c6458000 }
            // n = 7, score = 200
            //   0f840d0c0000         | je                  0xc13
            //   837d0cff             | cmp                 dword ptr [ebp + 0xc], -1
            //   0f84660b0000         | je                  0xb6c
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   85c9                 | test                ecx, ecx
            //   0f84780b0000         | je                  0xb7e
            //   c6458000             | mov                 byte ptr [ebp - 0x80], 0

        $sequence_7 = { c645e800 895de0 0f8535080000 31d2 b8ffffffff f77580 894588 }
            // n = 7, score = 200
            //   c645e800             | mov                 byte ptr [ebp - 0x18], 0
            //   895de0               | mov                 dword ptr [ebp - 0x20], ebx
            //   0f8535080000         | jne                 0x83b
            //   31d2                 | xor                 edx, edx
            //   b8ffffffff           | mov                 eax, 0xffffffff
            //   f77580               | div                 dword ptr [ebp - 0x80]
            //   894588               | mov                 dword ptr [ebp - 0x78], eax

        $sequence_8 = { 8b75d4 897d0c 897518 8b401c 8d65f4 5b 5e }
            // n = 7, score = 200
            //   8b75d4               | mov                 esi, dword ptr [ebp - 0x2c]
            //   897d0c               | mov                 dword ptr [ebp + 0xc], edi
            //   897518               | mov                 dword ptr [ebp + 0x18], esi
            //   8b401c               | mov                 eax, dword ptr [eax + 0x1c]
            //   8d65f4               | lea                 esp, dword ptr [ebp - 0xc]
            //   5b                   | pop                 ebx
            //   5e                   | pop                 esi

        $sequence_9 = { 8b4d08 85c9 741b 8b4108 3b410c 0f8390010000 83c002 }
            // n = 7, score = 200
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   85c9                 | test                ecx, ecx
            //   741b                 | je                  0x1d
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   3b410c               | cmp                 eax, dword ptr [ecx + 0xc]
            //   0f8390010000         | jae                 0x196
            //   83c002               | add                 eax, 2

    condition:
        7 of them and filesize < 1736704
}