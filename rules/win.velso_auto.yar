rule win_velso_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.velso."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.velso"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c3 bb28000000 893c24 e8???????? c70600000000 a1???????? 85c0 }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   bb28000000           | mov                 ebx, 0x28
            //   893c24               | mov                 dword ptr [esp], edi
            //   e8????????           |                     
            //   c70600000000         | mov                 dword ptr [esi], 0
            //   a1????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_1 = { 890424 e8???????? 8b442418 83c458 5d c3 c7442408???????? }
            // n = 7, score = 200
            //   890424               | mov                 dword ptr [esp], eax
            //   e8????????           |                     
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   83c458               | add                 esp, 0x58
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   c7442408????????     |                     

        $sequence_2 = { 8b742418 8b7e04 8b37 897c2420 8b7f08 8974241c 8d4ffe }
            // n = 7, score = 200
            //   8b742418             | mov                 esi, dword ptr [esp + 0x18]
            //   8b7e04               | mov                 edi, dword ptr [esi + 4]
            //   8b37                 | mov                 esi, dword ptr [edi]
            //   897c2420             | mov                 dword ptr [esp + 0x20], edi
            //   8b7f08               | mov                 edi, dword ptr [edi + 8]
            //   8974241c             | mov                 dword ptr [esp + 0x1c], esi
            //   8d4ffe               | lea                 ecx, dword ptr [edi - 2]

        $sequence_3 = { 80780169 0f85f1e5ffff 83c002 ba45000000 89450c 89e8 e8???????? }
            // n = 7, score = 200
            //   80780169             | cmp                 byte ptr [eax + 1], 0x69
            //   0f85f1e5ffff         | jne                 0xffffe5f7
            //   83c002               | add                 eax, 2
            //   ba45000000           | mov                 edx, 0x45
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   89e8                 | mov                 eax, ebp
            //   e8????????           |                     

        $sequence_4 = { e8???????? 8b542428 89442424 bf???????? b903000000 89d6 f3a6 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8b542428             | mov                 edx, dword ptr [esp + 0x28]
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   bf????????           |                     
            //   b903000000           | mov                 ecx, 3
            //   89d6                 | mov                 esi, edx
            //   f3a6                 | repe cmpsb          byte ptr [esi], byte ptr es:[edi]

        $sequence_5 = { e8???????? 8d4310 8d3c06 8945dc c70761616161 c7470461616161 c7470861616161 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d4310               | lea                 eax, dword ptr [ebx + 0x10]
            //   8d3c06               | lea                 edi, dword ptr [esi + eax]
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   c70761616161         | mov                 dword ptr [edi], 0x61616161
            //   c7470461616161       | mov                 dword ptr [edi + 4], 0x61616161
            //   c7470861616161       | mov                 dword ptr [edi + 8], 0x61616161

        $sequence_6 = { c703efbeadde 890424 e8???????? 8b83ac000000 83ec04 c7431400000000 85c0 }
            // n = 7, score = 200
            //   c703efbeadde         | mov                 dword ptr [ebx], 0xdeadbeef
            //   890424               | mov                 dword ptr [esp], eax
            //   e8????????           |                     
            //   8b83ac000000         | mov                 eax, dword ptr [ebx + 0xac]
            //   83ec04               | sub                 esp, 4
            //   c7431400000000       | mov                 dword ptr [ebx + 0x14], 0
            //   85c0                 | test                eax, eax

        $sequence_7 = { c744244400000000 8b6d08 89e8 83c001 8902 8b9424c0000000 803a28 }
            // n = 7, score = 200
            //   c744244400000000     | mov                 dword ptr [esp + 0x44], 0
            //   8b6d08               | mov                 ebp, dword ptr [ebp + 8]
            //   89e8                 | mov                 eax, ebp
            //   83c001               | add                 eax, 1
            //   8902                 | mov                 dword ptr [edx], eax
            //   8b9424c0000000       | mov                 edx, dword ptr [esp + 0xc0]
            //   803a28               | cmp                 byte ptr [edx], 0x28

        $sequence_8 = { 0fbec0 390424 7e1e 29c3 3b4c2408 0f83f8000000 8b442428 }
            // n = 7, score = 200
            //   0fbec0               | movsx               eax, al
            //   390424               | cmp                 dword ptr [esp], eax
            //   7e1e                 | jle                 0x20
            //   29c3                 | sub                 ebx, eax
            //   3b4c2408             | cmp                 ecx, dword ptr [esp + 8]
            //   0f83f8000000         | jae                 0xfe
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]

        $sequence_9 = { 8955e4 8b10 c744241408000000 8b4dd8 894c2404 8b4ddc 894c2408 }
            // n = 7, score = 200
            //   8955e4               | mov                 dword ptr [ebp - 0x1c], edx
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   c744241408000000     | mov                 dword ptr [esp + 0x14], 8
            //   8b4dd8               | mov                 ecx, dword ptr [ebp - 0x28]
            //   894c2404             | mov                 dword ptr [esp + 4], ecx
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   894c2408             | mov                 dword ptr [esp + 8], ecx

    condition:
        7 of them and filesize < 1736704
}