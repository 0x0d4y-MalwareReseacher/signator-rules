rule win_nachocheese_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.nachocheese."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nachocheese"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf0 85f6 0f84e7000000 8b4508 }
            // n = 4, score = 300
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   0f84e7000000         | je                  0xed
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_1 = { 3d2bc00000 7d1b 3d9c000000 7c07 }
            // n = 4, score = 300
            //   3d2bc00000           | cmp                 eax, 0xc02b
            //   7d1b                 | jge                 0x1d
            //   3d9c000000           | cmp                 eax, 0x9c
            //   7c07                 | jl                  9

        $sequence_2 = { 898128860000 ff15???????? 8b449f50 85c0 7446 }
            // n = 5, score = 300
            //   898128860000         | mov                 dword ptr [ecx + 0x8628], eax
            //   ff15????????         |                     
            //   8b449f50             | mov                 eax, dword ptr [edi + ebx*4 + 0x50]
            //   85c0                 | test                eax, eax
            //   7446                 | je                  0x48

        $sequence_3 = { 33c8 894710 8b4708 33c1 }
            // n = 4, score = 300
            //   33c8                 | xor                 ecx, eax
            //   894710               | mov                 dword ptr [edi + 0x10], eax
            //   8b4708               | mov                 eax, dword ptr [edi + 8]
            //   33c1                 | xor                 eax, ecx

        $sequence_4 = { 33c0 c3 05d13fffff 83f801 77f3 }
            // n = 5, score = 300
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   05d13fffff           | add                 eax, 0xffff3fd1
            //   83f801               | cmp                 eax, 1
            //   77f3                 | ja                  0xfffffff5

        $sequence_5 = { 3d9c000000 7c07 3d9f000000 7e0d }
            // n = 4, score = 300
            //   3d9c000000           | cmp                 eax, 0x9c
            //   7c07                 | jl                  9
            //   3d9f000000           | cmp                 eax, 0x9f
            //   7e0d                 | jle                 0xf

        $sequence_6 = { 52 ff15???????? 33c0 894610 }
            // n = 4, score = 300
            //   52                   | push                edx
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   894610               | mov                 dword ptr [esi + 0x10], eax

        $sequence_7 = { 3d9f000000 7e0d 33c0 c3 }
            // n = 4, score = 300
            //   3d9f000000           | cmp                 eax, 0x9f
            //   7e0d                 | jle                 0xf
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 

        $sequence_8 = { 53 56 8bf1 68???????? 56 c745f463457a51 c745f8666f5077 }
            // n = 7, score = 300
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   68????????           |                     
            //   56                   | push                esi
            //   c745f463457a51       | mov                 dword ptr [ebp - 0xc], 0x517a4563
            //   c745f8666f5077       | mov                 dword ptr [ebp - 8], 0x77506f66

        $sequence_9 = { 50 6a02 51 ff15???????? 83f801 7508 837df810 }
            // n = 7, score = 300
            //   50                   | push                eax
            //   6a02                 | push                2
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1
            //   7508                 | jne                 0xa
            //   837df810             | cmp                 dword ptr [ebp - 8], 0x10

        $sequence_10 = { 2bfa 8d47fd 3901 8901 }
            // n = 4, score = 300
            //   2bfa                 | sub                 edi, edx
            //   8d47fd               | lea                 eax, dword ptr [edi - 3]
            //   3901                 | cmp                 dword ptr [ecx], eax
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_11 = { 3d2cc00000 7f18 3d2bc00000 7d1b }
            // n = 4, score = 300
            //   3d2cc00000           | cmp                 eax, 0xc02c
            //   7f18                 | jg                  0x1a
            //   3d2bc00000           | cmp                 eax, 0xc02b
            //   7d1b                 | jge                 0x1d

        $sequence_12 = { 7305 83c303 eb1c 81fb00000100 7305 83c304 }
            // n = 6, score = 300
            //   7305                 | jae                 7
            //   83c303               | add                 ebx, 3
            //   eb1c                 | jmp                 0x1e
            //   81fb00000100         | cmp                 ebx, 0x10000
            //   7305                 | jae                 7
            //   83c304               | add                 ebx, 4

        $sequence_13 = { 50 c685f8feffff00 e8???????? 6a3a 68???????? }
            // n = 5, score = 300
            //   50                   | push                eax
            //   c685f8feffff00       | mov                 byte ptr [ebp - 0x108], 0
            //   e8????????           |                     
            //   6a3a                 | push                0x3a
            //   68????????           |                     

        $sequence_14 = { 50 ff15???????? 8b4dfc 51 ff15???????? 8b55f8 6a00 }
            // n = 7, score = 300
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   6a00                 | push                0

        $sequence_15 = { 83c40c 68???????? 6a00 e8???????? 8bf0 }
            // n = 5, score = 300
            //   83c40c               | add                 esp, 0xc
            //   68????????           |                     
            //   6a00                 | push                0
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax

    condition:
        7 of them and filesize < 1064960
}