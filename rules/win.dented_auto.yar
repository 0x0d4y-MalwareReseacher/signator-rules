rule win_dented_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.dented."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dented"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6880a90300 ff15???????? ebee 55 8bec 8b450c }
            // n = 6, score = 400
            //   6880a90300           | push                0x3a980
            //   ff15????????         |                     
            //   ebee                 | jmp                 0xfffffff0
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_1 = { 8d85ecfbffff 57 50 e8???????? 83c430 }
            // n = 5, score = 400
            //   8d85ecfbffff         | lea                 eax, dword ptr [ebp - 0x414]
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30

        $sequence_2 = { 56 57 bf94000000 8d8560ffffff 57 6a00 }
            // n = 6, score = 400
            //   56                   | push                esi
            //   57                   | push                edi
            //   bf94000000           | mov                 edi, 0x94
            //   8d8560ffffff         | lea                 eax, dword ptr [ebp - 0xa0]
            //   57                   | push                edi
            //   6a00                 | push                0

        $sequence_3 = { a1???????? 33c5 8945f8 8bd1 53 }
            // n = 5, score = 400
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8bd1                 | mov                 edx, ecx
            //   53                   | push                ebx

        $sequence_4 = { 53 53 68???????? ff15???????? 6a01 }
            // n = 5, score = 400
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   68????????           |                     
            //   ff15????????         |                     
            //   6a01                 | push                1

        $sequence_5 = { 8d85ecfbffff 6810040000 53 50 8bf2 899de8fbffff e8???????? }
            // n = 7, score = 400
            //   8d85ecfbffff         | lea                 eax, dword ptr [ebp - 0x414]
            //   6810040000           | push                0x410
            //   53                   | push                ebx
            //   50                   | push                eax
            //   8bf2                 | mov                 esi, edx
            //   899de8fbffff         | mov                 dword ptr [ebp - 0x418], ebx
            //   e8????????           |                     

        $sequence_6 = { 897df4 e8???????? eb34 f6423c04 7520 }
            // n = 5, score = 400
            //   897df4               | mov                 dword ptr [ebp - 0xc], edi
            //   e8????????           |                     
            //   eb34                 | jmp                 0x36
            //   f6423c04             | test                byte ptr [edx + 0x3c], 4
            //   7520                 | jne                 0x22

        $sequence_7 = { e8???????? 8b4dfc 8bc3 5f 5e c703???????? 33cd }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8bc3                 | mov                 eax, ebx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c703????????         |                     
            //   33cd                 | xor                 ecx, ebp

        $sequence_8 = { 8b85f8f7ffff 8a8485fcfbffff 32c1 880416 8b8decf7ffff }
            // n = 5, score = 400
            //   8b85f8f7ffff         | mov                 eax, dword ptr [ebp - 0x808]
            //   8a8485fcfbffff       | mov                 al, byte ptr [ebp + eax*4 - 0x404]
            //   32c1                 | xor                 al, cl
            //   880416               | mov                 byte ptr [esi + edx], al
            //   8b8decf7ffff         | mov                 ecx, dword ptr [ebp - 0x814]

        $sequence_9 = { 48 0d00ffffff 40 8a0a 8985f8f7ffff 8bbdf8f7ffff 0fb6c1 }
            // n = 7, score = 400
            //   48                   | dec                 eax
            //   0d00ffffff           | or                  eax, 0xffffff00
            //   40                   | inc                 eax
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   8985f8f7ffff         | mov                 dword ptr [ebp - 0x808], eax
            //   8bbdf8f7ffff         | mov                 edi, dword ptr [ebp - 0x808]
            //   0fb6c1               | movzx               eax, cl

    condition:
        7 of them and filesize < 450560
}