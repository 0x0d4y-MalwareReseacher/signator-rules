rule win_dented_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.dented."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dented"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2bcb 8d4508 837d1c10 0f434508 50 51 68???????? }
            // n = 7, score = 400
            //   2bcb                 | sub                 ecx, ebx
            //   8d4508               | lea                 eax, dword ptr [ebp + 8]
            //   837d1c10             | cmp                 dword ptr [ebp + 0x1c], 0x10
            //   0f434508             | cmovae              eax, dword ptr [ebp + 8]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   68????????           |                     

        $sequence_1 = { 8d55ff a1???????? 52 885dff 8d4810 }
            // n = 5, score = 400
            //   8d55ff               | lea                 edx, dword ptr [ebp - 1]
            //   a1????????           |                     
            //   52                   | push                edx
            //   885dff               | mov                 byte ptr [ebp - 1], bl
            //   8d4810               | lea                 ecx, dword ptr [eax + 0x10]

        $sequence_2 = { 899de8fbffff e8???????? 68???????? bf08020000 8d85ecfbffff 57 }
            // n = 6, score = 400
            //   899de8fbffff         | mov                 dword ptr [ebp - 0x418], ebx
            //   e8????????           |                     
            //   68????????           |                     
            //   bf08020000           | mov                 edi, 0x208
            //   8d85ecfbffff         | lea                 eax, dword ptr [ebp - 0x414]
            //   57                   | push                edi

        $sequence_3 = { 8b8de4f7ffff 56 c6041e00 e8???????? 8b4dfc 8b85e4f7ffff 33cd }
            // n = 7, score = 400
            //   8b8de4f7ffff         | mov                 ecx, dword ptr [ebp - 0x81c]
            //   56                   | push                esi
            //   c6041e00             | mov                 byte ptr [esi + ebx], 0
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b85e4f7ffff         | mov                 eax, dword ptr [ebp - 0x81c]
            //   33cd                 | xor                 ecx, ebp

        $sequence_4 = { 8b85f8f7ffff 8a8485fcfbffff 32c1 880416 8b8decf7ffff }
            // n = 5, score = 400
            //   8b85f8f7ffff         | mov                 eax, dword ptr [ebp - 0x808]
            //   8a8485fcfbffff       | mov                 al, byte ptr [ebp + eax*4 - 0x404]
            //   32c1                 | xor                 al, cl
            //   880416               | mov                 byte ptr [esi + edx], al
            //   8b8decf7ffff         | mov                 ecx, dword ptr [ebp - 0x814]

        $sequence_5 = { 48 0d00ffffff 40 8a0a 8985f8f7ffff 8bbdf8f7ffff 0fb6c1 }
            // n = 7, score = 400
            //   48                   | dec                 eax
            //   0d00ffffff           | or                  eax, 0xffffff00
            //   40                   | inc                 eax
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   8985f8f7ffff         | mov                 dword ptr [ebp - 0x808], eax
            //   8bbdf8f7ffff         | mov                 edi, dword ptr [ebp - 0x808]
            //   0fb6c1               | movzx               eax, cl

        $sequence_6 = { ff501c eb03 ff5018 8d442434 50 8d4c2420 e8???????? }
            // n = 7, score = 400
            //   ff501c               | call                dword ptr [eax + 0x1c]
            //   eb03                 | jmp                 5
            //   ff5018               | call                dword ptr [eax + 0x18]
            //   8d442434             | lea                 eax, dword ptr [esp + 0x34]
            //   50                   | push                eax
            //   8d4c2420             | lea                 ecx, dword ptr [esp + 0x20]
            //   e8????????           |                     

        $sequence_7 = { 5e e8???????? 8be5 5d c3 56 8d7168 }
            // n = 7, score = 400
            //   5e                   | pop                 esi
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   56                   | push                esi
            //   8d7168               | lea                 esi, dword ptr [ecx + 0x68]

        $sequence_8 = { 57 ff15???????? 85c0 0f84fe000000 56 }
            // n = 5, score = 400
            //   57                   | push                edi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f84fe000000         | je                  0x104
            //   56                   | push                esi

        $sequence_9 = { 3819 7538 8b45ec 8b15???????? }
            // n = 4, score = 400
            //   3819                 | cmp                 byte ptr [ecx], bl
            //   7538                 | jne                 0x3a
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8b15????????         |                     

    condition:
        7 of them and filesize < 450560
}