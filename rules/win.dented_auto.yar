rule win_dented_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.dented."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dented"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8985f4f7ffff 8b8485fcfbffff 8984bdfcfbffff 8b85f4f7ffff 898c85fcfbffff 8b84bdfcfbffff }
            // n = 6, score = 400
            //   8985f4f7ffff         | mov                 dword ptr [ebp - 0x80c], eax
            //   8b8485fcfbffff       | mov                 eax, dword ptr [ebp + eax*4 - 0x404]
            //   8984bdfcfbffff       | mov                 dword ptr [ebp + edi*4 - 0x404], eax
            //   8b85f4f7ffff         | mov                 eax, dword ptr [ebp - 0x80c]
            //   898c85fcfbffff       | mov                 dword ptr [ebp + eax*4 - 0x404], ecx
            //   8b84bdfcfbffff       | mov                 eax, dword ptr [ebp + edi*4 - 0x404]

        $sequence_1 = { 2185f0f7ffff 33db 8985f4f7ffff 8d5101 8a01 41 }
            // n = 6, score = 400
            //   2185f0f7ffff         | and                 dword ptr [ebp - 0x810], eax
            //   33db                 | xor                 ebx, ebx
            //   8985f4f7ffff         | mov                 dword ptr [ebp - 0x80c], eax
            //   8d5101               | lea                 edx, [ecx + 1]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx

        $sequence_2 = { ff751c 8b742440 8b08 894d10 8b4004 83632000 }
            // n = 6, score = 400
            //   ff751c               | push                dword ptr [ebp + 0x1c]
            //   8b742440             | mov                 esi, dword ptr [esp + 0x40]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   894d10               | mov                 dword ptr [ebp + 0x10], ecx
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   83632000             | and                 dword ptr [ebx + 0x20], 0

        $sequence_3 = { 6a00 6a01 8d4de4 e8???????? 8b4dfc 8bc3 5f }
            // n = 7, score = 400
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   8d4de4               | lea                 ecx, [ebp - 0x1c]
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8bc3                 | mov                 eax, ebx
            //   5f                   | pop                 edi

        $sequence_4 = { 53 53 68???????? ff15???????? 6a01 }
            // n = 5, score = 400
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   68????????           |                     
            //   ff15????????         |                     
            //   6a01                 | push                1

        $sequence_5 = { 7cbe 8bcf 8d5101 8a01 }
            // n = 4, score = 400
            //   7cbe                 | jl                  0xffffffc0
            //   8bcf                 | mov                 ecx, edi
            //   8d5101               | lea                 edx, [ecx + 1]
            //   8a01                 | mov                 al, byte ptr [ecx]

        $sequence_6 = { eb34 f6423c04 7520 8b421c }
            // n = 4, score = 400
            //   eb34                 | jmp                 0x36
            //   f6423c04             | test                byte ptr [edx + 0x3c], 4
            //   7520                 | jne                 0x22
            //   8b421c               | mov                 eax, dword ptr [edx + 0x1c]

        $sequence_7 = { 8b7d08 33db 68???????? 53 53 }
            // n = 5, score = 400
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   33db                 | xor                 ebx, ebx
            //   68????????           |                     
            //   53                   | push                ebx
            //   53                   | push                ebx

        $sequence_8 = { 53 53 ff15???????? 8b35???????? 899dc8fdffff 899dd0fdffff 899dd4fdffff }
            // n = 7, score = 400
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8b35????????         |                     
            //   899dc8fdffff         | mov                 dword ptr [ebp - 0x238], ebx
            //   899dd0fdffff         | mov                 dword ptr [ebp - 0x230], ebx
            //   899dd4fdffff         | mov                 dword ptr [ebp - 0x22c], ebx

        $sequence_9 = { 8bf2 85f6 7fde 5b }
            // n = 4, score = 400
            //   8bf2                 | mov                 esi, edx
            //   85f6                 | test                esi, esi
            //   7fde                 | jg                  0xffffffe0
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 450560
}