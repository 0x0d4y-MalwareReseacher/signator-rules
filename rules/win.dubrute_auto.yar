rule win_dubrute_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.dubrute."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dubrute"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 57 33db 6aff 68???????? 895dfc ff15???????? }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx
            //   6aff                 | push                -1
            //   68????????           |                     
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   ff15????????         |                     

        $sequence_1 = { 8d4fff 3bf1 7322 8a06 84c0 740f 3cff }
            // n = 7, score = 100
            //   8d4fff               | lea                 ecx, [edi - 1]
            //   3bf1                 | cmp                 esi, ecx
            //   7322                 | jae                 0x24
            //   8a06                 | mov                 al, byte ptr [esi]
            //   84c0                 | test                al, al
            //   740f                 | je                  0x11
            //   3cff                 | cmp                 al, 0xff

        $sequence_2 = { 42 46 8801 8a45fd 884101 8a45fe 884102 }
            // n = 7, score = 100
            //   42                   | inc                 edx
            //   46                   | inc                 esi
            //   8801                 | mov                 byte ptr [ecx], al
            //   8a45fd               | mov                 al, byte ptr [ebp - 3]
            //   884101               | mov                 byte ptr [ecx + 1], al
            //   8a45fe               | mov                 al, byte ptr [ebp - 2]
            //   884102               | mov                 byte ptr [ecx + 2], al

        $sequence_3 = { c60008 ff06 8b06 802000 ff06 8b06 c60003 }
            // n = 7, score = 100
            //   c60008               | mov                 byte ptr [eax], 8
            //   ff06                 | inc                 dword ptr [esi]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   802000               | and                 byte ptr [eax], 0
            //   ff06                 | inc                 dword ptr [esi]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   c60003               | mov                 byte ptr [eax], 3

        $sequence_4 = { 8d848148040000 c745fc01000000 8945e8 8b4514 1bdb 83e308 85c0 }
            // n = 7, score = 100
            //   8d848148040000       | lea                 eax, [ecx + eax*4 + 0x448]
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   1bdb                 | sbb                 ebx, ebx
            //   83e308               | and                 ebx, 8
            //   85c0                 | test                eax, eax

        $sequence_5 = { ff771c ff7714 e8???????? 83c410 85c0 7420 ff36 }
            // n = 7, score = 100
            //   ff771c               | push                dword ptr [edi + 0x1c]
            //   ff7714               | push                dword ptr [edi + 0x14]
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   7420                 | je                  0x22
            //   ff36                 | push                dword ptr [esi]

        $sequence_6 = { 3bd8 7302 8bc3 8d4df8 51 50 ff7514 }
            // n = 7, score = 100
            //   3bd8                 | cmp                 ebx, eax
            //   7302                 | jae                 4
            //   8bc3                 | mov                 eax, ebx
            //   8d4df8               | lea                 ecx, [ebp - 8]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff7514               | push                dword ptr [ebp + 0x14]

        $sequence_7 = { 50 e8???????? 8b45f8 03c3 0106 8a4df4 8b06 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   03c3                 | add                 eax, ebx
            //   0106                 | add                 dword ptr [esi], eax
            //   8a4df4               | mov                 cl, byte ptr [ebp - 0xc]
            //   8b06                 | mov                 eax, dword ptr [esi]

        $sequence_8 = { e8???????? 59 50 8d4e40 ff75d8 ff15???????? 8b8ee0000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   50                   | push                eax
            //   8d4e40               | lea                 ecx, [esi + 0x40]
            //   ff75d8               | push                dword ptr [ebp - 0x28]
            //   ff15????????         |                     
            //   8b8ee0000000         | mov                 ecx, dword ptr [esi + 0xe0]

        $sequence_9 = { 8bf8 59 85ff 59 0f8ce3000000 6a10 ff7518 }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   59                   | pop                 ecx
            //   85ff                 | test                edi, edi
            //   59                   | pop                 ecx
            //   0f8ce3000000         | jl                  0xe9
            //   6a10                 | push                0x10
            //   ff7518               | push                dword ptr [ebp + 0x18]

    condition:
        7 of them and filesize < 598016
}