rule win_dubrute_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.dubrute."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dubrute"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 75f1 8b4508 8b4d10 3b4d0c 0f8c6effffff 8b7d14 037df4 }
            // n = 7, score = 100
            //   75f1                 | jne                 0xfffffff3
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   3b4d0c               | cmp                 ecx, dword ptr [ebp + 0xc]
            //   0f8c6effffff         | jl                  0xffffff74
            //   8b7d14               | mov                 edi, dword ptr [ebp + 0x14]
            //   037df4               | add                 edi, dword ptr [ebp - 0xc]

        $sequence_1 = { 49 83ff08 894d14 7e14 8d47ff c1e803 8bc8 }
            // n = 7, score = 100
            //   49                   | dec                 ecx
            //   83ff08               | cmp                 edi, 8
            //   894d14               | mov                 dword ptr [ebp + 0x14], ecx
            //   7e14                 | jle                 0x16
            //   8d47ff               | lea                 eax, dword ptr [edi - 1]
            //   c1e803               | shr                 eax, 3
            //   8bc8                 | mov                 ecx, eax

        $sequence_2 = { c6400126 c640029e c3 68eb030000 ff742410 ff742410 ff742410 }
            // n = 7, score = 100
            //   c6400126             | mov                 byte ptr [eax + 1], 0x26
            //   c640029e             | mov                 byte ptr [eax + 2], 0x9e
            //   c3                   | ret                 
            //   68eb030000           | push                0x3eb
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   ff742410             | push                dword ptr [esp + 0x10]

        $sequence_3 = { 56 8b750c 57 8b7d08 830602 }
            // n = 5, score = 100
            //   56                   | push                esi
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   830602               | add                 dword ptr [esi], 2

        $sequence_4 = { 6a10 59 3bc8 76f1 85c9 894d1c 0f8c12fcffff }
            // n = 7, score = 100
            //   6a10                 | push                0x10
            //   59                   | pop                 ecx
            //   3bc8                 | cmp                 ecx, eax
            //   76f1                 | jbe                 0xfffffff3
            //   85c9                 | test                ecx, ecx
            //   894d1c               | mov                 dword ptr [ebp + 0x1c], ecx
            //   0f8c12fcffff         | jl                  0xfffffc18

        $sequence_5 = { 83c410 8b460c 85c0 0f8430ffffff 394518 7303 8b4518 }
            // n = 7, score = 100
            //   83c410               | add                 esp, 0x10
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   85c0                 | test                eax, eax
            //   0f8430ffffff         | je                  0xffffff36
            //   394518               | cmp                 dword ptr [ebp + 0x18], eax
            //   7303                 | jae                 5
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]

        $sequence_6 = { c60001 ff06 8b06 8d4de0 6a20 8818 ff06 }
            // n = 7, score = 100
            //   c60001               | mov                 byte ptr [eax], 1
            //   ff06                 | inc                 dword ptr [esi]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8d4de0               | lea                 ecx, dword ptr [ebp - 0x20]
            //   6a20                 | push                0x20
            //   8818                 | mov                 byte ptr [eax], bl
            //   ff06                 | inc                 dword ptr [esi]

        $sequence_7 = { eb32 8a03 43 8845fc 8a03 43 8845fd }
            // n = 7, score = 100
            //   eb32                 | jmp                 0x34
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   43                   | inc                 ebx
            //   8845fc               | mov                 byte ptr [ebp - 4], al
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   43                   | inc                 ebx
            //   8845fd               | mov                 byte ptr [ebp - 3], al

        $sequence_8 = { ff36 ff7518 e8???????? 8b5d10 83c418 85c0 0f8c2effffff }
            // n = 7, score = 100
            //   ff36                 | push                dword ptr [esi]
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   e8????????           |                     
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   83c418               | add                 esp, 0x18
            //   85c0                 | test                eax, eax
            //   0f8c2effffff         | jl                  0xffffff34

        $sequence_9 = { c745d8f0000000 c745dc78000000 c745e0a3010000 c745e42b010000 ffd7 8b4e44 8d45d8 }
            // n = 7, score = 100
            //   c745d8f0000000       | mov                 dword ptr [ebp - 0x28], 0xf0
            //   c745dc78000000       | mov                 dword ptr [ebp - 0x24], 0x78
            //   c745e0a3010000       | mov                 dword ptr [ebp - 0x20], 0x1a3
            //   c745e42b010000       | mov                 dword ptr [ebp - 0x1c], 0x12b
            //   ffd7                 | call                edi
            //   8b4e44               | mov                 ecx, dword ptr [esi + 0x44]
            //   8d45d8               | lea                 eax, dword ptr [ebp - 0x28]

    condition:
        7 of them and filesize < 598016
}