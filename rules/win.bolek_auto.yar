rule win_bolek_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.bolek."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bolek"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb10 0fb603 50 ff15???????? 59 85c0 7405 }
            // n = 7, score = 600
            //   eb10                 | jmp                 0x12
            //   0fb603               | movzx               eax, byte ptr [ebx]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7405                 | je                  7

        $sequence_1 = { 0fa4cb08 99 c1e108 0bda 0bc8 0fb64631 0fa4cb08 }
            // n = 7, score = 600
            //   0fa4cb08             | shld                ebx, ecx, 8
            //   99                   | cdq                 
            //   c1e108               | shl                 ecx, 8
            //   0bda                 | or                  ebx, edx
            //   0bc8                 | or                  ecx, eax
            //   0fb64631             | movzx               eax, byte ptr [esi + 0x31]
            //   0fa4cb08             | shld                ebx, ecx, 8

        $sequence_2 = { 8bf0 c1e608 0fb601 03f0 8d442414 41 50 }
            // n = 7, score = 600
            //   8bf0                 | mov                 esi, eax
            //   c1e608               | shl                 esi, 8
            //   0fb601               | movzx               eax, byte ptr [ecx]
            //   03f0                 | add                 esi, eax
            //   8d442414             | lea                 eax, [esp + 0x14]
            //   41                   | inc                 ecx
            //   50                   | push                eax

        $sequence_3 = { c1e710 0bf8 0fb64301 99 81e7ffffff03 25ffff0300 0fa4c108 }
            // n = 7, score = 600
            //   c1e710               | shl                 edi, 0x10
            //   0bf8                 | or                  edi, eax
            //   0fb64301             | movzx               eax, byte ptr [ebx + 1]
            //   99                   | cdq                 
            //   81e7ffffff03         | and                 edi, 0x3ffffff
            //   25ffff0300           | and                 eax, 0x3ffff
            //   0fa4c108             | shld                ecx, eax, 8

        $sequence_4 = { 85c0 0f8440010000 ff74241c ffd3 ff742418 33ff 897c2420 }
            // n = 7, score = 600
            //   85c0                 | test                eax, eax
            //   0f8440010000         | je                  0x146
            //   ff74241c             | push                dword ptr [esp + 0x1c]
            //   ffd3                 | call                ebx
            //   ff742418             | push                dword ptr [esp + 0x18]
            //   33ff                 | xor                 edi, edi
            //   897c2420             | mov                 dword ptr [esp + 0x20], edi

        $sequence_5 = { 8bcf e8???????? 85c0 742d 8d95e87fffff 8bcb e8???????? }
            // n = 7, score = 600
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   742d                 | je                  0x2f
            //   8d95e87fffff         | lea                 edx, [ebp - 0x8018]
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     

        $sequence_6 = { ff7310 e8???????? 83c434 8d9578ffffff 8d8d50ffffff 6aff e8???????? }
            // n = 7, score = 600
            //   ff7310               | push                dword ptr [ebx + 0x10]
            //   e8????????           |                     
            //   83c434               | add                 esp, 0x34
            //   8d9578ffffff         | lea                 edx, [ebp - 0x88]
            //   8d8d50ffffff         | lea                 ecx, [ebp - 0xb0]
            //   6aff                 | push                -1
            //   e8????????           |                     

        $sequence_7 = { eb40 56 ff750c 8d45f4 50 68???????? ff7508 }
            // n = 7, score = 600
            //   eb40                 | jmp                 0x42
            //   56                   | push                esi
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   68????????           |                     
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_8 = { 894c2414 50 ff762c ff7628 e8???????? 83c410 85c0 }
            // n = 7, score = 600
            //   894c2414             | mov                 dword ptr [esp + 0x14], ecx
            //   50                   | push                eax
            //   ff762c               | push                dword ptr [esi + 0x2c]
            //   ff7628               | push                dword ptr [esi + 0x28]
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   85c0                 | test                eax, eax

        $sequence_9 = { eb07 83f91e 7709 8bcb 46 3bf7 72d2 }
            // n = 7, score = 600
            //   eb07                 | jmp                 9
            //   83f91e               | cmp                 ecx, 0x1e
            //   7709                 | ja                  0xb
            //   8bcb                 | mov                 ecx, ebx
            //   46                   | inc                 esi
            //   3bf7                 | cmp                 esi, edi
            //   72d2                 | jb                  0xffffffd4

    condition:
        7 of them and filesize < 892928
}