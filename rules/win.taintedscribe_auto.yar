rule win_taintedscribe_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.taintedscribe."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.taintedscribe"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c40c 894658 8bc7 5f 5e }
            // n = 5, score = 500
            //   83c40c               | add                 esp, 0xc
            //   894658               | mov                 dword ptr [esi + 0x58], eax
            //   8bc7                 | mov                 eax, edi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_1 = { 7427 8d85d8feffff 8d7801 8d642400 8a08 40 84c9 }
            // n = 7, score = 500
            //   7427                 | je                  0x29
            //   8d85d8feffff         | lea                 eax, [ebp - 0x128]
            //   8d7801               | lea                 edi, [eax + 1]
            //   8d642400             | lea                 esp, [esp]
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl

        $sequence_2 = { 53 56 8bf1 8b4e64 57 85c9 }
            // n = 6, score = 500
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8b4e64               | mov                 ecx, dword ptr [esi + 0x64]
            //   57                   | push                edi
            //   85c9                 | test                ecx, ecx

        $sequence_3 = { 6689857efbffff 3bc6 750d 8b4350 898588fbffff 3bc6 }
            // n = 6, score = 500
            //   6689857efbffff       | mov                 word ptr [ebp - 0x482], ax
            //   3bc6                 | cmp                 eax, esi
            //   750d                 | jne                 0xf
            //   8b4350               | mov                 eax, dword ptr [ebx + 0x50]
            //   898588fbffff         | mov                 dword ptr [ebp - 0x478], eax
            //   3bc6                 | cmp                 eax, esi

        $sequence_4 = { 56 57 33db 68a8af0600 8bf9 895dfc }
            // n = 6, score = 500
            //   56                   | push                esi
            //   57                   | push                edi
            //   33db                 | xor                 ebx, ebx
            //   68a8af0600           | push                0x6afa8
            //   8bf9                 | mov                 edi, ecx
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx

        $sequence_5 = { 83c408 894e3c 894e44 895648 }
            // n = 4, score = 500
            //   83c408               | add                 esp, 8
            //   894e3c               | mov                 dword ptr [esi + 0x3c], ecx
            //   894e44               | mov                 dword ptr [esi + 0x44], ecx
            //   895648               | mov                 dword ptr [esi + 0x48], edx

        $sequence_6 = { 8bf8 f3a5 8b4b28 83c414 }
            // n = 4, score = 500
            //   8bf8                 | mov                 edi, eax
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8b4b28               | mov                 ecx, dword ptr [ebx + 0x28]
            //   83c414               | add                 esp, 0x14

        $sequence_7 = { 8bb57cffffff 85f6 7421 8d55a4 }
            // n = 4, score = 500
            //   8bb57cffffff         | mov                 esi, dword ptr [ebp - 0x84]
            //   85f6                 | test                esi, esi
            //   7421                 | je                  0x23
            //   8d55a4               | lea                 edx, [ebp - 0x5c]

        $sequence_8 = { 83c304 53 51 56 e8???????? 56 }
            // n = 6, score = 500
            //   83c304               | add                 ebx, 4
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   56                   | push                esi
            //   e8????????           |                     
            //   56                   | push                esi

        $sequence_9 = { c20800 c7460c00000001 5f 5e }
            // n = 4, score = 500
            //   c20800               | ret                 8
            //   c7460c00000001       | mov                 dword ptr [esi + 0xc], 0x1000000
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

    condition:
        7 of them and filesize < 524288
}