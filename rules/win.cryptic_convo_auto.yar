rule win_cryptic_convo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.cryptic_convo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cryptic_convo"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5e c3 55 8bec 81ec1c020000 }
            // n = 5, score = 100
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec1c020000         | sub                 esp, 0x21c

        $sequence_1 = { 57 68???????? 6802000080 ff15???????? ff742410 89442418 }
            // n = 6, score = 100
            //   57                   | push                edi
            //   68????????           |                     
            //   6802000080           | push                0x80000002
            //   ff15????????         |                     
            //   ff742410             | push                dword ptr [esp + 0x10]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax

        $sequence_2 = { 7445 399e8c000000 743d 6a40 6800300000 ff7510 53 }
            // n = 7, score = 100
            //   7445                 | je                  0x47
            //   399e8c000000         | cmp                 dword ptr [esi + 0x8c], ebx
            //   743d                 | je                  0x3f
            //   6a40                 | push                0x40
            //   6800300000           | push                0x3000
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   53                   | push                ebx

        $sequence_3 = { 8b7da8 59 8d758c f3a5 8b7db0 6a38 }
            // n = 6, score = 100
            //   8b7da8               | mov                 edi, dword ptr [ebp - 0x58]
            //   59                   | pop                 ecx
            //   8d758c               | lea                 esi, [ebp - 0x74]
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8b7db0               | mov                 edi, dword ptr [ebp - 0x50]
            //   6a38                 | push                0x38

        $sequence_4 = { 83c40c 33c0 8a88b0664000 888c05dc010000 40 84c9 75ee }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   33c0                 | xor                 eax, eax
            //   8a88b0664000         | mov                 cl, byte ptr [eax + 0x4066b0]
            //   888c05dc010000       | mov                 byte ptr [ebp + eax + 0x1dc], cl
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl
            //   75ee                 | jne                 0xfffffff0

        $sequence_5 = { a1???????? 33c5 8945fc 8b4508 8985d0fcffff }
            // n = 5, score = 100
            //   a1????????           |                     
            //   33c5                 | xor                 eax, ebp
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8985d0fcffff         | mov                 dword ptr [ebp - 0x330], eax

        $sequence_6 = { f3a4 8dbddcfaffff 4f 8a4701 47 84c0 75f8 }
            // n = 7, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8dbddcfaffff         | lea                 edi, [ebp - 0x524]
            //   4f                   | dec                 edi
            //   8a4701               | mov                 al, byte ptr [edi + 1]
            //   47                   | inc                 edi
            //   84c0                 | test                al, al
            //   75f8                 | jne                 0xfffffffa

        $sequence_7 = { 33ff 57 ff15???????? 8bd8 8d4590 }
            // n = 5, score = 100
            //   33ff                 | xor                 edi, edi
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   8d4590               | lea                 eax, [ebp - 0x70]

        $sequence_8 = { 7515 ff75e4 ffd6 c605????????00 c605????????01 eb07 }
            // n = 6, score = 100
            //   7515                 | jne                 0x17
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   ffd6                 | call                esi
            //   c605????????00       |                     
            //   c605????????01       |                     
            //   eb07                 | jmp                 9

        $sequence_9 = { a5 33d2 a4 33c0 }
            // n = 4, score = 100
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   33d2                 | xor                 edx, edx
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 97280
}