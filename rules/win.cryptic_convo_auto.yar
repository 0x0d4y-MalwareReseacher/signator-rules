rule win_cryptic_convo_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.cryptic_convo."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cryptic_convo"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4588 8b08 85f6 750a 8b15???????? }
            // n = 5, score = 100
            //   8b4588               | mov                 eax, dword ptr [ebp - 0x78]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   85f6                 | test                esi, esi
            //   750a                 | jne                 0xc
            //   8b15????????         |                     

        $sequence_1 = { 53 8d4580 50 52 52 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   8d4580               | lea                 eax, [ebp - 0x80]
            //   50                   | push                eax
            //   52                   | push                edx
            //   52                   | push                edx

        $sequence_2 = { 8d85dcfaffff a5 50 8d85ecfeffff 50 a4 ff15???????? }
            // n = 7, score = 100
            //   8d85dcfaffff         | lea                 eax, [ebp - 0x524]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   50                   | push                eax
            //   8d85ecfeffff         | lea                 eax, [ebp - 0x114]
            //   50                   | push                eax
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   ff15????????         |                     

        $sequence_3 = { 50 ff15???????? 8dbd9c030000 83c410 4f }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8dbd9c030000         | lea                 edi, [ebp + 0x39c]
            //   83c410               | add                 esp, 0x10
            //   4f                   | dec                 edi

        $sequence_4 = { 59 ffd6 5e c20400 0fb7442404 ff742408 50 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   ffd6                 | call                esi
            //   5e                   | pop                 esi
            //   c20400               | ret                 4
            //   0fb7442404           | movzx               eax, word ptr [esp + 4]
            //   ff742408             | push                dword ptr [esp + 8]
            //   50                   | push                eax

        $sequence_5 = { 8bd8 8d85f8feffff 50 6a66 57 }
            // n = 5, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   8d85f8feffff         | lea                 eax, [ebp - 0x108]
            //   50                   | push                eax
            //   6a66                 | push                0x66
            //   57                   | push                edi

        $sequence_6 = { a4 8dbd70ffffff 59 4f }
            // n = 4, score = 100
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   8dbd70ffffff         | lea                 edi, [ebp - 0x90]
            //   59                   | pop                 ecx
            //   4f                   | dec                 edi

        $sequence_7 = { c640fe6e c640ff6b 6808020000 8d458c 50 6aff }
            // n = 6, score = 100
            //   c640fe6e             | mov                 byte ptr [eax - 2], 0x6e
            //   c640ff6b             | mov                 byte ptr [eax - 1], 0x6b
            //   6808020000           | push                0x208
            //   8d458c               | lea                 eax, [ebp - 0x74]
            //   50                   | push                eax
            //   6aff                 | push                -1

        $sequence_8 = { 50 e8???????? be???????? 8d7dc8 a5 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   be????????           |                     
            //   8d7dc8               | lea                 edi, [ebp - 0x38]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]

        $sequence_9 = { 8d84059c030000 c640fd6c c640fe6e c640ff6b 6808020000 }
            // n = 5, score = 100
            //   8d84059c030000       | lea                 eax, [ebp + eax + 0x39c]
            //   c640fd6c             | mov                 byte ptr [eax - 3], 0x6c
            //   c640fe6e             | mov                 byte ptr [eax - 2], 0x6e
            //   c640ff6b             | mov                 byte ptr [eax - 1], 0x6b
            //   6808020000           | push                0x208

    condition:
        7 of them and filesize < 97280
}