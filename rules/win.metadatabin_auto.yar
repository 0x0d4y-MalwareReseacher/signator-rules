rule win_metadatabin_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.metadatabin."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.metadatabin"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b95ecfeffff 8b85e8feffff 85d2 0f8590000000 8b95fcfeffff 85d2 899560feffff }
            // n = 7, score = 100
            //   8b95ecfeffff         | mov                 edx, dword ptr [ebp - 0x114]
            //   8b85e8feffff         | mov                 eax, dword ptr [ebp - 0x118]
            //   85d2                 | test                edx, edx
            //   0f8590000000         | jne                 0x96
            //   8b95fcfeffff         | mov                 edx, dword ptr [ebp - 0x104]
            //   85d2                 | test                edx, edx
            //   899560feffff         | mov                 dword ptr [ebp - 0x1a0], edx

        $sequence_1 = { e8???????? 8b742408 8b442410 66c704460000 40 89442410 89470c }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b742408             | mov                 esi, dword ptr [esp + 8]
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   66c704460000         | mov                 word ptr [esi + eax*2], 0
            //   40                   | inc                 eax
            //   89442410             | mov                 dword ptr [esp + 0x10], eax
            //   89470c               | mov                 dword ptr [edi + 0xc], eax

        $sequence_2 = { b001 7527 8b4df0 f60104 8b4118 8b491c 8b490c }
            // n = 7, score = 100
            //   b001                 | mov                 al, 1
            //   7527                 | jne                 0x29
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   f60104               | test                byte ptr [ecx], 4
            //   8b4118               | mov                 eax, dword ptr [ecx + 0x18]
            //   8b491c               | mov                 ecx, dword ptr [ecx + 0x1c]
            //   8b490c               | mov                 ecx, dword ptr [ecx + 0xc]

        $sequence_3 = { f7e1 898424a4000000 8d04ff 8d0447 01d0 89842494000000 8b4620 }
            // n = 7, score = 100
            //   f7e1                 | mul                 ecx
            //   898424a4000000       | mov                 dword ptr [esp + 0xa4], eax
            //   8d04ff               | lea                 eax, [edi + edi*8]
            //   8d0447               | lea                 eax, [edi + eax*2]
            //   01d0                 | add                 eax, edx
            //   89842494000000       | mov                 dword ptr [esp + 0x94], eax
            //   8b4620               | mov                 eax, dword ptr [esi + 0x20]

        $sequence_4 = { e8???????? 89f0 89fa 83c414 5e 5f 5b }
            // n = 7, score = 100
            //   e8????????           |                     
            //   89f0                 | mov                 eax, esi
            //   89fa                 | mov                 edx, edi
            //   83c414               | add                 esp, 0x14
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx

        $sequence_5 = { 8b8c2480020000 8984247c020000 0fb6c3 11c2 8994243c020000 89c8 f7e6 }
            // n = 7, score = 100
            //   8b8c2480020000       | mov                 ecx, dword ptr [esp + 0x280]
            //   8984247c020000       | mov                 dword ptr [esp + 0x27c], eax
            //   0fb6c3               | movzx               eax, bl
            //   11c2                 | adc                 edx, eax
            //   8994243c020000       | mov                 dword ptr [esp + 0x23c], edx
            //   89c8                 | mov                 eax, ecx
            //   f7e6                 | mul                 esi

        $sequence_6 = { 77dc c1e106 eb24 31ff 89da c1e006 89f3 }
            // n = 7, score = 100
            //   77dc                 | ja                  0xffffffde
            //   c1e106               | shl                 ecx, 6
            //   eb24                 | jmp                 0x26
            //   31ff                 | xor                 edi, edi
            //   89da                 | mov                 edx, ebx
            //   c1e006               | shl                 eax, 6
            //   89f3                 | mov                 ebx, esi

        $sequence_7 = { ff5104 83c404 ebd3 b9???????? ba1c000000 68???????? e8???????? }
            // n = 7, score = 100
            //   ff5104               | call                dword ptr [ecx + 4]
            //   83c404               | add                 esp, 4
            //   ebd3                 | jmp                 0xffffffd5
            //   b9????????           |                     
            //   ba1c000000           | mov                 edx, 0x1c
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_8 = { 89c7 0fb6842488000000 01f7 11c2 8b44243c 03442428 134c2454 }
            // n = 7, score = 100
            //   89c7                 | mov                 edi, eax
            //   0fb6842488000000     | movzx               eax, byte ptr [esp + 0x88]
            //   01f7                 | add                 edi, esi
            //   11c2                 | adc                 edx, eax
            //   8b44243c             | mov                 eax, dword ptr [esp + 0x3c]
            //   03442428             | add                 eax, dword ptr [esp + 0x28]
            //   134c2454             | adc                 ecx, dword ptr [esp + 0x54]

        $sequence_9 = { 8b4de0 83fe0b 0f92c0 80f101 84c8 0f8433010000 31db }
            // n = 7, score = 100
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   83fe0b               | cmp                 esi, 0xb
            //   0f92c0               | setb                al
            //   80f101               | xor                 cl, 1
            //   84c8                 | test                al, cl
            //   0f8433010000         | je                  0x139
            //   31db                 | xor                 ebx, ebx

    condition:
        7 of them and filesize < 1263616
}