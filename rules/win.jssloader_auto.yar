rule win_jssloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.jssloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jssloader"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 e8???????? 8bf8 83c40c 85ff 7405 2b7dd0 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   83c40c               | add                 esp, 0xc
            //   85ff                 | test                edi, edi
            //   7405                 | je                  7
            //   2b7dd0               | sub                 edi, dword ptr [ebp - 0x30]

        $sequence_1 = { 50 ff15???????? 6a00 ff15???????? 6804010000 8d8decfeffff 51 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6804010000           | push                0x104
            //   8d8decfeffff         | lea                 ecx, [ebp - 0x114]
            //   51                   | push                ecx

        $sequence_2 = { 8bc8 e8???????? 80bd68ffffff00 7416 ffb564ffffff 8b35???????? ffd6 }
            // n = 7, score = 200
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   80bd68ffffff00       | cmp                 byte ptr [ebp - 0x98], 0
            //   7416                 | je                  0x18
            //   ffb564ffffff         | push                dword ptr [ebp - 0x9c]
            //   8b35????????         |                     
            //   ffd6                 | call                esi

        $sequence_3 = { 8b4508 b900010000 663bc1 7320 0fb6c8 f6044dea2c430001 740e }
            // n = 7, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   b900010000           | mov                 ecx, 0x100
            //   663bc1               | cmp                 ax, cx
            //   7320                 | jae                 0x22
            //   0fb6c8               | movzx               ecx, al
            //   f6044dea2c430001     | test                byte ptr [ecx*2 + 0x432cea], 1
            //   740e                 | je                  0x10

        $sequence_4 = { 754c 56 e8???????? ffb524ffffff e8???????? 8bf0 }
            // n = 6, score = 200
            //   754c                 | jne                 0x4e
            //   56                   | push                esi
            //   e8????????           |                     
            //   ffb524ffffff         | push                dword ptr [ebp - 0xdc]
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_5 = { 8d8d9cfeffff 6a04 68???????? c785acfeffff00000000 c785b0feffff0f000000 c6859cfeffff00 }
            // n = 6, score = 200
            //   8d8d9cfeffff         | lea                 ecx, [ebp - 0x164]
            //   6a04                 | push                4
            //   68????????           |                     
            //   c785acfeffff00000000     | mov    dword ptr [ebp - 0x154], 0
            //   c785b0feffff0f000000     | mov    dword ptr [ebp - 0x150], 0xf
            //   c6859cfeffff00       | mov                 byte ptr [ebp - 0x164], 0

        $sequence_6 = { c745ec0f000000 c645d800 c645fc04 807d8c00 7539 8b55a0 85d2 }
            // n = 7, score = 200
            //   c745ec0f000000       | mov                 dword ptr [ebp - 0x14], 0xf
            //   c645d800             | mov                 byte ptr [ebp - 0x28], 0
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   807d8c00             | cmp                 byte ptr [ebp - 0x74], 0
            //   7539                 | jne                 0x3b
            //   8b55a0               | mov                 edx, dword ptr [ebp - 0x60]
            //   85d2                 | test                edx, edx

        $sequence_7 = { 50 8d45f4 64a300000000 8b450c 8b7508 8975bc c745d000000000 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8975bc               | mov                 dword ptr [ebp - 0x44], esi
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0

        $sequence_8 = { 394138 0f94c0 8d048502000000 0b410c 50 e8???????? 6a09 }
            // n = 7, score = 200
            //   394138               | cmp                 dword ptr [ecx + 0x38], eax
            //   0f94c0               | sete                al
            //   8d048502000000       | lea                 eax, [eax*4 + 2]
            //   0b410c               | or                  eax, dword ptr [ecx + 0xc]
            //   50                   | push                eax
            //   e8????????           |                     
            //   6a09                 | push                9

        $sequence_9 = { 3bc8 7725 837db010 8d040e 8945ac 8d459c 0f43459c }
            // n = 7, score = 200
            //   3bc8                 | cmp                 ecx, eax
            //   7725                 | ja                  0x27
            //   837db010             | cmp                 dword ptr [ebp - 0x50], 0x10
            //   8d040e               | lea                 eax, [esi + ecx]
            //   8945ac               | mov                 dword ptr [ebp - 0x54], eax
            //   8d459c               | lea                 eax, [ebp - 0x64]
            //   0f43459c             | cmovae              eax, dword ptr [ebp - 0x64]

    condition:
        7 of them and filesize < 581632
}