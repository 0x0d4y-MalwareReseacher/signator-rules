rule win_jssloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.jssloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jssloader"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f7e9 d1fa 8bc2 c1e81f 03c2 0f84cb010000 }
            // n = 6, score = 200
            //   f7e9                 | imul                ecx
            //   d1fa                 | sar                 edx, 1
            //   8bc2                 | mov                 eax, edx
            //   c1e81f               | shr                 eax, 0x1f
            //   03c2                 | add                 eax, edx
            //   0f84cb010000         | je                  0x1d1

        $sequence_1 = { 660fd68598fbffff 89b5a0fbffff 89bd98fbffff 89bd9cfbffff 89bda0fbffff 8b9d84fbffff }
            // n = 6, score = 200
            //   660fd68598fbffff     | movq                qword ptr [ebp - 0x468], xmm0
            //   89b5a0fbffff         | mov                 dword ptr [ebp - 0x460], esi
            //   89bd98fbffff         | mov                 dword ptr [ebp - 0x468], edi
            //   89bd9cfbffff         | mov                 dword ptr [ebp - 0x464], edi
            //   89bda0fbffff         | mov                 dword ptr [ebp - 0x460], edi
            //   8b9d84fbffff         | mov                 ebx, dword ptr [ebp - 0x47c]

        $sequence_2 = { 8d4304 8d5804 c700???????? 89580c 8d4818 c6404800 8d7008 }
            // n = 7, score = 200
            //   8d4304               | lea                 eax, [ebx + 4]
            //   8d5804               | lea                 ebx, [eax + 4]
            //   c700????????         |                     
            //   89580c               | mov                 dword ptr [eax + 0xc], ebx
            //   8d4818               | lea                 ecx, [eax + 0x18]
            //   c6404800             | mov                 byte ptr [eax + 0x48], 0
            //   8d7008               | lea                 esi, [eax + 8]

        $sequence_3 = { 8b45e0 8d4e0c 6a06 8d90f4074400 }
            // n = 4, score = 200
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8d4e0c               | lea                 ecx, [esi + 0xc]
            //   6a06                 | push                6
            //   8d90f4074400         | lea                 edx, [eax + 0x4407f4]

        $sequence_4 = { ff5008 e8???????? 6a00 6810270000 }
            // n = 4, score = 200
            //   ff5008               | call                dword ptr [eax + 8]
            //   e8????????           |                     
            //   6a00                 | push                0
            //   6810270000           | push                0x2710

        $sequence_5 = { 8d4dd8 e8???????? 8b95ccfeffff 83fa10 722f 8b8db8feffff 42 }
            // n = 7, score = 200
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   8b95ccfeffff         | mov                 edx, dword ptr [ebp - 0x134]
            //   83fa10               | cmp                 edx, 0x10
            //   722f                 | jb                  0x31
            //   8b8db8feffff         | mov                 ecx, dword ptr [ebp - 0x148]
            //   42                   | inc                 edx

        $sequence_6 = { 83f804 751d 50 e8???????? 83c404 8945fc }
            // n = 6, score = 200
            //   83f804               | cmp                 eax, 4
            //   751d                 | jne                 0x1f
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_7 = { 8b85f8feffff 8b4004 c78405f8feffffa8be4300 8b85f8feffff 8b4804 8d4198 89840df4feffff }
            // n = 7, score = 200
            //   8b85f8feffff         | mov                 eax, dword ptr [ebp - 0x108]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   c78405f8feffffa8be4300     | mov    dword ptr [ebp + eax - 0x108], 0x43bea8
            //   8b85f8feffff         | mov                 eax, dword ptr [ebp - 0x108]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8d4198               | lea                 eax, [ecx - 0x68]
            //   89840df4feffff       | mov                 dword ptr [ebp + ecx - 0x10c], eax

        $sequence_8 = { 83e801 0f85b1000000 8b4508 dd00 ebc2 c745e48c404300 eb19 }
            // n = 7, score = 200
            //   83e801               | sub                 eax, 1
            //   0f85b1000000         | jne                 0xb7
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   dd00                 | fld                 qword ptr [eax]
            //   ebc2                 | jmp                 0xffffffc4
            //   c745e48c404300       | mov                 dword ptr [ebp - 0x1c], 0x43408c
            //   eb19                 | jmp                 0x1b

        $sequence_9 = { 8b4508 33d2 8b7514 bf0f000000 8945b8 8975bc 8955e0 }
            // n = 7, score = 200
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33d2                 | xor                 edx, edx
            //   8b7514               | mov                 esi, dword ptr [ebp + 0x14]
            //   bf0f000000           | mov                 edi, 0xf
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   8975bc               | mov                 dword ptr [ebp - 0x44], esi
            //   8955e0               | mov                 dword ptr [ebp - 0x20], edx

    condition:
        7 of them and filesize < 581632
}