rule win_stegoloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.stegoloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stegoloader"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85f6 7530 83f802 7526 8d4c2410 }
            // n = 5, score = 200
            //   85f6                 | test                esi, esi
            //   7530                 | jne                 0x32
            //   83f802               | cmp                 eax, 2
            //   7526                 | jne                 0x28
            //   8d4c2410             | lea                 ecx, dword ptr [esp + 0x10]

        $sequence_1 = { c78524ffffffc12e5976 c78528ffffff571e5e01 c7852cffffffc41a89a2 c78530ffffff7e4b803b c78534ffffff66a72a70 c78538ffffff052d48a7 }
            // n = 6, score = 200
            //   c78524ffffffc12e5976     | mov    dword ptr [ebp - 0xdc], 0x76592ec1
            //   c78528ffffff571e5e01     | mov    dword ptr [ebp - 0xd8], 0x15e1e57
            //   c7852cffffffc41a89a2     | mov    dword ptr [ebp - 0xd4], 0xa2891ac4
            //   c78530ffffff7e4b803b     | mov    dword ptr [ebp - 0xd0], 0x3b804b7e
            //   c78534ffffff66a72a70     | mov    dword ptr [ebp - 0xcc], 0x702aa766
            //   c78538ffffff052d48a7     | mov    dword ptr [ebp - 0xc8], 0xa7482d05

        $sequence_2 = { 40 50 8b45f8 8b4008 ff7004 e8???????? 83c40c }
            // n = 7, score = 200
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b4008               | mov                 eax, dword ptr [eax + 8]
            //   ff7004               | push                dword ptr [eax + 4]
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_3 = { 8b7d0c fe45ff 8d0c00 8a0438 88840df0feffff 0fb645ff }
            // n = 6, score = 200
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   fe45ff               | inc                 byte ptr [ebp - 1]
            //   8d0c00               | lea                 ecx, dword ptr [eax + eax]
            //   8a0438               | mov                 al, byte ptr [eax + edi]
            //   88840df0feffff       | mov                 byte ptr [ebp + ecx - 0x110], al
            //   0fb645ff             | movzx               eax, byte ptr [ebp - 1]

        $sequence_4 = { 59 750d ff7508 e8???????? 84c0 }
            // n = 5, score = 200
            //   59                   | pop                 ecx
            //   750d                 | jne                 0xf
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   84c0                 | test                al, al

        $sequence_5 = { 7626 33c0 57 8b7d0c fe45ff }
            // n = 5, score = 200
            //   7626                 | jbe                 0x28
            //   33c0                 | xor                 eax, eax
            //   57                   | push                edi
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   fe45ff               | inc                 byte ptr [ebp - 1]

        $sequence_6 = { 394dfc 753c 394e18 894df8 7657 8b5e20 }
            // n = 6, score = 200
            //   394dfc               | cmp                 dword ptr [ebp - 4], ecx
            //   753c                 | jne                 0x3e
            //   394e18               | cmp                 dword ptr [esi + 0x18], ecx
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   7657                 | jbe                 0x59
            //   8b5e20               | mov                 ebx, dword ptr [esi + 0x20]

        $sequence_7 = { 8b4604 0fb600 83e810 0f84fc000000 83e810 0f8485000000 48 }
            // n = 7, score = 200
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   0fb600               | movzx               eax, byte ptr [eax]
            //   83e810               | sub                 eax, 0x10
            //   0f84fc000000         | je                  0x102
            //   83e810               | sub                 eax, 0x10
            //   0f8485000000         | je                  0x8b
            //   48                   | dec                 eax

        $sequence_8 = { 55 8bec 81ec60040000 830d????????ff 6804010000 }
            // n = 5, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec60040000         | sub                 esp, 0x460
            //   830d????????ff       |                     
            //   6804010000           | push                0x104

        $sequence_9 = { 33d2 f77610 8b7d08 33d2 c645ff00 8bc8 }
            // n = 6, score = 200
            //   33d2                 | xor                 edx, edx
            //   f77610               | div                 dword ptr [esi + 0x10]
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   33d2                 | xor                 edx, edx
            //   c645ff00             | mov                 byte ptr [ebp - 1], 0
            //   8bc8                 | mov                 ecx, eax

        $sequence_10 = { 0fb7c0 8d0481 8b0438 03c7 }
            // n = 4, score = 200
            //   0fb7c0               | movzx               eax, ax
            //   8d0481               | lea                 eax, dword ptr [ecx + eax*4]
            //   8b0438               | mov                 eax, dword ptr [eax + edi]
            //   03c7                 | add                 eax, edi

        $sequence_11 = { 8b043e 6800300000 8945f8 8d45f8 50 6a00 8d45fc }
            // n = 7, score = 200
            //   8b043e               | mov                 eax, dword ptr [esi + edi]
            //   6800300000           | push                0x3000
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   8d45fc               | lea                 eax, dword ptr [ebp - 4]

        $sequence_12 = { 33ff 803e00 7407 47 803c3700 }
            // n = 5, score = 200
            //   33ff                 | xor                 edi, edi
            //   803e00               | cmp                 byte ptr [esi], 0
            //   7407                 | je                  9
            //   47                   | inc                 edi
            //   803c3700             | cmp                 byte ptr [edi + esi], 0

        $sequence_13 = { ff442414 e9???????? 8b442410 0fb608 }
            // n = 4, score = 200
            //   ff442414             | inc                 dword ptr [esp + 0x14]
            //   e9????????           |                     
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   0fb608               | movzx               ecx, byte ptr [eax]

        $sequence_14 = { c645b820 c645b953 c645ba59 c645bb53 c645bc54 c645bd45 c645be4d }
            // n = 7, score = 200
            //   c645b820             | mov                 byte ptr [ebp - 0x48], 0x20
            //   c645b953             | mov                 byte ptr [ebp - 0x47], 0x53
            //   c645ba59             | mov                 byte ptr [ebp - 0x46], 0x59
            //   c645bb53             | mov                 byte ptr [ebp - 0x45], 0x53
            //   c645bc54             | mov                 byte ptr [ebp - 0x44], 0x54
            //   c645bd45             | mov                 byte ptr [ebp - 0x43], 0x45
            //   c645be4d             | mov                 byte ptr [ebp - 0x42], 0x4d

        $sequence_15 = { 50 8bce e8???????? 84c0 7423 ff750c 8bce }
            // n = 7, score = 200
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7423                 | je                  0x25
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8bce                 | mov                 ecx, esi

    condition:
        7 of them and filesize < 802816
}