rule win_rektloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.rektloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rektloader"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf0 8b4df8 e8???????? 8b10 8932 52 8bcd }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   e8????????           |                     
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   8932                 | mov                 dword ptr [edx], esi
            //   52                   | push                edx
            //   8bcd                 | mov                 ecx, ebp

        $sequence_1 = { 68???????? 6a02 8b4510 50 8b4d0c 8b11 52 }
            // n = 7, score = 100
            //   68????????           |                     
            //   6a02                 | push                2
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   50                   | push                eax
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   52                   | push                edx

        $sequence_2 = { 85ff 7447 85db 7405 33c0 668903 }
            // n = 6, score = 100
            //   85ff                 | test                edi, edi
            //   7447                 | je                  0x49
            //   85db                 | test                ebx, ebx
            //   7405                 | je                  7
            //   33c0                 | xor                 eax, eax
            //   668903               | mov                 word ptr [ebx], ax

        $sequence_3 = { 7609 c745c001000000 eb07 c745c000000000 8a4dc0 884dcb c645fc00 }
            // n = 7, score = 100
            //   7609                 | jbe                 0xb
            //   c745c001000000       | mov                 dword ptr [ebp - 0x40], 1
            //   eb07                 | jmp                 9
            //   c745c000000000       | mov                 dword ptr [ebp - 0x40], 0
            //   8a4dc0               | mov                 cl, byte ptr [ebp - 0x40]
            //   884dcb               | mov                 byte ptr [ebp - 0x35], cl
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0

        $sequence_4 = { 83e102 7406 c645d601 eb04 c645d600 8a55d6 8855d4 }
            // n = 7, score = 100
            //   83e102               | and                 ecx, 2
            //   7406                 | je                  8
            //   c645d601             | mov                 byte ptr [ebp - 0x2a], 1
            //   eb04                 | jmp                 6
            //   c645d600             | mov                 byte ptr [ebp - 0x2a], 0
            //   8a55d6               | mov                 dl, byte ptr [ebp - 0x2a]
            //   8855d4               | mov                 byte ptr [ebp - 0x2c], dl

        $sequence_5 = { 8b4508 8d3442 8b4dfc e8???????? 8930 b001 5e }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8d3442               | lea                 esi, [edx + eax*2]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   e8????????           |                     
            //   8930                 | mov                 dword ptr [eax], esi
            //   b001                 | mov                 al, 1
            //   5e                   | pop                 esi

        $sequence_6 = { 3bf4 e8???????? 8b4df4 64890d00000000 59 5e 83c41c }
            // n = 7, score = 100
            //   3bf4                 | cmp                 esi, esp
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx
            //   5e                   | pop                 esi
            //   83c41c               | add                 esp, 0x1c

        $sequence_7 = { 8a91f8f45200 8810 8b8574ffffff 83c001 898574ffffff 8b8d6cffffff }
            // n = 6, score = 100
            //   8a91f8f45200         | mov                 dl, byte ptr [ecx + 0x52f4f8]
            //   8810                 | mov                 byte ptr [eax], dl
            //   8b8574ffffff         | mov                 eax, dword ptr [ebp - 0x8c]
            //   83c001               | add                 eax, 1
            //   898574ffffff         | mov                 dword ptr [ebp - 0x8c], eax
            //   8b8d6cffffff         | mov                 ecx, dword ptr [ebp - 0x94]

        $sequence_8 = { c645fc0d 8d8db4fdffff e8???????? c645fc05 8d8da8fdffff e8???????? 6a00 }
            // n = 7, score = 100
            //   c645fc0d             | mov                 byte ptr [ebp - 4], 0xd
            //   8d8db4fdffff         | lea                 ecx, [ebp - 0x24c]
            //   e8????????           |                     
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5
            //   8d8da8fdffff         | lea                 ecx, [ebp - 0x258]
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_9 = { 8b08 8b512c 8955f4 8b4508 50 8b4df4 894df8 }
            // n = 7, score = 100
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b512c               | mov                 edx, dword ptr [ecx + 0x2c]
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   50                   | push                eax
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   894df8               | mov                 dword ptr [ebp - 8], ecx

    condition:
        7 of them and filesize < 3080192
}