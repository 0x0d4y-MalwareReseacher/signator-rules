rule win_nexster_bot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.nexster_bot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nexster_bot"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d842460020000 68???????? 50 e8???????? 8b8c2468060000 83c414 5f }
            // n = 7, score = 100
            //   8d842460020000       | lea                 eax, [esp + 0x260]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b8c2468060000       | mov                 ecx, dword ptr [esp + 0x668]
            //   83c414               | add                 esp, 0x14
            //   5f                   | pop                 edi

        $sequence_1 = { 8d85bc090000 f3a4 48 90 8a4801 }
            // n = 5, score = 100
            //   8d85bc090000         | lea                 eax, [ebp + 0x9bc]
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   48                   | dec                 eax
            //   90                   | nop                 
            //   8a4801               | mov                 cl, byte ptr [eax + 1]

        $sequence_2 = { 68???????? 52 e8???????? 68???????? 68???????? 68???????? 8d85bc110000 }
            // n = 7, score = 100
            //   68????????           |                     
            //   52                   | push                edx
            //   e8????????           |                     
            //   68????????           |                     
            //   68????????           |                     
            //   68????????           |                     
            //   8d85bc110000         | lea                 eax, [ebp + 0x11bc]

        $sequence_3 = { 8b3d???????? 6a00 8d4c2414 51 8d542414 }
            // n = 5, score = 100
            //   8b3d????????         |                     
            //   6a00                 | push                0
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   51                   | push                ecx
            //   8d542414             | lea                 edx, [esp + 0x14]

        $sequence_4 = { 83e61f 8d1c9d20804100 894508 8b03 c1e606 f644300480 }
            // n = 6, score = 100
            //   83e61f               | and                 esi, 0x1f
            //   8d1c9d20804100       | lea                 ebx, [ebx*4 + 0x418020]
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   c1e606               | shl                 esi, 6
            //   f644300480           | test                byte ptr [eax + esi + 4], 0x80

        $sequence_5 = { 33c0 8da42400000000 8a1485d0604100 889405000e0000 }
            // n = 4, score = 100
            //   33c0                 | xor                 eax, eax
            //   8da42400000000       | lea                 esp, [esp]
            //   8a1485d0604100       | mov                 dl, byte ptr [eax*4 + 0x4160d0]
            //   889405000e0000       | mov                 byte ptr [ebp + eax + 0xe00], dl

        $sequence_6 = { 51 50 c645ec00 e8???????? 83c40c }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   50                   | push                eax
            //   c645ec00             | mov                 byte ptr [ebp - 0x14], 0
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_7 = { 52 e8???????? 83c404 6a07 8d8590010000 50 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   6a07                 | push                7
            //   8d8590010000         | lea                 eax, [ebp + 0x190]
            //   50                   | push                eax

        $sequence_8 = { 7409 56 e8???????? 83c404 6a03 8d95bc050000 8d8d30170000 }
            // n = 7, score = 100
            //   7409                 | je                  0xb
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   6a03                 | push                3
            //   8d95bc050000         | lea                 edx, [ebp + 0x5bc]
            //   8d8d30170000         | lea                 ecx, [ebp + 0x1730]

        $sequence_9 = { 6a01 f3a4 8b08 8b5118 }
            // n = 4, score = 100
            //   6a01                 | push                1
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b5118               | mov                 edx, dword ptr [ecx + 0x18]

    condition:
        7 of them and filesize < 245760
}