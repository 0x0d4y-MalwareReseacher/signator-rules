rule win_webc2_qbp_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.webc2_qbp."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_qbp"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 81ec24010000 56 57 c685f8feffff00 b940000000 }
            // n = 5, score = 100
            //   81ec24010000         | sub                 esp, 0x124
            //   56                   | push                esi
            //   57                   | push                edi
            //   c685f8feffff00       | mov                 byte ptr [ebp - 0x108], 0
            //   b940000000           | mov                 ecx, 0x40

        $sequence_1 = { 83f808 7c67 8b4dfc 33d2 668b917a830000 52 }
            // n = 6, score = 100
            //   83f808               | cmp                 eax, 8
            //   7c67                 | jl                  0x69
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   33d2                 | xor                 edx, edx
            //   668b917a830000       | mov                 dx, word ptr [ecx + 0x837a]
            //   52                   | push                edx

        $sequence_2 = { 7d13 0fbf45f8 8b4dec 668b5508 6689944138770000 }
            // n = 5, score = 100
            //   7d13                 | jge                 0x15
            //   0fbf45f8             | movsx               eax, word ptr [ebp - 8]
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   668b5508             | mov                 dx, word ptr [ebp + 8]
            //   6689944138770000     | mov                 word ptr [ecx + eax*2 + 0x7738], dx

        $sequence_3 = { 8b4df0 e8???????? 8be5 5d c20400 55 8bec }
            // n = 7, score = 100
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp

        $sequence_4 = { 8b45fc 25ffff0000 660fb68848644000 51 8b4df8 e8???????? 8b5508 }
            // n = 7, score = 100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   25ffff0000           | and                 eax, 0xffff
            //   660fb68848644000     | movzx               cx, byte ptr [eax + 0x406448]
            //   51                   | push                ecx
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   e8????????           |                     
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]

        $sequence_5 = { 8b45f8 668b4dfc 66898c504a300000 eb1e }
            // n = 4, score = 100
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   668b4dfc             | mov                 cx, word ptr [ebp - 4]
            //   66898c504a300000     | mov                 word ptr [eax + edx*2 + 0x304a], cx
            //   eb1e                 | jmp                 0x20

        $sequence_6 = { 0fbf4dfc 0fbf5508 8b45e8 8b75e8 }
            // n = 4, score = 100
            //   0fbf4dfc             | movsx               ecx, word ptr [ebp - 4]
            //   0fbf5508             | movsx               edx, word ptr [ebp + 8]
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8b75e8               | mov                 esi, dword ptr [ebp - 0x18]

        $sequence_7 = { 03909c830000 52 e8???????? 83c40c }
            // n = 4, score = 100
            //   03909c830000         | add                 edx, dword ptr [eax + 0x839c]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_8 = { 66050100 668945f4 e9???????? 66c745f80000 66c745f43a01 eb18 }
            // n = 6, score = 100
            //   66050100             | add                 ax, 1
            //   668945f4             | mov                 word ptr [ebp - 0xc], ax
            //   e9????????           |                     
            //   66c745f80000         | mov                 word ptr [ebp - 8], 0
            //   66c745f43a01         | mov                 word ptr [ebp - 0xc], 0x13a
            //   eb18                 | jmp                 0x1a

        $sequence_9 = { 2c08 8b4dfc 88817c830000 8b55fc 33c0 8a827c830000 }
            // n = 6, score = 100
            //   2c08                 | sub                 al, 8
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   88817c830000         | mov                 byte ptr [ecx + 0x837c], al
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   33c0                 | xor                 eax, eax
            //   8a827c830000         | mov                 al, byte ptr [edx + 0x837c]

    condition:
        7 of them and filesize < 630784
}