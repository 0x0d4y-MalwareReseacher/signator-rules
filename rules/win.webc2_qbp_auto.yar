rule win_webc2_qbp_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.webc2_qbp."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.webc2_qbp"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b940000000 33c0 8dbde9fcffff f3ab 66ab aa c685fcfeffff00 }
            // n = 7, score = 100
            //   b940000000           | mov                 ecx, 0x40
            //   33c0                 | xor                 eax, eax
            //   8dbde9fcffff         | lea                 edi, [ebp - 0x317]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   c685fcfeffff00       | mov                 byte ptr [ebp - 0x104], 0

        $sequence_1 = { 83c001 25ff0f0000 668945f8 0fbf4dfc 83c101 81e1ff0f0000 66894dfc }
            // n = 7, score = 100
            //   83c001               | add                 eax, 1
            //   25ff0f0000           | and                 eax, 0xfff
            //   668945f8             | mov                 word ptr [ebp - 8], ax
            //   0fbf4dfc             | movsx               ecx, word ptr [ebp - 4]
            //   83c101               | add                 ecx, 1
            //   81e1ff0f0000         | and                 ecx, 0xfff
            //   66894dfc             | mov                 word ptr [ebp - 4], cx

        $sequence_2 = { 83ec10 894df0 8b450c 8945fc 8b4df0 8b9188830000 833a00 }
            // n = 7, score = 100
            //   83ec10               | sub                 esp, 0x10
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b9188830000         | mov                 edx, dword ptr [ecx + 0x8388]
            //   833a00               | cmp                 dword ptr [edx], 0

        $sequence_3 = { 8b45f0 8b08 894dfc 8b55f0 8b4204 }
            // n = 5, score = 100
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   8b4204               | mov                 eax, dword ptr [edx + 4]

        $sequence_4 = { 8b55fc 8a827c830000 2c08 8b4dfc 88817c830000 8b55fc }
            // n = 6, score = 100
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8a827c830000         | mov                 al, byte ptr [edx + 0x837c]
            //   2c08                 | sub                 al, 8
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   88817c830000         | mov                 byte ptr [ecx + 0x837c], al
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]

        $sequence_5 = { 8b5508 52 8b45f0 8b8888830000 8b11 8b45f0 03909c830000 }
            // n = 7, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   52                   | push                edx
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b8888830000         | mov                 ecx, dword ptr [eax + 0x8388]
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   03909c830000         | add                 edx, dword ptr [eax + 0x839c]

        $sequence_6 = { 8b45ec 25ffff0000 50 0fbf4df0 8b55e8 }
            // n = 5, score = 100
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   25ffff0000           | and                 eax, 0xffff
            //   50                   | push                eax
            //   0fbf4df0             | movsx               ecx, word ptr [ebp - 0x10]
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]

        $sequence_7 = { 894df0 8b450c 8945fc 8b4df0 8b9188830000 833a00 }
            // n = 6, score = 100
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8b9188830000         | mov                 edx, dword ptr [ecx + 0x8388]
            //   833a00               | cmp                 dword ptr [edx], 0

        $sequence_8 = { 8bec 83ec28 56 57 6804010000 6a00 68???????? }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   83ec28               | sub                 esp, 0x28
            //   56                   | push                esi
            //   57                   | push                edi
            //   6804010000           | push                0x104
            //   6a00                 | push                0
            //   68????????           |                     

        $sequence_9 = { 668b45f8 50 8b4de4 e8???????? 0fbf4df8 8b55e4 8a45f4 }
            // n = 7, score = 100
            //   668b45f8             | mov                 ax, word ptr [ebp - 8]
            //   50                   | push                eax
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   e8????????           |                     
            //   0fbf4df8             | movsx               ecx, word ptr [ebp - 8]
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   8a45f4               | mov                 al, byte ptr [ebp - 0xc]

    condition:
        7 of them and filesize < 630784
}