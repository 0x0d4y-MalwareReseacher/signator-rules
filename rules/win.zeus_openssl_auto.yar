rule win_zeus_openssl_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.zeus_openssl."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zeus_openssl"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 24fc 3ce0 0f8490000000 0fb6c2 80fa0f 7503 0fb6c6 }
            // n = 7, score = 1300
            //   24fc                 | and                 al, 0xfc
            //   3ce0                 | cmp                 al, 0xe0
            //   0f8490000000         | je                  0x96
            //   0fb6c2               | movzx               eax, dl
            //   80fa0f               | cmp                 dl, 0xf
            //   7503                 | jne                 5
            //   0fb6c6               | movzx               eax, dh

        $sequence_1 = { 8b84815c0b0000 6689548302 8b9954140000 43 8975f8 c745ec00000000 81fb3d020000 }
            // n = 7, score = 1300
            //   8b84815c0b0000       | mov                 eax, dword ptr [ecx + eax*4 + 0xb5c]
            //   6689548302           | mov                 word ptr [ebx + eax*4 + 2], dx
            //   8b9954140000         | mov                 ebx, dword ptr [ecx + 0x1454]
            //   43                   | inc                 ebx
            //   8975f8               | mov                 dword ptr [ebp - 8], esi
            //   c745ec00000000       | mov                 dword ptr [ebp - 0x14], 0
            //   81fb3d020000         | cmp                 ebx, 0x23d

        $sequence_2 = { 53 8bce c7473400000000 e8???????? }
            // n = 4, score = 1300
            //   53                   | push                ebx
            //   8bce                 | mov                 ecx, esi
            //   c7473400000000       | mov                 dword ptr [edi + 0x34], 0
            //   e8????????           |                     

        $sequence_3 = { 89421c 8b45f4 894220 8b45f8 897a08 894a14 }
            // n = 6, score = 1300
            //   89421c               | mov                 dword ptr [edx + 0x1c], eax
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   894220               | mov                 dword ptr [edx + 0x20], eax
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   897a08               | mov                 dword ptr [edx + 8], edi
            //   894a14               | mov                 dword ptr [edx + 0x14], ecx

        $sequence_4 = { ff4208 894a04 c3 33c0 5e c3 }
            // n = 6, score = 1300
            //   ff4208               | inc                 dword ptr [edx + 8]
            //   894a04               | mov                 dword ptr [edx + 4], ecx
            //   c3                   | ret                 
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   c3                   | ret                 

        $sequence_5 = { c645f001 ebb5 8a45fc f6c510 740a 3c06 75a9 }
            // n = 7, score = 1300
            //   c645f001             | mov                 byte ptr [ebp - 0x10], 1
            //   ebb5                 | jmp                 0xffffffb7
            //   8a45fc               | mov                 al, byte ptr [ebp - 4]
            //   f6c510               | test                ch, 0x10
            //   740a                 | je                  0xc
            //   3c06                 | cmp                 al, 6
            //   75a9                 | jne                 0xffffffab

        $sequence_6 = { 83780c00 0f8456160000 833800 750a 83780400 0f8547160000 83390b }
            // n = 7, score = 1300
            //   83780c00             | cmp                 dword ptr [eax + 0xc], 0
            //   0f8456160000         | je                  0x165c
            //   833800               | cmp                 dword ptr [eax], 0
            //   750a                 | jne                 0xc
            //   83780400             | cmp                 dword ptr [eax + 4], 0
            //   0f8547160000         | jne                 0x164d
            //   83390b               | cmp                 dword ptr [ecx], 0xb

        $sequence_7 = { 8b5508 894df8 8d3c8a be10000000 0fb74f02 894df4 8b88bc160000 }
            // n = 7, score = 1300
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8d3c8a               | lea                 edi, dword ptr [edx + ecx*4]
            //   be10000000           | mov                 esi, 0x10
            //   0fb74f02             | movzx               ecx, word ptr [edi + 2]
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8b88bc160000         | mov                 ecx, dword ptr [eax + 0x16bc]

        $sequence_8 = { 8806 eb9e 8b5df8 f6c220 740b 8b45f0 c7000b000000 }
            // n = 7, score = 1300
            //   8806                 | mov                 byte ptr [esi], al
            //   eb9e                 | jmp                 0xffffffa0
            //   8b5df8               | mov                 ebx, dword ptr [ebp - 8]
            //   f6c220               | test                dl, 0x20
            //   740b                 | je                  0xd
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   c7000b000000         | mov                 dword ptr [eax], 0xb

        $sequence_9 = { 03c6 6a05 5a 2bd6 8bc8 8945c4 }
            // n = 6, score = 1300
            //   03c6                 | add                 eax, esi
            //   6a05                 | push                5
            //   5a                   | pop                 edx
            //   2bd6                 | sub                 edx, esi
            //   8bc8                 | mov                 ecx, eax
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax

    condition:
        7 of them and filesize < 4546560
}