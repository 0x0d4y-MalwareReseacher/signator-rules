rule win_zeus_openssl_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.zeus_openssl."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zeus_openssl"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { d3e0 4b 47 83c608 03d0 895dfc 8955f8 }
            // n = 7, score = 1300
            //   d3e0                 | shl                 eax, cl
            //   4b                   | dec                 ebx
            //   47                   | inc                 edi
            //   83c608               | add                 esi, 8
            //   03d0                 | add                 edx, eax
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   8955f8               | mov                 dword ptr [ebp - 8], edx

        $sequence_1 = { 830204 5e c70101000000 33c0 5b 8b4dfc }
            // n = 6, score = 1300
            //   830204               | add                 dword ptr [edx], 4
            //   5e                   | pop                 esi
            //   c70101000000         | mov                 dword ptr [ecx], 1
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_2 = { 8b7de8 eb0f 668b17 66d3e2 660990b8160000 03ce 8b55e4 }
            // n = 7, score = 1300
            //   8b7de8               | mov                 edi, dword ptr [ebp - 0x18]
            //   eb0f                 | jmp                 0x11
            //   668b17               | mov                 dx, word ptr [edi]
            //   66d3e2               | shl                 dx, cl
            //   660990b8160000       | or                  word ptr [eax + 0x16b8], dx
            //   03ce                 | add                 ecx, esi
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]

        $sequence_3 = { 7565 ff15???????? 3945e8 745a 833e00 7522 6800020000 }
            // n = 7, score = 1300
            //   7565                 | jne                 0x67
            //   ff15????????         |                     
            //   3945e8               | cmp                 dword ptr [ebp - 0x18], eax
            //   745a                 | je                  0x5c
            //   833e00               | cmp                 dword ptr [esi], 0
            //   7522                 | jne                 0x24
            //   6800020000           | push                0x200

        $sequence_4 = { eb3e 804dff08 884a04 eb35 83e867 7429 }
            // n = 6, score = 1300
            //   eb3e                 | jmp                 0x40
            //   804dff08             | or                  byte ptr [ebp - 1], 8
            //   884a04               | mov                 byte ptr [edx + 4], cl
            //   eb35                 | jmp                 0x37
            //   83e867               | sub                 eax, 0x67
            //   7429                 | je                  0x2b

        $sequence_5 = { 8b5614 8b4e08 88040a ff4614 0fb64731 8b5614 }
            // n = 6, score = 1300
            //   8b5614               | mov                 edx, dword ptr [esi + 0x14]
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   88040a               | mov                 byte ptr [edx + ecx], al
            //   ff4614               | inc                 dword ptr [esi + 0x14]
            //   0fb64731             | movzx               eax, byte ptr [edi + 0x31]
            //   8b5614               | mov                 edx, dword ptr [esi + 0x14]

        $sequence_6 = { 8b8150140000 53 8b5d08 56 57 8bbc995c0b0000 8d341b }
            // n = 7, score = 1300
            //   8b8150140000         | mov                 eax, dword ptr [ecx + 0x1450]
            //   53                   | push                ebx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bbc995c0b0000       | mov                 edi, dword ptr [ecx + ebx*4 + 0xb5c]
            //   8d341b               | lea                 esi, [ebx + ebx]

        $sequence_7 = { 8b5508 894df8 8d3c8a be10000000 0fb74f02 894df4 8b88bc160000 }
            // n = 7, score = 1300
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8d3c8a               | lea                 edi, [edx + ecx*4]
            //   be10000000           | mov                 esi, 0x10
            //   0fb74f02             | movzx               ecx, word ptr [edi + 2]
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8b88bc160000         | mov                 ecx, dword ptr [eax + 0x16bc]

        $sequence_8 = { 750d c645f002 f6c510 7504 }
            // n = 4, score = 1300
            //   750d                 | jne                 0xf
            //   c645f002             | mov                 byte ptr [ebp - 0x10], 2
            //   f6c510               | test                ch, 0x10
            //   7504                 | jne                 6

        $sequence_9 = { 83c302 e9???????? f6c508 7410 834a1808 668b03 66894210 }
            // n = 7, score = 1300
            //   83c302               | add                 ebx, 2
            //   e9????????           |                     
            //   f6c508               | test                ch, 8
            //   7410                 | je                  0x12
            //   834a1808             | or                  dword ptr [edx + 0x18], 8
            //   668b03               | mov                 ax, word ptr [ebx]
            //   66894210             | mov                 word ptr [edx + 0x10], ax

    condition:
        7 of them and filesize < 4546560
}