rule win_mrac_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.mrac."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mrac"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 6a00 6a00 ff75a4 56 6a13 6801000100 }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff75a4               | push                dword ptr [ebp - 0x5c]
            //   56                   | push                esi
            //   6a13                 | push                0x13
            //   6801000100           | push                0x10001

        $sequence_1 = { c685b1faffff76 c685b2faffff68 c685b3faffff77 c685b4faffff23 c685b5faffff7e c685b6faffff67 c685b7faffff68 }
            // n = 7, score = 200
            //   c685b1faffff76       | mov                 byte ptr [ebp - 0x54f], 0x76
            //   c685b2faffff68       | mov                 byte ptr [ebp - 0x54e], 0x68
            //   c685b3faffff77       | mov                 byte ptr [ebp - 0x54d], 0x77
            //   c685b4faffff23       | mov                 byte ptr [ebp - 0x54c], 0x23
            //   c685b5faffff7e       | mov                 byte ptr [ebp - 0x54b], 0x7e
            //   c685b6faffff67       | mov                 byte ptr [ebp - 0x54a], 0x67
            //   c685b7faffff68       | mov                 byte ptr [ebp - 0x549], 0x68

        $sequence_2 = { 6a27 888424a8000000 e8???????? 0454 8d8c249c000000 6a27 888424a9000000 }
            // n = 7, score = 200
            //   6a27                 | push                0x27
            //   888424a8000000       | mov                 byte ptr [esp + 0xa8], al
            //   e8????????           |                     
            //   0454                 | add                 al, 0x54
            //   8d8c249c000000       | lea                 ecx, [esp + 0x9c]
            //   6a27                 | push                0x27
            //   888424a9000000       | mov                 byte ptr [esp + 0xa9], al

        $sequence_3 = { 6a0e 888424f5110000 e8???????? 3474 8d8c24e0110000 6a0f 888424f6110000 }
            // n = 7, score = 200
            //   6a0e                 | push                0xe
            //   888424f5110000       | mov                 byte ptr [esp + 0x11f5], al
            //   e8????????           |                     
            //   3474                 | xor                 al, 0x74
            //   8d8c24e0110000       | lea                 ecx, [esp + 0x11e0]
            //   6a0f                 | push                0xf
            //   888424f6110000       | mov                 byte ptr [esp + 0x11f6], al

        $sequence_4 = { e8???????? 8bc8 e8???????? c68424240400007d 8d8c2424040000 c68424250400006a c68424260400007c }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   c68424240400007d     | mov                 byte ptr [esp + 0x424], 0x7d
            //   8d8c2424040000       | lea                 ecx, [esp + 0x424]
            //   c68424250400006a     | mov                 byte ptr [esp + 0x425], 0x6a
            //   c68424260400007c     | mov                 byte ptr [esp + 0x426], 0x7c

        $sequence_5 = { 8884240d080000 e8???????? 346d 8d8c24f4070000 6a13 8884240e080000 }
            // n = 6, score = 200
            //   8884240d080000       | mov                 byte ptr [esp + 0x80d], al
            //   e8????????           |                     
            //   346d                 | xor                 al, 0x6d
            //   8d8c24f4070000       | lea                 ecx, [esp + 0x7f4]
            //   6a13                 | push                0x13
            //   8884240e080000       | mov                 byte ptr [esp + 0x80e], al

        $sequence_6 = { 046f 8d8c2408010000 6a4d 88842412010000 e8???????? 0470 8d8c2408010000 }
            // n = 7, score = 200
            //   046f                 | add                 al, 0x6f
            //   8d8c2408010000       | lea                 ecx, [esp + 0x108]
            //   6a4d                 | push                0x4d
            //   88842412010000       | mov                 byte ptr [esp + 0x112], al
            //   e8????????           |                     
            //   0470                 | add                 al, 0x70
            //   8d8c2408010000       | lea                 ecx, [esp + 0x108]

        $sequence_7 = { 68eeeac01f ba01000000 c644243d00 e8???????? 83c404 8d4c2420 51 }
            // n = 7, score = 200
            //   68eeeac01f           | push                0x1fc0eaee
            //   ba01000000           | mov                 edx, 1
            //   c644243d00           | mov                 byte ptr [esp + 0x3d], 0
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   51                   | push                ecx

        $sequence_8 = { 6a0a 8d8c24dc150000 e8???????? 3451 8d8c24d8150000 6a0b 888424ea150000 }
            // n = 7, score = 200
            //   6a0a                 | push                0xa
            //   8d8c24dc150000       | lea                 ecx, [esp + 0x15dc]
            //   e8????????           |                     
            //   3451                 | xor                 al, 0x51
            //   8d8c24d8150000       | lea                 ecx, [esp + 0x15d8]
            //   6a0b                 | push                0xb
            //   888424ea150000       | mov                 byte ptr [esp + 0x15ea], al

        $sequence_9 = { 888424e20a0000 e8???????? 3470 8d8c24d40a0000 6a08 888424e30a0000 e8???????? }
            // n = 7, score = 200
            //   888424e20a0000       | mov                 byte ptr [esp + 0xae2], al
            //   e8????????           |                     
            //   3470                 | xor                 al, 0x70
            //   8d8c24d40a0000       | lea                 ecx, [esp + 0xad4]
            //   6a08                 | push                8
            //   888424e30a0000       | mov                 byte ptr [esp + 0xae3], al
            //   e8????????           |                     

    condition:
        7 of them and filesize < 745472
}