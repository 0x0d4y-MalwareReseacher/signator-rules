rule win_flashflood_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.flashflood."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flashflood"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 ff5138 837df804 0f85a1010000 8b45f4 8d55fc 52 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff5138               | call                dword ptr [ecx + 0x38]
            //   837df804             | cmp                 dword ptr [ebp - 8], 4
            //   0f85a1010000         | jne                 0x1a7
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   8d55fc               | lea                 edx, [ebp - 4]
            //   52                   | push                edx

        $sequence_1 = { 57 33ff 57 8b35???????? }
            // n = 4, score = 100
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   57                   | push                edi
            //   8b35????????         |                     

        $sequence_2 = { 0f85de010000 8b45ec 8d55dc 52 8d55e4 8b08 }
            // n = 6, score = 100
            //   0f85de010000         | jne                 0x1e4
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   8d55dc               | lea                 edx, [ebp - 0x24]
            //   52                   | push                edx
            //   8d55e4               | lea                 edx, [ebp - 0x1c]
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_3 = { 0f84a8000000 8d85c0feffff 50 e8???????? 85c0 }
            // n = 5, score = 100
            //   0f84a8000000         | je                  0xae
            //   8d85c0feffff         | lea                 eax, [ebp - 0x140]
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_4 = { 8b45e0 0145fc 8b45fc 80bc0518faffff00 0f850ffeffff }
            // n = 5, score = 100
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   0145fc               | add                 dword ptr [ebp - 4], eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   80bc0518faffff00     | cmp                 byte ptr [ebp + eax - 0x5e8], 0
            //   0f850ffeffff         | jne                 0xfffffe15

        $sequence_5 = { 7c45 83c62c 6a2e 56 ff15???????? 8b3d???????? 59 }
            // n = 7, score = 100
            //   7c45                 | jl                  0x47
            //   83c62c               | add                 esi, 0x2c
            //   6a2e                 | push                0x2e
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   59                   | pop                 ecx

        $sequence_6 = { 85c0 7403 802000 56 ff74240c e8???????? }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7403                 | je                  5
            //   802000               | and                 byte ptr [eax], 0
            //   56                   | push                esi
            //   ff74240c             | push                dword ptr [esp + 0xc]
            //   e8????????           |                     

        $sequence_7 = { e8???????? 8d85f0fbffff 50 8d85f0fdffff 50 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8d85f0fbffff         | lea                 eax, [ebp - 0x410]
            //   50                   | push                eax
            //   8d85f0fdffff         | lea                 eax, [ebp - 0x210]
            //   50                   | push                eax

        $sequence_8 = { 83fbff 750b ff75fc ff15???????? eb45 57 }
            // n = 6, score = 100
            //   83fbff               | cmp                 ebx, -1
            //   750b                 | jne                 0xd
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff15????????         |                     
            //   eb45                 | jmp                 0x47
            //   57                   | push                edi

        $sequence_9 = { 8845a0 8d45a0 33db 50 }
            // n = 4, score = 100
            //   8845a0               | mov                 byte ptr [ebp - 0x60], al
            //   8d45a0               | lea                 eax, [ebp - 0x60]
            //   33db                 | xor                 ebx, ebx
            //   50                   | push                eax

    condition:
        7 of them and filesize < 114688
}