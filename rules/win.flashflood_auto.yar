rule win_flashflood_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.flashflood."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flashflood"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 ff15???????? 8b3d???????? 59 59 }
            // n = 5, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

        $sequence_1 = { 7422 bf???????? ff37 56 }
            // n = 4, score = 100
            //   7422                 | je                  0x24
            //   bf????????           |                     
            //   ff37                 | push                dword ptr [edi]
            //   56                   | push                esi

        $sequence_2 = { 8d8500ffffff 6800010000 50 e8???????? 8d8500ffffff 50 8d85c0f9ffff }
            // n = 7, score = 100
            //   8d8500ffffff         | lea                 eax, [ebp - 0x100]
            //   6800010000           | push                0x100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d8500ffffff         | lea                 eax, [ebp - 0x100]
            //   50                   | push                eax
            //   8d85c0f9ffff         | lea                 eax, [ebp - 0x640]

        $sequence_3 = { 59 8945f8 85c0 59 0f848c000000 0fbec3 c1e004 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   85c0                 | test                eax, eax
            //   59                   | pop                 ecx
            //   0f848c000000         | je                  0x92
            //   0fbec3               | movsx               eax, bl
            //   c1e004               | shl                 eax, 4

        $sequence_4 = { 50 ffd6 83c420 8818 8d85f0fdffff }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   83c420               | add                 esp, 0x20
            //   8818                 | mov                 byte ptr [eax], bl
            //   8d85f0fdffff         | lea                 eax, [ebp - 0x210]

        $sequence_5 = { ff15???????? 8d85f0f9ffff 50 8d85f0fbffff }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   8d85f0f9ffff         | lea                 eax, [ebp - 0x610]
            //   50                   | push                eax
            //   8d85f0fbffff         | lea                 eax, [ebp - 0x410]

        $sequence_6 = { 59 50 6a01 ff742418 ff15???????? 56 }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   50                   | push                eax
            //   6a01                 | push                1
            //   ff742418             | push                dword ptr [esp + 0x18]
            //   ff15????????         |                     
            //   56                   | push                esi

        $sequence_7 = { 83c428 ff75f8 8b35???????? ffd6 53 ffd6 }
            // n = 6, score = 100
            //   83c428               | add                 esp, 0x28
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   8b35????????         |                     
            //   ffd6                 | call                esi
            //   53                   | push                ebx
            //   ffd6                 | call                esi

        $sequence_8 = { 83fbff 750b ff75fc ff15???????? eb45 57 }
            // n = 6, score = 100
            //   83fbff               | cmp                 ebx, -1
            //   750b                 | jne                 0xd
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ff15????????         |                     
            //   eb45                 | jmp                 0x47
            //   57                   | push                edi

        $sequence_9 = { 6bd20c 33c0 668b82e8914000 8b4d08 }
            // n = 4, score = 100
            //   6bd20c               | imul                edx, edx, 0xc
            //   33c0                 | xor                 eax, eax
            //   668b82e8914000       | mov                 ax, word ptr [edx + 0x4091e8]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 114688
}