rule win_glupteba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.glupteba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.glupteba"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d45f4 50 68???????? 8d45d4 }
            // n = 4, score = 400
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   68????????           |                     
            //   8d45d4               | lea                 eax, [ebp - 0x2c]

        $sequence_1 = { 85c0 745b 8b400c 8b00 8b30 85f6 7450 }
            // n = 7, score = 400
            //   85c0                 | test                eax, eax
            //   745b                 | je                  0x5d
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b30                 | mov                 esi, dword ptr [eax]
            //   85f6                 | test                esi, esi
            //   7450                 | je                  0x52

        $sequence_2 = { 5b 7419 8b35???????? 8b7d08 }
            // n = 4, score = 400
            //   5b                   | pop                 ebx
            //   7419                 | je                  0x1b
            //   8b35????????         |                     
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

        $sequence_3 = { 6a00 57 8d85c4f9ffff 50 ff75de }
            // n = 5, score = 400
            //   6a00                 | push                0
            //   57                   | push                edi
            //   8d85c4f9ffff         | lea                 eax, [ebp - 0x63c]
            //   50                   | push                eax
            //   ff75de               | push                dword ptr [ebp - 0x22]

        $sequence_4 = { 8a03 84c0 745f 3c20 }
            // n = 4, score = 400
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   84c0                 | test                al, al
            //   745f                 | je                  0x61
            //   3c20                 | cmp                 al, 0x20

        $sequence_5 = { 6a10 ff35???????? 8d45f0 50 e8???????? }
            // n = 5, score = 400
            //   6a10                 | push                0x10
            //   ff35????????         |                     
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_6 = { 8a4b09 884308 8a4609 32c8 884f09 }
            // n = 5, score = 400
            //   8a4b09               | mov                 cl, byte ptr [ebx + 9]
            //   884308               | mov                 byte ptr [ebx + 8], al
            //   8a4609               | mov                 al, byte ptr [esi + 9]
            //   32c8                 | xor                 cl, al
            //   884f09               | mov                 byte ptr [edi + 9], cl

        $sequence_7 = { 57 66c7450a0300 66c745080100 ff15???????? 8bc7 }
            // n = 5, score = 400
            //   57                   | push                edi
            //   66c7450a0300         | mov                 word ptr [ebp + 0xa], 3
            //   66c745080100         | mov                 word ptr [ebp + 8], 1
            //   ff15????????         |                     
            //   8bc7                 | mov                 eax, edi

        $sequence_8 = { 00cd 3e46 005e3e 46 }
            // n = 4, score = 100
            //   00cd                 | add                 ch, cl
            //   3e46                 | inc                 esi
            //   005e3e               | add                 byte ptr [esi + 0x3e], bl
            //   46                   | inc                 esi

        $sequence_9 = { 0106 830702 392e 75a0 }
            // n = 4, score = 100
            //   0106                 | add                 dword ptr [esi], eax
            //   830702               | add                 dword ptr [edi], 2
            //   392e                 | cmp                 dword ptr [esi], ebp
            //   75a0                 | jne                 0xffffffa2

        $sequence_10 = { 0012 3f 46 008bff558bec }
            // n = 4, score = 100
            //   0012                 | add                 byte ptr [edx], dl
            //   3f                   | aas                 
            //   46                   | inc                 esi
            //   008bff558bec         | add                 byte ptr [ebx - 0x1374aa01], cl

        $sequence_11 = { 0107 eb4d 8b02 89442418 }
            // n = 4, score = 100
            //   0107                 | add                 dword ptr [edi], eax
            //   eb4d                 | jmp                 0x4f
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax

        $sequence_12 = { 005e3e 46 00ff 3e46 }
            // n = 4, score = 100
            //   005e3e               | add                 byte ptr [esi + 0x3e], bl
            //   46                   | inc                 esi
            //   00ff                 | add                 bh, bh
            //   3e46                 | inc                 esi

        $sequence_13 = { 00ff 3e46 0012 3f }
            // n = 4, score = 100
            //   00ff                 | add                 bh, bh
            //   3e46                 | inc                 esi
            //   0012                 | add                 byte ptr [edx], dl
            //   3f                   | aas                 

        $sequence_14 = { 0101 03d3 8b4620 8bcb }
            // n = 4, score = 100
            //   0101                 | add                 dword ptr [ecx], eax
            //   03d3                 | add                 edx, ebx
            //   8b4620               | mov                 eax, dword ptr [esi + 0x20]
            //   8bcb                 | mov                 ecx, ebx

        $sequence_15 = { 00f1 3d46005e3e 46 00cd }
            // n = 4, score = 100
            //   00f1                 | add                 cl, dh
            //   3d46005e3e           | cmp                 eax, 0x3e5e0046
            //   46                   | inc                 esi
            //   00cd                 | add                 ch, cl

    condition:
        7 of them and filesize < 1417216
}