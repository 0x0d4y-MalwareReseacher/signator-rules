rule win_glupteba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.glupteba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.glupteba"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 889dfcf7ffff b9ff010000 8dbdfdf7ffff f3ab 834dfcff 66ab aa }
            // n = 7, score = 400
            //   889dfcf7ffff         | mov                 byte ptr [ebp - 0x804], bl
            //   b9ff010000           | mov                 ecx, 0x1ff
            //   8dbdfdf7ffff         | lea                 edi, dword ptr [ebp - 0x803]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_1 = { 8d85f0fdffff 50 6804010000 ff15???????? 8d85f8feffff 50 }
            // n = 6, score = 400
            //   8d85f0fdffff         | lea                 eax, dword ptr [ebp - 0x210]
            //   50                   | push                eax
            //   6804010000           | push                0x104
            //   ff15????????         |                     
            //   8d85f8feffff         | lea                 eax, dword ptr [ebp - 0x108]
            //   50                   | push                eax

        $sequence_2 = { 8bda c1e708 0b7dec 895dd0 33f7 8b7d10 33770c }
            // n = 7, score = 400
            //   8bda                 | mov                 ebx, edx
            //   c1e708               | shl                 edi, 8
            //   0b7dec               | or                  edi, dword ptr [ebp - 0x14]
            //   895dd0               | mov                 dword ptr [ebp - 0x30], ebx
            //   33f7                 | xor                 esi, edi
            //   8b7d10               | mov                 edi, dword ptr [ebp + 0x10]
            //   33770c               | xor                 esi, dword ptr [edi + 0xc]

        $sequence_3 = { ff4de8 894dd4 897dd8 8975dc 0f8542fcffff eb09 8b75cc }
            // n = 7, score = 400
            //   ff4de8               | dec                 dword ptr [ebp - 0x18]
            //   894dd4               | mov                 dword ptr [ebp - 0x2c], ecx
            //   897dd8               | mov                 dword ptr [ebp - 0x28], edi
            //   8975dc               | mov                 dword ptr [ebp - 0x24], esi
            //   0f8542fcffff         | jne                 0xfffffc48
            //   eb09                 | jmp                 0xb
            //   8b75cc               | mov                 esi, dword ptr [ebp - 0x34]

        $sequence_4 = { 8a4b0c 88430b 8a460c 32c8 884f0c 8a4b0d 88430c }
            // n = 7, score = 400
            //   8a4b0c               | mov                 cl, byte ptr [ebx + 0xc]
            //   88430b               | mov                 byte ptr [ebx + 0xb], al
            //   8a460c               | mov                 al, byte ptr [esi + 0xc]
            //   32c8                 | xor                 cl, al
            //   884f0c               | mov                 byte ptr [edi + 0xc], cl
            //   8a4b0d               | mov                 cl, byte ptr [ebx + 0xd]
            //   88430c               | mov                 byte ptr [ebx + 0xc], al

        $sequence_5 = { 74c0 68???????? ff35???????? ffd6 3bc7 a3???????? 7516 }
            // n = 7, score = 400
            //   74c0                 | je                  0xffffffc2
            //   68????????           |                     
            //   ff35????????         |                     
            //   ffd6                 | call                esi
            //   3bc7                 | cmp                 eax, edi
            //   a3????????           |                     
            //   7516                 | jne                 0x18

        $sequence_6 = { 8b7d08 8b1f 8b7704 8b4f08 }
            // n = 4, score = 400
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8b1f                 | mov                 ebx, dword ptr [edi]
            //   8b7704               | mov                 esi, dword ptr [edi + 4]
            //   8b4f08               | mov                 ecx, dword ptr [edi + 8]

        $sequence_7 = { 00cd 3e46 005e3e 46 }
            // n = 4, score = 100
            //   00cd                 | add                 ch, cl
            //   3e46                 | inc                 esi
            //   005e3e               | add                 byte ptr [esi + 0x3e], bl
            //   46                   | inc                 esi

        $sequence_8 = { 0101 03d3 8b4620 8bcb }
            // n = 4, score = 100
            //   0101                 | add                 dword ptr [ecx], eax
            //   03d3                 | add                 edx, ebx
            //   8b4620               | mov                 eax, dword ptr [esi + 0x20]
            //   8bcb                 | mov                 ecx, ebx

        $sequence_9 = { 0012 3f 46 008bff558bec }
            // n = 4, score = 100
            //   0012                 | add                 byte ptr [edx], dl
            //   3f                   | aas                 
            //   46                   | inc                 esi
            //   008bff558bec         | add                 byte ptr [ebx - 0x1374aa01], cl

        $sequence_10 = { 0107 eb4d 8b02 89442418 }
            // n = 4, score = 100
            //   0107                 | add                 dword ptr [edi], eax
            //   eb4d                 | jmp                 0x4f
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax

        $sequence_11 = { 0106 830702 392e 75a0 }
            // n = 4, score = 100
            //   0106                 | add                 dword ptr [esi], eax
            //   830702               | add                 dword ptr [edi], 2
            //   392e                 | cmp                 dword ptr [esi], ebp
            //   75a0                 | jne                 0xffffffa2

        $sequence_12 = { 005e3e 46 00ff 3e46 }
            // n = 4, score = 100
            //   005e3e               | add                 byte ptr [esi + 0x3e], bl
            //   46                   | inc                 esi
            //   00ff                 | add                 bh, bh
            //   3e46                 | inc                 esi

        $sequence_13 = { 00ff 3e46 0012 3f }
            // n = 4, score = 100
            //   00ff                 | add                 bh, bh
            //   3e46                 | inc                 esi
            //   0012                 | add                 byte ptr [edx], dl
            //   3f                   | aas                 

        $sequence_14 = { 00f1 3d46005e3e 46 00cd }
            // n = 4, score = 100
            //   00f1                 | add                 cl, dh
            //   3d46005e3e           | cmp                 eax, 0x3e5e0046
            //   46                   | inc                 esi
            //   00cd                 | add                 ch, cl

    condition:
        7 of them and filesize < 1417216
}