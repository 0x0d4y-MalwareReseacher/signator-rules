rule win_puzzlemaker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.puzzlemaker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.puzzlemaker"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 4885db 0f84e4030000 488d45c7 4889442440 4c896c2438 }
            // n = 5, score = 100
            //   4885db               | dec                 esp
            //   0f84e4030000         | mov                 esi, dword ptr [esp + 0x460]
            //   488d45c7             | dec                 eax
            //   4889442440           | mov                 ebx, dword ptr [esp + 0x480]
            //   4c896c2438           | mov                 eax, ebx

        $sequence_1 = { 488d0d349b0000 8364242800 41b803000000 4533c9 4489442420 ba00000040 }
            // n = 6, score = 100
            //   488d0d349b0000       | shr                 ax, 1
            //   8364242800           | and                 ax, 0x7f
            //   41b803000000         | mov                 eax, 1
            //   4533c9               | movd                xmm1, eax
            //   4489442420           | lea                 edx, [eax + 5]
            //   ba00000040           | psrlw               xmm0, xmm1

        $sequence_2 = { 48894dff 83e03f 458be9 488d0d84dbfeff 4c8945e7 }
            // n = 5, score = 100
            //   48894dff             | inc                 ebp
            //   83e03f               | xor                 ecx, ecx
            //   458be9               | lea                 edx, [eax + 5]
            //   488d0d84dbfeff       | psrlw               xmm0, xmm1
            //   4c8945e7             | pand                xmm0, xmm2

        $sequence_3 = { 498bdd 4885db 0f8428020000 488b03 488945f7 }
            // n = 5, score = 100
            //   498bdd               | inc                 ebp
            //   4885db               | mov                 eax, dword ptr [ecx + 0x48]
            //   0f8428020000         | and                 ecx, 0xf
            //   488b03               | dec                 edx
            //   488945f7             | movsx               eax, byte ptr [ecx + ebx + 0x164b8]

        $sequence_4 = { c3 488d0581040200 c3 8325????????00 }
            // n = 4, score = 100
            //   c3                   | dec                 ecx
            //   488d0581040200       | add                 edx, eax
            //   c3                   | dec                 esp
            //   8325????????00       |                     

        $sequence_5 = { 4d8bbcf768730100 33d2 498bcf 41b800080000 }
            // n = 4, score = 100
            //   4d8bbcf768730100     | cmp                 ebx, eax
            //   33d2                 | jne                 0xc02
            //   498bcf               | mov                 al, 1
            //   41b800080000         | dec                 eax

        $sequence_6 = { e8???????? 85ff 418d4701 488d3541020200 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   85ff                 | lea                 edx, [0x10fd3]
            //   418d4701             | test                eax, eax
            //   488d3541020200       | dec                 ecx

        $sequence_7 = { e8???????? 90 488b03 833800 7513 488d1551f70000 488d0d2af70000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   90                   | dec                 eax
            //   488b03               | test                eax, eax
            //   833800               | jne                 0x1386
            //   7513                 | inc                 ebp
            //   488d1551f70000       | xor                 eax, eax
            //   488d0d2af70000       | xor                 edx, edx

        $sequence_8 = { 488d054bc30100 ffcb 488d0c9b 488d0cc8 ff15???????? ff0d???????? 85db }
            // n = 7, score = 100
            //   488d054bc30100       | movups              xmm0, xmmword ptr [eax + 0x18]
            //   ffcb                 | dec                 ax
            //   488d0c9b             | movd                eax, mm0
            //   488d0cc8             | dec                 esp
            //   ff15????????         |                     
            //   ff0d????????         |                     
            //   85db                 | lea                 ecx, [0xa33d]

        $sequence_9 = { 498784f758270200 eb1e 488bc3 498784f758270200 }
            // n = 4, score = 100
            //   498784f758270200     | xor                 eax, esp
            //   eb1e                 | dec                 eax
            //   488bc3               | mov                 dword ptr [ebp + 0x520], eax
            //   498784f758270200     | dec                 eax

    condition:
        7 of them and filesize < 331776
}