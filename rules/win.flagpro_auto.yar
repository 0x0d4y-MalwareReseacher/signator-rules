rule win_flagpro_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.flagpro."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flagpro"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8ac2 2c20 3c58 7711 0fbec2 0fbe8028944100 83e00f }
            // n = 7, score = 100
            //   8ac2                 | mov                 al, dl
            //   2c20                 | sub                 al, 0x20
            //   3c58                 | cmp                 al, 0x58
            //   7711                 | ja                  0x13
            //   0fbec2               | movsx               eax, dl
            //   0fbe8028944100       | movsx               eax, byte ptr [eax + 0x419428]
            //   83e00f               | and                 eax, 0xf

        $sequence_1 = { 56 c784249c45010001000000 e8???????? 83c404 6a01 }
            // n = 5, score = 100
            //   56                   | push                esi
            //   c784249c45010001000000     | mov    dword ptr [esp + 0x1459c], 1
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   6a01                 | push                1

        $sequence_2 = { c1f905 8b0c8dc0cf4500 83e01f c1e006 8d440124 8b4d10 8a10 }
            // n = 7, score = 100
            //   c1f905               | sar                 ecx, 5
            //   8b0c8dc0cf4500       | mov                 ecx, dword ptr [ecx*4 + 0x45cfc0]
            //   83e01f               | and                 eax, 0x1f
            //   c1e006               | shl                 eax, 6
            //   8d440124             | lea                 eax, [ecx + eax + 0x24]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8a10                 | mov                 dl, byte ptr [eax]

        $sequence_3 = { 895c2424 51 8d542420 52 c74424300c000000 }
            // n = 5, score = 100
            //   895c2424             | mov                 dword ptr [esp + 0x24], ebx
            //   51                   | push                ecx
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   52                   | push                edx
            //   c74424300c000000     | mov                 dword ptr [esp + 0x30], 0xc

        $sequence_4 = { 51 e8???????? 83c410 8d942480100000 }
            // n = 4, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8d942480100000       | lea                 edx, [esp + 0x1080]

        $sequence_5 = { 7428 0fb63e 0fb6c0 eb12 8b45e0 8a804cd64100 08443b1d }
            // n = 7, score = 100
            //   7428                 | je                  0x2a
            //   0fb63e               | movzx               edi, byte ptr [esi]
            //   0fb6c0               | movzx               eax, al
            //   eb12                 | jmp                 0x14
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8a804cd64100         | mov                 al, byte ptr [eax + 0x41d64c]
            //   08443b1d             | or                  byte ptr [ebx + edi + 0x1d], al

        $sequence_6 = { 3bc3 0f846efdffff e9???????? 8d47f0 83caff }
            // n = 5, score = 100
            //   3bc3                 | cmp                 eax, ebx
            //   0f846efdffff         | je                  0xfffffd74
            //   e9????????           |                     
            //   8d47f0               | lea                 eax, [edi - 0x10]
            //   83caff               | or                  edx, 0xffffffff

        $sequence_7 = { 53 57 8bf8 8d5e04 83f908 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   57                   | push                edi
            //   8bf8                 | mov                 edi, eax
            //   8d5e04               | lea                 ebx, [esi + 4]
            //   83f908               | cmp                 ecx, 8

        $sequence_8 = { eb02 8bc5 8b6c2424 c6043800 45 83fd03 896c2424 }
            // n = 7, score = 100
            //   eb02                 | jmp                 4
            //   8bc5                 | mov                 eax, ebp
            //   8b6c2424             | mov                 ebp, dword ptr [esp + 0x24]
            //   c6043800             | mov                 byte ptr [eax + edi], 0
            //   45                   | inc                 ebp
            //   83fd03               | cmp                 ebp, 3
            //   896c2424             | mov                 dword ptr [esp + 0x24], ebp

        $sequence_9 = { c68424a445010006 e8???????? bd10000000 c684249845010005 396c243c 720d 8b442428 }
            // n = 7, score = 100
            //   c68424a445010006     | mov                 byte ptr [esp + 0x145a4], 6
            //   e8????????           |                     
            //   bd10000000           | mov                 ebp, 0x10
            //   c684249845010005     | mov                 byte ptr [esp + 0x14598], 5
            //   396c243c             | cmp                 dword ptr [esp + 0x3c], ebp
            //   720d                 | jb                  0xf
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]

    condition:
        7 of them and filesize < 1411072
}