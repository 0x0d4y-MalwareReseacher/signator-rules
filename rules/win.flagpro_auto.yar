rule win_flagpro_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.flagpro."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flagpro"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 895c2460 885c2450 39ac2494000000 7210 }
            // n = 4, score = 100
            //   895c2460             | mov                 dword ptr [esp + 0x60], ebx
            //   885c2450             | mov                 byte ptr [esp + 0x50], bl
            //   39ac2494000000       | cmp                 dword ptr [esp + 0x94], ebp
            //   7210                 | jb                  0x12

        $sequence_1 = { 8b842440010000 bf10000000 39bc2454010000 7307 8d842440010000 8b8c2450010000 }
            // n = 6, score = 100
            //   8b842440010000       | mov                 eax, dword ptr [esp + 0x140]
            //   bf10000000           | mov                 edi, 0x10
            //   39bc2454010000       | cmp                 dword ptr [esp + 0x154], edi
            //   7307                 | jae                 9
            //   8d842440010000       | lea                 eax, dword ptr [esp + 0x140]
            //   8b8c2450010000       | mov                 ecx, dword ptr [esp + 0x150]

        $sequence_2 = { 8bf0 33c0 c7461807000000 c7461400000000 66894604 b8???????? 8d5002 }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   33c0                 | xor                 eax, eax
            //   c7461807000000       | mov                 dword ptr [esi + 0x18], 7
            //   c7461400000000       | mov                 dword ptr [esi + 0x14], 0
            //   66894604             | mov                 word ptr [esi + 4], ax
            //   b8????????           |                     
            //   8d5002               | lea                 edx, dword ptr [eax + 2]

        $sequence_3 = { 52 e8???????? 83c404 33f6 895c2458 }
            // n = 5, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33f6                 | xor                 esi, esi
            //   895c2458             | mov                 dword ptr [esp + 0x58], ebx

        $sequence_4 = { 8b8424d0000000 50 e8???????? 83c404 899c24e4000000 89b424e0000000 }
            // n = 6, score = 100
            //   8b8424d0000000       | mov                 eax, dword ptr [esp + 0xd0]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   899c24e4000000       | mov                 dword ptr [esp + 0xe4], ebx
            //   89b424e0000000       | mov                 dword ptr [esp + 0xe0], esi

        $sequence_5 = { be10000000 83c404 39742448 720d }
            // n = 4, score = 100
            //   be10000000           | mov                 esi, 0x10
            //   83c404               | add                 esp, 4
            //   39742448             | cmp                 dword ptr [esp + 0x48], esi
            //   720d                 | jb                  0xf

        $sequence_6 = { 39bc2490000000 0f82e5000000 8b4c247c 51 e9???????? }
            // n = 5, score = 100
            //   39bc2490000000       | cmp                 dword ptr [esp + 0x90], edi
            //   0f82e5000000         | jb                  0xeb
            //   8b4c247c             | mov                 ecx, dword ptr [esp + 0x7c]
            //   51                   | push                ecx
            //   e9????????           |                     

        $sequence_7 = { 46 47 81feb80b0000 7e1b 8b442418 8b08 }
            // n = 6, score = 100
            //   46                   | inc                 esi
            //   47                   | inc                 edi
            //   81feb80b0000         | cmp                 esi, 0xbb8
            //   7e1b                 | jle                 0x1d
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_8 = { 89742464 895c2460 885c2450 39ac2494000000 7210 }
            // n = 5, score = 100
            //   89742464             | mov                 dword ptr [esp + 0x64], esi
            //   895c2460             | mov                 dword ptr [esp + 0x60], ebx
            //   885c2450             | mov                 byte ptr [esp + 0x50], bl
            //   39ac2494000000       | cmp                 dword ptr [esp + 0x94], ebp
            //   7210                 | jb                  0x12

        $sequence_9 = { c1e81f 03c2 8bc8 69c9000c0000 }
            // n = 4, score = 100
            //   c1e81f               | shr                 eax, 0x1f
            //   03c2                 | add                 eax, edx
            //   8bc8                 | mov                 ecx, eax
            //   69c9000c0000         | imul                ecx, ecx, 0xc00

    condition:
        7 of them and filesize < 1411072
}