rule win_whitebird_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.whitebird."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.whitebird"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb09 80f92f 0f95c1 80c13f }
            // n = 4, score = 400
            //   eb09                 | jmp                 0xb
            //   80f92f               | cmp                 cl, 0x2f
            //   0f95c1               | setne               cl
            //   80c13f               | add                 cl, 0x3f

        $sequence_1 = { 8a4302 84c0 7408 3c01 7404 }
            // n = 5, score = 400
            //   8a4302               | mov                 al, byte ptr [ebx + 2]
            //   84c0                 | test                al, al
            //   7408                 | je                  0xa
            //   3c01                 | cmp                 al, 1
            //   7404                 | je                  6

        $sequence_2 = { 8a4301 3c01 7404 3c02 }
            // n = 4, score = 400
            //   8a4301               | mov                 al, byte ptr [ebx + 1]
            //   3c01                 | cmp                 al, 1
            //   7404                 | je                  6
            //   3c02                 | cmp                 al, 2

        $sequence_3 = { 2bce 2bc1 7904 32c0 eb43 }
            // n = 5, score = 200
            //   2bce                 | sub                 ecx, esi
            //   2bc1                 | sub                 eax, ecx
            //   7904                 | jns                 6
            //   32c0                 | xor                 al, al
            //   eb43                 | jmp                 0x45

        $sequence_4 = { 55 8bec 33c9 8b4508 03c1 803099 }
            // n = 6, score = 200
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   33c9                 | xor                 ecx, ecx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   03c1                 | add                 eax, ecx
            //   803099               | xor                 byte ptr [eax], 0x99

        $sequence_5 = { 7d4d 6a08 e8???????? 59 }
            // n = 4, score = 200
            //   7d4d                 | jge                 0x4f
            //   6a08                 | push                8
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_6 = { eb39 56 68???????? ff15???????? }
            // n = 4, score = 200
            //   eb39                 | jmp                 0x3b
            //   56                   | push                esi
            //   68????????           |                     
            //   ff15????????         |                     

        $sequence_7 = { 85c0 751b 57 ff15???????? ff15???????? 50 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   751b                 | jne                 0x1d
            //   57                   | push                edi
            //   ff15????????         |                     
            //   ff15????????         |                     
            //   50                   | push                eax

        $sequence_8 = { 7414 488bc5 eb20 8bf3 488d8c24b0000000 e8???????? }
            // n = 6, score = 200
            //   7414                 | mov                 byte ptr [esp + 0x61], 1
            //   488bc5               | dec                 eax
            //   eb20                 | lea                 edx, [esp + 0x60]
            //   8bf3                 | inc                 ecx
            //   488d8c24b0000000     | add                 eax, 3
            //   e8????????           |                     

        $sequence_9 = { 48898424f8000000 448b05???????? 8b15???????? 488b0d???????? }
            // n = 4, score = 200
            //   48898424f8000000     | dec                 eax
            //   448b05????????       |                     
            //   8b15????????         |                     
            //   488b0d????????       |                     

        $sequence_10 = { eb05 c644246101 488d542460 4183c003 4533c9 488bcd }
            // n = 6, score = 200
            //   eb05                 | mov                 dword ptr [ebx + ecx*2 + 0x102], esi
            //   c644246101           | dec                 eax
            //   488d542460           | mov                 ecx, esi
            //   4183c003             | dec                 eax
            //   4533c9               | lea                 ecx, [0xffffed69]
            //   488bcd               | jmp                 7

        $sequence_11 = { 482bcd 664489b44b02010000 488bce e8???????? 488d0d69edffff ff15???????? }
            // n = 6, score = 200
            //   482bcd               | mov                 dword ptr [esp + 0xf8], eax
            //   664489b44b02010000     | dec    eax
            //   488bce               | sub                 ecx, ebp
            //   e8????????           |                     
            //   488d0d69edffff       | inc                 sp
            //   ff15????????         |                     

        $sequence_12 = { c744243450000000 4889442420 ff15???????? 85c0 0f856bffffff }
            // n = 5, score = 200
            //   c744243450000000     | inc                 ebp
            //   4889442420           | xor                 ecx, ecx
            //   ff15????????         |                     
            //   85c0                 | dec                 eax
            //   0f856bffffff         | mov                 ecx, ebp

    condition:
        7 of them and filesize < 139264
}