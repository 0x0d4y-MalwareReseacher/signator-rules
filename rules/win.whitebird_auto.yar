rule win_whitebird_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.whitebird."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.whitebird"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a4301 3c01 7404 3c02 }
            // n = 4, score = 400
            //   8a4301               | mov                 word ptr [esp + 0xf6], ax
            //   3c01                 | lea                 eax, dword ptr [ebx + 0xa]
            //   7404                 | mov                 word ptr [esp + 0xfc], dx
            //   3c02                 | mov                 word ptr [esp + 0xfa], ax

        $sequence_1 = { 8a4302 84c0 7408 3c01 }
            // n = 4, score = 400
            //   8a4302               | mov                 word ptr [esp + 0x1f6], ax
            //   84c0                 | lea                 eax, dword ptr [edi + 0x4d]
            //   7408                 | mov                 word ptr [esp + 0x208], cx
            //   3c01                 | mov                 word ptr [esp + 0x1f8], ax

        $sequence_2 = { eb09 80f92f 0f95c1 80c13f }
            // n = 4, score = 400
            //   eb09                 | dec                 eax
            //   80f92f               | arpl                di, cx
            //   0f95c1               | cmp                 edi, 3
            //   80c13f               | jb                  0x212

        $sequence_3 = { 8a4302 84c0 7408 3c01 7404 }
            // n = 5, score = 400
            //   8a4302               | or                  edx, 0xfffffffc
            //   84c0                 | inc                 edx
            //   7408                 | sub                 edx, 0
            //   3c01                 | je                  0xd91
            //   7404                 | dec                 edx

        $sequence_4 = { 8a4302 84c0 7408 3c01 7404 3c02 }
            // n = 6, score = 400
            //   8a4302               | mov                 dl, al
            //   84c0                 | or                  dl, cl
            //   7408                 | mov                 byte ptr [esi], dl
            //   3c01                 | inc                 esi
            //   7404                 | dec                 edx
            //   3c02                 | or                  edx, 0xffffff00

        $sequence_5 = { 668945ee 8b4604 56 8945f0 e8???????? 59 6a10 }
            // n = 7, score = 200
            //   668945ee             | mov                 ecx, esi
            //   8b4604               | dec                 esp
            //   56                   | mov                 eax, esi
            //   8945f0               | dec                 eax
            //   e8????????           |                     
            //   59                   | xor                 eax, esp
            //   6a10                 | dec                 eax

        $sequence_6 = { f2ae 488bfb 48f7d1 48ffc9 4c2bc1 498bcd }
            // n = 6, score = 200
            //   f2ae                 | jne                 0xf63
            //   488bfb               | xor                 eax, eax
            //   48f7d1               | inc                 eax
            //   48ffc9               | leave               
            //   4c2bc1               | je                  0xf6b
            //   498bcd               | jmp                 0xf68

        $sequence_7 = { 83e203 03c2 c1f802 4863c8 418b0449 418d0c04 418908 }
            // n = 7, score = 200
            //   83e203               | lea                 ecx, dword ptr [esp + 0x432]
            //   03c2                 | dec                 esp
            //   c1f802               | mov                 eax, ebx
            //   4863c8               | xor                 edx, edx
            //   418b0449             | mov                 word ptr [esp + 0x430], di
            //   418d0c04             | inc                 esp
            //   418908               | lea                 ebx, dword ptr [edi + 0x25]

        $sequence_8 = { ff15???????? 4c8bd8 4885c0 75b9 b001 488b5c2430 488b6c2438 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   4c8bd8               | lea                 edi, dword ptr [ebp - 0x27]
            //   4885c0               | rep stosd           dword ptr es:[edi], eax
            //   75b9                 | stosw               word ptr es:[edi], ax
            //   b001                 | push                0
            //   488b5c2430           | push                6
            //   488b6c2438           | mov                 dword ptr [ebp - 0x24a8], eax

        $sequence_9 = { 57 8b7d0c 803f3d 0f84a8000000 8a0f 84c9 7443 }
            // n = 7, score = 200
            //   57                   | movzx               eax, word ptr [0xffffcd97]
            //   8b7d0c               | dec                 eax
            //   803f3d               | lea                 ecx, dword ptr [esp + 0x64]
            //   0f84a8000000         | inc                 ebp
            //   8a0f                 | lea                 eax, dword ptr [edi + 1]
            //   84c9                 | inc                 esp
            //   7443                 | mov                 esp, ebx

    condition:
        7 of them and filesize < 139264
}