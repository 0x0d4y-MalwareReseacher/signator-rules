rule win_electricfish_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.electricfish."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.electricfish"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c744241400000000 56 e8???????? 57 e8???????? 55 e8???????? }
            // n = 7, score = 1200
            //   c744241400000000     | mov                 dword ptr [esp + 0x14], 0
            //   56                   | push                esi
            //   e8????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     
            //   55                   | push                ebp
            //   e8????????           |                     

        $sequence_1 = { c3 837c240c00 740f 8b442408 8b8030010000 c1e806 eb0d }
            // n = 7, score = 1200
            //   c3                   | ret                 
            //   837c240c00           | cmp                 dword ptr [esp + 0xc], 0
            //   740f                 | je                  0x11
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   8b8030010000         | mov                 eax, dword ptr [eax + 0x130]
            //   c1e806               | shr                 eax, 6
            //   eb0d                 | jmp                 0xf

        $sequence_2 = { f7da 56 894c241c 897c2414 89542428 e8???????? 83c404 }
            // n = 7, score = 1200
            //   f7da                 | neg                 edx
            //   56                   | push                esi
            //   894c241c             | mov                 dword ptr [esp + 0x1c], ecx
            //   897c2414             | mov                 dword ptr [esp + 0x14], edi
            //   89542428             | mov                 dword ptr [esp + 0x28], edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_3 = { e8???????? 83c404 3bd8 0f8c60ffffff 8b742410 837e0400 7575 }
            // n = 7, score = 1200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   3bd8                 | cmp                 ebx, eax
            //   0f8c60ffffff         | jl                  0xffffff66
            //   8b742410             | mov                 esi, dword ptr [esp + 0x10]
            //   837e0400             | cmp                 dword ptr [esi + 4], 0
            //   7575                 | jne                 0x77

        $sequence_4 = { e8???????? 83c414 c3 56 e8???????? 55 6a00 }
            // n = 7, score = 1200
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   c3                   | ret                 
            //   56                   | push                esi
            //   e8????????           |                     
            //   55                   | push                ebp
            //   6a00                 | push                0

        $sequence_5 = { e8???????? 83c40c 85c0 0f84edfeffff 8b442418 55 50 }
            // n = 7, score = 1200
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   0f84edfeffff         | je                  0xfffffef3
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   55                   | push                ebp
            //   50                   | push                eax

        $sequence_6 = { f6475420 7511 5e 5d 33c0 5b 83c408 }
            // n = 7, score = 1200
            //   f6475420             | test                byte ptr [edi + 0x54], 0x20
            //   7511                 | jne                 0x13
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   83c408               | add                 esp, 8

        $sequence_7 = { c744240c0c000000 eb28 81fdc8000000 7c0a c744240c0f000000 eb16 33c0 }
            // n = 7, score = 1200
            //   c744240c0c000000     | mov                 dword ptr [esp + 0xc], 0xc
            //   eb28                 | jmp                 0x2a
            //   81fdc8000000         | cmp                 ebp, 0xc8
            //   7c0a                 | jl                  0xc
            //   c744240c0f000000     | mov                 dword ptr [esp + 0xc], 0xf
            //   eb16                 | jmp                 0x18
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { eb0a 50 51 e8???????? 83c408 3bc5 0f8497000000 }
            // n = 7, score = 1200
            //   eb0a                 | jmp                 0xc
            //   50                   | push                eax
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   3bc5                 | cmp                 eax, ebp
            //   0f8497000000         | je                  0x9d

        $sequence_9 = { 83c408 898678020000 83c8ff 5f 898680020000 899e84020000 898688020000 }
            // n = 7, score = 1200
            //   83c408               | add                 esp, 8
            //   898678020000         | mov                 dword ptr [esi + 0x278], eax
            //   83c8ff               | or                  eax, 0xffffffff
            //   5f                   | pop                 edi
            //   898680020000         | mov                 dword ptr [esi + 0x280], eax
            //   899e84020000         | mov                 dword ptr [esi + 0x284], ebx
            //   898688020000         | mov                 dword ptr [esi + 0x288], eax

    condition:
        7 of them and filesize < 3162112
}