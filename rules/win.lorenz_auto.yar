rule win_lorenz_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.lorenz."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lorenz"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? ff55f8 eb0a 6a7f ff15???????? 33c0 8be5 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   ff55f8               | call                dword ptr [ebp - 8]
            //   eb0a                 | jmp                 0xc
            //   6a7f                 | push                0x7f
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   8be5                 | mov                 esp, ebp

        $sequence_1 = { 8d4d80 e8???????? 83f801 0f86aa010000 8d8dc8fdffff e8???????? c645fc10 }
            // n = 7, score = 300
            //   8d4d80               | lea                 ecx, [ebp - 0x80]
            //   e8????????           |                     
            //   83f801               | cmp                 eax, 1
            //   0f86aa010000         | jbe                 0x1b0
            //   8d8dc8fdffff         | lea                 ecx, [ebp - 0x238]
            //   e8????????           |                     
            //   c645fc10             | mov                 byte ptr [ebp - 4], 0x10

        $sequence_2 = { 8b75f8 8b7644 8b0c11 230c06 6b55e428 8b45f8 8b4048 }
            // n = 7, score = 300
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   8b7644               | mov                 esi, dword ptr [esi + 0x44]
            //   8b0c11               | mov                 ecx, dword ptr [ecx + edx]
            //   230c06               | and                 ecx, dword ptr [esi + eax]
            //   6b55e428             | imul                edx, dword ptr [ebp - 0x1c], 0x28
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b4048               | mov                 eax, dword ptr [eax + 0x48]

        $sequence_3 = { 0f84de000000 8b4de8 8b4904 e8???????? 0fb6d0 85d2 0f84be000000 }
            // n = 7, score = 300
            //   0f84de000000         | je                  0xe4
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   e8????????           |                     
            //   0fb6d0               | movzx               edx, al
            //   85d2                 | test                edx, edx
            //   0f84be000000         | je                  0xc4

        $sequence_4 = { 837df800 741d 8b55f8 52 8b45f4 8b08 8b5120 }
            // n = 7, score = 300
            //   837df800             | cmp                 dword ptr [ebp - 8], 0
            //   741d                 | je                  0x1f
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   52                   | push                edx
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b5120               | mov                 edx, dword ptr [ecx + 0x20]

        $sequence_5 = { c645fc02 8b55a0 52 6a01 8b4dc4 e8???????? 8945c0 }
            // n = 7, score = 300
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8b55a0               | mov                 edx, dword ptr [ebp - 0x60]
            //   52                   | push                edx
            //   6a01                 | push                1
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   e8????????           |                     
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax

        $sequence_6 = { 8b4df0 81c194000000 e9???????? 8b4df0 81c1a4000000 e9???????? 8b542408 }
            // n = 7, score = 300
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   81c194000000         | add                 ecx, 0x94
            //   e9????????           |                     
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   81c1a4000000         | add                 ecx, 0xa4
            //   e9????????           |                     
            //   8b542408             | mov                 edx, dword ptr [esp + 8]

        $sequence_7 = { 6880000000 68???????? 0fb645ff 50 6a28 e8???????? 83c410 }
            // n = 7, score = 300
            //   6880000000           | push                0x80
            //   68????????           |                     
            //   0fb645ff             | movzx               eax, byte ptr [ebp - 1]
            //   50                   | push                eax
            //   6a28                 | push                0x28
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

        $sequence_8 = { e8???????? 8945f8 ebba 8b55fc 8b4a50 e8???????? 8945e4 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   ebba                 | jmp                 0xffffffbc
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b4a50               | mov                 ecx, dword ptr [edx + 0x50]
            //   e8????????           |                     
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax

        $sequence_9 = { 83782800 7609 c745fc01000000 eb07 c745fc00000000 8a45fc 8be5 }
            // n = 7, score = 300
            //   83782800             | cmp                 dword ptr [eax + 0x28], 0
            //   7609                 | jbe                 0xb
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   eb07                 | jmp                 9
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   8a45fc               | mov                 al, byte ptr [ebp - 4]
            //   8be5                 | mov                 esp, ebp

    condition:
        7 of them and filesize < 2254848
}