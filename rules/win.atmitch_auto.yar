rule win_atmitch_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.atmitch."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.atmitch"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? ff15???????? e8???????? 8b06 8b4818 83c408 51 }
            // n = 7, score = 100
            //   68????????           |                     
            //   ff15????????         |                     
            //   e8????????           |                     
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b4818               | mov                 ecx, dword ptr [eax + 0x18]
            //   83c408               | add                 esp, 8
            //   51                   | push                ecx

        $sequence_1 = { ff15???????? 50 ff15???????? 6aff b9???????? 8bf0 }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6aff                 | push                -1
            //   b9????????           |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_2 = { e8???????? 8b442424 8b4c2440 64890d00000000 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   8b4c2440             | mov                 ecx, dword ptr [esp + 0x40]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx

        $sequence_3 = { c744242000000000 833d????????02 7f05 e8???????? a1???????? }
            // n = 5, score = 100
            //   c744242000000000     | mov                 dword ptr [esp + 0x20], 0
            //   833d????????02       |                     
            //   7f05                 | jg                  7
            //   e8????????           |                     
            //   a1????????           |                     

        $sequence_4 = { e8???????? 81c428040000 c3 56 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   81c428040000         | add                 esp, 0x428
            //   c3                   | ret                 
            //   56                   | push                esi

        $sequence_5 = { 8b4004 85c0 7409 8b10 }
            // n = 4, score = 100
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   8b10                 | mov                 edx, dword ptr [eax]

        $sequence_6 = { 8d4c2420 c644244c04 ff15???????? 8d4c2420 c644244803 ff15???????? }
            // n = 6, score = 100
            //   8d4c2420             | lea                 ecx, dword ptr [esp + 0x20]
            //   c644244c04           | mov                 byte ptr [esp + 0x4c], 4
            //   ff15????????         |                     
            //   8d4c2420             | lea                 ecx, dword ptr [esp + 0x20]
            //   c644244803           | mov                 byte ptr [esp + 0x48], 3
            //   ff15????????         |                     

        $sequence_7 = { 8d4c2430 e8???????? 8bf0 8bfa 8bce 0bcf 89742424 }
            // n = 7, score = 100
            //   8d4c2430             | lea                 ecx, dword ptr [esp + 0x30]
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8bfa                 | mov                 edi, edx
            //   8bce                 | mov                 ecx, esi
            //   0bcf                 | or                  ecx, edi
            //   89742424             | mov                 dword ptr [esp + 0x24], esi

        $sequence_8 = { 837c246c00 742f 8b442408 8b40f4 50 8d4c240c ff15???????? }
            // n = 7, score = 100
            //   837c246c00           | cmp                 dword ptr [esp + 0x6c], 0
            //   742f                 | je                  0x31
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   8b40f4               | mov                 eax, dword ptr [eax - 0xc]
            //   50                   | push                eax
            //   8d4c240c             | lea                 ecx, dword ptr [esp + 0xc]
            //   ff15????????         |                     

        $sequence_9 = { 89842420040000 56 51 8bcc 8964240c 68???????? ff15???????? }
            // n = 7, score = 100
            //   89842420040000       | mov                 dword ptr [esp + 0x420], eax
            //   56                   | push                esi
            //   51                   | push                ecx
            //   8bcc                 | mov                 ecx, esp
            //   8964240c             | mov                 dword ptr [esp + 0xc], esp
            //   68????????           |                     
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 73728
}