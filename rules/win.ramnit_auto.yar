rule win_ramnit_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.ramnit."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ramnit"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 52 8b4508 8b5d0c 4b f7d3 23c3 }
            // n = 7, score = 4000
            //   51                   | push                ecx
            //   52                   | push                edx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   4b                   | dec                 ebx
            //   f7d3                 | not                 ebx
            //   23c3                 | and                 eax, ebx

        $sequence_1 = { 8a07 3a4510 7407 b800000000 eb02 8bc7 }
            // n = 6, score = 4000
            //   8a07                 | mov                 al, byte ptr [edi]
            //   3a4510               | cmp                 al, byte ptr [ebp + 0x10]
            //   7407                 | je                  9
            //   b800000000           | mov                 eax, 0
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi

        $sequence_2 = { 57 51 8b4d10 8b7d08 }
            // n = 4, score = 4000
            //   57                   | push                edi
            //   51                   | push                ecx
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]

        $sequence_3 = { 8b450c 83e801 89450c 8b4514 83e801 }
            // n = 5, score = 4000
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   83e801               | sub                 eax, 1
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   83e801               | sub                 eax, 1

        $sequence_4 = { 8b7d08 037d0c b300 881f 5b 5f }
            // n = 6, score = 4000
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   037d0c               | add                 edi, dword ptr [ebp + 0xc]
            //   b300                 | mov                 bl, 0
            //   881f                 | mov                 byte ptr [edi], bl
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi

        $sequence_5 = { 668918 8b45fc 5e 5f }
            // n = 4, score = 4000
            //   668918               | mov                 word ptr [eax], bx
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_6 = { c21000 55 8bec 83c4fc 56 57 51 }
            // n = 7, score = 4000
            //   c21000               | ret                 0x10
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83c4fc               | add                 esp, -4
            //   56                   | push                esi
            //   57                   | push                edi
            //   51                   | push                ecx

        $sequence_7 = { eb02 8bc7 5a 5b 59 5f 5e }
            // n = 7, score = 4000
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi
            //   5a                   | pop                 edx
            //   5b                   | pop                 ebx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_8 = { 837d0c00 761d fc 8b4d0c 8b7d08 8a4510 }
            // n = 6, score = 4000
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0
            //   761d                 | jbe                 0x1f
            //   fc                   | cld                 
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8a4510               | mov                 al, byte ptr [ebp + 0x10]

        $sequence_9 = { c9 c20800 55 8bec 52 53 }
            // n = 6, score = 4000
            //   c9                   | leave               
            //   c20800               | ret                 8
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   52                   | push                edx
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 470016
}