rule win_doubleback_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.doubleback."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doubleback"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb3b b90b070000 eb34 2d63450000 7428 }
            // n = 5, score = 400
            //   eb3b                 | inc                 dx
            //   b90b070000           | mov                 dword ptr [ebp + eax*2], eax
            //   eb34                 | je                  0x1153
            //   2d63450000           | mov                 ecx, dword ptr [esi + 0x416]
            //   7428                 | inc                 ecx

        $sequence_1 = { eb13 b975070000 eb0c b96f070000 eb05 b911070000 }
            // n = 6, score = 400
            //   eb13                 | lea                 eax, [ebp - 4]
            //   b975070000           | push                eax
            //   eb0c                 | push                edi
            //   b96f070000           | mov                 esi, eax
            //   eb05                 | push                esi
            //   b911070000           | push                edi

        $sequence_2 = { 741c 3dd73a0000 740e 3dab3f0000 755e b9ad060000 }
            // n = 6, score = 400
            //   741c                 | push                ebx
            //   3dd73a0000           | inc                 ebx
            //   740e                 | sub                 dword ptr [ebp + 0x10], 1
            //   3dab3f0000           | mov                 eax, dword ptr [ebp - 4]
            //   755e                 | jne                 0x862
            //   b9ad060000           | pop                 edi

        $sequence_3 = { b9a7060000 eb50 b947060000 eb49 b9e7050000 }
            // n = 5, score = 400
            //   b9a7060000           | arpl                bx, cx
            //   eb50                 | inc                 ecx
            //   b947060000           | add                 ebx, ebx
            //   eb49                 | inc                 sp
            //   b9e7050000           | mov                 dword ptr [edi + ecx*2 + 4], ecx

        $sequence_4 = { 85c0 7508 c60703 e9???????? }
            // n = 4, score = 400
            //   85c0                 | cmp                 word ptr [ecx], ax
            //   7508                 | jne                 0xe82
            //   c60703               | dec                 esp
            //   e9????????           |                     

        $sequence_5 = { 755e b9ad060000 eb57 b9a7060000 eb50 }
            // n = 5, score = 400
            //   755e                 | add                 edi, 0x929
            //   b9ad060000           | dec                 eax
            //   eb57                 | mov                 dword ptr [edi + 0x41a], ebp
            //   b9a7060000           | dec                 ecx
            //   eb50                 | mov                 ecx, dword ptr [esi]

        $sequence_6 = { b9e3050000 eb3b b90b070000 eb34 2d63450000 }
            // n = 5, score = 400
            //   b9e3050000           | arpl                bx, ax
            //   eb3b                 | mov                 word ptr [ebx + esi*2 + 2], dx
            //   b90b070000           | mov                 word ptr [ebx + esi*2 + 4], ax
            //   eb34                 | push                0x74
            //   2d63450000           | pop                 eax

        $sequence_7 = { 3bc2 774f 7446 3d00280000 7438 3d5a290000 742a }
            // n = 7, score = 400
            //   3bc2                 | push                0x6f
            //   774f                 | mov                 word ptr [ecx], ax
            //   7446                 | pop                 eax
            //   3d00280000           | push                0x66
            //   7438                 | mov                 word ptr [ecx + 2], ax
            //   3d5a290000           | pop                 eax
            //   742a                 | push                0x6f

        $sequence_8 = { 774f 7446 3d00280000 7438 }
            // n = 4, score = 400
            //   774f                 | push                esi
            //   7446                 | mov                 edi, ecx
            //   3d00280000           | push                ecx
            //   7438                 | push                eax

        $sequence_9 = { 7438 3d5a290000 742a 3d39380000 741c }
            // n = 5, score = 400
            //   7438                 | mov                 dword ptr [ebp + 0xd8], esp
            //   3d5a290000           | dec                 eax
            //   742a                 | mov                 ecx, dword ptr [ebp + 0xd8]
            //   3d39380000           | dec                 eax
            //   741c                 | test                ecx, ecx

    condition:
        7 of them and filesize < 106496
}