rule win_doubleback_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.doubleback."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doubleback"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb34 2d63450000 7428 2d57020000 }
            // n = 4, score = 400
            //   eb34                 | cmp                 dword ptr [ecx], 0
            //   2d63450000           | je                  0x45c
            //   7428                 | push                0x8000
            //   2d57020000           | mov                 dword ptr [ebp - 4], eax

        $sequence_1 = { b90b070000 eb34 2d63450000 7428 2d57020000 }
            // n = 5, score = 400
            //   b90b070000           | mov                 word ptr [esi + edi*2 + 0x618], ax
            //   eb34                 | push                0x24
            //   2d63450000           | pop                 eax
            //   7428                 | push                0x70
            //   2d57020000           | pop                 ecx

        $sequence_2 = { 751a b9d4070000 eb13 b975070000 eb0c b96f070000 }
            // n = 6, score = 400
            //   751a                 | je                  0x37a
            //   b9d4070000           | dec                 eax
            //   eb13                 | mov                 eax, dword ptr [esi + 0x48]
            //   b975070000           | dec                 eax
            //   eb0c                 | test                eax, eax
            //   b96f070000           | inc                 ecx

        $sequence_3 = { 3bc2 774f 7446 3d00280000 }
            // n = 4, score = 400
            //   3bc2                 | mov                 esi, eax
            //   774f                 | xor                 edx, edx
            //   7446                 | xor                 edx, edx
            //   3d00280000           | inc                 ecx

        $sequence_4 = { b947060000 eb49 b9e7050000 eb42 }
            // n = 4, score = 400
            //   b947060000           | dec                 esp
            //   eb49                 | lea                 eax, [edx + eax]
            //   b9e7050000           | dec                 esp
            //   eb42                 | mov                 edx, edx

        $sequence_5 = { eb0c b96f070000 eb05 b911070000 }
            // n = 4, score = 400
            //   eb0c                 | push                eax
            //   b96f070000           | push                dword ptr [ebp - 8]
            //   eb05                 | mov                 dword ptr [ebp - 0xc], 0x104
            //   b911070000           | mov                 dword ptr [ebp - 0x10], eax

        $sequence_6 = { b9ad060000 eb57 b9a7060000 eb50 b947060000 }
            // n = 5, score = 400
            //   b9ad060000           | mov                 edx, dword ptr [edi]
            //   eb57                 | lea                 ecx, [ebp - 0x10]
            //   b9a7060000           | pop                 ecx
            //   eb50                 | test                eax, eax
            //   b947060000           | jne                 0x4e0

        $sequence_7 = { 740e 3dab3f0000 755e b9ad060000 }
            // n = 4, score = 400
            //   740e                 | mov                 dword ptr [ebp - 0x50], esp
            //   3dab3f0000           | dec                 eax
            //   755e                 | mov                 ebx, dword ptr [ebp - 0x50]
            //   b9ad060000           | dec                 eax

        $sequence_8 = { b947060000 eb49 b9e7050000 eb42 b9e3050000 eb3b b90b070000 }
            // n = 7, score = 400
            //   b947060000           | xor                 ecx, ecx
            //   eb49                 | dec                 eax
            //   b9e7050000           | add                 ecx, dword ptr [ebx]
            //   eb42                 | inc                 ebp
            //   b9e3050000           | mov                 eax, dword ptr [esi]
            //   eb3b                 | inc                 ebp
            //   b90b070000           | mov                 ecx, dword ptr [esi]

        $sequence_9 = { b9d4070000 eb13 b975070000 eb0c b96f070000 }
            // n = 5, score = 400
            //   b9d4070000           | jne                 0x4f4
            //   eb13                 | add                 edi, 0x929
            //   b975070000           | dec                 ebx
            //   eb0c                 | pop                 ecx
            //   b96f070000           | test                esi, esi

    condition:
        7 of them and filesize < 106496
}