rule win_oddjob_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.oddjob."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oddjob"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8bf8 59 897de4 85ff 7426 57 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   59                   | pop                 ecx
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   85ff                 | test                edi, edi
            //   7426                 | je                  0x28
            //   57                   | push                edi

        $sequence_1 = { 50 894508 e8???????? 8bd8 59 895de8 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   59                   | pop                 ecx
            //   895de8               | mov                 dword ptr [ebp - 0x18], ebx

        $sequence_2 = { eb02 8bc7 8b4008 2403 3c02 0f8441010000 56 }
            // n = 7, score = 100
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi
            //   8b4008               | mov                 eax, dword ptr [eax + 8]
            //   2403                 | and                 al, 3
            //   3c02                 | cmp                 al, 2
            //   0f8441010000         | je                  0x147
            //   56                   | push                esi

        $sequence_3 = { 33db 56 57 8945cc 33c0 885dec 8d7ded }
            // n = 7, score = 100
            //   33db                 | xor                 ebx, ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   33c0                 | xor                 eax, eax
            //   885dec               | mov                 byte ptr [ebp - 0x14], bl
            //   8d7ded               | lea                 edi, [ebp - 0x13]

        $sequence_4 = { f3a5 33c0 8b88d8354100 894c0460 8b8818364100 898c04a4000000 }
            // n = 6, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   33c0                 | xor                 eax, eax
            //   8b88d8354100         | mov                 ecx, dword ptr [eax + 0x4135d8]
            //   894c0460             | mov                 dword ptr [esp + eax + 0x60], ecx
            //   8b8818364100         | mov                 ecx, dword ptr [eax + 0x413618]
            //   898c04a4000000       | mov                 dword ptr [esp + eax + 0xa4], ecx

        $sequence_5 = { 56 33db 33ff 8d842438010000 }
            // n = 4, score = 100
            //   56                   | push                esi
            //   33db                 | xor                 ebx, ebx
            //   33ff                 | xor                 edi, edi
            //   8d842438010000       | lea                 eax, [esp + 0x138]

        $sequence_6 = { c685a9fdffff4b c685aafdffff20 c685abfdffffeb c685acfdffff07 c685adfdffffa8 c685aefdffff80 c685affdffff74 }
            // n = 7, score = 100
            //   c685a9fdffff4b       | mov                 byte ptr [ebp - 0x257], 0x4b
            //   c685aafdffff20       | mov                 byte ptr [ebp - 0x256], 0x20
            //   c685abfdffffeb       | mov                 byte ptr [ebp - 0x255], 0xeb
            //   c685acfdffff07       | mov                 byte ptr [ebp - 0x254], 7
            //   c685adfdffffa8       | mov                 byte ptr [ebp - 0x253], 0xa8
            //   c685aefdffff80       | mov                 byte ptr [ebp - 0x252], 0x80
            //   c685affdffff74       | mov                 byte ptr [ebp - 0x251], 0x74

        $sequence_7 = { 8d4f44 56 8d95a8feffff 8d8574ffffff }
            // n = 4, score = 100
            //   8d4f44               | lea                 ecx, [edi + 0x44]
            //   56                   | push                esi
            //   8d95a8feffff         | lea                 edx, [ebp - 0x158]
            //   8d8574ffffff         | lea                 eax, [ebp - 0x8c]

        $sequence_8 = { 83e71f 6bff24 8bc2 c1f805 8b0485007b4100 8b0407 }
            // n = 6, score = 100
            //   83e71f               | and                 edi, 0x1f
            //   6bff24               | imul                edi, edi, 0x24
            //   8bc2                 | mov                 eax, edx
            //   c1f805               | sar                 eax, 5
            //   8b0485007b4100       | mov                 eax, dword ptr [eax*4 + 0x417b00]
            //   8b0407               | mov                 eax, dword ptr [edi + eax]

        $sequence_9 = { 59 33c1 c1e008 33d1 0bc2 0fb65602 }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   33c1                 | xor                 eax, ecx
            //   c1e008               | shl                 eax, 8
            //   33d1                 | xor                 edx, ecx
            //   0bc2                 | or                  eax, edx
            //   0fb65602             | movzx               edx, byte ptr [esi + 2]

    condition:
        7 of them and filesize < 221184
}