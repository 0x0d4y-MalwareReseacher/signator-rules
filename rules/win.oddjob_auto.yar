rule win_oddjob_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.oddjob."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oddjob"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 894508 e8???????? 8bd8 59 895de8 85db }
            // n = 7, score = 100
            //   50                   | push                eax
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   59                   | pop                 ecx
            //   895de8               | mov                 dword ptr [ebp - 0x18], ebx
            //   85db                 | test                ebx, ebx

        $sequence_1 = { 889d57f8ffff 889d58f8ffff 889d59f8ffff 889d5af8ffff 889d5bf8ffff 889d5cf8ffff 889d5df8ffff }
            // n = 7, score = 100
            //   889d57f8ffff         | mov                 byte ptr [ebp - 0x7a9], bl
            //   889d58f8ffff         | mov                 byte ptr [ebp - 0x7a8], bl
            //   889d59f8ffff         | mov                 byte ptr [ebp - 0x7a7], bl
            //   889d5af8ffff         | mov                 byte ptr [ebp - 0x7a6], bl
            //   889d5bf8ffff         | mov                 byte ptr [ebp - 0x7a5], bl
            //   889d5cf8ffff         | mov                 byte ptr [ebp - 0x7a4], bl
            //   889d5df8ffff         | mov                 byte ptr [ebp - 0x7a3], bl

        $sequence_2 = { 8bf8 3bfb 59 7429 8d04b7 50 57 }
            // n = 7, score = 100
            //   8bf8                 | mov                 edi, eax
            //   3bfb                 | cmp                 edi, ebx
            //   59                   | pop                 ecx
            //   7429                 | je                  0x2b
            //   8d04b7               | lea                 eax, [edi + esi*4]
            //   50                   | push                eax
            //   57                   | push                edi

        $sequence_3 = { 6a07 59 8d7dce f3ab 66ab 33c0 }
            // n = 6, score = 100
            //   6a07                 | push                7
            //   59                   | pop                 ecx
            //   8d7dce               | lea                 edi, [ebp - 0x32]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { 8bc6 0bc3 742d 8b85ecfbffff 99 52 }
            // n = 6, score = 100
            //   8bc6                 | mov                 eax, esi
            //   0bc3                 | or                  eax, ebx
            //   742d                 | je                  0x2f
            //   8b85ecfbffff         | mov                 eax, dword ptr [ebp - 0x414]
            //   99                   | cdq                 
            //   52                   | push                edx

        $sequence_5 = { c68557fbffff34 c68558fbffff29 c68559fbffffc8 c6855afbffff53 c6855bfbffff8b c6855cfbffff5c c6855dfbffff24 }
            // n = 7, score = 100
            //   c68557fbffff34       | mov                 byte ptr [ebp - 0x4a9], 0x34
            //   c68558fbffff29       | mov                 byte ptr [ebp - 0x4a8], 0x29
            //   c68559fbffffc8       | mov                 byte ptr [ebp - 0x4a7], 0xc8
            //   c6855afbffff53       | mov                 byte ptr [ebp - 0x4a6], 0x53
            //   c6855bfbffff8b       | mov                 byte ptr [ebp - 0x4a5], 0x8b
            //   c6855cfbffff5c       | mov                 byte ptr [ebp - 0x4a4], 0x5c
            //   c6855dfbffff24       | mov                 byte ptr [ebp - 0x4a3], 0x24

        $sequence_6 = { 53 8d45c4 50 ff36 8b45dc 83c007 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   8d45c4               | lea                 eax, [ebp - 0x3c]
            //   50                   | push                eax
            //   ff36                 | push                dword ptr [esi]
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   83c007               | add                 eax, 7

        $sequence_7 = { 8d9c2430010000 8dbc24d0020000 e8???????? 8d9c2400020000 85f6 7504 8d5c2460 }
            // n = 7, score = 100
            //   8d9c2430010000       | lea                 ebx, [esp + 0x130]
            //   8dbc24d0020000       | lea                 edi, [esp + 0x2d0]
            //   e8????????           |                     
            //   8d9c2400020000       | lea                 ebx, [esp + 0x200]
            //   85f6                 | test                esi, esi
            //   7504                 | jne                 6
            //   8d5c2460             | lea                 ebx, [esp + 0x60]

        $sequence_8 = { c68506fbffff04 c68507fbffff8b c68508fbffff3c c68509fbffff24 c6850afbffff89 c6850bfbffffca }
            // n = 6, score = 100
            //   c68506fbffff04       | mov                 byte ptr [ebp - 0x4fa], 4
            //   c68507fbffff8b       | mov                 byte ptr [ebp - 0x4f9], 0x8b
            //   c68508fbffff3c       | mov                 byte ptr [ebp - 0x4f8], 0x3c
            //   c68509fbffff24       | mov                 byte ptr [ebp - 0x4f7], 0x24
            //   c6850afbffff89       | mov                 byte ptr [ebp - 0x4f6], 0x89
            //   c6850bfbffffca       | mov                 byte ptr [ebp - 0x4f5], 0xca

        $sequence_9 = { c685b6faffff24 c685b7faffff08 c685b8faffff6a c685b9faffff40 c685bafaffff68 889dbbfaffff }
            // n = 6, score = 100
            //   c685b6faffff24       | mov                 byte ptr [ebp - 0x54a], 0x24
            //   c685b7faffff08       | mov                 byte ptr [ebp - 0x549], 8
            //   c685b8faffff6a       | mov                 byte ptr [ebp - 0x548], 0x6a
            //   c685b9faffff40       | mov                 byte ptr [ebp - 0x547], 0x40
            //   c685bafaffff68       | mov                 byte ptr [ebp - 0x546], 0x68
            //   889dbbfaffff         | mov                 byte ptr [ebp - 0x545], bl

    condition:
        7 of them and filesize < 221184
}