rule win_oddjob_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.oddjob."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.oddjob"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 0f857afdffff 8b958494ffff 56 8d4d9c e8???????? }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   0f857afdffff         | jne                 0xfffffd80
            //   8b958494ffff         | mov                 edx, dword ptr [ebp - 0x6b7c]
            //   56                   | push                esi
            //   8d4d9c               | lea                 ecx, [ebp - 0x64]
            //   e8????????           |                     

        $sequence_1 = { 889d68f9ffff 889d69f9ffff c6856af9ffff66 c6856bf9ffff81 c6856cf9ffff7b }
            // n = 5, score = 100
            //   889d68f9ffff         | mov                 byte ptr [ebp - 0x698], bl
            //   889d69f9ffff         | mov                 byte ptr [ebp - 0x697], bl
            //   c6856af9ffff66       | mov                 byte ptr [ebp - 0x696], 0x66
            //   c6856bf9ffff81       | mov                 byte ptr [ebp - 0x695], 0x81
            //   c6856cf9ffff7b       | mov                 byte ptr [ebp - 0x694], 0x7b

        $sequence_2 = { c6858af8ffff6f c6858bf8ffffe8 c6858cf8ffff5e c6858df8ffff05 889d8ef8ffff 889d8ff8ffff }
            // n = 6, score = 100
            //   c6858af8ffff6f       | mov                 byte ptr [ebp - 0x776], 0x6f
            //   c6858bf8ffffe8       | mov                 byte ptr [ebp - 0x775], 0xe8
            //   c6858cf8ffff5e       | mov                 byte ptr [ebp - 0x774], 0x5e
            //   c6858df8ffff05       | mov                 byte ptr [ebp - 0x773], 5
            //   889d8ef8ffff         | mov                 byte ptr [ebp - 0x772], bl
            //   889d8ff8ffff         | mov                 byte ptr [ebp - 0x771], bl

        $sequence_3 = { 898dbcf7ffff 899dc8f7ffff c685d0f7ffff60 c685d1f7ffff6a }
            // n = 4, score = 100
            //   898dbcf7ffff         | mov                 dword ptr [ebp - 0x844], ecx
            //   899dc8f7ffff         | mov                 dword ptr [ebp - 0x838], ebx
            //   c685d0f7ffff60       | mov                 byte ptr [ebp - 0x830], 0x60
            //   c685d1f7ffff6a       | mov                 byte ptr [ebp - 0x82f], 0x6a

        $sequence_4 = { 8845b4 8845ba 8845d4 8845da 8845df 8845fa 8845fb }
            // n = 7, score = 100
            //   8845b4               | mov                 byte ptr [ebp - 0x4c], al
            //   8845ba               | mov                 byte ptr [ebp - 0x46], al
            //   8845d4               | mov                 byte ptr [ebp - 0x2c], al
            //   8845da               | mov                 byte ptr [ebp - 0x26], al
            //   8845df               | mov                 byte ptr [ebp - 0x21], al
            //   8845fa               | mov                 byte ptr [ebp - 6], al
            //   8845fb               | mov                 byte ptr [ebp - 5], al

        $sequence_5 = { 7cec 8d442418 50 ff7510 ff750c 6a10 58 }
            // n = 7, score = 100
            //   7cec                 | jl                  0xffffffee
            //   8d442418             | lea                 eax, [esp + 0x18]
            //   50                   | push                eax
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6a10                 | push                0x10
            //   58                   | pop                 eax

        $sequence_6 = { 85c0 751e 8b45f8 8b08 57 53 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   751e                 | jne                 0x20
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   57                   | push                edi
            //   53                   | push                ebx

        $sequence_7 = { c645ab51 c645ac6a c645ad04 8845ae c645afb3 c645b082 885db1 }
            // n = 7, score = 100
            //   c645ab51             | mov                 byte ptr [ebp - 0x55], 0x51
            //   c645ac6a             | mov                 byte ptr [ebp - 0x54], 0x6a
            //   c645ad04             | mov                 byte ptr [ebp - 0x53], 4
            //   8845ae               | mov                 byte ptr [ebp - 0x52], al
            //   c645afb3             | mov                 byte ptr [ebp - 0x51], 0xb3
            //   c645b082             | mov                 byte ptr [ebp - 0x50], 0x82
            //   885db1               | mov                 byte ptr [ebp - 0x4f], bl

        $sequence_8 = { 7522 33c0 40 3985f0feffff 740b 83bdf0feffff00 7402 }
            // n = 7, score = 100
            //   7522                 | jne                 0x24
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   3985f0feffff         | cmp                 dword ptr [ebp - 0x110], eax
            //   740b                 | je                  0xd
            //   83bdf0feffff00       | cmp                 dword ptr [ebp - 0x110], 0
            //   7402                 | je                  4

        $sequence_9 = { 83c304 899de8fbffff 8b5bfc 85db }
            // n = 4, score = 100
            //   83c304               | add                 ebx, 4
            //   899de8fbffff         | mov                 dword ptr [ebp - 0x418], ebx
            //   8b5bfc               | mov                 ebx, dword ptr [ebx - 4]
            //   85db                 | test                ebx, ebx

    condition:
        7 of them and filesize < 221184
}