rule win_enfal_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.enfal."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.enfal"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ebf6 8b4c2408 6a01 58 41 3bc8 }
            // n = 6, score = 200
            //   ebf6                 | jmp                 0xfffffff8
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   6a01                 | push                1
            //   58                   | pop                 eax
            //   41                   | inc                 ecx
            //   3bc8                 | cmp                 ecx, eax

        $sequence_1 = { 68???????? 50 e8???????? 83c410 8b461c 33ff 8d8dfcfeffff }
            // n = 7, score = 200
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8b461c               | mov                 eax, dword ptr [esi + 0x1c]
            //   33ff                 | xor                 edi, edi
            //   8d8dfcfeffff         | lea                 ecx, [ebp - 0x104]

        $sequence_2 = { 8945ec 0f86a6000000 894df4 8955f8 }
            // n = 4, score = 200
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   0f86a6000000         | jbe                 0xac
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8955f8               | mov                 dword ptr [ebp - 8], edx

        $sequence_3 = { 750e 807f0152 7528 807f1141 }
            // n = 4, score = 200
            //   750e                 | jne                 0x10
            //   807f0152             | cmp                 byte ptr [edi + 1], 0x52
            //   7528                 | jne                 0x2a
            //   807f1141             | cmp                 byte ptr [edi + 0x11], 0x41

        $sequence_4 = { 57 50 6a00 6a01 ff7608 ff15???????? 8bd8 }
            // n = 7, score = 200
            //   57                   | push                edi
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   ff7608               | push                dword ptr [esi + 8]
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax

        $sequence_5 = { e8???????? 8d85b4fdffff 57 50 e8???????? 8b45ec 83c444 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8d85b4fdffff         | lea                 eax, [ebp - 0x24c]
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   83c444               | add                 esp, 0x44

        $sequence_6 = { 8d859cfeffff 50 e8???????? 8945fc 8d45fc }
            // n = 5, score = 200
            //   8d859cfeffff         | lea                 eax, [ebp - 0x164]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8d45fc               | lea                 eax, [ebp - 4]

        $sequence_7 = { ff7608 ff15???????? 8bd8 85db 0f84c9000000 8b7e08 }
            // n = 6, score = 200
            //   ff7608               | push                dword ptr [esi + 8]
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   85db                 | test                ebx, ebx
            //   0f84c9000000         | je                  0xcf
            //   8b7e08               | mov                 edi, dword ptr [esi + 8]

        $sequence_8 = { 8b4df0 8908 ff45fc 8345f804 8b45fc }
            // n = 5, score = 200
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   ff45fc               | inc                 dword ptr [ebp - 4]
            //   8345f804             | add                 dword ptr [ebp - 8], 4
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_9 = { 8d85d4feffff 50 e8???????? ff75f4 c745f001000000 ff7508 }
            // n = 6, score = 200
            //   8d85d4feffff         | lea                 eax, [ebp - 0x12c]
            //   50                   | push                eax
            //   e8????????           |                     
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   ff7508               | push                dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 65536
}