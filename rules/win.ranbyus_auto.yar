rule win_ranbyus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.ranbyus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ranbyus"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6801200000 e8???????? 8bf0 59 }
            // n = 4, score = 1100
            //   6801200000           | push                0x2001
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx

        $sequence_1 = { ff7608 8bce ff7604 57 e8???????? }
            // n = 5, score = 1100
            //   ff7608               | push                dword ptr [esi + 8]
            //   8bce                 | mov                 ecx, esi
            //   ff7604               | push                dword ptr [esi + 4]
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_2 = { 48 75f7 eb01 40 }
            // n = 4, score = 1100
            //   48                   | dec                 eax
            //   75f7                 | jne                 0xfffffff9
            //   eb01                 | jmp                 3
            //   40                   | inc                 eax

        $sequence_3 = { 59 8d4d0c e8???????? 8b4508 }
            // n = 4, score = 1100
            //   59                   | pop                 ecx
            //   8d4d0c               | lea                 ecx, [ebp + 0xc]
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_4 = { 0fafc1 c1e80f 03442404 c3 }
            // n = 4, score = 1100
            //   0fafc1               | imul                eax, ecx
            //   c1e80f               | shr                 eax, 0xf
            //   03442404             | add                 eax, dword ptr [esp + 4]
            //   c3                   | ret                 

        $sequence_5 = { 8b442414 6a00 894608 8b44241c 56 }
            // n = 5, score = 1100
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   6a00                 | push                0
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   56                   | push                esi

        $sequence_6 = { 7436 8b442410 85c0 742e a807 752a }
            // n = 6, score = 1100
            //   7436                 | je                  0x38
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   85c0                 | test                eax, eax
            //   742e                 | je                  0x30
            //   a807                 | test                al, 7
            //   752a                 | jne                 0x2c

        $sequence_7 = { 75f1 84c0 0f84b9000000 46 803e45 }
            // n = 5, score = 1100
            //   75f1                 | jne                 0xfffffff3
            //   84c0                 | test                al, al
            //   0f84b9000000         | je                  0xbf
            //   46                   | inc                 esi
            //   803e45               | cmp                 byte ptr [esi], 0x45

        $sequence_8 = { 56 6a23 e8???????? 8bf0 }
            // n = 4, score = 1100
            //   56                   | push                esi
            //   6a23                 | push                0x23
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_9 = { 56 8bf1 c706???????? eb07 }
            // n = 4, score = 1100
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   c706????????         |                     
            //   eb07                 | jmp                 9

    condition:
        7 of them and filesize < 638976
}