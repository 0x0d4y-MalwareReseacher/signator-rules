rule win_vskimmer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.vskimmer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.vskimmer"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0810 5d c20400 55 }
            // n = 4, score = 100
            //   0810                 | or                  byte ptr [eax], dl
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   55                   | push                ebp

        $sequence_1 = { 56 6a00 ffd7 33f6 56 ffd3 eb02 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   6a00                 | push                0
            //   ffd7                 | call                edi
            //   33f6                 | xor                 esi, esi
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   eb02                 | jmp                 4

        $sequence_2 = { 8d4db8 50 ff75c8 53 }
            // n = 4, score = 100
            //   8d4db8               | lea                 ecx, dword ptr [ebp - 0x48]
            //   50                   | push                eax
            //   ff75c8               | push                dword ptr [ebp - 0x38]
            //   53                   | push                ebx

        $sequence_3 = { e8???????? 83c420 53 6a01 8d8dc8fcffff e8???????? e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c420               | add                 esp, 0x20
            //   53                   | push                ebx
            //   6a01                 | push                1
            //   8d8dc8fcffff         | lea                 ecx, dword ptr [ebp - 0x338]
            //   e8????????           |                     
            //   e8????????           |                     

        $sequence_4 = { 741c 56 8b7510 3bfe }
            // n = 4, score = 100
            //   741c                 | je                  0x1e
            //   56                   | push                esi
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]
            //   3bfe                 | cmp                 edi, esi

        $sequence_5 = { 8b471c 0f95c2 0fb6d2 52 8b55fc ffb220020000 8d5001 }
            // n = 7, score = 100
            //   8b471c               | mov                 eax, dword ptr [edi + 0x1c]
            //   0f95c2               | setne               dl
            //   0fb6d2               | movzx               edx, dl
            //   52                   | push                edx
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   ffb220020000         | push                dword ptr [edx + 0x220]
            //   8d5001               | lea                 edx, dword ptr [eax + 1]

        $sequence_6 = { 59 8945e0 85c0 7461 8d0cbd20664200 8901 }
            // n = 6, score = 100
            //   59                   | pop                 ecx
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   85c0                 | test                eax, eax
            //   7461                 | je                  0x63
            //   8d0cbd20664200       | lea                 ecx, dword ptr [edi*4 + 0x426620]
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_7 = { f7464400000200 740d 6a01 8bce e8???????? 84c0 7508 }
            // n = 7, score = 100
            //   f7464400000200       | test                dword ptr [esi + 0x44], 0x20000
            //   740d                 | je                  0xf
            //   6a01                 | push                1
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7508                 | jne                 0xa

        $sequence_8 = { 8bec 56 8bf1 8b4604 3906 7709 }
            // n = 6, score = 100
            //   8bec                 | mov                 ebp, esp
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   3906                 | cmp                 dword ptr [esi], eax
            //   7709                 | ja                  0xb

        $sequence_9 = { 89481c 894820 66895024 894828 5d c20800 }
            // n = 6, score = 100
            //   89481c               | mov                 dword ptr [eax + 0x1c], ecx
            //   894820               | mov                 dword ptr [eax + 0x20], ecx
            //   66895024             | mov                 word ptr [eax + 0x24], dx
            //   894828               | mov                 dword ptr [eax + 0x28], ecx
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8

    condition:
        7 of them and filesize < 376832
}