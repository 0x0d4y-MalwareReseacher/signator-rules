rule win_tiny_turla_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.tiny_turla."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tiny_turla"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b902000000 41c7042402000000 e8???????? 498907 4885c0 }
            // n = 5, score = 100
            //   b902000000           | xor                 eax, eax
            //   41c7042402000000     | inc                 ebp
            //   e8????????           |                     
            //   498907               | test                ch, ch
            //   4885c0               | jne                 0x7bb

        $sequence_1 = { ff15???????? b005 e9???????? 4533c9 48c7442458ffffffff 4c8d4580 48c7442460ffffffff }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   b005                 | dec                 eax
            //   e9????????           |                     
            //   4533c9               | mov                 ecx, ebx
            //   48c7442458ffffffff     | dec    eax
            //   4c8d4580             | test                eax, eax
            //   48c7442460ffffffff     | jne    0x1265

        $sequence_2 = { 4885c0 753c 488b4c2468 33d2 ff15???????? 488b4d30 }
            // n = 6, score = 100
            //   4885c0               | test                eax, eax
            //   753c                 | jne                 0xbfc
            //   488b4c2468           | dec                 eax
            //   33d2                 | mov                 dword ptr [esp + 0x50], 0xffffffff
            //   ff15????????         |                     
            //   488b4d30             | test                eax, eax

        $sequence_3 = { c1e104 4889742458 48897c2430 e8???????? 498907 }
            // n = 5, score = 100
            //   c1e104               | mov                 byte ptr [ebp + 0x6f], ch
            //   4889742458           | inc                 esp
            //   48897c2430           | mov                 dword ptr [ebp + 0x7f], ecx
            //   e8????????           |                     
            //   498907               | inc                 ebp

        $sequence_4 = { 3bc3 7407 b001 e9???????? 33d2 488d4d80 }
            // n = 6, score = 100
            //   3bc3                 | cmp                 eax, ecx
            //   7407                 | je                  0xbe2
            //   b001                 | xor                 eax, eax
            //   e9????????           |                     
            //   33d2                 | dec                 eax
            //   488d4d80             | mov                 edx, dword ptr [ebp - 0x18]

        $sequence_5 = { 413b3e 72cb 488b5c2450 488b742458 }
            // n = 4, score = 100
            //   413b3e               | dec                 eax
            //   72cb                 | mov                 ecx, ebx
            //   488b5c2450           | xor                 edx, edx
            //   488b742458           | inc                 esp

        $sequence_6 = { 85c0 0f8525020000 488b4d77 488d4567 }
            // n = 4, score = 100
            //   85c0                 | mov                 ecx, eax
            //   0f8525020000         | dec                 eax
            //   488b4d77             | lea                 ebx, dword ptr [esi + 0x10]
            //   488d4567             | dec                 eax

        $sequence_7 = { 89457f 44396d67 7410 488bcb ff15???????? }
            // n = 5, score = 100
            //   89457f               | mov                 ecx, dword ptr [esp + 0x58]
            //   44396d67             | dec                 eax
            //   7410                 | mov                 edx, edi
            //   488bcb               | dec                 eax
            //   ff15????????         |                     

        $sequence_8 = { 5d c3 488b4de0 4c8d4538 488d55e8 e8???????? }
            // n = 6, score = 100
            //   5d                   | dec                 eax
            //   c3                   | mov                 dword ptr [ebx], ecx
            //   488b4de0             | dec                 eax
            //   4c8d4538             | mov                 ecx, dword ptr [ebp - 0x79]
            //   488d55e8             | lea                 edx, dword ptr [edi + edi]
            //   e8????????           |                     

        $sequence_9 = { 85c0 410f45dd e9???????? 448b457f }
            // n = 4, score = 100
            //   85c0                 | lea                 ecx, dword ptr [eax + 0x20]
            //   410f45dd             | inc                 esp
            //   e9????????           |                     
            //   448b457f             | lea                 eax, dword ptr [edx + 0x18]

    condition:
        7 of them and filesize < 51200
}