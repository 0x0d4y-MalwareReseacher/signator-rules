rule win_regretlocker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.regretlocker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.regretlocker"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 8d8524ffffff 50 e8???????? f20f10450c 83c418 f20f5e4514 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d8524ffffff         | lea                 eax, [ebp - 0xdc]
            //   50                   | push                eax
            //   e8????????           |                     
            //   f20f10450c           | movsd               xmm0, qword ptr [ebp + 0xc]
            //   83c418               | add                 esp, 0x18
            //   f20f5e4514           | divsd               xmm0, qword ptr [ebp + 0x14]

        $sequence_1 = { 83d600 6a18 58 03d8 3b5de0 75d6 0facf714 }
            // n = 7, score = 100
            //   83d600               | adc                 esi, 0
            //   6a18                 | push                0x18
            //   58                   | pop                 eax
            //   03d8                 | add                 ebx, eax
            //   3b5de0               | cmp                 ebx, dword ptr [ebp - 0x20]
            //   75d6                 | jne                 0xffffffd8
            //   0facf714             | shrd                edi, esi, 0x14

        $sequence_2 = { 8d4f18 e8???????? 84c0 753e 56 8bcf e8???????? }
            // n = 7, score = 100
            //   8d4f18               | lea                 ecx, [edi + 0x18]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   753e                 | jne                 0x40
            //   56                   | push                esi
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     

        $sequence_3 = { 46 e8???????? 59 3bf0 0f86b8feffff e9???????? e8???????? }
            // n = 7, score = 100
            //   46                   | inc                 esi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   3bf0                 | cmp                 esi, eax
            //   0f86b8feffff         | jbe                 0xfffffebe
            //   e9????????           |                     
            //   e8????????           |                     

        $sequence_4 = { c645fc05 e8???????? 33c9 884dcc ff75cc 894d8c 894d90 }
            // n = 7, score = 100
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5
            //   e8????????           |                     
            //   33c9                 | xor                 ecx, ecx
            //   884dcc               | mov                 byte ptr [ebp - 0x34], cl
            //   ff75cc               | push                dword ptr [ebp - 0x34]
            //   894d8c               | mov                 dword ptr [ebp - 0x74], ecx
            //   894d90               | mov                 dword ptr [ebp - 0x70], ecx

        $sequence_5 = { 8b4508 8b550c 8910 894804 5d c20800 56 }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8910                 | mov                 dword ptr [eax], edx
            //   894804               | mov                 dword ptr [eax + 4], ecx
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   56                   | push                esi

        $sequence_6 = { 8bec 8b4108 2b01 6a6c 59 99 f7f9 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   2b01                 | sub                 eax, dword ptr [ecx]
            //   6a6c                 | push                0x6c
            //   59                   | pop                 ecx
            //   99                   | cdq                 
            //   f7f9                 | idiv                ecx

        $sequence_7 = { 56 56 e8???????? 83c40c 8bc6 5e 5d }
            // n = 7, score = 100
            //   56                   | push                esi
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_8 = { 8b04c5046e4500 5d c3 8bff 55 8bec 56 }
            // n = 7, score = 100
            //   8b04c5046e4500       | mov                 eax, dword ptr [eax*8 + 0x456e04]
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   56                   | push                esi

        $sequence_9 = { 3b75e0 75a9 8d8520ffffff 50 e8???????? 59 8bb520ffffff }
            // n = 7, score = 100
            //   3b75e0               | cmp                 esi, dword ptr [ebp - 0x20]
            //   75a9                 | jne                 0xffffffab
            //   8d8520ffffff         | lea                 eax, [ebp - 0xe0]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8bb520ffffff         | mov                 esi, dword ptr [ebp - 0xe0]

    condition:
        7 of them and filesize < 1021952
}