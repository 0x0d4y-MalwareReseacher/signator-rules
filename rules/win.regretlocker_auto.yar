rule win_regretlocker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.regretlocker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.regretlocker"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf9 8d4e18 51 8d4f18 e8???????? 84c0 753e }
            // n = 7, score = 100
            //   8bf9                 | mov                 edi, ecx
            //   8d4e18               | lea                 ecx, dword ptr [esi + 0x18]
            //   51                   | push                ecx
            //   8d4f18               | lea                 ecx, dword ptr [edi + 0x18]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   753e                 | jne                 0x40

        $sequence_1 = { 56 ff15???????? 8bf0 85f6 7504 32c0 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7504                 | jne                 6
            //   32c0                 | xor                 al, al

        $sequence_2 = { 8b03 2bca 894de8 8b4004 8b741820 8b441824 3bc7 }
            // n = 7, score = 100
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   2bca                 | sub                 ecx, edx
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   8b741820             | mov                 esi, dword ptr [eax + ebx + 0x20]
            //   8b441824             | mov                 eax, dword ptr [eax + ebx + 0x24]
            //   3bc7                 | cmp                 eax, edi

        $sequence_3 = { 50 8d8d64ffffff e8???????? 83cb02 c745fc0a000000 83781410 895dec }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d8d64ffffff         | lea                 ecx, dword ptr [ebp - 0x9c]
            //   e8????????           |                     
            //   83cb02               | or                  ebx, 2
            //   c745fc0a000000       | mov                 dword ptr [ebp - 4], 0xa
            //   83781410             | cmp                 dword ptr [eax + 0x14], 0x10
            //   895dec               | mov                 dword ptr [ebp - 0x14], ebx

        $sequence_4 = { e8???????? f20f104514 59 59 68???????? e9???????? 0f28c1 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   f20f104514           | movsd               xmm0, qword ptr [ebp + 0x14]
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   68????????           |                     
            //   e9????????           |                     
            //   0f28c1               | movaps              xmm0, xmm1

        $sequence_5 = { c60000 40 83e901 75f7 c9 c20400 8bd1 }
            // n = 7, score = 100
            //   c60000               | mov                 byte ptr [eax], 0
            //   40                   | inc                 eax
            //   83e901               | sub                 ecx, 1
            //   75f7                 | jne                 0xfffffff9
            //   c9                   | leave               
            //   c20400               | ret                 4
            //   8bd1                 | mov                 edx, ecx

        $sequence_6 = { 7202 8b09 837dc408 8d45b0 51 0f4345b0 50 }
            // n = 7, score = 100
            //   7202                 | jb                  4
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   837dc408             | cmp                 dword ptr [ebp - 0x3c], 8
            //   8d45b0               | lea                 eax, dword ptr [ebp - 0x50]
            //   51                   | push                ecx
            //   0f4345b0             | cmovae              eax, dword ptr [ebp - 0x50]
            //   50                   | push                eax

        $sequence_7 = { 0f46c7 8bf8 2bcf 394ddc 0f464ddc 837de400 894ddc }
            // n = 7, score = 100
            //   0f46c7               | cmovbe              eax, edi
            //   8bf8                 | mov                 edi, eax
            //   2bcf                 | sub                 ecx, edi
            //   394ddc               | cmp                 dword ptr [ebp - 0x24], ecx
            //   0f464ddc             | cmovbe              ecx, dword ptr [ebp - 0x24]
            //   837de400             | cmp                 dword ptr [ebp - 0x1c], 0
            //   894ddc               | mov                 dword ptr [ebp - 0x24], ecx

        $sequence_8 = { 8b7508 2145fc 8b4618 834e18ff 894338 56 c645fc01 }
            // n = 7, score = 100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   2145fc               | and                 dword ptr [ebp - 4], eax
            //   8b4618               | mov                 eax, dword ptr [esi + 0x18]
            //   834e18ff             | or                  dword ptr [esi + 0x18], 0xffffffff
            //   894338               | mov                 dword ptr [ebx + 0x38], eax
            //   56                   | push                esi
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1

        $sequence_9 = { 3b75e0 75a9 8d8520ffffff 50 e8???????? 59 8bb520ffffff }
            // n = 7, score = 100
            //   3b75e0               | cmp                 esi, dword ptr [ebp - 0x20]
            //   75a9                 | jne                 0xffffffab
            //   8d8520ffffff         | lea                 eax, dword ptr [ebp - 0xe0]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8bb520ffffff         | mov                 esi, dword ptr [ebp - 0xe0]

    condition:
        7 of them and filesize < 1021952
}