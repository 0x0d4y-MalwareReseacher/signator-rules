rule win_isaacwiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.isaacwiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.isaacwiper"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 ff15???????? 83f801 754b 8b45fc 3d00000100 7541 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83f801               | cmp                 eax, 1
            //   754b                 | jne                 0x4d
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   3d00000100           | cmp                 eax, 0x10000
            //   7541                 | jne                 0x43

        $sequence_1 = { 51 724f 8b33 56 57 e8???????? }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   724f                 | jb                  0x51
            //   8b33                 | mov                 esi, dword ptr [ebx]
            //   56                   | push                esi
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_2 = { 8b0485e8670310 80640828fe ff33 e8???????? 59 e9???????? 8b0b }
            // n = 7, score = 100
            //   8b0485e8670310       | mov                 eax, dword ptr [eax*4 + 0x100367e8]
            //   80640828fe           | and                 byte ptr [eax + ecx + 0x28], 0xfe
            //   ff33                 | push                dword ptr [ebx]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   e9????????           |                     
            //   8b0b                 | mov                 ecx, dword ptr [ebx]

        $sequence_3 = { 8b5d24 56 57 8b7d20 85db 7411 8a07 }
            // n = 7, score = 100
            //   8b5d24               | mov                 ebx, dword ptr [ebp + 0x24]
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b7d20               | mov                 edi, dword ptr [ebp + 0x20]
            //   85db                 | test                ebx, ebx
            //   7411                 | je                  0x13
            //   8a07                 | mov                 al, byte ptr [edi]

        $sequence_4 = { 8bf0 89742418 8b4230 8b5804 8bcb 895c2414 }
            // n = 6, score = 100
            //   8bf0                 | mov                 esi, eax
            //   89742418             | mov                 dword ptr [esp + 0x18], esi
            //   8b4230               | mov                 eax, dword ptr [edx + 0x30]
            //   8b5804               | mov                 ebx, dword ptr [eax + 4]
            //   8bcb                 | mov                 ecx, ebx
            //   895c2414             | mov                 dword ptr [esp + 0x14], ebx

        $sequence_5 = { 8bc3 c6440f0100 893b 5f 5e 5b 8be5 }
            // n = 7, score = 100
            //   8bc3                 | mov                 eax, ebx
            //   c6440f0100           | mov                 byte ptr [edi + ecx + 1], 0
            //   893b                 | mov                 dword ptr [ebx], edi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp

        $sequence_6 = { 8bec 8a4508 83ec30 53 56 8bf1 57 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   8a4508               | mov                 al, byte ptr [ebp + 8]
            //   83ec30               | sub                 esp, 0x30
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   57                   | push                edi

        $sequence_7 = { e8???????? 33ff 837c244c08 56 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   33ff                 | xor                 edi, edi
            //   837c244c08           | cmp                 dword ptr [esp + 0x4c], 8
            //   56                   | push                esi

        $sequence_8 = { 68???????? 6a00 6a00 8945f4 ff15???????? 8945f8 }
            // n = 6, score = 100
            //   68????????           |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   ff15????????         |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_9 = { c70000000000 8b4510 c70300000000 c70700000000 c70200000000 89414c }
            // n = 6, score = 100
            //   c70000000000         | mov                 dword ptr [eax], 0
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   c70300000000         | mov                 dword ptr [ebx], 0
            //   c70700000000         | mov                 dword ptr [edi], 0
            //   c70200000000         | mov                 dword ptr [edx], 0
            //   89414c               | mov                 dword ptr [ecx + 0x4c], eax

    condition:
        7 of them and filesize < 467968
}