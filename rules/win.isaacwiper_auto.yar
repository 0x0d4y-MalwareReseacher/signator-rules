rule win_isaacwiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.isaacwiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.isaacwiper"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3bca 7614 2bf9 8bc2 0f1f440000 8a540fff }
            // n = 6, score = 100
            //   3bca                 | cmp                 ecx, edx
            //   7614                 | jbe                 0x16
            //   2bf9                 | sub                 edi, ecx
            //   8bc2                 | mov                 eax, edx
            //   0f1f440000           | nop                 dword ptr [eax + eax]
            //   8a540fff             | mov                 dl, byte ptr [edi + ecx - 1]

        $sequence_1 = { 51 8d442420 50 ff742420 }
            // n = 4, score = 100
            //   51                   | push                ecx
            //   8d442420             | lea                 eax, [esp + 0x20]
            //   50                   | push                eax
            //   ff742420             | push                dword ptr [esp + 0x20]

        $sequence_2 = { c78424382b000000000000 c78424181a000000000000 7420 ba???????? 8d4c2440 e8???????? }
            // n = 6, score = 100
            //   c78424382b000000000000     | mov    dword ptr [esp + 0x2b38], 0
            //   c78424181a000000000000     | mov    dword ptr [esp + 0x1a18], 0
            //   7420                 | je                  0x22
            //   ba????????           |                     
            //   8d4c2440             | lea                 ecx, [esp + 0x40]
            //   e8????????           |                     

        $sequence_3 = { 83c40c e9???????? 8b048de8670310 807c022800 7d39 8b7508 }
            // n = 6, score = 100
            //   83c40c               | add                 esp, 0xc
            //   e9????????           |                     
            //   8b048de8670310       | mov                 eax, dword ptr [ecx*4 + 0x100367e8]
            //   807c022800           | cmp                 byte ptr [edx + eax + 0x28], 0
            //   7d39                 | jge                 0x3b
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]

        $sequence_4 = { ff7734 8d4f10 ff7730 e8???????? 83c408 3b4730 7505 }
            // n = 7, score = 100
            //   ff7734               | push                dword ptr [edi + 0x34]
            //   8d4f10               | lea                 ecx, [edi + 0x10]
            //   ff7730               | push                dword ptr [edi + 0x30]
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   3b4730               | cmp                 eax, dword ptr [edi + 0x30]
            //   7505                 | jne                 7

        $sequence_5 = { 33c9 33d2 85c9 752e 0fb68298230310 8db5cefdffff 0fb68c15ccfdffff }
            // n = 7, score = 100
            //   33c9                 | xor                 ecx, ecx
            //   33d2                 | xor                 edx, edx
            //   85c9                 | test                ecx, ecx
            //   752e                 | jne                 0x30
            //   0fb68298230310       | movzx               eax, byte ptr [edx + 0x10032398]
            //   8db5cefdffff         | lea                 esi, [ebp - 0x232]
            //   0fb68c15ccfdffff     | movzx               ecx, byte ptr [ebp + edx - 0x234]

        $sequence_6 = { 3914c598c00210 7408 40 83f81d }
            // n = 4, score = 100
            //   3914c598c00210       | cmp                 dword ptr [eax*8 + 0x1002c098], edx
            //   7408                 | je                  0xa
            //   40                   | inc                 eax
            //   83f81d               | cmp                 eax, 0x1d

        $sequence_7 = { 8b048da4b20210 89857cf8ffff 85c0 755d 33c0 }
            // n = 5, score = 100
            //   8b048da4b20210       | mov                 eax, dword ptr [ecx*4 + 0x1002b2a4]
            //   89857cf8ffff         | mov                 dword ptr [ebp - 0x784], eax
            //   85c0                 | test                eax, eax
            //   755d                 | jne                 0x5f
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 6bda38 031c8de8670310 eb0c 8bc8 8bd0 }
            // n = 5, score = 100
            //   6bda38               | imul                ebx, edx, 0x38
            //   031c8de8670310       | add                 ebx, dword ptr [ecx*4 + 0x100367e8]
            //   eb0c                 | jmp                 0xe
            //   8bc8                 | mov                 ecx, eax
            //   8bd0                 | mov                 edx, eax

        $sequence_9 = { ba???????? 8d4c2440 e8???????? 50 }
            // n = 4, score = 100
            //   ba????????           |                     
            //   8d4c2440             | lea                 ecx, [esp + 0x40]
            //   e8????????           |                     
            //   50                   | push                eax

    condition:
        7 of them and filesize < 467968
}