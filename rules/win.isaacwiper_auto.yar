rule win_isaacwiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.isaacwiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.isaacwiper"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 8b4004 c74408e898270310 8b06 8b5004 8d42e8 89440ae4 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   c74408e898270310     | mov                 dword ptr [eax + ecx - 0x18], 0x10032798
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b5004               | mov                 edx, dword ptr [eax + 4]
            //   8d42e8               | lea                 eax, [edx - 0x18]
            //   89440ae4             | mov                 dword ptr [edx + ecx - 0x1c], eax

        $sequence_1 = { b889b5f814 f7e9 c1fa0d 8bc2 c1e81f 03c2 8b542430 }
            // n = 7, score = 100
            //   b889b5f814           | mov                 eax, 0x14f8b589
            //   f7e9                 | imul                ecx
            //   c1fa0d               | sar                 edx, 0xd
            //   8bc2                 | mov                 eax, edx
            //   c1e81f               | shr                 eax, 0x1f
            //   03c2                 | add                 eax, edx
            //   8b542430             | mov                 edx, dword ptr [esp + 0x30]

        $sequence_2 = { c1f806 6bc938 8b0485e8670310 f644082801 }
            // n = 4, score = 100
            //   c1f806               | sar                 eax, 6
            //   6bc938               | imul                ecx, ecx, 0x38
            //   8b0485e8670310       | mov                 eax, dword ptr [eax*4 + 0x100367e8]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1

        $sequence_3 = { 8bca 13c0 03fb 13c8 0faccf03 c1e903 8bc7 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   13c0                 | adc                 eax, eax
            //   03fb                 | add                 edi, ebx
            //   13c8                 | adc                 ecx, eax
            //   0faccf03             | shrd                edi, ecx, 3
            //   c1e903               | shr                 ecx, 3
            //   8bc7                 | mov                 eax, edi

        $sequence_4 = { 8d143f 50 e8???????? d1e8 83c408 3bc7 8d48ff }
            // n = 7, score = 100
            //   8d143f               | lea                 edx, [edi + edi]
            //   50                   | push                eax
            //   e8????????           |                     
            //   d1e8                 | shr                 eax, 1
            //   83c408               | add                 esp, 8
            //   3bc7                 | cmp                 eax, edi
            //   8d48ff               | lea                 ecx, [eax - 1]

        $sequence_5 = { e8???????? e8???????? 85c0 7508 8b4df8 e8???????? }
            // n = 6, score = 100
            //   e8????????           |                     
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7508                 | jne                 0xa
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   e8????????           |                     

        $sequence_6 = { 8b7b4c 85ff 0f84a3000000 8d0412 50 51 56 }
            // n = 7, score = 100
            //   8b7b4c               | mov                 edi, dword ptr [ebx + 0x4c]
            //   85ff                 | test                edi, edi
            //   0f84a3000000         | je                  0xa9
            //   8d0412               | lea                 eax, [edx + edx]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   56                   | push                esi

        $sequence_7 = { 6bf638 8b04bde8670310 807c302800 7d3c }
            // n = 4, score = 100
            //   6bf638               | imul                esi, esi, 0x38
            //   8b04bde8670310       | mov                 eax, dword ptr [edi*4 + 0x100367e8]
            //   807c302800           | cmp                 byte ptr [eax + esi + 0x28], 0
            //   7d3c                 | jge                 0x3e

        $sequence_8 = { 8d4c2418 e8???????? 837c242408 8d542410 ff742420 0f43542414 8b4c2430 }
            // n = 7, score = 100
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   e8????????           |                     
            //   837c242408           | cmp                 dword ptr [esp + 0x24], 8
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   ff742420             | push                dword ptr [esp + 0x20]
            //   0f43542414           | cmovae              edx, dword ptr [esp + 0x14]
            //   8b4c2430             | mov                 ecx, dword ptr [esp + 0x30]

        $sequence_9 = { 0f57c0 c703???????? 0f43c8 660fd64304 8d4304 894df4 }
            // n = 6, score = 100
            //   0f57c0               | xorps               xmm0, xmm0
            //   c703????????         |                     
            //   0f43c8               | cmovae              ecx, eax
            //   660fd64304           | movq                qword ptr [ebx + 4], xmm0
            //   8d4304               | lea                 eax, [ebx + 4]
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx

    condition:
        7 of them and filesize < 467968
}