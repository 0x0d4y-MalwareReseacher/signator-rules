rule win_isaacwiper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.isaacwiper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.isaacwiper"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 031c95e8670310 b9???????? eb11 b9???????? 8bd9 8bd0 }
            // n = 6, score = 100
            //   031c95e8670310       | add                 ebx, dword ptr [edx*4 + 0x100367e8]
            //   b9????????           |                     
            //   eb11                 | jmp                 0x13
            //   b9????????           |                     
            //   8bd9                 | mov                 ebx, ecx
            //   8bd0                 | mov                 edx, eax

        $sequence_1 = { c20800 81fbfeffff7f 0f8704010000 8bfb 83cf07 }
            // n = 5, score = 100
            //   c20800               | ret                 8
            //   81fbfeffff7f         | cmp                 ebx, 0x7ffffffe
            //   0f8704010000         | ja                  0x10a
            //   8bfb                 | mov                 edi, ebx
            //   83cf07               | or                  edi, 7

        $sequence_2 = { 8b0495e8670310 f644382848 7427 8a4dff }
            // n = 4, score = 100
            //   8b0495e8670310       | mov                 eax, dword ptr [edx*4 + 0x100367e8]
            //   f644382848           | test                byte ptr [eax + edi + 0x28], 0x48
            //   7427                 | je                  0x29
            //   8a4dff               | mov                 cl, byte ptr [ebp - 1]

        $sequence_3 = { 8b45e0 83d300 e9???????? 8bf8 }
            // n = 4, score = 100
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   83d300               | adc                 ebx, 0
            //   e9????????           |                     
            //   8bf8                 | mov                 edi, eax

        $sequence_4 = { 0f1f840000000000 83c002 66833800 75f7 }
            // n = 4, score = 100
            //   0f1f840000000000     | nop                 dword ptr [eax + eax]
            //   83c002               | add                 eax, 2
            //   66833800             | cmp                 word ptr [eax], 0
            //   75f7                 | jne                 0xfffffff9

        $sequence_5 = { ff15???????? 8d8580f9ffff 50 8d8590fbffff 50 ff15???????? 8d8d80f9ffff }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   8d8580f9ffff         | lea                 eax, dword ptr [ebp - 0x680]
            //   50                   | push                eax
            //   8d8590fbffff         | lea                 eax, dword ptr [ebp - 0x470]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d8d80f9ffff         | lea                 ecx, dword ptr [ebp - 0x680]

        $sequence_6 = { 8b048de8670310 f644102801 747c 57 e8???????? 59 }
            // n = 6, score = 100
            //   8b048de8670310       | mov                 eax, dword ptr [ecx*4 + 0x100367e8]
            //   f644102801           | test                byte ptr [eax + edx + 0x28], 1
            //   747c                 | je                  0x7e
            //   57                   | push                edi
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_7 = { 8bec b8f4090100 e8???????? 53 56 57 6a00 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   b8f4090100           | mov                 eax, 0x109f4
            //   e8????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6a00                 | push                0

        $sequence_8 = { 81fa70020000 7513 8d8c2428040000 e8???????? }
            // n = 4, score = 100
            //   81fa70020000         | cmp                 edx, 0x270
            //   7513                 | jne                 0x15
            //   8d8c2428040000       | lea                 ecx, dword ptr [esp + 0x428]
            //   e8????????           |                     

        $sequence_9 = { 8b4508 59 6a05 c7404818530310 8b4508 6689486c 8b4508 }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   59                   | pop                 ecx
            //   6a05                 | push                5
            //   c7404818530310       | mov                 dword ptr [eax + 0x48], 0x10035318
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   6689486c             | mov                 word ptr [eax + 0x6c], cx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 467968
}