rule win_plugx_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.plugx."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.plugx"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 56 57 6a1c 8bf8 }
            // n = 5, score = 1300
            //   51                   | push                ecx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6a1c                 | push                0x1c
            //   8bf8                 | mov                 edi, eax

        $sequence_1 = { 0145f4 8b45fc 0fafc3 33d2 }
            // n = 4, score = 1300
            //   0145f4               | add                 dword ptr [ebp - 0xc], eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   0fafc3               | imul                eax, ebx
            //   33d2                 | xor                 edx, edx

        $sequence_2 = { 51 53 6a00 6a00 6a02 ffd0 85c0 }
            // n = 7, score = 1300
            //   51                   | push                ecx
            //   53                   | push                ebx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a02                 | push                2
            //   ffd0                 | call                eax
            //   85c0                 | test                eax, eax

        $sequence_3 = { 56 8b750c 8b4604 050070ffff }
            // n = 4, score = 1300
            //   56                   | push                esi
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   050070ffff           | add                 eax, 0xffff7000

        $sequence_4 = { 55 8bec a1???????? 83ec5c 53 }
            // n = 5, score = 1300
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   a1????????           |                     
            //   83ec5c               | sub                 esp, 0x5c
            //   53                   | push                ebx

        $sequence_5 = { 55 8bec 8b450c 81780402700000 }
            // n = 4, score = 1300
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   81780402700000       | cmp                 dword ptr [eax + 4], 0x7002

        $sequence_6 = { 41 3bca 7ce0 3bca }
            // n = 4, score = 1300
            //   41                   | inc                 ecx
            //   3bca                 | cmp                 ecx, edx
            //   7ce0                 | jl                  0xffffffe2
            //   3bca                 | cmp                 ecx, edx

        $sequence_7 = { 55 8bec 51 0fb74612 }
            // n = 4, score = 1300
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   0fb74612             | movzx               eax, word ptr [esi + 0x12]

        $sequence_8 = { 6a00 6a04 6a00 6a01 6800000040 57 }
            // n = 6, score = 700
            //   6a00                 | push                0
            //   6a04                 | push                4
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6800000040           | push                0x40000000
            //   57                   | push                edi

        $sequence_9 = { 6819000200 6a00 6a00 6a00 51 }
            // n = 5, score = 600
            //   6819000200           | push                0x20019
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   51                   | push                ecx

        $sequence_10 = { 57 e8???????? eb0c e8???????? }
            // n = 4, score = 500
            //   57                   | push                edi
            //   e8????????           |                     
            //   eb0c                 | jmp                 0xe
            //   e8????????           |                     

        $sequence_11 = { ffd7 a3???????? 56 ffd0 }
            // n = 4, score = 400
            //   ffd7                 | call                edi
            //   a3????????           |                     
            //   56                   | push                esi
            //   ffd0                 | call                eax

        $sequence_12 = { 6819000200 6a00 52 51 }
            // n = 4, score = 300
            //   6819000200           | push                0x20019
            //   6a00                 | push                0
            //   52                   | push                edx
            //   51                   | push                ecx

        $sequence_13 = { 50 ffd6 a3???????? 57 ffd0 }
            // n = 5, score = 300
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   a3????????           |                     
            //   57                   | push                edi
            //   ffd0                 | call                eax

        $sequence_14 = { ffd6 a3???????? 6a64 ffd0 }
            // n = 4, score = 200
            //   ffd6                 | call                esi
            //   a3????????           |                     
            //   6a64                 | push                0x64
            //   ffd0                 | call                eax

        $sequence_15 = { ffd7 a3???????? 68e8030000 ffd0 }
            // n = 4, score = 200
            //   ffd7                 | call                edi
            //   a3????????           |                     
            //   68e8030000           | push                0x3e8
            //   ffd0                 | call                eax

        $sequence_16 = { 50 8d4dbc 51 8b550c 52 e8???????? 8945f8 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d4dbc               | lea                 ecx, [ebp - 0x44]
            //   51                   | push                ecx
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_17 = { 668b55f8 66895144 68???????? 68???????? }
            // n = 4, score = 100
            //   668b55f8             | mov                 dx, word ptr [ebp - 8]
            //   66895144             | mov                 word ptr [ecx + 0x44], dx
            //   68????????           |                     
            //   68????????           |                     

        $sequence_18 = { 8d8d34ffffff 51 8d95f0feffff 52 6a00 }
            // n = 5, score = 100
            //   8d8d34ffffff         | lea                 ecx, [ebp - 0xcc]
            //   51                   | push                ecx
            //   8d95f0feffff         | lea                 edx, [ebp - 0x110]
            //   52                   | push                edx
            //   6a00                 | push                0

        $sequence_19 = { c705????????01000000 6a04 58 6bc000 c7803cc0021002000000 6a04 }
            // n = 6, score = 100
            //   c705????????01000000     |     
            //   6a04                 | push                4
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0
            //   c7803cc0021002000000     | mov    dword ptr [eax + 0x1002c03c], 2
            //   6a04                 | push                4

        $sequence_20 = { 50 6a03 8d4df0 51 8d95c8f4ffff }
            // n = 5, score = 100
            //   50                   | push                eax
            //   6a03                 | push                3
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   51                   | push                ecx
            //   8d95c8f4ffff         | lea                 edx, [ebp - 0xb38]

        $sequence_21 = { 8b45fc 50 8b4df4 8b09 e8???????? 8945f8 }
            // n = 6, score = 100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   50                   | push                eax
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   e8????????           |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_22 = { 8b55ec 52 e8???????? 8945e8 837de8ff 751d }
            // n = 6, score = 100
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   837de8ff             | cmp                 dword ptr [ebp - 0x18], -1
            //   751d                 | jne                 0x1f

        $sequence_23 = { ba20000000 668955d8 33c0 668945da }
            // n = 4, score = 100
            //   ba20000000           | mov                 edx, 0x20
            //   668955d8             | mov                 word ptr [ebp - 0x28], dx
            //   33c0                 | xor                 eax, eax
            //   668945da             | mov                 word ptr [ebp - 0x26], ax

    condition:
        7 of them and filesize < 1018880
}