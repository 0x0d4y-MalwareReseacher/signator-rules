rule win_decaf_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.decaf."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.decaf"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 884c2417 0fb6d1 4889542420 48c1e206 488d35126a3100 488d0416 4889442428 }
            // n = 7, score = 100
            //   884c2417             | inc                 ebp
            //   0fb6d1               | lea                 eax, dword ptr [eax + edx]
            //   4889542420           | inc                 ebp
            //   48c1e206             | lea                 eax, dword ptr [eax + 0x26]
            //   488d35126a3100       | dec                 eax
            //   488d0416             | cmp                 esi, 8
            //   4889442428           | jb                  0x1dc

        $sequence_1 = { c3 90 488b13 488b4018 4889cb 4889d1 31ff }
            // n = 7, score = 100
            //   c3                   | lea                 esi, dword ptr [0x2e3eeb]
            //   90                   | lock cmpxchg        dword ptr [esi], edx
            //   488b13               | mov                 ecx, edi
            //   488b4018             | nop                 
            //   4889cb               | inc                 ecx
            //   4889d1               | cmp                 edx, 0xbbad4102
            //   31ff                 | jne                 0x1cf4

        $sequence_2 = { eb0c 488d3dbc6c1a00 e8???????? e8???????? 4889442458 48895c2428 90 }
            // n = 7, score = 100
            //   eb0c                 | mov                 eax, ebx
            //   488d3dbc6c1a00       | xor                 eax, eax
            //   e8????????           |                     
            //   e8????????           |                     
            //   4889442458           | mov                 byte ptr [edi + ebx], 0xa2
            //   48895c2428           | mov                 ecx, 9
            //   90                   | dec                 esp

        $sequence_3 = { e8???????? 488b542468 48895008 833d????????00 750d 488b8c24100d0000 488908 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   488b542468           | call                ecx
            //   48895008             | dec                 eax
            //   833d????????00       |                     
            //   750d                 | mov                 ecx, dword ptr [eax]
            //   488b8c24100d0000     | dec                 eax
            //   488908               | mov                 edx, eax

        $sequence_4 = { e8???????? 48c7400842000000 488d0d9e4e1600 488908 488d1d0f2a1900 4889c1 31c0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   48c7400842000000     | dec                 eax
            //   488d0d9e4e1600       | mov                 edx, dword ptr [esp + 0xd0]
            //   488908               | mov                 ecx, 8
            //   488d1d0f2a1900       | dec                 eax
            //   4889c1               | mov                 esi, edx
            //   31c0                 | dec                 esp

        $sequence_5 = { 488d3d93431b00 e8???????? 66c74424576f71 c644245970 c744246a00000000 66c744246b0101 31c0 }
            // n = 7, score = 100
            //   488d3d93431b00       | movzx               ebx, byte ptr [esp + 0x69]
            //   e8????????           |                     
            //   66c74424576f71       | inc                 esp
            //   c644245970           | movzx               eax, byte ptr [esp + 0x66]
            //   c744246a00000000     | inc                 esp
            //   66c744246b0101       | mov                 byte ptr [esp + 0x58], al
            //   31c0                 | inc                 esp

        $sequence_6 = { 88442470 4889542458 4c89442448 4c894c2450 4488542447 488d05621d0d00 6690 }
            // n = 7, score = 100
            //   88442470             | dec                 eax
            //   4889542458           | lea                 eax, dword ptr [0x2af13]
            //   4c89442448           | dec                 eax
            //   4c894c2450           | mov                 ecx, ebx
            //   4488542447           | dec                 eax
            //   488d05621d0d00       | mov                 ebx, edi
            //   6690                 | dec                 eax

        $sequence_7 = { eb1c 4889c7 488b8c2470120000 e8???????? 488d3db34a1f00 e8???????? e8???????? }
            // n = 7, score = 100
            //   eb1c                 | mov                 ecx, dword ptr [eax]
            //   4889c7               | dec                 ebp
            //   488b8c2470120000     | test                eax, eax
            //   e8????????           |                     
            //   488d3db34a1f00       | dec                 eax
            //   e8????????           |                     
            //   e8????????           |                     

        $sequence_8 = { b80a000000 b976000000 31d2 31db 31f6 31ff eb0e }
            // n = 7, score = 100
            //   b80a000000           | inc                 esp
            //   b976000000           | movzx               eax, byte ptr [esp + 0x57]
            //   31d2                 | mov                 byte ptr [eax + 4], dl
            //   31db                 | movzx               edx, byte ptr [esp + 0x5b]
            //   31f6                 | inc                 esp
            //   31ff                 | movzx               eax, byte ptr [esp + 0x5a]
            //   eb0e                 | inc                 esp

        $sequence_9 = { b807000000 b9a0000000 31d2 31db 31f6 31ff eb0e }
            // n = 7, score = 100
            //   b807000000           | inc                 esp
            //   b9a0000000           | movzx               eax, byte ptr [esp + 0x64]
            //   31d2                 | inc                 esp
            //   31db                 | add                 edx, eax
            //   31f6                 | mov                 byte ptr [eax + 4], dl
            //   31ff                 | movzx               edx, byte ptr [esp + 0x62]
            //   eb0e                 | inc                 esp

    condition:
        7 of them and filesize < 7193600
}