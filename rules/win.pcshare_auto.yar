rule win_pcshare_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.pcshare."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pcshare"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 52 8bd8 e8???????? 83c41c 3bde 0f8450010000 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   52                   | push                edx
            //   8bd8                 | mov                 ebx, eax
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c
            //   3bde                 | cmp                 ebx, esi
            //   0f8450010000         | je                  0x156

        $sequence_1 = { c68424a400000003 51 53 50 8d4c2434 e8???????? 8b44243c }
            // n = 7, score = 100
            //   c68424a400000003     | mov                 byte ptr [esp + 0xa4], 3
            //   51                   | push                ecx
            //   53                   | push                ebx
            //   50                   | push                eax
            //   8d4c2434             | lea                 ecx, [esp + 0x34]
            //   e8????????           |                     
            //   8b44243c             | mov                 eax, dword ptr [esp + 0x3c]

        $sequence_2 = { 83ec20 53 55 56 57 8bf9 33f6 }
            // n = 7, score = 100
            //   83ec20               | sub                 esp, 0x20
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bf9                 | mov                 edi, ecx
            //   33f6                 | xor                 esi, esi

        $sequence_3 = { 395c242c 7407 f6c401 7507 eb1e f6c401 7422 }
            // n = 7, score = 100
            //   395c242c             | cmp                 dword ptr [esp + 0x2c], ebx
            //   7407                 | je                  9
            //   f6c401               | test                ah, 1
            //   7507                 | jne                 9
            //   eb1e                 | jmp                 0x20
            //   f6c401               | test                ah, 1
            //   7422                 | je                  0x24

        $sequence_4 = { 895c240c 7e43 8b742430 8a442430 }
            // n = 4, score = 100
            //   895c240c             | mov                 dword ptr [esp + 0xc], ebx
            //   7e43                 | jle                 0x45
            //   8b742430             | mov                 esi, dword ptr [esp + 0x30]
            //   8a442430             | mov                 al, byte ptr [esp + 0x30]

        $sequence_5 = { 8d7c246d 8d54246c f3ab 66ab aa a1???????? 6804010000 }
            // n = 7, score = 100
            //   8d7c246d             | lea                 edi, [esp + 0x6d]
            //   8d54246c             | lea                 edx, [esp + 0x6c]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   a1????????           |                     
            //   6804010000           | push                0x104

        $sequence_6 = { 89480c 8b4c2440 8b542438 c1e105 8b4c1104 8908 8b542440 }
            // n = 7, score = 100
            //   89480c               | mov                 dword ptr [eax + 0xc], ecx
            //   8b4c2440             | mov                 ecx, dword ptr [esp + 0x40]
            //   8b542438             | mov                 edx, dword ptr [esp + 0x38]
            //   c1e105               | shl                 ecx, 5
            //   8b4c1104             | mov                 ecx, dword ptr [ecx + edx + 4]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b542440             | mov                 edx, dword ptr [esp + 0x40]

        $sequence_7 = { 25ffff0000 8b14ba 8b7908 c1e005 03d0 81e7ffff2f00 8b4208 }
            // n = 7, score = 100
            //   25ffff0000           | and                 eax, 0xffff
            //   8b14ba               | mov                 edx, dword ptr [edx + edi*4]
            //   8b7908               | mov                 edi, dword ptr [ecx + 8]
            //   c1e005               | shl                 eax, 5
            //   03d0                 | add                 edx, eax
            //   81e7ffff2f00         | and                 edi, 0x2fffff
            //   8b4208               | mov                 eax, dword ptr [edx + 8]

        $sequence_8 = { 83c9ff 33c0 83c404 f2ae f7d1 49 0fbe540c62 }
            // n = 7, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   83c404               | add                 esp, 4
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   0fbe540c62           | movsx               edx, byte ptr [esp + ecx + 0x62]

        $sequence_9 = { 8b0c8da0720610 8d04c0 8d0481 8b4dfc 8b09 8908 8a0b }
            // n = 7, score = 100
            //   8b0c8da0720610       | mov                 ecx, dword ptr [ecx*4 + 0x100672a0]
            //   8d04c0               | lea                 eax, [eax + eax*8]
            //   8d0481               | lea                 eax, [ecx + eax*4]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b09                 | mov                 ecx, dword ptr [ecx]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8a0b                 | mov                 cl, byte ptr [ebx]

    condition:
        7 of them and filesize < 893708
}