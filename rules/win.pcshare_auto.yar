rule win_pcshare_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.pcshare."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pcshare"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { be00beffff 8d55a0 52 e8???????? 8d45b8 50 e8???????? }
            // n = 7, score = 100
            //   be00beffff           | mov                 esi, 0xffffbe00
            //   8d55a0               | lea                 edx, [ebp - 0x60]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8d45b8               | lea                 eax, [ebp - 0x48]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { f3a5 8bc8 83e103 f3a4 0113 5f 5e }
            // n = 7, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bc8                 | mov                 ecx, eax
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   0113                 | add                 dword ptr [ebx], edx
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_2 = { 83f163 888b20500410 889920610410 43 81fb00010000 7c86 33c9 }
            // n = 7, score = 100
            //   83f163               | xor                 ecx, 0x63
            //   888b20500410         | mov                 byte ptr [ebx + 0x10045020], cl
            //   889920610410         | mov                 byte ptr [ecx + 0x10046120], bl
            //   43                   | inc                 ebx
            //   81fb00010000         | cmp                 ebx, 0x100
            //   7c86                 | jl                  0xffffff88
            //   33c9                 | xor                 ecx, ecx

        $sequence_3 = { 50 e8???????? 8b442418 8b74241c 8b7c2414 83c404 8b4b48 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   8b74241c             | mov                 esi, dword ptr [esp + 0x1c]
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   83c404               | add                 esp, 4
            //   8b4b48               | mov                 ecx, dword ptr [ebx + 0x48]

        $sequence_4 = { e8???????? 59 834dfcff 8d8da0eeffff e8???????? 8b4df4 5f }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff
            //   8d8da0eeffff         | lea                 ecx, [ebp - 0x1160]
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   5f                   | pop                 edi

        $sequence_5 = { e8???????? 83c410 3bc3 0f858c000000 53 8d8e28040000 53 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   3bc3                 | cmp                 eax, ebx
            //   0f858c000000         | jne                 0x92
            //   53                   | push                ebx
            //   8d8e28040000         | lea                 ecx, [esi + 0x428]
            //   53                   | push                ebx

        $sequence_6 = { 83e103 43 f3a4 0fbe85f8fdffff 8b3d???????? 53 8db405f9fdffff }
            // n = 7, score = 100
            //   83e103               | and                 ecx, 3
            //   43                   | inc                 ebx
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   0fbe85f8fdffff       | movsx               eax, byte ptr [ebp - 0x208]
            //   8b3d????????         |                     
            //   53                   | push                ebx
            //   8db405f9fdffff       | lea                 esi, [ebp + eax - 0x207]

        $sequence_7 = { c1e10a 0bd9 8b4de0 895df4 8b5ddc f7d1 0bcb }
            // n = 7, score = 100
            //   c1e10a               | shl                 ecx, 0xa
            //   0bd9                 | or                  ebx, ecx
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   895df4               | mov                 dword ptr [ebp - 0xc], ebx
            //   8b5ddc               | mov                 ebx, dword ptr [ebp - 0x24]
            //   f7d1                 | not                 ecx
            //   0bcb                 | or                  ecx, ebx

        $sequence_8 = { f3a4 33f6 8d8500fcffff 6800040000 50 e8???????? 83c408 }
            // n = 7, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   33f6                 | xor                 esi, esi
            //   8d8500fcffff         | lea                 eax, [ebp - 0x400]
            //   6800040000           | push                0x400
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_9 = { e8???????? 83c410 3bc3 0f858a010000 8b06 8b5508 33c9 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   3bc3                 | cmp                 eax, ebx
            //   0f858a010000         | jne                 0x190
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   33c9                 | xor                 ecx, ecx

    condition:
        7 of them and filesize < 893708
}