rule win_poscardstealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.poscardstealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.poscardstealer"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf8 6804010000 8d85f4fdffff 50 57 e8???????? 33c9 }
            // n = 7, score = 200
            //   8bf8                 | mov                 edi, eax
            //   6804010000           | push                0x104
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     
            //   33c9                 | xor                 ecx, ecx

        $sequence_1 = { 897de8 895de4 c645d400 837d9410 }
            // n = 4, score = 200
            //   897de8               | mov                 dword ptr [ebp - 0x18], edi
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx
            //   c645d400             | mov                 byte ptr [ebp - 0x2c], 0
            //   837d9410             | cmp                 dword ptr [ebp - 0x6c], 0x10

        $sequence_2 = { c745e80f000000 897de4 c645d400 395e14 }
            // n = 4, score = 200
            //   c745e80f000000       | mov                 dword ptr [ebp - 0x18], 0xf
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   c645d400             | mov                 byte ptr [ebp - 0x2c], 0
            //   395e14               | cmp                 dword ptr [esi + 0x14], ebx

        $sequence_3 = { 56 8b7508 8bc6 c1f805 8d1485e0794200 }
            // n = 5, score = 200
            //   56                   | push                esi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8bc6                 | mov                 eax, esi
            //   c1f805               | sar                 eax, 5
            //   8d1485e0794200       | lea                 edx, [eax*4 + 0x4279e0]

        $sequence_4 = { 895dfc 89850cffffff 89b578ffffff 899d74ffffff 889d64ffffff e8???????? 6a1f }
            // n = 7, score = 200
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   89850cffffff         | mov                 dword ptr [ebp - 0xf4], eax
            //   89b578ffffff         | mov                 dword ptr [ebp - 0x88], esi
            //   899d74ffffff         | mov                 dword ptr [ebp - 0x8c], ebx
            //   889d64ffffff         | mov                 byte ptr [ebp - 0x9c], bl
            //   e8????????           |                     
            //   6a1f                 | push                0x1f

        $sequence_5 = { 7de6 eb01 46 803c3e30 7c0d 803c3e39 }
            // n = 6, score = 200
            //   7de6                 | jge                 0xffffffe8
            //   eb01                 | jmp                 3
            //   46                   | inc                 esi
            //   803c3e30             | cmp                 byte ptr [esi + edi], 0x30
            //   7c0d                 | jl                  0xf
            //   803c3e39             | cmp                 byte ptr [esi + edi], 0x39

        $sequence_6 = { e8???????? 83c404 8b35???????? 3b35???????? 0f84af000000 56 e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b35????????         |                     
            //   3b35????????         |                     
            //   0f84af000000         | je                  0xb5
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_7 = { 40 5f 5e c3 8324f5f05b420000 }
            // n = 5, score = 200
            //   40                   | inc                 eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   8324f5f05b420000     | and                 dword ptr [esi*8 + 0x425bf0], 0

        $sequence_8 = { 57 8b7d08 68???????? 8d85f4fdffff 6804010000 }
            // n = 5, score = 200
            //   57                   | push                edi
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   68????????           |                     
            //   8d85f4fdffff         | lea                 eax, [ebp - 0x20c]
            //   6804010000           | push                0x104

        $sequence_9 = { 8bce c645fc0d e8???????? c645fc05 }
            // n = 4, score = 200
            //   8bce                 | mov                 ecx, esi
            //   c645fc0d             | mov                 byte ptr [ebp - 4], 0xd
            //   e8????????           |                     
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5

    condition:
        7 of them and filesize < 362496
}