rule win_billgates_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.billgates."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.billgates"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3c21 7408 3c23 7404 }
            // n = 4, score = 200
            //   3c21                 | cmp                 eax, ebx
            //   7408                 | jne                 0x7c
            //   3c23                 | lea                 esi, dword ptr [esp + 0x1c]
            //   7404                 | cmp                 eax, ebx

        $sequence_1 = { 3c11 7408 3c22 7404 }
            // n = 4, score = 200
            //   3c11                 | mov                 eax, dword ptr [esp + 0x1c]
            //   7408                 | cmp                 eax, ebx
            //   3c22                 | cmp                 eax, ebx
            //   7404                 | jne                 0x58

        $sequence_2 = { 3c22 7404 3c30 7504 }
            // n = 4, score = 200
            //   3c22                 | jne                 0xcc
            //   7404                 | cmp                 byte ptr [edi + 0x11], 0
            //   3c30                 | mov                 esi, dword ptr [ebx + 4]
            //   7504                 | cmp                 eax, ebx

        $sequence_3 = { 3c10 740c 3c11 7408 3c22 7404 }
            // n = 6, score = 200
            //   3c10                 | mov                 dword ptr [edi + 0x4a8], esi
            //   740c                 | mov                 byte ptr [edi + 0x184], 1
            //   3c11                 | call                ebx
            //   7408                 | mov                 ecx, dword ptr [edi + 0x188]
            //   3c22                 | push                ecx
            //   7404                 | mov                 byte ptr [edi + 0x4a0], 1

        $sequence_4 = { 3c58 7507 b802000000 eb02 }
            // n = 4, score = 200
            //   3c58                 | jae                 0xe3
            //   7507                 | xor                 eax, eax
            //   b802000000           | jmp                 0xec
            //   eb02                 | cmp                 eax, edi

        $sequence_5 = { 3c11 7408 3c22 7404 3c30 }
            // n = 5, score = 200
            //   3c11                 | mov                 ebx, eax
            //   7408                 | dec                 eax
            //   3c22                 | lea                 ecx, dword ptr [edi + 0x4b8]
            //   7404                 | inc                 ebp
            //   3c30                 | xor                 ecx, ecx

        $sequence_6 = { 3c10 740c 3c11 7408 }
            // n = 4, score = 200
            //   3c10                 | jne                 0x26
            //   740c                 | mov                 dword ptr [ebp + 0x58], 0xffffffff
            //   3c11                 | jmp                 0x2f
            //   7408                 | cmp                 eax, ebx

        $sequence_7 = { 3c21 7408 3c23 7404 3c24 }
            // n = 5, score = 200
            //   3c21                 | dec                 eax
            //   7408                 | cmovae              edx, dword ptr [esp + 0xa8]
            //   3c23                 | dec                 ecx
            //   7404                 | mov                 ebx, dword ptr [esp + 0x20]
            //   3c24                 | dec                 ecx

        $sequence_8 = { ff15???????? 83f8ff 7508 ff15???????? f7d8 85c0 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   83f8ff               | je                  0x1b79
            //   7508                 | dec                 esp
            //   ff15????????         |                     
            //   f7d8                 | mov                 eax, eax
            //   85c0                 | dec                 eax

        $sequence_9 = { 3bf0 7604 2bf0 eb04 }
            // n = 4, score = 200
            //   3bf0                 | mov                 dword ptr [ebp - 4], edi
            //   7604                 | jl                  0x4d
            //   2bf0                 | dec                 eax
            //   eb04                 | mov                 edi, dword ptr [esp + 0x38]

    condition:
        7 of them and filesize < 801792
}