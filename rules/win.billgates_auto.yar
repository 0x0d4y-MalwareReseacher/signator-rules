rule win_billgates_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.billgates."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.billgates"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7408 3c22 7404 3c30 7504 }
            // n = 5, score = 200
            //   7408                 | dec                 eax
            //   3c22                 | lea                 edi, [ecx + 0x20]
            //   7404                 | nop                 dword ptr [eax]
            //   3c30                 | dec                 eax
            //   7504                 | cmp                 dword ptr [edi], 0x10

        $sequence_1 = { 69c0e8030000 99 81e2ff070000 03c2 }
            // n = 4, score = 200
            //   69c0e8030000         | dec                 eax
            //   99                   | lea                 ecx, [esp + 0x30]
            //   81e2ff070000         | dec                 esp
            //   03c2                 | cmovae              eax, dword ptr [esp + 0x40]

        $sequence_2 = { 3bf0 7604 2bf0 eb04 }
            // n = 4, score = 200
            //   3bf0                 | lea                 ecx, [esp + 0x74]
            //   7604                 | cmp                 dword ptr [ebp + 0x34], edi
            //   2bf0                 | jb                  0x4b
            //   eb04                 | mov                 eax, dword ptr [ebp + 0x20]

        $sequence_3 = { 750c ff15???????? 8bd8 f7db }
            // n = 4, score = 200
            //   750c                 | mov                 eax, dword ptr [ebp]
            //   ff15????????         |                     
            //   8bd8                 | push                ebp
            //   f7db                 | mov                 ebp, esp

        $sequence_4 = { 83f8ff 750c ff15???????? 8bd8 f7db }
            // n = 5, score = 200
            //   83f8ff               | mov                 eax, dword ptr [ecx + esi*8 + 0x592e0]
            //   750c                 | dec                 esp
            //   ff15????????         |                     
            //   8bd8                 | mov                 dword ptr [eax + esi + 0x40], ebx
            //   f7db                 | dec                 ebx

        $sequence_5 = { 3c21 7408 3c23 7404 }
            // n = 4, score = 200
            //   3c21                 | cmp                 eax, edx
            //   7408                 | jbe                 0x167
            //   3c23                 | mov                 eax, 1
            //   7404                 | ret                 

        $sequence_6 = { 3c11 7408 3c22 7404 3c30 }
            // n = 5, score = 200
            //   3c11                 | sub                 bl, 0x41
            //   7408                 | cmp                 bl, 5
            //   3c22                 | jmp                 0x31a
            //   7404                 | lea                 ecx, [esi + 0x34]
            //   3c30                 | push                ecx

        $sequence_7 = { 3c10 740c 3c11 7408 }
            // n = 4, score = 200
            //   3c10                 | cmp                 eax, ecx
            //   740c                 | ja                  0x140
            //   3c11                 | jne                 0x135
            //   7408                 | test                edx, edx

        $sequence_8 = { 8d8809f9ffff b8c94216b2 f7e9 03d1 c1fa04 }
            // n = 5, score = 200
            //   8d8809f9ffff         | lea                 ecx, [esp + 0x200]
            //   b8c94216b2           | mov                 byte ptr [esi + 0x520], 0
            //   f7e9                 | mov                 byte ptr [esi + 0x4a1], 4
            //   03d1                 | jne                 0x382
            //   c1fa04               | dec                 esp

        $sequence_9 = { 3c10 740c 3c11 7408 3c22 7404 }
            // n = 6, score = 200
            //   3c10                 | sbb                 byte ptr [ecx - 0x75], cl
            //   740c                 | add                 bl, al
            //   3c11                 | dec                 eax
            //   7408                 | mov                 ecx, dword ptr [ecx + 8]
            //   3c22                 | cmp                 byte ptr [ecx + 0x21], 0
            //   7404                 | jne                 0x2a

    condition:
        7 of them and filesize < 801792
}