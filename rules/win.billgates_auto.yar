rule win_billgates_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.billgates."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.billgates"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 3c11 7408 3c22 7404 3c30 }
            // n = 5, score = 200
            //   3c11                 | dec                 eax
            //   7408                 | mov                 dword ptr [edi + 0x38], eax
            //   3c22                 | mov                 eax, dword ptr [edi + 0x30]
            //   7404                 | sub                 eax, dword ptr [edi + 0x34]
            //   3c30                 | dec                 eax

        $sequence_1 = { 740c 3c11 7408 3c22 7404 3c30 7504 }
            // n = 7, score = 200
            //   740c                 | dec                 eax
            //   3c11                 | mov                 dword ptr [esp + 0x48], edi
            //   7408                 | dec                 eax
            //   3c22                 | mov                 eax, ecx
            //   7404                 | dec                 eax
            //   3c30                 | mov                 esi, edx
            //   7504                 | dec                 eax

        $sequence_2 = { 7408 3c23 7404 3c24 }
            // n = 4, score = 200
            //   7408                 | dec                 esp
            //   3c23                 | mov                 dword ptr [esp + 0x60], esp
            //   7404                 | mov                 byte ptr [esp + 0x50], 0
            //   3c24                 | dec                 eax

        $sequence_3 = { 83f8ff 750c ff15???????? 8bd8 }
            // n = 4, score = 200
            //   83f8ff               | push                dword ptr [esi]
            //   750c                 | push                edi
            //   ff15????????         |                     
            //   8bd8                 | cmp                 ebp, ebx

        $sequence_4 = { 7408 3c22 7404 3c30 }
            // n = 4, score = 200
            //   7408                 | dec                 esp
            //   3c22                 | mov                 dword ptr [esp + 0x70], esp
            //   7404                 | dec                 eax
            //   3c30                 | mov                 ecx, dword ptr [esp + 0x48]

        $sequence_5 = { 3c21 7408 3c23 7404 3c24 }
            // n = 5, score = 200
            //   3c21                 | mov                 dword ptr [edi + 0x48], ebx
            //   7408                 | dec                 eax
            //   3c23                 | mov                 dword ptr [edi + 0x50], 0xf
            //   7404                 | mov                 byte ptr [edi + 0x38], bl
            //   3c24                 | dec                 eax

        $sequence_6 = { 69c0e8030000 99 81e2ff070000 03c2 }
            // n = 4, score = 200
            //   69c0e8030000         | mov                 dword ptr [esp + 0x30], ebx
            //   99                   | dec                 eax
            //   81e2ff070000         | arpl                word ptr [ecx + 0x1b8], bx
            //   03c2                 | dec                 eax

        $sequence_7 = { 3c58 7507 b802000000 eb02 }
            // n = 4, score = 200
            //   3c58                 | jbe                 0xc7
            //   7507                 | cmp                 eax, ebx
            //   b802000000           | je                  0xc7
            //   eb02                 | cmp                 eax, dword ptr [esp + 0x18]

        $sequence_8 = { 750c ff15???????? 8bd8 f7db }
            // n = 4, score = 200
            //   750c                 | lea                 ecx, [esp + 0x30]
            //   ff15????????         |                     
            //   8bd8                 | dec                 esp
            //   f7db                 | mov                 esp, ecx

        $sequence_9 = { 7404 3c58 7507 b802000000 eb02 }
            // n = 5, score = 200
            //   7404                 | mov                 dword ptr [esp + 0x78], 0xf
            //   3c58                 | xor                 esi, esi
            //   7507                 | dec                 eax
            //   b802000000           | mov                 dword ptr [esp + 0x70], esi
            //   eb02                 | inc                 eax

    condition:
        7 of them and filesize < 801792
}