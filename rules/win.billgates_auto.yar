rule win_billgates_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.billgates."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.billgates"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 750c ff15???????? 8bd8 f7db }
            // n = 4, score = 200
            //   750c                 | push                1
            //   ff15????????         |                     
            //   8bd8                 | push                ecx
            //   f7db                 | shl                 edi, 4

        $sequence_1 = { 3bf0 7604 2bf0 eb04 2bc6 }
            // n = 5, score = 200
            //   3bf0                 | add                 dword ptr [ebx + 0x10], 0x28
            //   7604                 | mov                 ebx, dword ptr [ebx + 0x10]
            //   2bf0                 | mov                 dword ptr [ebp - 4], 0xffffffff
            //   eb04                 | mov                 edi, dword ptr [ebx + 0xc]
            //   2bc6                 | mov                 ecx, dword ptr [ebx + 0x10]

        $sequence_2 = { 3c22 7404 3c30 7504 }
            // n = 4, score = 200
            //   3c22                 | inc                 edi
            //   7404                 | dec                 eax
            //   3c30                 | add                 eax, 0x18
            //   7504                 | cmp                 edx, dword ptr [esi]

        $sequence_3 = { 69c0e8030000 99 81e2ff070000 03c2 }
            // n = 4, score = 200
            //   69c0e8030000         | test                ecx, ecx
            //   99                   | dec                 esp
            //   81e2ff070000         | mov                 edi, ebx
            //   03c2                 | dec                 esp

        $sequence_4 = { 740c 3c11 7408 3c22 7404 }
            // n = 5, score = 200
            //   740c                 | dec                 ecx
            //   3c11                 | lea                 ecx, dword ptr [esp + 0x80]
            //   7408                 | dec                 eax
            //   3c22                 | lea                 edx, dword ptr [esp + 0xe0]
            //   7404                 | dec                 eax

        $sequence_5 = { 3c58 7507 b802000000 eb02 }
            // n = 4, score = 200
            //   3c58                 | cmp                 edi, dword ptr [esp + 0xc8]
            //   7507                 | je                  0xfa
            //   b802000000           | dec                 eax
            //   eb02                 | mov                 ecx, dword ptr [esp + 0x60]

        $sequence_6 = { 3bf0 7604 2bf0 eb04 }
            // n = 4, score = 200
            //   3bf0                 | jbe                 0x2b0
            //   7604                 | mov                 ecx, dword ptr [esi + 0x28]
            //   2bf0                 | push                eax
            //   eb04                 | cmp                 dword ptr [esp + 0x30], eax

        $sequence_7 = { 7408 3c22 7404 3c30 7504 }
            // n = 5, score = 200
            //   7408                 | dec                 ecx
            //   3c22                 | or                  ecx, 0xffffffff
            //   7404                 | dec                 eax
            //   3c30                 | mov                 ecx, ebx
            //   7504                 | dec                 eax

        $sequence_8 = { 83f8ff 750c ff15???????? 8bd8 f7db }
            // n = 5, score = 200
            //   83f8ff               | dec                 eax
            //   750c                 | add                 esp, 0x20
            //   ff15????????         |                     
            //   8bd8                 | dec                 ebp
            //   f7db                 | mov                 eax, edx

        $sequence_9 = { 740c 3c11 7408 3c22 7404 3c30 7504 }
            // n = 7, score = 200
            //   740c                 | dec                 ecx
            //   3c11                 | or                  ecx, 0xffffffff
            //   7408                 | inc                 ebp
            //   3c22                 | xor                 eax, eax
            //   7404                 | dec                 eax
            //   3c30                 | lea                 edx, dword ptr [esp + 0x38]
            //   7504                 | dec                 eax

    condition:
        7 of them and filesize < 801792
}