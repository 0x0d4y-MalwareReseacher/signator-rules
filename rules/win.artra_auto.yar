rule win_artra_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.artra."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.artra"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5b 8b442410 5f 5e 83c41c c21000 5f }
            // n = 7, score = 800
            //   5b                   | pop                 ebx
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   83c41c               | add                 esp, 0x1c
            //   c21000               | ret                 0x10
            //   5f                   | pop                 edi

        $sequence_1 = { 8bc6 57 33c9 8d7801 8da42400000000 8a10 }
            // n = 6, score = 700
            //   8bc6                 | mov                 eax, esi
            //   57                   | push                edi
            //   33c9                 | xor                 ecx, ecx
            //   8d7801               | lea                 edi, [eax + 1]
            //   8da42400000000       | lea                 esp, [esp]
            //   8a10                 | mov                 dl, byte ptr [eax]

        $sequence_2 = { 84d2 75f9 2bc7 3bc8 72e3 8bc6 8d5001 }
            // n = 7, score = 700
            //   84d2                 | test                dl, dl
            //   75f9                 | jne                 0xfffffffb
            //   2bc7                 | sub                 eax, edi
            //   3bc8                 | cmp                 ecx, eax
            //   72e3                 | jb                  0xffffffe5
            //   8bc6                 | mov                 eax, esi
            //   8d5001               | lea                 edx, [eax + 1]

        $sequence_3 = { 800431f3 8bc6 41 8d7801 8d9b00000000 8a10 }
            // n = 6, score = 700
            //   800431f3             | add                 byte ptr [ecx + esi], 0xf3
            //   8bc6                 | mov                 eax, esi
            //   41                   | inc                 ecx
            //   8d7801               | lea                 edi, [eax + 1]
            //   8d9b00000000         | lea                 ebx, [ebx]
            //   8a10                 | mov                 dl, byte ptr [eax]

        $sequence_4 = { 72e3 8bc6 8d5001 5f 8a08 40 84c9 }
            // n = 7, score = 700
            //   72e3                 | jb                  0xffffffe5
            //   8bc6                 | mov                 eax, esi
            //   8d5001               | lea                 edx, [eax + 1]
            //   5f                   | pop                 edi
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl

        $sequence_5 = { 2bc2 03fb 8a4f01 47 84c9 }
            // n = 5, score = 600
            //   2bc2                 | sub                 eax, edx
            //   03fb                 | add                 edi, ebx
            //   8a4f01               | mov                 cl, byte ptr [edi + 1]
            //   47                   | inc                 edi
            //   84c9                 | test                cl, cl

        $sequence_6 = { 50 ffd7 85c0 7445 53 8b1d???????? 55 }
            // n = 7, score = 600
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   7445                 | je                  0x47
            //   53                   | push                ebx
            //   8b1d????????         |                     
            //   55                   | push                ebp

        $sequence_7 = { 8bf8 85ff 0f8488000000 6a00 57 ff15???????? }
            // n = 6, score = 600
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   0f8488000000         | je                  0x8e
            //   6a00                 | push                0
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_8 = { 8935???????? ff15???????? 8bf8 85ff 0f8488000000 }
            // n = 5, score = 600
            //   8935????????         |                     
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   0f8488000000         | je                  0x8e

        $sequence_9 = { e8???????? 8b3d???????? 6a00 6a00 6a00 8d442414 50 }
            // n = 7, score = 600
            //   e8????????           |                     
            //   8b3d????????         |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d442414             | lea                 eax, [esp + 0x14]
            //   50                   | push                eax

        $sequence_10 = { 8b1d???????? 55 8b2d???????? 90 }
            // n = 4, score = 600
            //   8b1d????????         |                     
            //   55                   | push                ebp
            //   8b2d????????         |                     
            //   90                   | nop                 

        $sequence_11 = { 8b2d???????? 90 8b542410 8d4c2410 51 }
            // n = 5, score = 600
            //   8b2d????????         |                     
            //   90                   | nop                 
            //   8b542410             | mov                 edx, dword ptr [esp + 0x10]
            //   8d4c2410             | lea                 ecx, [esp + 0x10]
            //   51                   | push                ecx

        $sequence_12 = { 8a08 880a 40 42 84c9 75f6 e8???????? }
            // n = 7, score = 600
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   880a                 | mov                 byte ptr [edx], cl
            //   40                   | inc                 eax
            //   42                   | inc                 edx
            //   84c9                 | test                cl, cl
            //   75f6                 | jne                 0xfffffff8
            //   e8????????           |                     

        $sequence_13 = { ff15???????? 57 ff15???????? 6a6d 56 ff15???????? 8bf0 }
            // n = 7, score = 600
            //   ff15????????         |                     
            //   57                   | push                edi
            //   ff15????????         |                     
            //   6a6d                 | push                0x6d
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_14 = { 83f910 7304 8d542418 8b5c2428 03d3 }
            // n = 5, score = 500
            //   83f910               | cmp                 ecx, 0x10
            //   7304                 | jae                 6
            //   8d542418             | lea                 edx, [esp + 0x18]
            //   8b5c2428             | mov                 ebx, dword ptr [esp + 0x28]
            //   03d3                 | add                 edx, ebx

        $sequence_15 = { 8d45dc 50 c745fcffffffff e8???????? 8b4df4 }
            // n = 5, score = 500
            //   8d45dc               | lea                 eax, [ebp - 0x24]
            //   50                   | push                eax
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]

        $sequence_16 = { c644242664 c644242877 c644242a20 c644242b4e c644242c54 c644242d5c }
            // n = 6, score = 500
            //   c644242664           | mov                 byte ptr [esp + 0x26], 0x64
            //   c644242877           | mov                 byte ptr [esp + 0x28], 0x77
            //   c644242a20           | mov                 byte ptr [esp + 0x2a], 0x20
            //   c644242b4e           | mov                 byte ptr [esp + 0x2b], 0x4e
            //   c644242c54           | mov                 byte ptr [esp + 0x2c], 0x54
            //   c644242d5c           | mov                 byte ptr [esp + 0x2d], 0x5c

        $sequence_17 = { 0f84e7000000 55 33c9 8d742434 e8???????? 8b4c245c 6aff }
            // n = 7, score = 500
            //   0f84e7000000         | je                  0xed
            //   55                   | push                ebp
            //   33c9                 | xor                 ecx, ecx
            //   8d742434             | lea                 esi, [esp + 0x34]
            //   e8????????           |                     
            //   8b4c245c             | mov                 ecx, dword ptr [esp + 0x5c]
            //   6aff                 | push                -1

        $sequence_18 = { c1f905 8b0c8de03b4100 83e01f c1e006 }
            // n = 4, score = 400
            //   c1f905               | sar                 ecx, 5
            //   8b0c8de03b4100       | mov                 ecx, dword ptr [ecx*4 + 0x413be0]
            //   83e01f               | and                 eax, 0x1f
            //   c1e006               | shl                 eax, 6

        $sequence_19 = { e8???????? 8b4c241c 51 6a01 8d542428 6a01 52 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   51                   | push                ecx
            //   6a01                 | push                1
            //   8d542428             | lea                 edx, [esp + 0x28]
            //   6a01                 | push                1
            //   52                   | push                edx

        $sequence_20 = { ffd6 85c0 75cc 5d 5b }
            // n = 5, score = 400
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   75cc                 | jne                 0xffffffce
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx

        $sequence_21 = { 0fb60d???????? fec9 8808 0fb615???????? }
            // n = 4, score = 400
            //   0fb60d????????       |                     
            //   fec9                 | dec                 cl
            //   8808                 | mov                 byte ptr [eax], cl
            //   0fb615????????       |                     

        $sequence_22 = { 751e a1???????? 50 ff15???????? 8b761c }
            // n = 5, score = 400
            //   751e                 | jne                 0x20
            //   a1????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b761c               | mov                 esi, dword ptr [esi + 0x1c]

        $sequence_23 = { 52 57 50 ffd3 85c0 7512 }
            // n = 6, score = 200
            //   52                   | push                edx
            //   57                   | push                edi
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   7512                 | jne                 0x14

        $sequence_24 = { 6a6c 50 c744242c06000000 c74424306d000000 c744243478364000 }
            // n = 5, score = 200
            //   6a6c                 | push                0x6c
            //   50                   | push                eax
            //   c744242c06000000     | mov                 dword ptr [esp + 0x2c], 6
            //   c74424306d000000     | mov                 dword ptr [esp + 0x30], 0x6d
            //   c744243478364000     | mov                 dword ptr [esp + 0x34], 0x403678

        $sequence_25 = { 84c9 75f9 2bc2 880c30 59 c3 3b0d???????? }
            // n = 7, score = 200
            //   84c9                 | test                cl, cl
            //   75f9                 | jne                 0xfffffffb
            //   2bc2                 | sub                 eax, edx
            //   880c30               | mov                 byte ptr [eax + esi], cl
            //   59                   | pop                 ecx
            //   c3                   | ret                 
            //   3b0d????????         |                     

    condition:
        7 of them and filesize < 811008
}