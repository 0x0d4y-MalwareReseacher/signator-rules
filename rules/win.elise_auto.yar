rule win_elise_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.elise."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.elise"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4804 8b38 03f9 75a9 5b 5f }
            // n = 6, score = 400
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]
            //   8b38                 | mov                 edi, dword ptr [eax]
            //   03f9                 | add                 edi, ecx
            //   75a9                 | jne                 0xffffffab
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi

        $sequence_1 = { 51 8b4118 53 57 8b7838 }
            // n = 5, score = 400
            //   51                   | push                ecx
            //   8b4118               | mov                 eax, dword ptr [ecx + 0x18]
            //   53                   | push                ebx
            //   57                   | push                edi
            //   8b7838               | mov                 edi, dword ptr [eax + 0x38]

        $sequence_2 = { 50 8bcf e8???????? ff4df4 8d3470 75ea }
            // n = 6, score = 400
            //   50                   | push                eax
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   ff4df4               | dec                 dword ptr [ebp - 0xc]
            //   8d3470               | lea                 esi, dword ptr [eax + esi*2]
            //   75ea                 | jne                 0xffffffec

        $sequence_3 = { 7715 8bd6 0fb75206 43 83c128 }
            // n = 5, score = 400
            //   7715                 | ja                  0x17
            //   8bd6                 | mov                 edx, esi
            //   0fb75206             | movzx               edx, word ptr [edx + 6]
            //   43                   | inc                 ebx
            //   83c128               | add                 ecx, 0x28

        $sequence_4 = { 8b4d08 0b4d0c 745f 3b4648 735a }
            // n = 5, score = 400
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   0b4d0c               | or                  ecx, dword ptr [ebp + 0xc]
            //   745f                 | je                  0x61
            //   3b4648               | cmp                 eax, dword ptr [esi + 0x48]
            //   735a                 | jae                 0x5c

        $sequence_5 = { 8b460c 894614 8b483c 03c1 894618 }
            // n = 5, score = 400
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   894614               | mov                 dword ptr [esi + 0x14], eax
            //   8b483c               | mov                 ecx, dword ptr [eax + 0x3c]
            //   03c1                 | add                 eax, ecx
            //   894618               | mov                 dword ptr [esi + 0x18], eax

        $sequence_6 = { 2bc8 034dfc 8d844f70020000 50 8bcf e8???????? 8b4df8 }
            // n = 7, score = 400
            //   2bc8                 | sub                 ecx, eax
            //   034dfc               | add                 ecx, dword ptr [ebp - 4]
            //   8d844f70020000       | lea                 eax, dword ptr [edi + ecx*2 + 0x270]
            //   50                   | push                eax
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]

        $sequence_7 = { 8a5c2408 8d4804 56 8b31 881c32 ff01 8b11 }
            // n = 7, score = 400
            //   8a5c2408             | mov                 bl, byte ptr [esp + 8]
            //   8d4804               | lea                 ecx, dword ptr [eax + 4]
            //   56                   | push                esi
            //   8b31                 | mov                 esi, dword ptr [ecx]
            //   881c32               | mov                 byte ptr [edx + esi], bl
            //   ff01                 | inc                 dword ptr [ecx]
            //   8b11                 | mov                 edx, dword ptr [ecx]

        $sequence_8 = { 33c9 888f00010000 888f01010000 8bf7 8945f8 }
            // n = 5, score = 400
            //   33c9                 | xor                 ecx, ecx
            //   888f00010000         | mov                 byte ptr [edi + 0x100], cl
            //   888f01010000         | mov                 byte ptr [edi + 0x101], cl
            //   8bf7                 | mov                 esi, edi
            //   8945f8               | mov                 dword ptr [ebp - 8], eax

        $sequence_9 = { 4a 0f8566ffffff 5b 85ff 7415 0fb616 33d0 }
            // n = 7, score = 300
            //   4a                   | dec                 edx
            //   0f8566ffffff         | jne                 0xffffff6c
            //   5b                   | pop                 ebx
            //   85ff                 | test                edi, edi
            //   7415                 | je                  0x17
            //   0fb616               | movzx               edx, byte ptr [esi]
            //   33d0                 | xor                 edx, eax

        $sequence_10 = { 8b7df4 8d4e01 81e1ff000080 7908 49 81c900ffffff }
            // n = 6, score = 300
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]
            //   8d4e01               | lea                 ecx, dword ptr [esi + 1]
            //   81e1ff000080         | and                 ecx, 0x800000ff
            //   7908                 | jns                 0xa
            //   49                   | dec                 ecx
            //   81c900ffffff         | or                  ecx, 0xffffff00

        $sequence_11 = { 0bd6 40 83f80e 72e7 }
            // n = 4, score = 300
            //   0bd6                 | or                  edx, esi
            //   40                   | inc                 eax
            //   83f80e               | cmp                 eax, 0xe
            //   72e7                 | jb                  0xffffffe9

        $sequence_12 = { 2135???????? 5e c3 56 8bf1 }
            // n = 5, score = 300
            //   2135????????         |                     
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx

        $sequence_13 = { 0fb6f1 8a1406 8855ff 0fb6d2 }
            // n = 4, score = 300
            //   0fb6f1               | movzx               esi, cl
            //   8a1406               | mov                 dl, byte ptr [esi + eax]
            //   8855ff               | mov                 byte ptr [ebp - 1], dl
            //   0fb6d2               | movzx               edx, dl

        $sequence_14 = { 1155f4 53 e8???????? 8bd8 8955ec }
            // n = 5, score = 300
            //   1155f4               | adc                 dword ptr [ebp - 0xc], edx
            //   53                   | push                ebx
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx

        $sequence_15 = { 4a 81ca00ffffff 42 0fb6fa 8a1c07 881c06 }
            // n = 6, score = 300
            //   4a                   | dec                 edx
            //   81ca00ffffff         | or                  edx, 0xffffff00
            //   42                   | inc                 edx
            //   0fb6fa               | movzx               edi, dl
            //   8a1c07               | mov                 bl, byte ptr [edi + eax]
            //   881c06               | mov                 byte ptr [esi + eax], bl

    condition:
        7 of them and filesize < 204800
}