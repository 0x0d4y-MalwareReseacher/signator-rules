rule win_bredolab_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.bredolab."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bredolab"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 83ec14 c744240c00000000 c744240800080000 895c2404 8b5d0c 891c24 }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   83ec14               | sub                 esp, 0x14
            //   c744240c00000000     | mov                 dword ptr [esp + 0xc], 0
            //   c744240800080000     | mov                 dword ptr [esp + 8], 0x800
            //   895c2404             | mov                 dword ptr [esp + 4], ebx
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   891c24               | mov                 dword ptr [esp], ebx

        $sequence_1 = { 8d4101 39c2 77f2 31c0 5b 5e 5f }
            // n = 7, score = 200
            //   8d4101               | lea                 eax, dword ptr [ecx + 1]
            //   39c2                 | cmp                 edx, eax
            //   77f2                 | ja                  0xfffffff4
            //   31c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_2 = { 8b5d0c 8a4d10 d3e3 899d60ffffff 8b4510 8a4d0c d3e0 }
            // n = 7, score = 200
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   8a4d10               | mov                 cl, byte ptr [ebp + 0x10]
            //   d3e3                 | shl                 ebx, cl
            //   899d60ffffff         | mov                 dword ptr [ebp - 0xa0], ebx
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8a4d0c               | mov                 cl, byte ptr [ebp + 0xc]
            //   d3e0                 | shl                 eax, cl

        $sequence_3 = { 893424 ff15???????? 83ec08 893424 ff15???????? 51 }
            // n = 6, score = 200
            //   893424               | mov                 dword ptr [esp], esi
            //   ff15????????         |                     
            //   83ec08               | sub                 esp, 8
            //   893424               | mov                 dword ptr [esp], esi
            //   ff15????????         |                     
            //   51                   | push                ecx

        $sequence_4 = { e9???????? 55 89e5 57 56 53 81ec2c010000 }
            // n = 7, score = 200
            //   e9????????           |                     
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   57                   | push                edi
            //   56                   | push                esi
            //   53                   | push                ebx
            //   81ec2c010000         | sub                 esp, 0x12c

        $sequence_5 = { 300c02 40 83f810 75f1 83c210 81fa???????? 75e2 }
            // n = 7, score = 200
            //   300c02               | xor                 byte ptr [edx + eax], cl
            //   40                   | inc                 eax
            //   83f810               | cmp                 eax, 0x10
            //   75f1                 | jne                 0xfffffff3
            //   83c210               | add                 edx, 0x10
            //   81fa????????         |                     
            //   75e2                 | jne                 0xffffffe4

        $sequence_6 = { c1e107 8d0401 034510 89c7 8b4df0 f3a4 8b4514 }
            // n = 7, score = 200
            //   c1e107               | shl                 ecx, 7
            //   8d0401               | lea                 eax, dword ptr [ecx + eax]
            //   034510               | add                 eax, dword ptr [ebp + 0x10]
            //   89c7                 | mov                 edi, eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]

        $sequence_7 = { c744241c01000000 8d45e4 89442418 8d45d8 89442414 c744241000000000 }
            // n = 6, score = 200
            //   c744241c01000000     | mov                 dword ptr [esp + 0x1c], 1
            //   8d45e4               | lea                 eax, dword ptr [ebp - 0x1c]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   8d45d8               | lea                 eax, dword ptr [ebp - 0x28]
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   c744241000000000     | mov                 dword ptr [esp + 0x10], 0

        $sequence_8 = { ff15???????? 50 803b00 7413 a1???????? 40 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   50                   | push                eax
            //   803b00               | cmp                 byte ptr [ebx], 0
            //   7413                 | je                  0x15
            //   a1????????           |                     
            //   40                   | inc                 eax

        $sequence_9 = { 8b4510 890424 ff15???????? 83ec08 8d65f4 5b }
            // n = 6, score = 200
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   890424               | mov                 dword ptr [esp], eax
            //   ff15????????         |                     
            //   83ec08               | sub                 esp, 8
            //   8d65f4               | lea                 esp, dword ptr [ebp - 0xc]
            //   5b                   | pop                 ebx

    condition:
        7 of them and filesize < 90112
}