rule win_wndtest_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.wndtest."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wndtest"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c745dc01000600 ff15???????? 85c0 7507 50 }
            // n = 5, score = 400
            //   c745dc01000600       | mov                 dword ptr [ebp - 0x24], 0x60001
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7507                 | jne                 9
            //   50                   | push                eax

        $sequence_1 = { 6a14 8bf0 e8???????? 8b4d08 8bf8 33c0 }
            // n = 6, score = 400
            //   6a14                 | push                0x14
            //   8bf0                 | mov                 esi, eax
            //   e8????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8bf8                 | mov                 edi, eax
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 8985f8feffff e8???????? a1???????? 68???????? }
            // n = 4, score = 400
            //   8985f8feffff         | mov                 dword ptr [ebp - 0x108], eax
            //   e8????????           |                     
            //   a1????????           |                     
            //   68????????           |                     

        $sequence_3 = { c745e000010000 c745dc01000600 ff15???????? 85c0 }
            // n = 4, score = 400
            //   c745e000010000       | mov                 dword ptr [ebp - 0x20], 0x100
            //   c745dc01000600       | mov                 dword ptr [ebp - 0x24], 0x60001
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_4 = { 46 895dfc 3b750c 7cbe 5f }
            // n = 5, score = 400
            //   46                   | inc                 esi
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   3b750c               | cmp                 esi, dword ptr [ebp + 0xc]
            //   7cbe                 | jl                  0xffffffc0
            //   5f                   | pop                 edi

        $sequence_5 = { 8b5d08 8d1439 8a0410 320419 41 8802 3bce }
            // n = 7, score = 400
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   8d1439               | lea                 edx, [ecx + edi]
            //   8a0410               | mov                 al, byte ptr [eax + edx]
            //   320419               | xor                 al, byte ptr [ecx + ebx]
            //   41                   | inc                 ecx
            //   8802                 | mov                 byte ptr [edx], al
            //   3bce                 | cmp                 ecx, esi

        $sequence_6 = { e8???????? 83c404 33c9 8d460a }
            // n = 4, score = 400
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33c9                 | xor                 ecx, ecx
            //   8d460a               | lea                 eax, [esi + 0xa]

        $sequence_7 = { c705????????00000000 53 56 e8???????? }
            // n = 4, score = 400
            //   c705????????00000000     |     
            //   53                   | push                ebx
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_8 = { 33750c 57 8d4e01 51 e8???????? }
            // n = 5, score = 400
            //   33750c               | xor                 esi, dword ptr [ebp + 0xc]
            //   57                   | push                edi
            //   8d4e01               | lea                 ecx, [esi + 1]
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_9 = { ffd7 8b15???????? a3???????? a1???????? 52 50 e8???????? }
            // n = 7, score = 400
            //   ffd7                 | call                edi
            //   8b15????????         |                     
            //   a3????????           |                     
            //   a1????????           |                     
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 901120
}