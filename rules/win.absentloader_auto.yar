rule win_absentloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.absentloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.absentloader"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645fc05 8d8da8fcffff 50 51 8d8dc8faffff e8???????? 68048701fd }
            // n = 7, score = 200
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5
            //   8d8da8fcffff         | lea                 ecx, [ebp - 0x358]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8d8dc8faffff         | lea                 ecx, [ebp - 0x538]
            //   e8????????           |                     
            //   68048701fd           | push                0xfd018704

        $sequence_1 = { 68a81606fd e8???????? 83c40c 83ec10 8bcc 51 e8???????? }
            // n = 7, score = 200
            //   68a81606fd           | push                0xfd0616a8
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   83ec10               | sub                 esp, 0x10
            //   8bcc                 | mov                 ecx, esp
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_2 = { e8???????? 8b4508 8b5010 8a1a 80fb02 751e 8bca }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b5010               | mov                 edx, dword ptr [eax + 0x10]
            //   8a1a                 | mov                 bl, byte ptr [edx]
            //   80fb02               | cmp                 bl, 2
            //   751e                 | jne                 0x20
            //   8bca                 | mov                 ecx, edx

        $sequence_3 = { 72f6 50 8d8ea8000000 e8???????? 8b4dfc 5f 5e }
            // n = 7, score = 200
            //   72f6                 | jb                  0xfffffff8
            //   50                   | push                eax
            //   8d8ea8000000         | lea                 ecx, [esi + 0xa8]
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_4 = { f7fe 88540dd4 41 83f905 72e3 8d45d4 885dd9 }
            // n = 7, score = 200
            //   f7fe                 | idiv                esi
            //   88540dd4             | mov                 byte ptr [ebp + ecx - 0x2c], dl
            //   41                   | inc                 ecx
            //   83f905               | cmp                 ecx, 5
            //   72e3                 | jb                  0xffffffe5
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   885dd9               | mov                 byte ptr [ebp - 0x27], bl

        $sequence_5 = { 83c0fd 3bd8 7e99 8b45f4 83f802 752e 8b45fc }
            // n = 7, score = 200
            //   83c0fd               | add                 eax, -3
            //   3bd8                 | cmp                 ebx, eax
            //   7e99                 | jle                 0xffffff9b
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83f802               | cmp                 eax, 2
            //   752e                 | jne                 0x30
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_6 = { e8???????? 51 54 8d4d38 e8???????? 8d8d30ffffff }
            // n = 6, score = 200
            //   e8????????           |                     
            //   51                   | push                ecx
            //   54                   | push                esp
            //   8d4d38               | lea                 ecx, [ebp + 0x38]
            //   e8????????           |                     
            //   8d8d30ffffff         | lea                 ecx, [ebp - 0xd0]

        $sequence_7 = { f7fe 88540dd8 41 83f904 72e3 8d45d8 885ddc }
            // n = 7, score = 200
            //   f7fe                 | idiv                esi
            //   88540dd8             | mov                 byte ptr [ebp + ecx - 0x28], dl
            //   41                   | inc                 ecx
            //   83f904               | cmp                 ecx, 4
            //   72e3                 | jb                  0xffffffe5
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   885ddc               | mov                 byte ptr [ebp - 0x24], bl

        $sequence_8 = { 68d86e06fd eb41 51 8d4de4 e8???????? 68e46f06fd eb31 }
            // n = 7, score = 200
            //   68d86e06fd           | push                0xfd066ed8
            //   eb41                 | jmp                 0x43
            //   51                   | push                ecx
            //   8d4de4               | lea                 ecx, [ebp - 0x1c]
            //   e8????????           |                     
            //   68e46f06fd           | push                0xfd066fe4
            //   eb31                 | jmp                 0x33

        $sequence_9 = { b9c59d1c81 03d6 898d88faffff 8a0a 42 888d83faffff }
            // n = 6, score = 200
            //   b9c59d1c81           | mov                 ecx, 0x811c9dc5
            //   03d6                 | add                 edx, esi
            //   898d88faffff         | mov                 dword ptr [ebp - 0x578], ecx
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   42                   | inc                 edx
            //   888d83faffff         | mov                 byte ptr [ebp - 0x57d], cl

    condition:
        7 of them and filesize < 794624
}