rule win_vohuk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.vohuk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.vohuk"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { a3???????? e8???????? 8d4dfc 51 6a00 ffd0 83f86f }
            // n = 7, score = 100
            //   a3????????           |                     
            //   e8????????           |                     
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   ffd0                 | call                eax
            //   83f86f               | cmp                 eax, 0x6f

        $sequence_1 = { ba4786ac2e 6a21 e8???????? 57 ffd0 5f 8bc6 }
            // n = 7, score = 100
            //   ba4786ac2e           | mov                 edx, 0x2eac8647
            //   6a21                 | push                0x21
            //   e8????????           |                     
            //   57                   | push                edi
            //   ffd0                 | call                eax
            //   5f                   | pop                 edi
            //   8bc6                 | mov                 eax, esi

        $sequence_2 = { 8bf8 85ff 0f84bc000000 8b0d???????? }
            // n = 4, score = 100
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   0f84bc000000         | je                  0xc2
            //   8b0d????????         |                     

        $sequence_3 = { e8???????? 8b0d???????? 83c40c ba18db31e4 6a62 e8???????? 8d8dc0fdffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b0d????????         |                     
            //   83c40c               | add                 esp, 0xc
            //   ba18db31e4           | mov                 edx, 0xe431db18
            //   6a62                 | push                0x62
            //   e8????????           |                     
            //   8d8dc0fdffff         | lea                 ecx, [ebp - 0x240]

        $sequence_4 = { c7402899009300 c7402cd700b100 c740308a00da00 c74034b9009900 c7403894009000 c7403c98002001 c7404054017101 }
            // n = 7, score = 100
            //   c7402899009300       | mov                 dword ptr [eax + 0x28], 0x930099
            //   c7402cd700b100       | mov                 dword ptr [eax + 0x2c], 0xb100d7
            //   c740308a00da00       | mov                 dword ptr [eax + 0x30], 0xda008a
            //   c74034b9009900       | mov                 dword ptr [eax + 0x34], 0x9900b9
            //   c7403894009000       | mov                 dword ptr [eax + 0x38], 0x900094
            //   c7403c98002001       | mov                 dword ptr [eax + 0x3c], 0x1200098
            //   c7404054017101       | mov                 dword ptr [eax + 0x40], 0x1710154

        $sequence_5 = { 57 ffd0 8bd8 f6c301 7419 8b0d???????? baefaaeecc }
            // n = 7, score = 100
            //   57                   | push                edi
            //   ffd0                 | call                eax
            //   8bd8                 | mov                 ebx, eax
            //   f6c301               | test                bl, 1
            //   7419                 | je                  0x1b
            //   8b0d????????         |                     
            //   baefaaeecc           | mov                 edx, 0xcceeaaef

        $sequence_6 = { c7842486000000c200a500 c784248a00000096008a00 c784248e0000008b00dd00 c7842492000000c800cc00 c784249600000086008f00 668984249a000000 8d9b00000000 }
            // n = 7, score = 100
            //   c7842486000000c200a500     | mov    dword ptr [esp + 0x86], 0xa500c2
            //   c784248a00000096008a00     | mov    dword ptr [esp + 0x8a], 0x8a0096
            //   c784248e0000008b00dd00     | mov    dword ptr [esp + 0x8e], 0xdd008b
            //   c7842492000000c800cc00     | mov    dword ptr [esp + 0x92], 0xcc00c8
            //   c784249600000086008f00     | mov    dword ptr [esp + 0x96], 0x8f0086
            //   668984249a000000     | mov                 word ptr [esp + 0x9a], ax
            //   8d9b00000000         | lea                 ebx, [ebx]

        $sequence_7 = { 8a840df8f0ffff 8d4901 88840d57ffffff 8b45fc 48 8945fc }
            // n = 6, score = 100
            //   8a840df8f0ffff       | mov                 al, byte ptr [ebp + ecx - 0xf08]
            //   8d4901               | lea                 ecx, [ecx + 1]
            //   88840d57ffffff       | mov                 byte ptr [ebp + ecx - 0xa9], al
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   48                   | dec                 eax
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_8 = { 8945e4 8d8544fcffff 50 e8???????? 8bf8 33f6 8bff }
            // n = 7, score = 100
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8d8544fcffff         | lea                 eax, [ebp - 0x3bc]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   33f6                 | xor                 esi, esi
            //   8bff                 | mov                 edi, edi

        $sequence_9 = { e8???????? 8b0d???????? ba17fcb0dc 6a30 e8???????? 68???????? ffd0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b0d????????         |                     
            //   ba17fcb0dc           | mov                 edx, 0xdcb0fc17
            //   6a30                 | push                0x30
            //   e8????????           |                     
            //   68????????           |                     
            //   ffd0                 | call                eax

    condition:
        7 of them and filesize < 260096
}