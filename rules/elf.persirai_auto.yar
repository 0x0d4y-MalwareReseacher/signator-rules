rule elf_persirai_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects elf.persirai."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/elf.persirai"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 58 ffb3bc000000 e8???????? }
            // n = 4, score = 100
            //   e8????????           |                     
            //   58                   | pop                 eax
            //   ffb3bc000000         | push                dword ptr [ebx + 0xbc]
            //   e8????????           |                     

        $sequence_1 = { 81ec24010000 833d????????00 0f8585010000 8d84242401c0ff 250000e0ff a3???????? }
            // n = 6, score = 100
            //   81ec24010000         | sub                 esp, 0x124
            //   833d????????00       |                     
            //   0f8585010000         | jne                 0x18b
            //   8d84242401c0ff       | lea                 eax, dword ptr [esp - 0x3ffedc]
            //   250000e0ff           | and                 eax, 0xffe00000
            //   a3????????           |                     

        $sequence_2 = { be01000000 41 89cf c1ef05 8d1ccd0c2f0608 }
            // n = 5, score = 100
            //   be01000000           | mov                 esi, 1
            //   41                   | inc                 ecx
            //   89cf                 | mov                 edi, ecx
            //   c1ef05               | shr                 edi, 5
            //   8d1ccd0c2f0608       | lea                 ebx, dword ptr [ecx*8 + 0x8062f0c]

        $sequence_3 = { 8910 31d2 8b461c e8???????? c6462e01 83be9c01000000 }
            // n = 6, score = 100
            //   8910                 | mov                 dword ptr [eax], edx
            //   31d2                 | xor                 edx, edx
            //   8b461c               | mov                 eax, dword ptr [esi + 0x1c]
            //   e8????????           |                     
            //   c6462e01             | mov                 byte ptr [esi + 0x2e], 1
            //   83be9c01000000       | cmp                 dword ptr [esi + 0x19c], 0

        $sequence_4 = { 83ec0c 6a00 e8???????? c705????????01000000 }
            // n = 4, score = 100
            //   83ec0c               | sub                 esp, 0xc
            //   6a00                 | push                0
            //   e8????????           |                     
            //   c705????????01000000     |     

        $sequence_5 = { 89049d00e90508 eb07 ba16000000 eb02 31d2 }
            // n = 5, score = 100
            //   89049d00e90508       | mov                 dword ptr [ebx*4 + 0x805e900], eax
            //   eb07                 | jmp                 9
            //   ba16000000           | mov                 edx, 0x16
            //   eb02                 | jmp                 4
            //   31d2                 | xor                 edx, edx

        $sequence_6 = { a1???????? 8b00 895804 a1???????? 8918 837c241800 }
            // n = 6, score = 100
            //   a1????????           |                     
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   895804               | mov                 dword ptr [eax + 4], ebx
            //   a1????????           |                     
            //   8918                 | mov                 dword ptr [eax], ebx
            //   837c241800           | cmp                 dword ptr [esp + 0x18], 0

        $sequence_7 = { 6a01 50 e8???????? 83c41c 53 50 }
            // n = 6, score = 100
            //   6a01                 | push                1
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c
            //   53                   | push                ebx
            //   50                   | push                eax

    condition:
        7 of them and filesize < 222800
}