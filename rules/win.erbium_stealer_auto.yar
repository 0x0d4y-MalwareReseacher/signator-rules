rule win_erbium_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.erbium_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.erbium_stealer"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4dec 8b55f8 03510c 52 }
            // n = 4, score = 100
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   03510c               | add                 edx, dword ptr [ecx + 0xc]
            //   52                   | push                edx

        $sequence_1 = { 33c0 660f1f440000 40 80b84820400000 }
            // n = 4, score = 100
            //   33c0                 | xor                 eax, eax
            //   660f1f440000         | nop                 word ptr [eax + eax]
            //   40                   | inc                 eax
            //   80b84820400000       | cmp                 byte ptr [eax + 0x402048], 0

        $sequence_2 = { 85ff 740f 6a00 53 }
            // n = 4, score = 100
            //   85ff                 | test                edi, edi
            //   740f                 | je                  0x11
            //   6a00                 | push                0
            //   53                   | push                ebx

        $sequence_3 = { 8b45e0 0fb708 c1f90c 83f903 7526 }
            // n = 5, score = 100
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   0fb708               | movzx               ecx, word ptr [eax]
            //   c1f90c               | sar                 ecx, 0xc
            //   83f903               | cmp                 ecx, 3
            //   7526                 | jne                 0x28

        $sequence_4 = { 80b86020400000 75f6 6a00 6a00 40 }
            // n = 5, score = 100
            //   80b86020400000       | cmp                 byte ptr [eax + 0x402060], 0
            //   75f6                 | jne                 0xfffffff8
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   40                   | inc                 eax

        $sequence_5 = { 740f 6a00 53 ff15???????? eb08 33c0 eb04 }
            // n = 7, score = 100
            //   740f                 | je                  0x11
            //   6a00                 | push                0
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   eb08                 | jmp                 0xa
            //   33c0                 | xor                 eax, eax
            //   eb04                 | jmp                 6

        $sequence_6 = { 8b442414 03c7 89442424 8d542410 52 51 }
            // n = 6, score = 100
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   03c7                 | add                 eax, edi
            //   89442424             | mov                 dword ptr [esp + 0x24], eax
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   52                   | push                edx
            //   51                   | push                ecx

        $sequence_7 = { ff55fc 32c0 e9???????? eb96 6a04 }
            // n = 5, score = 100
            //   ff55fc               | call                dword ptr [ebp - 4]
            //   32c0                 | xor                 al, al
            //   e9????????           |                     
            //   eb96                 | jmp                 0xffffff98
            //   6a04                 | push                4

        $sequence_8 = { 3bc7 75de 8b7dfc 81fb3b3b2aa6 743e }
            // n = 5, score = 100
            //   3bc7                 | cmp                 eax, edi
            //   75de                 | jne                 0xffffffe0
            //   8b7dfc               | mov                 edi, dword ptr [ebp - 4]
            //   81fb3b3b2aa6         | cmp                 ebx, 0xa62a3b3b
            //   743e                 | je                  0x40

        $sequence_9 = { 8b4238 50 6a00 8b4d08 51 }
            // n = 5, score = 100
            //   8b4238               | mov                 eax, dword ptr [edx + 0x38]
            //   50                   | push                eax
            //   6a00                 | push                0
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 33792
}