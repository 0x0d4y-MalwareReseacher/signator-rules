rule win_fonix_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.fonix."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fonix"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c7455c283c4900 8b55e8 3955e4 8b75ec 8bfe 0f4255e4 33c0 }
            // n = 7, score = 100
            //   c7455c283c4900       | mov                 dword ptr [ebp + 0x5c], 0x493c28
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   3955e4               | cmp                 dword ptr [ebp - 0x1c], edx
            //   8b75ec               | mov                 esi, dword ptr [ebp - 0x14]
            //   8bfe                 | mov                 edi, esi
            //   0f4255e4             | cmovb               edx, dword ptr [ebp - 0x1c]
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { e8???????? 8d4530 c645fc1e 50 8d4ddc e8???????? 85c0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d4530               | lea                 eax, [ebp + 0x30]
            //   c645fc1e             | mov                 byte ptr [ebp - 4], 0x1e
            //   50                   | push                eax
            //   8d4ddc               | lea                 ecx, [ebp - 0x24]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_2 = { c645fc0b f3ab 85d2 7407 e8???????? eb05 e8???????? }
            // n = 7, score = 100
            //   c645fc0b             | mov                 byte ptr [ebp - 4], 0xb
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   85d2                 | test                edx, edx
            //   7407                 | je                  9
            //   e8????????           |                     
            //   eb05                 | jmp                 7
            //   e8????????           |                     

        $sequence_3 = { 0f8477060000 80bd4ffcffff00 0f8522060000 68???????? 8d4dd8 e8???????? 68???????? }
            // n = 7, score = 100
            //   0f8477060000         | je                  0x67d
            //   80bd4ffcffff00       | cmp                 byte ptr [ebp - 0x3b1], 0
            //   0f8522060000         | jne                 0x628
            //   68????????           |                     
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   68????????           |                     

        $sequence_4 = { 56 e8???????? 8bf8 59 83ffff 7407 8b34bd60b24900 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   59                   | pop                 ecx
            //   83ffff               | cmp                 edi, -1
            //   7407                 | je                  9
            //   8b34bd60b24900       | mov                 esi, dword ptr [edi*4 + 0x49b260]

        $sequence_5 = { c745fc07000000 5b 50 8d5508 899d48fcffff 8d4d98 e8???????? }
            // n = 7, score = 100
            //   c745fc07000000       | mov                 dword ptr [ebp - 4], 7
            //   5b                   | pop                 ebx
            //   50                   | push                eax
            //   8d5508               | lea                 edx, [ebp + 8]
            //   899d48fcffff         | mov                 dword ptr [ebp - 0x3b8], ebx
            //   8d4d98               | lea                 ecx, [ebp - 0x68]
            //   e8????????           |                     

        $sequence_6 = { 8bfa 8955ec 59 8d4a0c ab ab ab }
            // n = 7, score = 100
            //   8bfa                 | mov                 edi, edx
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   59                   | pop                 ecx
            //   8d4a0c               | lea                 ecx, [edx + 0xc]
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_7 = { 6a20 68???????? 8d4dc0 c645fc04 e8???????? c78574ffffff1d000000 }
            // n = 6, score = 100
            //   6a20                 | push                0x20
            //   68????????           |                     
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   e8????????           |                     
            //   c78574ffffff1d000000     | mov    dword ptr [ebp - 0x8c], 0x1d

        $sequence_8 = { e8???????? cc 8b01 ff5018 8bd0 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   cc                   | int3                
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5018               | call                dword ptr [eax + 0x18]
            //   8bd0                 | mov                 edx, eax

        $sequence_9 = { 56 57 50 8d45f4 64a300000000 8bd9 895d38 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8bd9                 | mov                 ebx, ecx
            //   895d38               | mov                 dword ptr [ebp + 0x38], ebx

    condition:
        7 of them and filesize < 2226176
}