rule win_bleachgap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.bleachgap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bleachgap"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b8908fd5e00 8b542438 338208fd5e00 898424e8000000 8b442410 338808fd5e00 8b442430 }
            // n = 7, score = 100
            //   8b8908fd5e00         | mov                 ecx, dword ptr [ecx + 0x5efd08]
            //   8b542438             | mov                 edx, dword ptr [esp + 0x38]
            //   338208fd5e00         | xor                 eax, dword ptr [edx + 0x5efd08]
            //   898424e8000000       | mov                 dword ptr [esp + 0xe8], eax
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   338808fd5e00         | xor                 ecx, dword ptr [eax + 0x5efd08]
            //   8b442430             | mov                 eax, dword ptr [esp + 0x30]

        $sequence_1 = { 8b8dd4f6ffff 85c9 7445 8b3c8d0caf5f00 85ff 0f8588000000 33c0 }
            // n = 7, score = 100
            //   8b8dd4f6ffff         | mov                 ecx, dword ptr [ebp - 0x92c]
            //   85c9                 | test                ecx, ecx
            //   7445                 | je                  0x47
            //   8b3c8d0caf5f00       | mov                 edi, dword ptr [ecx*4 + 0x5faf0c]
            //   85ff                 | test                edi, edi
            //   0f8588000000         | jne                 0x8e
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { e8???????? 8bf8 83c40c 85ff 753b 6883050000 68???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   83c40c               | add                 esp, 0xc
            //   85ff                 | test                edi, edi
            //   753b                 | jne                 0x3d
            //   6883050000           | push                0x583
            //   68????????           |                     

        $sequence_3 = { 8bb100010000 8975d8 8bf4 895df0 8b991c010000 8b8904010000 894ddc }
            // n = 7, score = 100
            //   8bb100010000         | mov                 esi, dword ptr [ecx + 0x100]
            //   8975d8               | mov                 dword ptr [ebp - 0x28], esi
            //   8bf4                 | mov                 esi, esp
            //   895df0               | mov                 dword ptr [ebp - 0x10], ebx
            //   8b991c010000         | mov                 ebx, dword ptr [ecx + 0x11c]
            //   8b8904010000         | mov                 ecx, dword ptr [ecx + 0x104]
            //   894ddc               | mov                 dword ptr [ebp - 0x24], ecx

        $sequence_4 = { 8b742418 e8???????? 8d05d0856100 8b00 8b7c2414 89f5 e8???????? }
            // n = 7, score = 100
            //   8b742418             | mov                 esi, dword ptr [esp + 0x18]
            //   e8????????           |                     
            //   8d05d0856100         | lea                 eax, [0x6185d0]
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   89f5                 | mov                 ebp, esi
            //   e8????????           |                     

        $sequence_5 = { 8b4508 89443e0c 8b4510 89443e10 ff8790010000 5e 5f }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   89443e0c             | mov                 dword ptr [esi + edi + 0xc], eax
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   89443e10             | mov                 dword ptr [esi + edi + 0x10], eax
            //   ff8790010000         | inc                 dword ptr [edi + 0x190]
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_6 = { 8b4c2428 894c241c 8d0c6d00000000 894c2420 8d0441 89442410 8d0c50 }
            // n = 7, score = 100
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   894c241c             | mov                 dword ptr [esp + 0x1c], ecx
            //   8d0c6d00000000       | lea                 ecx, [ebp*2]
            //   894c2420             | mov                 dword ptr [esp + 0x20], ecx
            //   8d0441               | lea                 eax, [ecx + eax*2]
            //   89442410             | mov                 dword ptr [esp + 0x10], eax
            //   8d0c50               | lea                 ecx, [eax + edx*2]

        $sequence_7 = { e8???????? 8b7c2438 83c404 3bf8 0f8c42feffff eb0d 89742410 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b7c2438             | mov                 edi, dword ptr [esp + 0x38]
            //   83c404               | add                 esp, 4
            //   3bf8                 | cmp                 edi, eax
            //   0f8c42feffff         | jl                  0xfffffe48
            //   eb0d                 | jmp                 0xf
            //   89742410             | mov                 dword ptr [esp + 0x10], esi

        $sequence_8 = { 8b6c2410 83fd20 761b 68cd050000 68???????? 689f000000 687d010000 }
            // n = 7, score = 100
            //   8b6c2410             | mov                 ebp, dword ptr [esp + 0x10]
            //   83fd20               | cmp                 ebp, 0x20
            //   761b                 | jbe                 0x1d
            //   68cd050000           | push                0x5cd
            //   68????????           |                     
            //   689f000000           | push                0x9f
            //   687d010000           | push                0x17d

        $sequence_9 = { 85d2 7522 3bf5 751e f687f004000010 7415 399774060000 }
            // n = 7, score = 100
            //   85d2                 | test                edx, edx
            //   7522                 | jne                 0x24
            //   3bf5                 | cmp                 esi, ebp
            //   751e                 | jne                 0x20
            //   f687f004000010       | test                byte ptr [edi + 0x4f0], 0x10
            //   7415                 | je                  0x17
            //   399774060000         | cmp                 dword ptr [edi + 0x674], edx

    condition:
        7 of them and filesize < 4538368
}