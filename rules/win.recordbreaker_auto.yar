rule win_recordbreaker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.recordbreaker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.recordbreaker"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b15???????? 8bc8 e8???????? 8b55f4 8bc8 e8???????? 8b15???????? }
            // n = 7, score = 400
            //   8b15????????         |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8b15????????         |                     

        $sequence_1 = { 8d55fc 8bf8 8d45cc 50 8bcf }
            // n = 5, score = 400
            //   8d55fc               | lea                 edx, [ebp - 4]
            //   8bf8                 | mov                 edi, eax
            //   8d45cc               | lea                 eax, [ebp - 0x34]
            //   50                   | push                eax
            //   8bcf                 | mov                 ecx, edi

        $sequence_2 = { 740f 8b15???????? 8bce e8???????? 8bf0 8bd3 8bce }
            // n = 7, score = 400
            //   740f                 | je                  0x11
            //   8b15????????         |                     
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   8bd3                 | mov                 edx, ebx
            //   8bce                 | mov                 ecx, esi

        $sequence_3 = { 40 eb17 57 ff15???????? 53 }
            // n = 5, score = 400
            //   40                   | inc                 eax
            //   eb17                 | jmp                 0x19
            //   57                   | push                edi
            //   ff15????????         |                     
            //   53                   | push                ebx

        $sequence_4 = { 6a00 8d4514 50 6aff ff35???????? }
            // n = 5, score = 400
            //   6a00                 | push                0
            //   8d4514               | lea                 eax, [ebp + 0x14]
            //   50                   | push                eax
            //   6aff                 | push                -1
            //   ff35????????         |                     

        $sequence_5 = { 5e eb14 6bf34c 03f7 8b7d0c a5 a5 }
            // n = 7, score = 400
            //   5e                   | pop                 esi
            //   eb14                 | jmp                 0x16
            //   6bf34c               | imul                esi, ebx, 0x4c
            //   03f7                 | add                 esi, edi
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]

        $sequence_6 = { 8bd8 8d4dec a1???????? 8945ec e8???????? 8b4df8 8bf0 }
            // n = 7, score = 400
            //   8bd8                 | mov                 ebx, eax
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   a1????????           |                     
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   e8????????           |                     
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8bf0                 | mov                 esi, eax

        $sequence_7 = { 8b442410 50 ff15???????? 8b442418 50 }
            // n = 5, score = 400
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b442418             | mov                 eax, dword ptr [esp + 0x18]
            //   50                   | push                eax

        $sequence_8 = { 8bd8 89442450 89442454 ff15???????? }
            // n = 4, score = 400
            //   8bd8                 | mov                 ebx, eax
            //   89442450             | mov                 dword ptr [esp + 0x50], eax
            //   89442454             | mov                 dword ptr [esp + 0x54], eax
            //   ff15????????         |                     

        $sequence_9 = { 8bcf 50 8d55f8 e8???????? 59 59 }
            // n = 6, score = 400
            //   8bcf                 | mov                 ecx, edi
            //   50                   | push                eax
            //   8d55f8               | lea                 edx, [ebp - 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

    condition:
        7 of them and filesize < 142336
}