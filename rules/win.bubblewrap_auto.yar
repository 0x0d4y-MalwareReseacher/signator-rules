rule win_bubblewrap_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.bubblewrap."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bubblewrap"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 6870010000 68???????? e8???????? 8a0d???????? 8db424d0040000 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   6870010000           | push                0x170
            //   68????????           |                     
            //   e8????????           |                     
            //   8a0d????????         |                     
            //   8db424d0040000       | lea                 esi, [esp + 0x4d0]

        $sequence_1 = { 52 eb07 8d442428 6a40 50 }
            // n = 5, score = 100
            //   52                   | push                edx
            //   eb07                 | jmp                 9
            //   8d442428             | lea                 eax, [esp + 0x28]
            //   6a40                 | push                0x40
            //   50                   | push                eax

        $sequence_2 = { a1???????? bf???????? f7d1 49 }
            // n = 4, score = 100
            //   a1????????           |                     
            //   bf????????           |                     
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx

        $sequence_3 = { 8d8c24ac010000 68???????? 51 ffd6 b900020000 33c0 }
            // n = 6, score = 100
            //   8d8c24ac010000       | lea                 ecx, [esp + 0x1ac]
            //   68????????           |                     
            //   51                   | push                ecx
            //   ffd6                 | call                esi
            //   b900020000           | mov                 ecx, 0x200
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { f3a5 8bcd 8d442438 83e103 6800b00400 f3a4 }
            // n = 6, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bcd                 | mov                 ecx, ebp
            //   8d442438             | lea                 eax, [esp + 0x38]
            //   83e103               | and                 ecx, 3
            //   6800b00400           | push                0x4b000
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]

        $sequence_5 = { 52 50 ff15???????? 85c0 740d e9???????? }
            // n = 6, score = 100
            //   52                   | push                edx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740d                 | je                  0xf
            //   e9????????           |                     

        $sequence_6 = { 50 e8???????? b908000000 8d742420 bf???????? 68???????? f3a5 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   b908000000           | mov                 ecx, 8
            //   8d742420             | lea                 esi, [esp + 0x20]
            //   bf????????           |                     
            //   68????????           |                     
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]

        $sequence_7 = { f3a5 b910000000 be???????? bf???????? }
            // n = 4, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   b910000000           | mov                 ecx, 0x10
            //   be????????           |                     
            //   bf????????           |                     

        $sequence_8 = { 8d7c041d 8bca 8bc1 c1e902 }
            // n = 4, score = 100
            //   8d7c041d             | lea                 edi, [esp + eax + 0x1d]
            //   8bca                 | mov                 ecx, edx
            //   8bc1                 | mov                 eax, ecx
            //   c1e902               | shr                 ecx, 2

        $sequence_9 = { f7d1 49 8d3c1a 8bc1 }
            // n = 4, score = 100
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8d3c1a               | lea                 edi, [edx + ebx]
            //   8bc1                 | mov                 eax, ecx

    condition:
        7 of them and filesize < 57136
}