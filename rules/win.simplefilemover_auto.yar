rule win_simplefilemover_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.simplefilemover."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.simplefilemover"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bfc f3a5 e8???????? 81c420020000 85c0 }
            // n = 5, score = 600
            //   8bfc                 | mov                 edi, esp
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   e8????????           |                     
            //   81c420020000         | add                 esp, 0x220
            //   85c0                 | test                eax, eax

        $sequence_1 = { 7d07 33c0 e9???????? 6820020000 }
            // n = 4, score = 500
            //   7d07                 | jge                 9
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   6820020000           | push                0x220

        $sequence_2 = { ff15???????? 898504daffff 83bd04daffffff 750f c78508daffff00000000 }
            // n = 5, score = 300
            //   ff15????????         |                     
            //   898504daffff         | mov                 dword ptr [ebp - 0x25fc], eax
            //   83bd04daffffff       | cmp                 dword ptr [ebp - 0x25fc], -1
            //   750f                 | jne                 0x11
            //   c78508daffff00000000     | mov    dword ptr [ebp - 0x25f8], 0

        $sequence_3 = { e8???????? 83c408 6a04 8d9554daffff }
            // n = 4, score = 300
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   6a04                 | push                4
            //   8d9554daffff         | lea                 edx, [ebp - 0x25ac]

        $sequence_4 = { 52 e8???????? 83c40c 6a00 6a08 8d8554daffff }
            // n = 6, score = 300
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   6a00                 | push                0
            //   6a08                 | push                8
            //   8d8554daffff         | lea                 eax, [ebp - 0x25ac]

        $sequence_5 = { b988000000 8bf3 8bfc f3a5 }
            // n = 4, score = 300
            //   b988000000           | mov                 ecx, 0x88
            //   8bf3                 | mov                 esi, ebx
            //   8bfc                 | mov                 edi, esp
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]

        $sequence_6 = { 81c420020000 85c0 7407 68???????? }
            // n = 4, score = 300
            //   81c420020000         | add                 esp, 0x220
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   68????????           |                     

        $sequence_7 = { 8d8558faffff 50 e8???????? 83c40c 83bd58faffff00 }
            // n = 5, score = 300
            //   8d8558faffff         | lea                 eax, [ebp - 0x5a8]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   83bd58faffff00       | cmp                 dword ptr [ebp - 0x5a8], 0

        $sequence_8 = { 83bd58faffff02 751d 68???????? ff15???????? 83c404 c78508daffff00000000 }
            // n = 6, score = 300
            //   83bd58faffff02       | cmp                 dword ptr [ebp - 0x5a8], 2
            //   751d                 | jne                 0x1f
            //   68????????           |                     
            //   ff15????????         |                     
            //   83c404               | add                 esp, 4
            //   c78508daffff00000000     | mov    dword ptr [ebp - 0x25f8], 0

        $sequence_9 = { 83c40c 6a04 8d9510daffff 52 8b8540daffff 8d8c4560daffff }
            // n = 6, score = 300
            //   83c40c               | add                 esp, 0xc
            //   6a04                 | push                4
            //   8d9510daffff         | lea                 edx, [ebp - 0x25f0]
            //   52                   | push                edx
            //   8b8540daffff         | mov                 eax, dword ptr [ebp - 0x25c0]
            //   8d8c4560daffff       | lea                 ecx, [ebp + eax*2 - 0x25a0]

        $sequence_10 = { 8a1c01 885c241c 81e3ff000000 03de 81e3ff000080 7908 4b }
            // n = 7, score = 200
            //   8a1c01               | mov                 bl, byte ptr [ecx + eax]
            //   885c241c             | mov                 byte ptr [esp + 0x1c], bl
            //   81e3ff000000         | and                 ebx, 0xff
            //   03de                 | add                 ebx, esi
            //   81e3ff000080         | and                 ebx, 0x800000ff
            //   7908                 | jns                 0xa
            //   4b                   | dec                 ebx

        $sequence_11 = { 89450c 8d440002 50 e8???????? }
            // n = 4, score = 200
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   8d440002             | lea                 eax, [eax + eax + 2]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_12 = { 43 8b6c2424 81e3ff000000 8a1c03 301c2f }
            // n = 5, score = 200
            //   43                   | inc                 ebx
            //   8b6c2424             | mov                 ebp, dword ptr [esp + 0x24]
            //   81e3ff000000         | and                 ebx, 0xff
            //   8a1c03               | mov                 bl, byte ptr [ebx + eax]
            //   301c2f               | xor                 byte ptr [edi + ebp], bl

        $sequence_13 = { c3 8b542414 53 52 ff15???????? 83c408 }
            // n = 6, score = 200
            //   c3                   | ret                 
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   53                   | push                ebx
            //   52                   | push                edx
            //   ff15????????         |                     
            //   83c408               | add                 esp, 8

        $sequence_14 = { 33ff 884c2408 3bf7 88542424 }
            // n = 4, score = 200
            //   33ff                 | xor                 edi, edi
            //   884c2408             | mov                 byte ptr [esp + 8], cl
            //   3bf7                 | cmp                 esi, edi
            //   88542424             | mov                 byte ptr [esp + 0x24], dl

        $sequence_15 = { 8b742424 53 81e1ff000000 55 81e6ff000000 8d5101 81e2ff000080 }
            // n = 7, score = 200
            //   8b742424             | mov                 esi, dword ptr [esp + 0x24]
            //   53                   | push                ebx
            //   81e1ff000000         | and                 ecx, 0xff
            //   55                   | push                ebp
            //   81e6ff000000         | and                 esi, 0xff
            //   8d5101               | lea                 edx, [ecx + 1]
            //   81e2ff000080         | and                 edx, 0x800000ff

        $sequence_16 = { ff15???????? ebdc 8d859cdbffff 895de4 }
            // n = 4, score = 200
            //   ff15????????         |                     
            //   ebdc                 | jmp                 0xffffffde
            //   8d859cdbffff         | lea                 eax, [ebp - 0x2464]
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx

        $sequence_17 = { 50 e8???????? 8d85a4ddffff 57 50 8d45f8 50 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d85a4ddffff         | lea                 eax, [ebp - 0x225c]
            //   57                   | push                edi
            //   50                   | push                eax
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax

        $sequence_18 = { 47 897c2418 0fbfff 3bfb 0f8c54ffffff 8a4c242c }
            // n = 6, score = 200
            //   47                   | inc                 edi
            //   897c2418             | mov                 dword ptr [esp + 0x18], edi
            //   0fbfff               | movsx               edi, di
            //   3bfb                 | cmp                 edi, ebx
            //   0f8c54ffffff         | jl                  0xffffff5a
            //   8a4c242c             | mov                 cl, byte ptr [esp + 0x2c]

        $sequence_19 = { 8a5c241c 8b74242c 885c2414 81e6ff000000 8b6c2414 81e5ff000000 8a1c06 }
            // n = 7, score = 200
            //   8a5c241c             | mov                 bl, byte ptr [esp + 0x1c]
            //   8b74242c             | mov                 esi, dword ptr [esp + 0x2c]
            //   885c2414             | mov                 byte ptr [esp + 0x14], bl
            //   81e6ff000000         | and                 esi, 0xff
            //   8b6c2414             | mov                 ebp, dword ptr [esp + 0x14]
            //   81e5ff000000         | and                 ebp, 0xff
            //   8a1c06               | mov                 bl, byte ptr [esi + eax]

        $sequence_20 = { 668b4102 83c102 42 6685c0 75ea 85f6 }
            // n = 6, score = 200
            //   668b4102             | mov                 ax, word ptr [ecx + 2]
            //   83c102               | add                 ecx, 2
            //   42                   | inc                 edx
            //   6685c0               | test                ax, ax
            //   75ea                 | jne                 0xffffffec
            //   85f6                 | test                esi, esi

        $sequence_21 = { 59 59 7512 53 }
            // n = 4, score = 200
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   7512                 | jne                 0x14
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 73728
}