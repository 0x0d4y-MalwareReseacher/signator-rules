rule win_unidentified_092_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.unidentified_092."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_092"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d8de4f5ffff e8???????? 8d8dccf5ffff e8???????? 8d8d34f6ffff e8???????? 8d8d4cf6ffff }
            // n = 7, score = 100
            //   8d8de4f5ffff         | lea                 ecx, [ebp - 0xa1c]
            //   e8????????           |                     
            //   8d8dccf5ffff         | lea                 ecx, [ebp - 0xa34]
            //   e8????????           |                     
            //   8d8d34f6ffff         | lea                 ecx, [ebp - 0x9cc]
            //   e8????????           |                     
            //   8d8d4cf6ffff         | lea                 ecx, [ebp - 0x9b4]

        $sequence_1 = { 51 e8???????? 83c404 c645fc02 8b85f4feffff c7850cffffff0f000000 c78508ffffff00000000 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8b85f4feffff         | mov                 eax, dword ptr [ebp - 0x10c]
            //   c7850cffffff0f000000     | mov    dword ptr [ebp - 0xf4], 0xf
            //   c78508ffffff00000000     | mov    dword ptr [ebp - 0xf8], 0

        $sequence_2 = { e8???????? 6a01 51 68???????? b9???????? e8???????? 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   6a01                 | push                1
            //   51                   | push                ecx
            //   68????????           |                     
            //   b9????????           |                     
            //   e8????????           |                     
            //   50                   | push                eax

        $sequence_3 = { ff512c 8b45d0 6aff 50 8b08 ff5158 8b45d0 }
            // n = 7, score = 100
            //   ff512c               | call                dword ptr [ecx + 0x2c]
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   6aff                 | push                -1
            //   50                   | push                eax
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   ff5158               | call                dword ptr [ecx + 0x58]
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]

        $sequence_4 = { e8???????? 8d8d14f6ffff eb29 68???????? 8d8dccf5ffff e8???????? 6a01 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d8d14f6ffff         | lea                 ecx, [ebp - 0x9ec]
            //   eb29                 | jmp                 0x2b
            //   68????????           |                     
            //   8d8dccf5ffff         | lea                 ecx, [ebp - 0xa34]
            //   e8????????           |                     
            //   6a01                 | push                1

        $sequence_5 = { 8d8d8cfbffff 8b9588fbffff 68???????? e8???????? c645fc01 8d8dd4fbffff 8b9588fbffff }
            // n = 7, score = 100
            //   8d8d8cfbffff         | lea                 ecx, [ebp - 0x474]
            //   8b9588fbffff         | mov                 edx, dword ptr [ebp - 0x478]
            //   68????????           |                     
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8d8dd4fbffff         | lea                 ecx, [ebp - 0x42c]
            //   8b9588fbffff         | mov                 edx, dword ptr [ebp - 0x478]

        $sequence_6 = { 68???????? 8d4dd8 e8???????? 40 8d4dd8 50 8d85d0fdffff }
            // n = 7, score = 100
            //   68????????           |                     
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   40                   | inc                 eax
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   50                   | push                eax
            //   8d85d0fdffff         | lea                 eax, [ebp - 0x230]

        $sequence_7 = { c1ce0b 0bc1 8bcb c1c107 33f1 8945f0 0155f0 }
            // n = 7, score = 100
            //   c1ce0b               | ror                 esi, 0xb
            //   0bc1                 | or                  eax, ecx
            //   8bcb                 | mov                 ecx, ebx
            //   c1c107               | rol                 ecx, 7
            //   33f1                 | xor                 esi, ecx
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   0155f0               | add                 dword ptr [ebp - 0x10], edx

        $sequence_8 = { 6bc000 8b4d08 89885c5f0310 68???????? e8???????? 8be5 5d }
            // n = 7, score = 100
            //   6bc000               | imul                eax, eax, 0
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   89885c5f0310         | mov                 dword ptr [eax + 0x10035f5c], ecx
            //   68????????           |                     
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp

        $sequence_9 = { 3bc1 0f8305010000 2bc8 83f904 0f82ff000000 83f923 }
            // n = 6, score = 100
            //   3bc1                 | cmp                 eax, ecx
            //   0f8305010000         | jae                 0x10b
            //   2bc8                 | sub                 ecx, eax
            //   83f904               | cmp                 ecx, 4
            //   0f82ff000000         | jb                  0x105
            //   83f923               | cmp                 ecx, 0x23

    condition:
        7 of them and filesize < 10202112
}