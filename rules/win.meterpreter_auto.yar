rule win_meterpreter_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.meterpreter."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.meterpreter"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { fc 8921 34ff 10f9 fd f1 50 }
            // n = 7, score = 200
            //   fc                   | cld                 
            //   8921                 | mov                 dword ptr [ecx], esp
            //   34ff                 | xor                 al, 0xff
            //   10f9                 | adc                 cl, bh
            //   fd                   | std                 
            //   f1                   | int1                
            //   50                   | push                eax

        $sequence_1 = { 8a0c19 8808 8bcf d3ea }
            // n = 4, score = 200
            //   8a0c19               | mov                 cl, byte ptr [ecx + ebx]
            //   8808                 | mov                 byte ptr [eax], cl
            //   8bcf                 | mov                 ecx, edi
            //   d3ea                 | shr                 edx, cl

        $sequence_2 = { 8bf7 b94c000061 f3ab 8b4573 }
            // n = 4, score = 200
            //   8bf7                 | mov                 esi, edi
            //   b94c000061           | mov                 ecx, 0x6100004c
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8b4573               | mov                 eax, dword ptr [ebp + 0x73]

        $sequence_3 = { 8d2b 10a48a46045170 f5 50 94 15b9c040c8 85c0 }
            // n = 7, score = 200
            //   8d2b                 | lea                 ebp, dword ptr [ebx]
            //   10a48a46045170       | adc                 byte ptr [edx + ecx*4 + 0x70510446], ah
            //   f5                   | cmc                 
            //   50                   | push                eax
            //   94                   | xchg                eax, esp
            //   15b9c040c8           | adc                 eax, 0xc840c0b9
            //   85c0                 | test                eax, eax

        $sequence_4 = { 008af3d283d6 0883c3398b4d fc 835514eb 897d08 }
            // n = 5, score = 200
            //   008af3d283d6         | add                 byte ptr [edx - 0x297c2d0d], cl
            //   0883c3398b4d         | or                  byte ptr [ebx + 0x4d8b39c3], al
            //   fc                   | cld                 
            //   835514eb             | adc                 dword ptr [ebp + 0x14], -0x15
            //   897d08               | mov                 dword ptr [ebp + 8], edi

        $sequence_5 = { 880e 8b4d10 e8???????? 8b33 0be2 75e8 dd4518 }
            // n = 7, score = 200
            //   880e                 | mov                 byte ptr [esi], cl
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   8b33                 | mov                 esi, dword ptr [ebx]
            //   0be2                 | or                  esp, edx
            //   75e8                 | jne                 0xffffffea
            //   dd4518               | fld                 qword ptr [ebp + 0x18]

        $sequence_6 = { ffa42404e8cbff 16 e5f7 1f 47 c059f7d8 }
            // n = 6, score = 200
            //   ffa42404e8cbff       | jmp                 dword ptr [esp - 0x3417fc]
            //   16                   | push                ss
            //   e5f7                 | in                  eax, 0xf7
            //   1f                   | pop                 ds
            //   47                   | inc                 edi
            //   c059f7d8             | rcr                 byte ptr [ecx - 9], 0xd8

        $sequence_7 = { 005e8b e5ec 1f 8be3 dc02 41 }
            // n = 6, score = 200
            //   005e8b               | add                 byte ptr [esi - 0x75], bl
            //   e5ec                 | in                  eax, 0xec
            //   1f                   | pop                 ds
            //   8be3                 | mov                 esp, ebx
            //   dc02                 | fadd                qword ptr [edx]
            //   41                   | inc                 ecx

        $sequence_8 = { a1???????? 83d1bd 2bf8 03d8 }
            // n = 4, score = 200
            //   a1????????           |                     
            //   83d1bd               | adc                 ecx, -0x43
            //   2bf8                 | sub                 edi, eax
            //   03d8                 | add                 ebx, eax

        $sequence_9 = { 8ba91085c97c 16 b704 e0c0 7610 }
            // n = 5, score = 200
            //   8ba91085c97c         | mov                 ebp, dword ptr [ecx + 0x7cc98510]
            //   16                   | push                ss
            //   b704                 | mov                 bh, 4
            //   e0c0                 | loopne              0xffffffc2
            //   7610                 | jbe                 0x12

    condition:
        7 of them and filesize < 188416
}