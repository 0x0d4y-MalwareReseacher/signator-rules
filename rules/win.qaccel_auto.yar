rule win_qaccel_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.qaccel."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.qaccel"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5d c3 e8???????? 0f8816000000 0f8910000000 5f }
            // n = 6, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   e8????????           |                     
            //   0f8816000000         | js                  0x1c
            //   0f8910000000         | jns                 0x16
            //   5f                   | pop                 edi

        $sequence_1 = { 50 6a00 ffd6 83f801 7445 0f880a000000 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ffd6                 | call                esi
            //   83f801               | cmp                 eax, 1
            //   7445                 | je                  0x47
            //   0f880a000000         | js                  0x10

        $sequence_2 = { 80c261 8855fe ff15???????? 50 ff15???????? 0f881a000000 }
            // n = 6, score = 100
            //   80c261               | add                 dl, 0x61
            //   8855fe               | mov                 byte ptr [ebp - 2], dl
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   0f881a000000         | js                  0x20

        $sequence_3 = { 50 83e103 8d85fcfeffff f3a4 50 ff15???????? }
            // n = 6, score = 100
            //   50                   | push                eax
            //   83e103               | and                 ecx, 3
            //   8d85fcfeffff         | lea                 eax, [ebp - 0x104]
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_4 = { 57 b94a000000 33c0 8dbdd8feffff f3ab }
            // n = 5, score = 100
            //   57                   | push                edi
            //   b94a000000           | mov                 ecx, 0x4a
            //   33c0                 | xor                 eax, eax
            //   8dbdd8feffff         | lea                 edi, [ebp - 0x128]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_5 = { 03c6 51 50 c7450c00000000 e8???????? 83c414 85c0 }
            // n = 7, score = 100
            //   03c6                 | add                 eax, esi
            //   51                   | push                ecx
            //   50                   | push                eax
            //   c7450c00000000       | mov                 dword ptr [ebp + 0xc], 0
            //   e8????????           |                     
            //   83c414               | add                 esp, 0x14
            //   85c0                 | test                eax, eax

        $sequence_6 = { 5d c20400 8b4d08 8b5620 51 52 ff15???????? }
            // n = 7, score = 100
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b5620               | mov                 edx, dword ptr [esi + 0x20]
            //   51                   | push                ecx
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_7 = { 8945fc 32db 0f880d000000 0f8907000000 5f }
            // n = 5, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   32db                 | xor                 bl, bl
            //   0f880d000000         | js                  0x13
            //   0f8907000000         | jns                 0xd
            //   5f                   | pop                 edi

        $sequence_8 = { 50 e8???????? 0fbe4dff 8b5020 6801001c00 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   0fbe4dff             | movsx               ecx, byte ptr [ebp - 1]
            //   8b5020               | mov                 edx, dword ptr [eax + 0x20]
            //   6801001c00           | push                0x1c0001

        $sequence_9 = { 8d8ef0000000 c744241004000000 e8???????? 8d8eec000000 c644241003 e8???????? 8d8ee4000000 }
            // n = 7, score = 100
            //   8d8ef0000000         | lea                 ecx, [esi + 0xf0]
            //   c744241004000000     | mov                 dword ptr [esp + 0x10], 4
            //   e8????????           |                     
            //   8d8eec000000         | lea                 ecx, [esi + 0xec]
            //   c644241003           | mov                 byte ptr [esp + 0x10], 3
            //   e8????????           |                     
            //   8d8ee4000000         | lea                 ecx, [esi + 0xe4]

    condition:
        7 of them and filesize < 106496
}