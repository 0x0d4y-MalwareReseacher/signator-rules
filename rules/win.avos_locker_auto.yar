rule win_avos_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.avos_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.avos_locker"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 897de4 ff75e8 8d4708 8bc8 8945ec e8???????? c645fc01 }
            // n = 7, score = 100
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   8d4708               | lea                 eax, [edi + 8]
            //   8bc8                 | mov                 ecx, eax
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1

        $sequence_1 = { 83c40c ff7628 e8???????? c745fcffffffff f6450801 c706???????? 740b }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   ff7628               | push                dword ptr [esi + 0x28]
            //   e8????????           |                     
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   f6450801             | test                byte ptr [ebp + 8], 1
            //   c706????????         |                     
            //   740b                 | je                  0xd

        $sequence_2 = { 8b55c4 8b75e4 8a84f0304a4c00 88040a 0fb645e0 33c9 41 }
            // n = 7, score = 100
            //   8b55c4               | mov                 edx, dword ptr [ebp - 0x3c]
            //   8b75e4               | mov                 esi, dword ptr [ebp - 0x1c]
            //   8a84f0304a4c00       | mov                 al, byte ptr [eax + esi*8 + 0x4c4a30]
            //   88040a               | mov                 byte ptr [edx + ecx], al
            //   0fb645e0             | movzx               eax, byte ptr [ebp - 0x20]
            //   33c9                 | xor                 ecx, ecx
            //   41                   | inc                 ecx

        $sequence_3 = { ff7584 8d4dd8 50 e8???????? 8d4d90 e8???????? 8365c000 }
            // n = 7, score = 100
            //   ff7584               | push                dword ptr [ebp - 0x7c]
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d4d90               | lea                 ecx, [ebp - 0x70]
            //   e8????????           |                     
            //   8365c000             | and                 dword ptr [ebp - 0x40], 0

        $sequence_4 = { 59 5f 8be5 5d c3 53 8bdc }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   53                   | push                ebx
            //   8bdc                 | mov                 ebx, esp

        $sequence_5 = { 8d8dd0faffff e8???????? 8885d6faffff 6a67 8d8dd0faffff e8???????? 8885d7faffff }
            // n = 7, score = 100
            //   8d8dd0faffff         | lea                 ecx, [ebp - 0x530]
            //   e8????????           |                     
            //   8885d6faffff         | mov                 byte ptr [ebp - 0x52a], al
            //   6a67                 | push                0x67
            //   8d8dd0faffff         | lea                 ecx, [ebp - 0x530]
            //   e8????????           |                     
            //   8885d7faffff         | mov                 byte ptr [ebp - 0x529], al

        $sequence_6 = { c7472c00000000 c747300f000000 c6471c00 c645fc07 c7473400000000 c7474400000000 c747480f000000 }
            // n = 7, score = 100
            //   c7472c00000000       | mov                 dword ptr [edi + 0x2c], 0
            //   c747300f000000       | mov                 dword ptr [edi + 0x30], 0xf
            //   c6471c00             | mov                 byte ptr [edi + 0x1c], 0
            //   c645fc07             | mov                 byte ptr [ebp - 4], 7
            //   c7473400000000       | mov                 dword ptr [edi + 0x34], 0
            //   c7474400000000       | mov                 dword ptr [edi + 0x44], 0
            //   c747480f000000       | mov                 dword ptr [edi + 0x48], 0xf

        $sequence_7 = { 33c5 50 8d45f4 64a300000000 8b5508 8b750c 8911 }
            // n = 7, score = 100
            //   33c5                 | xor                 eax, ebp
            //   50                   | push                eax
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8911                 | mov                 dword ptr [ecx], edx

        $sequence_8 = { 83f81f 0f8794000000 52 51 e8???????? 83c408 8b55d4 }
            // n = 7, score = 100
            //   83f81f               | cmp                 eax, 0x1f
            //   0f8794000000         | ja                  0x9a
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]

        $sequence_9 = { 50 c745d0cc194a00 c745d402000000 e8???????? 8d45e8 50 8d45d8 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   c745d0cc194a00       | mov                 dword ptr [ebp - 0x30], 0x4a19cc
            //   c745d402000000       | mov                 dword ptr [ebp - 0x2c], 2
            //   e8????????           |                     
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   50                   | push                eax
            //   8d45d8               | lea                 eax, [ebp - 0x28]

    condition:
        7 of them and filesize < 1701888
}