rule win_avos_locker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.avos_locker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.avos_locker"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c003 a3???????? 8b450c 833800 7510 c745f0341c4a00 c745f40e000000 }
            // n = 7, score = 100
            //   83c003               | add                 eax, 3
            //   a3????????           |                     
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   833800               | cmp                 dword ptr [eax], 0
            //   7510                 | jne                 0x12
            //   c745f0341c4a00       | mov                 dword ptr [ebp - 0x10], 0x4a1c34
            //   c745f40e000000       | mov                 dword ptr [ebp - 0xc], 0xe

        $sequence_1 = { 83f808 7440 83f80d 743b c7464c00000000 5e c3 }
            // n = 7, score = 100
            //   83f808               | cmp                 eax, 8
            //   7440                 | je                  0x42
            //   83f80d               | cmp                 eax, 0xd
            //   743b                 | je                  0x3d
            //   c7464c00000000       | mov                 dword ptr [esi + 0x4c], 0
            //   5e                   | pop                 esi
            //   c3                   | ret                 

        $sequence_2 = { 7420 83c8ff f00fc14104 7516 8b01 ff10 8b4dc4 }
            // n = 7, score = 100
            //   7420                 | je                  0x22
            //   83c8ff               | or                  eax, 0xffffffff
            //   f00fc14104           | lock xadd           dword ptr [ecx + 4], eax
            //   7516                 | jne                 0x18
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff10                 | call                dword ptr [eax]
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]

        $sequence_3 = { 8d0476 c1e002 03c7 894108 8b4df4 64890d00000000 59 }
            // n = 7, score = 100
            //   8d0476               | lea                 eax, [esi + esi*2]
            //   c1e002               | shl                 eax, 2
            //   03c7                 | add                 eax, edi
            //   894108               | mov                 dword ptr [ecx + 8], eax
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx

        $sequence_4 = { 64a300000000 8bf9 89bd64ffffff c745fc00000000 be01000000 8b4508 0f57c0 }
            // n = 7, score = 100
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8bf9                 | mov                 edi, ecx
            //   89bd64ffffff         | mov                 dword ptr [ebp - 0x9c], edi
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   be01000000           | mov                 esi, 1
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0f57c0               | xorps               xmm0, xmm0

        $sequence_5 = { 8d8dd0faffff e8???????? 8885f2faffff 6a66 8d8dd0faffff e8???????? 8885f3faffff }
            // n = 7, score = 100
            //   8d8dd0faffff         | lea                 ecx, [ebp - 0x530]
            //   e8????????           |                     
            //   8885f2faffff         | mov                 byte ptr [ebp - 0x50e], al
            //   6a66                 | push                0x66
            //   8d8dd0faffff         | lea                 ecx, [ebp - 0x530]
            //   e8????????           |                     
            //   8885f3faffff         | mov                 byte ptr [ebp - 0x50d], al

        $sequence_6 = { c785a0eeffff1d684e58 66c785a4eeffff4f4e c685a6eeffff00 33c9 898d70edffff 83f909 7325 }
            // n = 7, score = 100
            //   c785a0eeffff1d684e58     | mov    dword ptr [ebp - 0x1160], 0x584e681d
            //   66c785a4eeffff4f4e     | mov    word ptr [ebp - 0x115c], 0x4e4f
            //   c685a6eeffff00       | mov                 byte ptr [ebp - 0x115a], 0
            //   33c9                 | xor                 ecx, ecx
            //   898d70edffff         | mov                 dword ptr [ebp - 0x1290], ecx
            //   83f909               | cmp                 ecx, 9
            //   7325                 | jae                 0x27

        $sequence_7 = { 8975e4 894de8 3bd0 741b 8b02 8b4a04 }
            // n = 6, score = 100
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   3bd0                 | cmp                 edx, eax
            //   741b                 | je                  0x1d
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8b4a04               | mov                 ecx, dword ptr [edx + 4]

        $sequence_8 = { 837e1410 7202 8b16 8b7610 3b7010 7552 83ee04 }
            // n = 7, score = 100
            //   837e1410             | cmp                 dword ptr [esi + 0x14], 0x10
            //   7202                 | jb                  4
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   8b7610               | mov                 esi, dword ptr [esi + 0x10]
            //   3b7010               | cmp                 esi, dword ptr [eax + 0x10]
            //   7552                 | jne                 0x54
            //   83ee04               | sub                 esi, 4

        $sequence_9 = { 8945fc f6c301 7435 8d45f0 c745f0a01d4a00 50 8d4dd8 }
            // n = 7, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   f6c301               | test                bl, 1
            //   7435                 | je                  0x37
            //   8d45f0               | lea                 eax, [ebp - 0x10]
            //   c745f0a01d4a00       | mov                 dword ptr [ebp - 0x10], 0x4a1da0
            //   50                   | push                eax
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]

    condition:
        7 of them and filesize < 1701888
}