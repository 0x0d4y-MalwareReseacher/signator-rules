rule win_rumish_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.rumish."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rumish"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 55 8bec 83ec50 53 e8???????? 58 83c80a }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec50               | sub                 esp, 0x50
            //   53                   | push                ebx
            //   e8????????           |                     
            //   58                   | pop                 eax
            //   83c80a               | or                  eax, 0xa

        $sequence_1 = { e8???????? 83c408 e8???????? 83f008 0f843d010000 8d4588 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   e8????????           |                     
            //   83f008               | xor                 eax, 8
            //   0f843d010000         | je                  0x143
            //   8d4588               | lea                 eax, dword ptr [ebp - 0x78]

        $sequence_2 = { e8???????? e9???????? 0fbf45c0 898524ffffff 8b8d24ffffff 83e901 898d24ffffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   e9????????           |                     
            //   0fbf45c0             | movsx               eax, word ptr [ebp - 0x40]
            //   898524ffffff         | mov                 dword ptr [ebp - 0xdc], eax
            //   8b8d24ffffff         | mov                 ecx, dword ptr [ebp - 0xdc]
            //   83e901               | sub                 ecx, 1
            //   898d24ffffff         | mov                 dword ptr [ebp - 0xdc], ecx

        $sequence_3 = { 8b4db0 e8???????? 0fb6c8 85c9 750a 8b4db0 e8???????? }
            // n = 7, score = 100
            //   8b4db0               | mov                 ecx, dword ptr [ebp - 0x50]
            //   e8????????           |                     
            //   0fb6c8               | movzx               ecx, al
            //   85c9                 | test                ecx, ecx
            //   750a                 | jne                 0xc
            //   8b4db0               | mov                 ecx, dword ptr [ebp - 0x50]
            //   e8????????           |                     

        $sequence_4 = { dc35???????? dc05???????? e8???????? 8945f0 8b4df0 c1e102 51 }
            // n = 7, score = 100
            //   dc35????????         |                     
            //   dc05????????         |                     
            //   e8????????           |                     
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   c1e102               | shl                 ecx, 2
            //   51                   | push                ecx

        $sequence_5 = { 50 8d8d9cfeffff e8???????? 0fbe08 898d5cfdffff db855cfdffff dd9d74feffff }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d8d9cfeffff         | lea                 ecx, dword ptr [ebp - 0x164]
            //   e8????????           |                     
            //   0fbe08               | movsx               ecx, byte ptr [eax]
            //   898d5cfdffff         | mov                 dword ptr [ebp - 0x2a4], ecx
            //   db855cfdffff         | fild                dword ptr [ebp - 0x2a4]
            //   dd9d74feffff         | fstp                qword ptr [ebp - 0x18c]

        $sequence_6 = { b801000000 0fa2 8945b8 8955ec b800000080 0fa2 3d00000080 }
            // n = 7, score = 100
            //   b801000000           | mov                 eax, 1
            //   0fa2                 | cpuid               
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   b800000080           | mov                 eax, 0x80000000
            //   0fa2                 | cpuid               
            //   3d00000080           | cmp                 eax, 0x80000000

        $sequence_7 = { 8985e0feffff 8b8de4feffff 898df8feffff 8b95fcfeffff 899530ffffff 8b85f8feffff 50 }
            // n = 7, score = 100
            //   8985e0feffff         | mov                 dword ptr [ebp - 0x120], eax
            //   8b8de4feffff         | mov                 ecx, dword ptr [ebp - 0x11c]
            //   898df8feffff         | mov                 dword ptr [ebp - 0x108], ecx
            //   8b95fcfeffff         | mov                 edx, dword ptr [ebp - 0x104]
            //   899530ffffff         | mov                 dword ptr [ebp - 0xd0], edx
            //   8b85f8feffff         | mov                 eax, dword ptr [ebp - 0x108]
            //   50                   | push                eax

        $sequence_8 = { 8d8d00feffff e8???????? 50 e8???????? 898518feffff 83bd18feffff00 7411 }
            // n = 7, score = 100
            //   8d8d00feffff         | lea                 ecx, dword ptr [ebp - 0x200]
            //   e8????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   898518feffff         | mov                 dword ptr [ebp - 0x1e8], eax
            //   83bd18feffff00       | cmp                 dword ptr [ebp - 0x1e8], 0
            //   7411                 | je                  0x13

        $sequence_9 = { 68a00f0000 e8???????? 83c404 8985f4feffff 83bdf4feffff00 0f85de000000 c785ecfeffff00000000 }
            // n = 7, score = 100
            //   68a00f0000           | push                0xfa0
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8985f4feffff         | mov                 dword ptr [ebp - 0x10c], eax
            //   83bdf4feffff00       | cmp                 dword ptr [ebp - 0x10c], 0
            //   0f85de000000         | jne                 0xe4
            //   c785ecfeffff00000000     | mov    dword ptr [ebp - 0x114], 0

    condition:
        7 of them and filesize < 770048
}