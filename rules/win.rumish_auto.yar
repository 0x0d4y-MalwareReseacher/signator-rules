rule win_rumish_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rumish."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rumish"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4dc0 e8???????? c745fcffffffff 8d4dd8 e8???????? b8feffffff e9???????? }
            // n = 7, score = 100
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   e8????????           |                     
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8d4dd8               | lea                 ecx, [ebp - 0x28]
            //   e8????????           |                     
            //   b8feffffff           | mov                 eax, 0xfffffffe
            //   e9????????           |                     

        $sequence_1 = { e8???????? 83c408 dc9d3cfbffff dfe0 f6c441 7515 8b85f8fbffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   dc9d3cfbffff         | fcomp               qword ptr [ebp - 0x4c4]
            //   dfe0                 | fnstsw              ax
            //   f6c441               | test                ah, 0x41
            //   7515                 | jne                 0x17
            //   8b85f8fbffff         | mov                 eax, dword ptr [ebp - 0x408]

        $sequence_2 = { dc05???????? e8???????? 8945f4 8b45f4 c1e002 50 }
            // n = 6, score = 100
            //   dc05????????         |                     
            //   e8????????           |                     
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   c1e002               | shl                 eax, 2
            //   50                   | push                eax

        $sequence_3 = { c78560ffffff00000000 eb0f 8b8560ffffff 83c001 898560ffffff 8b8d60ffffff 3b4d98 }
            // n = 7, score = 100
            //   c78560ffffff00000000     | mov    dword ptr [ebp - 0xa0], 0
            //   eb0f                 | jmp                 0x11
            //   8b8560ffffff         | mov                 eax, dword ptr [ebp - 0xa0]
            //   83c001               | add                 eax, 1
            //   898560ffffff         | mov                 dword ptr [ebp - 0xa0], eax
            //   8b8d60ffffff         | mov                 ecx, dword ptr [ebp - 0xa0]
            //   3b4d98               | cmp                 ecx, dword ptr [ebp - 0x68]

        $sequence_4 = { 8b4dfc 8b55fc 8b84d564ffffff 8984cd68ffffff 8d4df8 51 8b55fc }
            // n = 7, score = 100
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b84d564ffffff       | mov                 eax, dword ptr [ebp + edx*8 - 0x9c]
            //   8984cd68ffffff       | mov                 dword ptr [ebp + ecx*8 - 0x98], eax
            //   8d4df8               | lea                 ecx, [ebp - 8]
            //   51                   | push                ecx
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]

        $sequence_5 = { 894d84 59 5b 5a c6458800 8d957cffffff 52 }
            // n = 7, score = 100
            //   894d84               | mov                 dword ptr [ebp - 0x7c], ecx
            //   59                   | pop                 ecx
            //   5b                   | pop                 ebx
            //   5a                   | pop                 edx
            //   c6458800             | mov                 byte ptr [ebp - 0x78], 0
            //   8d957cffffff         | lea                 edx, [ebp - 0x84]
            //   52                   | push                edx

        $sequence_6 = { 8bec 83ec08 894df8 51 8bcc 8965fc 8d450c }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   83ec08               | sub                 esp, 8
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   51                   | push                ecx
            //   8bcc                 | mov                 ecx, esp
            //   8965fc               | mov                 dword ptr [ebp - 4], esp
            //   8d450c               | lea                 eax, [ebp + 0xc]

        $sequence_7 = { b9ff7f0000 f7f9 83c001 898504fdffff e8???????? 6bc032 99 }
            // n = 7, score = 100
            //   b9ff7f0000           | mov                 ecx, 0x7fff
            //   f7f9                 | idiv                ecx
            //   83c001               | add                 eax, 1
            //   898504fdffff         | mov                 dword ptr [ebp - 0x2fc], eax
            //   e8????????           |                     
            //   6bc032               | imul                eax, eax, 0x32
            //   99                   | cdq                 

        $sequence_8 = { 8b5004 894df8 8955fc 8d450c 50 8b4dbc e8???????? }
            // n = 7, score = 100
            //   8b5004               | mov                 edx, dword ptr [eax + 4]
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   8d450c               | lea                 eax, [ebp + 0xc]
            //   50                   | push                eax
            //   8b4dbc               | mov                 ecx, dword ptr [ebp - 0x44]
            //   e8????????           |                     

        $sequence_9 = { 8d4db4 e8???????? 8bc8 e8???????? ebd0 8b55e4 8955ac }
            // n = 7, score = 100
            //   8d4db4               | lea                 ecx, [ebp - 0x4c]
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ebd0                 | jmp                 0xffffffd2
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   8955ac               | mov                 dword ptr [ebp - 0x54], edx

    condition:
        7 of them and filesize < 770048
}