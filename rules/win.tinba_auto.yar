rule win_tinba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.tinba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tinba"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b7508 ad 50 56 }
            // n = 4, score = 1100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   ad                   | lodsd               eax, dword ptr [esi]
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_1 = { 8b4510 aa 8b450c ab }
            // n = 4, score = 1100
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_2 = { 8a241f 88240f 88041f 41 }
            // n = 4, score = 1000
            //   8a241f               | mov                 ah, byte ptr [edi + ebx]
            //   88240f               | mov                 byte ptr [edi + ecx], ah
            //   88041f               | mov                 byte ptr [edi + ebx], al
            //   41                   | inc                 ecx

        $sequence_3 = { 6a00 6a00 6a00 ff750c 6a00 6a00 ff7508 }
            // n = 7, score = 1000
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_4 = { 8b3a 803fe9 0f84e0000000 48 83ec20 }
            // n = 5, score = 900
            //   8b3a                 | mov                 edi, dword ptr [edx]
            //   803fe9               | cmp                 byte ptr [edi], 0xe9
            //   0f84e0000000         | je                  0xe6
            //   48                   | dec                 eax
            //   83ec20               | sub                 esp, 0x20

        $sequence_5 = { 8b4514 8908 290e 8b06 85c0 }
            // n = 5, score = 900
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   8908                 | mov                 dword ptr [eax], ecx
            //   290e                 | sub                 dword ptr [esi], ecx
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   85c0                 | test                eax, eax

        $sequence_6 = { b443 b138 f6420140 7402 88e1 48 }
            // n = 6, score = 900
            //   b443                 | mov                 ah, 0x43
            //   b138                 | mov                 cl, 0x38
            //   f6420140             | test                byte ptr [edx + 1], 0x40
            //   7402                 | je                  4
            //   88e1                 | mov                 cl, ah
            //   48                   | dec                 eax

        $sequence_7 = { 747d b73a 887a19 eb76 }
            // n = 4, score = 900
            //   747d                 | je                  0x7f
            //   b73a                 | mov                 bh, 0x3a
            //   887a19               | mov                 byte ptr [edx + 0x19], bh
            //   eb76                 | jmp                 0x78

        $sequence_8 = { 3b4d10 7603 8b4d10 51 57 ff750c }
            // n = 6, score = 900
            //   3b4d10               | cmp                 ecx, dword ptr [ebp + 0x10]
            //   7603                 | jbe                 5
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   51                   | push                ecx
            //   57                   | push                edi
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_9 = { 40 eb12 ff7514 ff7510 ff750c }
            // n = 5, score = 900
            //   40                   | inc                 eax
            //   eb12                 | jmp                 0x14
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_10 = { 80fbfb 751f 48 8d7a23 f6420110 }
            // n = 5, score = 900
            //   80fbfb               | cmp                 bl, 0xfb
            //   751f                 | jne                 0x21
            //   48                   | dec                 eax
            //   8d7a23               | lea                 edi, [edx + 0x23]
            //   f6420110             | test                byte ptr [edx + 1], 0x10

        $sequence_11 = { b073 aa b83a2f2f00 ab }
            // n = 4, score = 900
            //   b073                 | mov                 al, 0x73
            //   aa                   | stosb               byte ptr es:[edi], al
            //   b83a2f2f00           | mov                 eax, 0x2f2f3a
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_12 = { 83ef0e 85c0 741b 66b80d0a 66ab b855736572 }
            // n = 6, score = 900
            //   83ef0e               | sub                 edi, 0xe
            //   85c0                 | test                eax, eax
            //   741b                 | je                  0x1d
            //   66b80d0a             | mov                 ax, 0xa0d
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   b855736572           | mov                 eax, 0x72657355

    condition:
        7 of them and filesize < 57344
}