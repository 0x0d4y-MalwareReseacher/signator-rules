rule win_tinba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.tinba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tinba"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4510 aa 8b450c ab }
            // n = 4, score = 1100
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_1 = { 8b7508 ad 50 56 }
            // n = 4, score = 1100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   ad                   | lodsd               eax, dword ptr [esi]
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_2 = { 8a241f 88240f 88041f 41 }
            // n = 4, score = 1000
            //   8a241f               | mov                 ah, byte ptr [edi + ebx]
            //   88240f               | mov                 byte ptr [edi + ecx], ah
            //   88041f               | mov                 byte ptr [edi + ebx], al
            //   41                   | inc                 ecx

        $sequence_3 = { 6a00 6a00 ff750c 6a00 6a00 ff7508 }
            // n = 6, score = 1000
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_4 = { fd 8b7d0c 83c707 8b4508 83e00f }
            // n = 5, score = 900
            //   fd                   | std                 
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   83c707               | add                 edi, 7
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83e00f               | and                 eax, 0xf

        $sequence_5 = { 01c6 49 01c1 49 83f905 }
            // n = 5, score = 900
            //   01c6                 | add                 esi, eax
            //   49                   | dec                 ecx
            //   01c1                 | add                 ecx, eax
            //   49                   | dec                 ecx
            //   83f905               | cmp                 ecx, 5

        $sequence_6 = { 85c0 7416 66b80d0a 66ab }
            // n = 4, score = 900
            //   85c0                 | test                eax, eax
            //   7416                 | je                  0x18
            //   66b80d0a             | mov                 ax, 0xa0d
            //   66ab                 | stosw               word ptr es:[edi], ax

        $sequence_7 = { ab b869653a20 ab 037df8 }
            // n = 4, score = 900
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   b869653a20           | mov                 eax, 0x203a6569
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   037df8               | add                 edi, dword ptr [ebp - 8]

        $sequence_8 = { eb02 0437 aa c14d0804 3b7d0c }
            // n = 5, score = 900
            //   eb02                 | jmp                 4
            //   0437                 | add                 al, 0x37
            //   aa                   | stosb               byte ptr es:[edi], al
            //   c14d0804             | ror                 dword ptr [ebp + 8], 4
            //   3b7d0c               | cmp                 edi, dword ptr [ebp + 0xc]

        $sequence_9 = { 89e5 48 83ec50 48 8b02 48 }
            // n = 6, score = 900
            //   89e5                 | mov                 ebp, esp
            //   48                   | dec                 eax
            //   83ec50               | sub                 esp, 0x50
            //   48                   | dec                 eax
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   48                   | dec                 eax

        $sequence_10 = { 89cf 49 89d6 48 8b3a }
            // n = 5, score = 900
            //   89cf                 | mov                 edi, ecx
            //   49                   | dec                 ecx
            //   89d6                 | mov                 esi, edx
            //   48                   | dec                 eax
            //   8b3a                 | mov                 edi, dword ptr [edx]

        $sequence_11 = { 66b80d0a 66ab b855736572 ab }
            // n = 4, score = 900
            //   66b80d0a             | mov                 ax, 0xa0d
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   b855736572           | mov                 eax, 0x72657355
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_12 = { d0e9 2401 80e401 80e101 80e501 66894208 66894a0a }
            // n = 7, score = 900
            //   d0e9                 | shr                 cl, 1
            //   2401                 | and                 al, 1
            //   80e401               | and                 ah, 1
            //   80e101               | and                 cl, 1
            //   80e501               | and                 ch, 1
            //   66894208             | mov                 word ptr [edx + 8], ax
            //   66894a0a             | mov                 word ptr [edx + 0xa], cx

    condition:
        7 of them and filesize < 57344
}