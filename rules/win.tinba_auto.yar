rule win_tinba_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.tinba."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tinba"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b7508 ad 50 56 }
            // n = 4, score = 1100
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   ad                   | lodsd               eax, dword ptr [esi]
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_1 = { 8b4510 aa 8b450c ab }
            // n = 4, score = 1100
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_2 = { 6a00 6a00 ff750c 6a00 6a00 ff7508 }
            // n = 6, score = 1000
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_3 = { 8a241f 88240f 88041f 41 }
            // n = 4, score = 1000
            //   8a241f               | mov                 ah, byte ptr [edi + ebx]
            //   88240f               | mov                 byte ptr [edi + ecx], ah
            //   88041f               | mov                 byte ptr [edi + ebx], al
            //   41                   | inc                 ecx

        $sequence_4 = { 2401 80e401 80e101 80e501 66894208 66894a0a }
            // n = 6, score = 900
            //   2401                 | and                 al, 1
            //   80e401               | and                 ah, 1
            //   80e101               | and                 cl, 1
            //   80e501               | and                 ch, 1
            //   66894208             | mov                 word ptr [edx + 8], ax
            //   66894a0a             | mov                 word ptr [edx + 0xa], cx

        $sequence_5 = { 6a01 56 52 ff7510 }
            // n = 4, score = 900
            //   6a01                 | push                1
            //   56                   | push                esi
            //   52                   | push                edx
            //   ff7510               | push                dword ptr [ebp + 0x10]

        $sequence_6 = { 48 8d55b8 48 89f1 e8???????? 0fb645b8 48 }
            // n = 7, score = 900
            //   48                   | dec                 eax
            //   8d55b8               | lea                 edx, [ebp - 0x48]
            //   48                   | dec                 eax
            //   89f1                 | mov                 ecx, esi
            //   e8????????           |                     
            //   0fb645b8             | movzx               eax, byte ptr [ebp - 0x48]
            //   48                   | dec                 eax

        $sequence_7 = { 83c707 8b4508 83e00f 3c0a 7304 0430 eb02 }
            // n = 7, score = 900
            //   83c707               | add                 edi, 7
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83e00f               | and                 eax, 0xf
            //   3c0a                 | cmp                 al, 0xa
            //   7304                 | jae                 6
            //   0430                 | add                 al, 0x30
            //   eb02                 | jmp                 4

        $sequence_8 = { 83c704 f3a4 b868747470 ab 8b4d08 }
            // n = 5, score = 900
            //   83c704               | add                 edi, 4
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   b868747470           | mov                 eax, 0x70747468
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_9 = { 31d2 fec3 8a141f 00d0 8a0c07 880c1f }
            // n = 6, score = 900
            //   31d2                 | xor                 edx, edx
            //   fec3                 | inc                 bl
            //   8a141f               | mov                 dl, byte ptr [edi + ebx]
            //   00d0                 | add                 al, dl
            //   8a0c07               | mov                 cl, byte ptr [edi + eax]
            //   880c1f               | mov                 byte ptr [edi + ebx], cl

        $sequence_10 = { 8d7e04 8b0e 3b4d10 7603 }
            // n = 4, score = 900
            //   8d7e04               | lea                 edi, [esi + 4]
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   3b4d10               | cmp                 ecx, dword ptr [ebp + 0x10]
            //   7603                 | jbe                 5

        $sequence_11 = { 897d10 2b7d0c 57 ff750c }
            // n = 4, score = 900
            //   897d10               | mov                 dword ptr [ebp + 0x10], edi
            //   2b7d0c               | sub                 edi, dword ptr [ebp + 0xc]
            //   57                   | push                edi
            //   ff750c               | push                dword ptr [ebp + 0xc]

        $sequence_12 = { 48 8d7f02 e0f8 750c 8a4a1d 8a47ff }
            // n = 6, score = 900
            //   48                   | dec                 eax
            //   8d7f02               | lea                 edi, [edi + 2]
            //   e0f8                 | loopne              0xfffffffa
            //   750c                 | jne                 0xe
            //   8a4a1d               | mov                 cl, byte ptr [edx + 0x1d]
            //   8a47ff               | mov                 al, byte ptr [edi - 1]

    condition:
        7 of them and filesize < 57344
}