rule win_datper_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.datper."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.datper"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 8b45e8 50 8b450c 50 8b4508 50 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   50                   | push                eax
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   50                   | push                eax

        $sequence_1 = { c680d202000004 eb1e 0fb645fb 50 a1???????? }
            // n = 5, score = 200
            //   c680d202000004       | mov                 byte ptr [eax + 0x2d2], 4
            //   eb1e                 | jmp                 0x20
            //   0fb645fb             | movzx               eax, byte ptr [ebp - 5]
            //   50                   | push                eax
            //   a1????????           |                     

        $sequence_2 = { 56 e8???????? 8bf8 8d95f4fbffff }
            // n = 4, score = 200
            //   56                   | push                esi
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   8d95f4fbffff         | lea                 edx, dword ptr [ebp - 0x40c]

        $sequence_3 = { e8???????? 56 53 e8???????? a3???????? 8d95b0fbffff b8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   56                   | push                esi
            //   53                   | push                ebx
            //   e8????????           |                     
            //   a3????????           |                     
            //   8d95b0fbffff         | lea                 edx, dword ptr [ebp - 0x450]
            //   b8????????           |                     

        $sequence_4 = { 55 68???????? 64ff30 648920 8d85ccfbffff }
            // n = 5, score = 200
            //   55                   | push                ebp
            //   68????????           |                     
            //   64ff30               | push                dword ptr fs:[eax]
            //   648920               | mov                 dword ptr fs:[eax], esp
            //   8d85ccfbffff         | lea                 eax, dword ptr [ebp - 0x434]

        $sequence_5 = { e8???????? 8b55d4 83c210 8d45bc b904000000 e8???????? bb14000000 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]
            //   83c210               | add                 edx, 0x10
            //   8d45bc               | lea                 eax, dword ptr [ebp - 0x44]
            //   b904000000           | mov                 ecx, 4
            //   e8????????           |                     
            //   bb14000000           | mov                 ebx, 0x14

        $sequence_6 = { 8945f8 eb0a 42 4e 75de }
            // n = 5, score = 200
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   eb0a                 | jmp                 0xc
            //   42                   | inc                 edx
            //   4e                   | dec                 esi
            //   75de                 | jne                 0xffffffe0

        $sequence_7 = { b8???????? e8???????? 8d8500f0ffff 33c9 ba00100000 e8???????? 6800100000 }
            // n = 7, score = 200
            //   b8????????           |                     
            //   e8????????           |                     
            //   8d8500f0ffff         | lea                 eax, dword ptr [ebp - 0x1000]
            //   33c9                 | xor                 ecx, ecx
            //   ba00100000           | mov                 edx, 0x1000
            //   e8????????           |                     
            //   6800100000           | push                0x1000

        $sequence_8 = { 8b85e8fbffff e8???????? 50 56 e8???????? 56 53 }
            // n = 7, score = 200
            //   8b85e8fbffff         | mov                 eax, dword ptr [ebp - 0x418]
            //   e8????????           |                     
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   56                   | push                esi
            //   53                   | push                ebx

        $sequence_9 = { 83c0f9 6683e806 7213 83c0e6 6683e806 7215 }
            // n = 6, score = 200
            //   83c0f9               | add                 eax, -7
            //   6683e806             | sub                 ax, 6
            //   7213                 | jb                  0x15
            //   83c0e6               | add                 eax, -0x1a
            //   6683e806             | sub                 ax, 6
            //   7215                 | jb                  0x17

    condition:
        7 of them and filesize < 253952
}