rule win_lockbit_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.lockbit."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lockbit"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7512 8bca 894dfc 8b7d0c f366a5 }
            // n = 5, score = 100
            //   7512                 | jne                 0x14
            //   8bca                 | mov                 ecx, edx
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8b7d0c               | mov                 edi, dword ptr [ebp + 0xc]
            //   f366a5               | rep movsw           word ptr es:[edi], word ptr [esi]

        $sequence_1 = { be20000000 55 8b6d10 8bc1 }
            // n = 4, score = 100
            //   be20000000           | mov                 esi, 0x20
            //   55                   | push                ebp
            //   8b6d10               | mov                 ebp, dword ptr [ebp + 0x10]
            //   8bc1                 | mov                 eax, ecx

        $sequence_2 = { 01750c 8d470f 83c40c 8d5720 297510 8b7510 }
            // n = 6, score = 100
            //   01750c               | add                 dword ptr [ebp + 0xc], esi
            //   8d470f               | lea                 eax, [edi + 0xf]
            //   83c40c               | add                 esp, 0xc
            //   8d5720               | lea                 edx, [edi + 0x20]
            //   297510               | sub                 dword ptr [ebp + 0x10], esi
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]

        $sequence_3 = { 0155dc 8b55f4 8bf2 c1ce0b }
            // n = 4, score = 100
            //   0155dc               | add                 dword ptr [ebp - 0x24], edx
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   8bf2                 | mov                 esi, edx
            //   c1ce0b               | ror                 esi, 0xb

        $sequence_4 = { 7434 8bf7 8bd1 66b82000 f266af 85c9 }
            // n = 6, score = 100
            //   7434                 | je                  0x36
            //   8bf7                 | mov                 esi, edi
            //   8bd1                 | mov                 edx, ecx
            //   66b82000             | mov                 ax, 0x20
            //   f266af               | repne scasw         ax, word ptr es:[edi]
            //   85c9                 | test                ecx, ecx

        $sequence_5 = { 014628 83562c00 8b44241c 56 }
            // n = 4, score = 100
            //   014628               | add                 dword ptr [esi + 0x28], eax
            //   83562c00             | adc                 dword ptr [esi + 0x2c], 0
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   56                   | push                esi

        $sequence_6 = { 034e04 8bf7 c1ce0b 898c05e0feffff }
            // n = 4, score = 100
            //   034e04               | add                 ecx, dword ptr [esi + 4]
            //   8bf7                 | mov                 esi, edi
            //   c1ce0b               | ror                 esi, 0xb
            //   898c05e0feffff       | mov                 dword ptr [ebp + eax - 0x120], ecx

        $sequence_7 = { 8d45a0 50 e8???????? 8d858cfeffff }
            // n = 4, score = 100
            //   8d45a0               | lea                 eax, [ebp - 0x60]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d858cfeffff         | lea                 eax, [ebp - 0x174]

        $sequence_8 = { 55 8bec 51 57 6633c0 }
            // n = 5, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   57                   | push                edi
            //   6633c0               | xor                 ax, ax

        $sequence_9 = { 014608 8b4508 47 83c614 3b7870 }
            // n = 5, score = 100
            //   014608               | add                 dword ptr [esi + 8], eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   47                   | inc                 edi
            //   83c614               | add                 esi, 0x14
            //   3b7870               | cmp                 edi, dword ptr [eax + 0x70]

        $sequence_10 = { 0fb6c8 c1e104 66ad 6685c0 }
            // n = 4, score = 100
            //   0fb6c8               | movzx               ecx, al
            //   c1e104               | shl                 ecx, 4
            //   66ad                 | lodsw               ax, word ptr [esi]
            //   6685c0               | test                ax, ax

        $sequence_11 = { 034fec 898c05c8feffff 8bc2 c1c007 c1ce0b 33f0 894dcc }
            // n = 7, score = 100
            //   034fec               | add                 ecx, dword ptr [edi - 0x14]
            //   898c05c8feffff       | mov                 dword ptr [ebp + eax - 0x138], ecx
            //   8bc2                 | mov                 eax, edx
            //   c1c007               | rol                 eax, 7
            //   c1ce0b               | ror                 esi, 0xb
            //   33f0                 | xor                 esi, eax
            //   894dcc               | mov                 dword ptr [ebp - 0x34], ecx

        $sequence_12 = { 0fc8 c1c80d 8bd0 f7d2 ad }
            // n = 5, score = 100
            //   0fc8                 | bswap               eax
            //   c1c80d               | ror                 eax, 0xd
            //   8bd0                 | mov                 edx, eax
            //   f7d2                 | not                 edx
            //   ad                   | lodsd               eax, dword ptr [esi]

        $sequence_13 = { 0356f0 03da 8b55f0 899c05ccfeffff }
            // n = 4, score = 100
            //   0356f0               | add                 edx, dword ptr [esi - 0x10]
            //   03da                 | add                 ebx, edx
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   899c05ccfeffff       | mov                 dword ptr [ebp + eax - 0x134], ebx

        $sequence_14 = { 99 7eb7 85b8796fea8e ae 06 8213ab ae }
            // n = 7, score = 100
            //   99                   | cdq                 
            //   7eb7                 | jle                 0xffffffb9
            //   85b8796fea8e         | test                dword ptr [eax - 0x71159087], edi
            //   ae                   | scasb               al, byte ptr es:[edi]
            //   06                   | push                es
            //   8213ab               | adc                 byte ptr [ebx], 0xab
            //   ae                   | scasb               al, byte ptr es:[edi]

        $sequence_15 = { 0135???????? b64d c645fb00 b01d }
            // n = 4, score = 100
            //   0135????????         |                     
            //   b64d                 | mov                 dh, 0x4d
            //   c645fb00             | mov                 byte ptr [ebp - 5], 0
            //   b01d                 | mov                 al, 0x1d

    condition:
        7 of them and filesize < 359424
}