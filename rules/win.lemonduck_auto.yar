rule win_lemonduck_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.lemonduck."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.lemonduck"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f20f590d???????? f20f59ee f20f5ce9 f2410f1004c1 488d15c6f40100 f20f1014c2 f20f1025???????? }
            // n = 7, score = 100
            //   f20f590d????????     |                     
            //   f20f59ee             | dec                 eax
            //   f20f5ce9             | lea                 edx, [0x1f4c6]
            //   f2410f1004c1         | movsd               xmm2, qword ptr [edx + eax*8]
            //   488d15c6f40100       | inc                 ebp
            //   f20f1014c2           | xor                 edi, edi
            //   f20f1025????????     |                     

        $sequence_1 = { ebbc 80f92f 7523 48ffc0 488903 488bc8 6690 }
            // n = 7, score = 100
            //   ebbc                 | dec                 eax
            //   80f92f               | mov                 dword ptr [esp + 0x28], eax
            //   7523                 | dec                 eax
            //   48ffc0               | lea                 eax, [ebp - 0x30]
            //   488903               | jmp                 0x3f4
            //   488bc8               | dec                 eax
            //   6690                 | mov                 eax, dword ptr [ebx]

        $sequence_2 = { ff15???????? 488bf8 4883f8ff 7522 ff15???????? 8bc8 89834c010000 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   488bf8               | jne                 0x422
            //   4883f8ff             | jmp                 0x3f2
            //   7522                 | dec                 eax
            //   ff15????????         |                     
            //   8bc8                 | mov                 ecx, dword ptr [ebx + 0xf8]
            //   89834c010000         | test                dl, 1

        $sequence_3 = { ff5060 8b18 48c1e305 488b4808 48baffffffffffff0000 4823ca 4803d9 }
            // n = 7, score = 100
            //   ff5060               | dec                 eax
            //   8b18                 | lea                 ecx, [esp + 0x58]
            //   48c1e305             | mov                 word ptr [ebx + 2], ax
            //   488b4808             | dec                 eax
            //   48baffffffffffff0000     | lea    edx, [ebx + 4]
            //   4823ca               | dec                 eax
            //   4803d9               | test                edi, edi

        $sequence_4 = { 7446 81e941010300 7434 83e911 7425 83e903 7416 }
            // n = 7, score = 100
            //   7446                 | paddq               xmm2, xmm0
            //   81e941010300         | movq                xmm0, qword ptr [ebp + 0x58]
            //   7434                 | inc                 bp
            //   83e911               | movq                mm5, mm1
            //   7425                 | inc                 edx
            //   83e903               | movq                qword ptr [ecx], mm0
            //   7416                 | dec                 cx

        $sequence_5 = { 660fd644cd00 f30f7ec3 660f70d200 418d4a03 660ffed0 4803c9 660f3840d1 }
            // n = 7, score = 100
            //   660fd644cd00         | dec                 eax
            //   f30f7ec3             | test                eax, eax
            //   660f70d200           | jne                 0xffffff60
            //   418d4a03             | movzx               eax, word ptr [edi + 0xe8]
            //   660ffed0             | cmp                 word ptr [ebx + 0xe8], ax
            //   4803c9               | jne                 0xffffff60
            //   660f3840d1           | pop                 edi

        $sequence_6 = { f2440f11542428 488d4c2428 e8???????? 6683f8ff 7410 33c0 488945c0 }
            // n = 7, score = 100
            //   f2440f11542428       | dec                 eax
            //   488d4c2428           | mov                 ecx, edi
            //   e8????????           |                     
            //   6683f8ff             | mov                 ebx, dword ptr [eax]
            //   7410                 | mov                 dword ptr [eax], ebx
            //   33c0                 | movsd               qword ptr [esp + 0x38], xmm1
            //   488945c0             | movsd               qword ptr [esp + 0x30], xmm0

        $sequence_7 = { f3430f6f1c38 48c1e120 660f6fcb 480bc8 66410fd4c9 4833f9 498bc6 }
            // n = 7, score = 100
            //   f3430f6f1c38         | movq                mm0, qword ptr [ecx + edx]
            //   48c1e120             | pxor                xmm0, xmm2
            //   660f6fcb             | inc                 cx
            //   480bc8               | paddq               mm0, mm5
            //   66410fd4c9           | inc                 ebx
            //   4833f9               | movq                qword ptr [ecx + edx], mm0
            //   498bc6               | dec                 cx

        $sequence_8 = { eb07 4c8905???????? 49894870 4c898180000000 488b4a70 8b8288000000 898188000000 }
            // n = 7, score = 100
            //   eb07                 | dec                 eax
            //   4c8905????????       |                     
            //   49894870             | mov                 dword ptr [ecx + 0x18], 0xf
            //   4c898180000000       | inc                 esp
            //   488b4a70             | mov                 byte ptr [ecx], ah
            //   8b8288000000         | dec                 eax
            //   898188000000         | mov                 eax, edi

        $sequence_9 = { ff9088000000 4883f802 0f82b3000000 4c8b3d???????? 4d85ff 7521 b9e0000000 }
            // n = 7, score = 100
            //   ff9088000000         | xor                 eax, eax
            //   4883f802             | dec                 eax
            //   0f82b3000000         | mov                 esi, dword ptr [esp + 0x40]
            //   4c8b3d????????       |                     
            //   4d85ff               | dec                 eax
            //   7521                 | add                 esp, 0x20
            //   b9e0000000           | test                eax, eax

    condition:
        7 of them and filesize < 10011648
}