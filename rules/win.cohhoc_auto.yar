rule win_cohhoc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.cohhoc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cohhoc"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 41 48 894c2410 89442414 0f85f5feffff b801000000 5f }
            // n = 7, score = 300
            //   41                   | inc                 ecx
            //   48                   | dec                 eax
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   0f85f5feffff         | jne                 0xfffffefb
            //   b801000000           | mov                 eax, 1
            //   5f                   | pop                 edi

        $sequence_1 = { 8d7c1914 b94f000000 f3a5 8143083c010000 e9???????? b94f000000 33c0 }
            // n = 7, score = 300
            //   8d7c1914             | lea                 edi, [ecx + ebx + 0x14]
            //   b94f000000           | mov                 ecx, 0x4f
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8143083c010000       | add                 dword ptr [ebx + 8], 0x13c
            //   e9????????           |                     
            //   b94f000000           | mov                 ecx, 0x4f
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 81e5ffff0000 8b5604 8b1e 8bc2 8bcf c1e803 03c3 }
            // n = 7, score = 300
            //   81e5ffff0000         | and                 ebp, 0xffff
            //   8b5604               | mov                 edx, dword ptr [esi + 4]
            //   8b1e                 | mov                 ebx, dword ptr [esi]
            //   8bc2                 | mov                 eax, edx
            //   8bcf                 | mov                 ecx, edi
            //   c1e803               | shr                 eax, 3
            //   03c3                 | add                 eax, ebx

        $sequence_3 = { 8d4c242c 51 ffd6 83f805 752c }
            // n = 5, score = 300
            //   8d4c242c             | lea                 ecx, [esp + 0x2c]
            //   51                   | push                ecx
            //   ffd6                 | call                esi
            //   83f805               | cmp                 eax, 5
            //   752c                 | jne                 0x2e

        $sequence_4 = { 8b460c 85c0 7414 c70600000000 8bce e8???????? }
            // n = 6, score = 300
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]
            //   85c0                 | test                eax, eax
            //   7414                 | je                  0x16
            //   c70600000000         | mov                 dword ptr [esi], 0
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_5 = { 33db 3bc3 c705????????01000000 c705????????84000000 891d???????? 891d???????? 891d???????? }
            // n = 7, score = 300
            //   33db                 | xor                 ebx, ebx
            //   3bc3                 | cmp                 eax, ebx
            //   c705????????01000000     |     
            //   c705????????84000000     |     
            //   891d????????         |                     
            //   891d????????         |                     
            //   891d????????         |                     

        $sequence_6 = { 8be9 e8???????? 6a0c e8???????? 83c404 }
            // n = 5, score = 300
            //   8be9                 | mov                 ebp, ecx
            //   e8????????           |                     
            //   6a0c                 | push                0xc
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_7 = { 8d74244c 8d7c1914 b94f000000 f3a5 8143083c010000 }
            // n = 5, score = 300
            //   8d74244c             | lea                 esi, [esp + 0x4c]
            //   8d7c1914             | lea                 edi, [ecx + ebx + 0x14]
            //   b94f000000           | mov                 ecx, 0x4f
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8143083c010000       | add                 dword ptr [ebx + 8], 0x13c

        $sequence_8 = { 89442414 ff15???????? 55 56 }
            // n = 4, score = 300
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   ff15????????         |                     
            //   55                   | push                ebp
            //   56                   | push                esi

        $sequence_9 = { 33c0 eb33 68???????? ffd3 8bf8 47 8d043f }
            // n = 7, score = 300
            //   33c0                 | xor                 eax, eax
            //   eb33                 | jmp                 0x35
            //   68????????           |                     
            //   ffd3                 | call                ebx
            //   8bf8                 | mov                 edi, eax
            //   47                   | inc                 edi
            //   8d043f               | lea                 eax, [edi + edi]

    condition:
        7 of them and filesize < 253952
}