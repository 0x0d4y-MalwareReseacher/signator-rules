rule win_crypto_fortress_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.crypto_fortress."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crypto_fortress"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 8945f8 e8???????? ff35???????? }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   e8????????           |                     
            //   ff35????????         |                     

        $sequence_1 = { 85c0 0f84e3030000 a3???????? 68???????? ff35???????? }
            // n = 5, score = 100
            //   85c0                 | test                eax, eax
            //   0f84e3030000         | je                  0x3e9
            //   a3????????           |                     
            //   68????????           |                     
            //   ff35????????         |                     

        $sequence_2 = { 85c0 0f84e3030000 a3???????? 68???????? }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   0f84e3030000         | je                  0x3e9
            //   a3????????           |                     
            //   68????????           |                     

        $sequence_3 = { 2ced aa 2c0c aa 2c22 }
            // n = 5, score = 100
            //   2ced                 | sub                 al, 0xed
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2c0c                 | sub                 al, 0xc
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2c22                 | sub                 al, 0x22

        $sequence_4 = { 58 8b8db4feffff c74408ff5c2a0000 e9???????? }
            // n = 4, score = 100
            //   58                   | pop                 eax
            //   8b8db4feffff         | mov                 ecx, dword ptr [ebp - 0x14c]
            //   c74408ff5c2a0000     | mov                 dword ptr [eax + ecx - 1], 0x2a5c
            //   e9????????           |                     

        $sequence_5 = { 3415 aa 048c aa }
            // n = 4, score = 100
            //   3415                 | xor                 al, 0x15
            //   aa                   | stosb               byte ptr es:[edi], al
            //   048c                 | add                 al, 0x8c
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_6 = { 2c53 aa 340f aa 0432 aa 040b }
            // n = 7, score = 100
            //   2c53                 | sub                 al, 0x53
            //   aa                   | stosb               byte ptr es:[edi], al
            //   340f                 | xor                 al, 0xf
            //   aa                   | stosb               byte ptr es:[edi], al
            //   0432                 | add                 al, 0x32
            //   aa                   | stosb               byte ptr es:[edi], al
            //   040b                 | add                 al, 0xb

        $sequence_7 = { 85c0 0f8594fdffff ffb5b8feffff ff15???????? c9 c3 55 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   0f8594fdffff         | jne                 0xfffffd9a
            //   ffb5b8feffff         | push                dword ptr [ebp - 0x148]
            //   ff15????????         |                     
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_8 = { 341d aa 3406 aa 2cee aa 2c01 }
            // n = 7, score = 100
            //   341d                 | xor                 al, 0x1d
            //   aa                   | stosb               byte ptr es:[edi], al
            //   3406                 | xor                 al, 6
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2cee                 | sub                 al, 0xee
            //   aa                   | stosb               byte ptr es:[edi], al
            //   2c01                 | sub                 al, 1

        $sequence_9 = { e8???????? a3???????? ff75fc 6a40 e8???????? }
            // n = 5, score = 100
            //   e8????????           |                     
            //   a3????????           |                     
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   6a40                 | push                0x40
            //   e8????????           |                     

    condition:
        7 of them and filesize < 188416
}