rule win_ascentloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.ascentloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ascentloader"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb03 51 6af6 ff15???????? 8b04bd88ac4100 830c06ff }
            // n = 6, score = 100
            //   eb03                 | jmp                 5
            //   51                   | push                ecx
            //   6af6                 | push                -0xa
            //   ff15????????         |                     
            //   8b04bd88ac4100       | mov                 eax, dword ptr [edi*4 + 0x41ac88]
            //   830c06ff             | or                  dword ptr [esi + eax], 0xffffffff

        $sequence_1 = { c745c87447656e c745cc52616e64 66c745d06f6d c645d200 }
            // n = 4, score = 100
            //   c745c87447656e       | mov                 dword ptr [ebp - 0x38], 0x6e654774
            //   c745cc52616e64       | mov                 dword ptr [ebp - 0x34], 0x646e6152
            //   66c745d06f6d         | mov                 word ptr [ebp - 0x30], 0x6d6f
            //   c645d200             | mov                 byte ptr [ebp - 0x2e], 0

        $sequence_2 = { e9???????? 8365c800 c745cc84c14000 a1???????? 8d4dc8 33c1 }
            // n = 6, score = 100
            //   e9????????           |                     
            //   8365c800             | and                 dword ptr [ebp - 0x38], 0
            //   c745cc84c14000       | mov                 dword ptr [ebp - 0x34], 0x40c184
            //   a1????????           |                     
            //   8d4dc8               | lea                 ecx, dword ptr [ebp - 0x38]
            //   33c1                 | xor                 eax, ecx

        $sequence_3 = { 66894c2448 8d4c2438 6a05 5a 668944244a }
            // n = 5, score = 100
            //   66894c2448           | mov                 word ptr [esp + 0x48], cx
            //   8d4c2438             | lea                 ecx, dword ptr [esp + 0x38]
            //   6a05                 | push                5
            //   5a                   | pop                 edx
            //   668944244a           | mov                 word ptr [esp + 0x4a], ax

        $sequence_4 = { 66895c2450 6689742456 668974245a 66894c245e 66895c2464 6689542466 668974246a }
            // n = 7, score = 100
            //   66895c2450           | mov                 word ptr [esp + 0x50], bx
            //   6689742456           | mov                 word ptr [esp + 0x56], si
            //   668974245a           | mov                 word ptr [esp + 0x5a], si
            //   66894c245e           | mov                 word ptr [esp + 0x5e], cx
            //   66895c2464           | mov                 word ptr [esp + 0x64], bx
            //   6689542466           | mov                 word ptr [esp + 0x66], dx
            //   668974246a           | mov                 word ptr [esp + 0x6a], si

        $sequence_5 = { 40 001c5b 40 0023 d18a0688078a }
            // n = 5, score = 100
            //   40                   | inc                 eax
            //   001c5b               | add                 byte ptr [ebx + ebx*2], bl
            //   40                   | inc                 eax
            //   0023                 | add                 byte ptr [ebx], ah
            //   d18a0688078a         | ror                 dword ptr [edx - 0x75f877fa], 1

        $sequence_6 = { 53 8bd9 33c9 57 33ff 8b13 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   8bd9                 | mov                 ebx, ecx
            //   33c9                 | xor                 ecx, ecx
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   8b13                 | mov                 edx, dword ptr [ebx]

        $sequence_7 = { 33c0 5d c3 8b04c57c0f4100 }
            // n = 4, score = 100
            //   33c0                 | xor                 eax, eax
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04c57c0f4100       | mov                 eax, dword ptr [eax*8 + 0x410f7c]

        $sequence_8 = { 56 ff15???????? 8bce e8???????? e8???????? 85c0 743f }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   743f                 | je                  0x41

        $sequence_9 = { 33c0 668901 e8???????? 6a22 eb86 8325????????00 c3 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   668901               | mov                 word ptr [ecx], ax
            //   e8????????           |                     
            //   6a22                 | push                0x22
            //   eb86                 | jmp                 0xffffff88
            //   8325????????00       |                     
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 253952
}