rule win_ascentloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.ascentloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ascentloader"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 ff15???????? 85c0 0f85cf000000 53 8d5e10 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f85cf000000         | jne                 0xd5
            //   53                   | push                ebx
            //   8d5e10               | lea                 ebx, [esi + 0x10]

        $sequence_1 = { 6689442434 8d44242c 57 50 53 66894c2438 }
            // n = 6, score = 100
            //   6689442434           | mov                 word ptr [esp + 0x34], ax
            //   8d44242c             | lea                 eax, [esp + 0x2c]
            //   57                   | push                edi
            //   50                   | push                eax
            //   53                   | push                ebx
            //   66894c2438           | mov                 word ptr [esp + 0x38], cx

        $sequence_2 = { 8bec 51 51 8955fc 894df8 53 }
            // n = 6, score = 100
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   53                   | push                ebx

        $sequence_3 = { c745d07447656e c745d452616e64 66c745d86f6d c645da00 c745dc41647661 }
            // n = 5, score = 100
            //   c745d07447656e       | mov                 dword ptr [ebp - 0x30], 0x6e654774
            //   c745d452616e64       | mov                 dword ptr [ebp - 0x2c], 0x646e6152
            //   66c745d86f6d         | mov                 word ptr [ebp - 0x28], 0x6d6f
            //   c645da00             | mov                 byte ptr [ebp - 0x26], 0
            //   c745dc41647661       | mov                 dword ptr [ebp - 0x24], 0x61766441

        $sequence_4 = { 83f80b 0f877b020000 ff2485bc964000 8d41cf 3c08 7706 6a03 }
            // n = 7, score = 100
            //   83f80b               | cmp                 eax, 0xb
            //   0f877b020000         | ja                  0x281
            //   ff2485bc964000       | jmp                 dword ptr [eax*4 + 0x4096bc]
            //   8d41cf               | lea                 eax, [ecx - 0x31]
            //   3c08                 | cmp                 al, 8
            //   7706                 | ja                  8
            //   6a03                 | push                3

        $sequence_5 = { ff34f5c8484100 ff15???????? 5e 5d }
            // n = 4, score = 100
            //   ff34f5c8484100       | push                dword ptr [esi*8 + 0x4148c8]
            //   ff15????????         |                     
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_6 = { 33c0 e9???????? 8b45fc 8b4df8 034820 894dec }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   034820               | add                 ecx, dword ptr [eax + 0x20]
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx

        $sequence_7 = { 6a6d 668945d6 58 6a63 668945da 668945e0 33c0 }
            // n = 7, score = 100
            //   6a6d                 | push                0x6d
            //   668945d6             | mov                 word ptr [ebp - 0x2a], ax
            //   58                   | pop                 eax
            //   6a63                 | push                0x63
            //   668945da             | mov                 word ptr [ebp - 0x26], ax
            //   668945e0             | mov                 word ptr [ebp - 0x20], ax
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 6a65 59 6a78 6689442446 58 6689442446 }
            // n = 6, score = 100
            //   6a65                 | push                0x65
            //   59                   | pop                 ecx
            //   6a78                 | push                0x78
            //   6689442446           | mov                 word ptr [esp + 0x46], ax
            //   58                   | pop                 eax
            //   6689442446           | mov                 word ptr [esp + 0x46], ax

        $sequence_9 = { 8b55f0 33c9 83faff 0f44c1 }
            // n = 4, score = 100
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   33c9                 | xor                 ecx, ecx
            //   83faff               | cmp                 edx, -1
            //   0f44c1               | cmove               eax, ecx

    condition:
        7 of them and filesize < 253952
}