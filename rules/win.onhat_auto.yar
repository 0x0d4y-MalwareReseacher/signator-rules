rule win_onhat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.onhat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.onhat"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d44246c 6a02 50 53 }
            // n = 4, score = 200
            //   8d44246c             | lea                 eax, dword ptr [esp + 0x6c]
            //   6a02                 | push                2
            //   50                   | push                eax
            //   53                   | push                ebx

        $sequence_1 = { 889c2420010000 f3ab 66ab aa 33c0 52 89442411 }
            // n = 7, score = 200
            //   889c2420010000       | mov                 byte ptr [esp + 0x120], bl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   33c0                 | xor                 eax, eax
            //   52                   | push                edx
            //   89442411             | mov                 dword ptr [esp + 0x11], eax

        $sequence_2 = { e8???????? 8b4c2424 668901 8bc6 5e }
            // n = 5, score = 200
            //   e8????????           |                     
            //   8b4c2424             | mov                 ecx, dword ptr [esp + 0x24]
            //   668901               | mov                 word ptr [ecx], ax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi

        $sequence_3 = { 33d2 51 33c9 8a4c241e 8ad4 52 }
            // n = 6, score = 200
            //   33d2                 | xor                 edx, edx
            //   51                   | push                ecx
            //   33c9                 | xor                 ecx, ecx
            //   8a4c241e             | mov                 cl, byte ptr [esp + 0x1e]
            //   8ad4                 | mov                 dl, ah
            //   52                   | push                edx

        $sequence_4 = { c3 8b35???????? 8b2d???????? 8a44246c 84c0 }
            // n = 5, score = 200
            //   c3                   | ret                 
            //   8b35????????         |                     
            //   8b2d????????         |                     
            //   8a44246c             | mov                 al, byte ptr [esp + 0x6c]
            //   84c0                 | test                al, al

        $sequence_5 = { 83c40c b802000080 5f 5e 5b 81c414110000 c3 }
            // n = 7, score = 200
            //   83c40c               | add                 esp, 0xc
            //   b802000080           | mov                 eax, 0x80000002
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   81c414110000         | add                 esp, 0x1114
            //   c3                   | ret                 

        $sequence_6 = { 33d2 8acf 8a542436 50 51 52 }
            // n = 6, score = 200
            //   33d2                 | xor                 edx, edx
            //   8acf                 | mov                 cl, bh
            //   8a542436             | mov                 dl, byte ptr [esp + 0x36]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   52                   | push                edx

        $sequence_7 = { 51 e8???????? 83f8ff 5d 7406 3bc6 8bc7 }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83f8ff               | cmp                 eax, -1
            //   5d                   | pop                 ebp
            //   7406                 | je                  8
            //   3bc6                 | cmp                 eax, esi
            //   8bc7                 | mov                 eax, edi

        $sequence_8 = { b801000080 5e 81c40c010000 c3 750b 5f }
            // n = 6, score = 200
            //   b801000080           | mov                 eax, 0x80000001
            //   5e                   | pop                 esi
            //   81c40c010000         | add                 esp, 0x10c
            //   c3                   | ret                 
            //   750b                 | jne                 0xd
            //   5f                   | pop                 edi

        $sequence_9 = { 50 f3a4 e8???????? 8b4c2470 83c404 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   e8????????           |                     
            //   8b4c2470             | mov                 ecx, dword ptr [esp + 0x70]
            //   83c404               | add                 esp, 4

    condition:
        7 of them and filesize < 57344
}