rule win_pteranodon_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.pteranodon."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pteranodon"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f8566020000 a810 0f8458010000 b9???????? 8d85c8fdffff 668b10 663b11 }
            // n = 7, score = 100
            //   0f8566020000         | jne                 0x26c
            //   a810                 | test                al, 0x10
            //   0f8458010000         | je                  0x15e
            //   b9????????           |                     
            //   8d85c8fdffff         | lea                 eax, [ebp - 0x238]
            //   668b10               | mov                 dx, word ptr [eax]
            //   663b11               | cmp                 dx, word ptr [ecx]

        $sequence_1 = { 83ec18 c7858cf6ffff00000000 8bcc c7859cf6ffff00000000 33ff 8db58cf6ffff 89bd90f6ffff }
            // n = 7, score = 100
            //   83ec18               | sub                 esp, 0x18
            //   c7858cf6ffff00000000     | mov    dword ptr [ebp - 0x974], 0
            //   8bcc                 | mov                 ecx, esp
            //   c7859cf6ffff00000000     | mov    dword ptr [ebp - 0x964], 0
            //   33ff                 | xor                 edi, edi
            //   8db58cf6ffff         | lea                 esi, [ebp - 0x974]
            //   89bd90f6ffff         | mov                 dword ptr [ebp - 0x970], edi

        $sequence_2 = { 85c0 7553 e8???????? 89049db8690310 85c0 742f }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7553                 | jne                 0x55
            //   e8????????           |                     
            //   89049db8690310       | mov                 dword ptr [ebx*4 + 0x100369b8], eax
            //   85c0                 | test                eax, eax
            //   742f                 | je                  0x31

        $sequence_3 = { 0110 eb2b 8b4c2410 8b01 8b500c }
            // n = 5, score = 100
            //   0110                 | add                 dword ptr [eax], edx
            //   eb2b                 | jmp                 0x2d
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   8b500c               | mov                 edx, dword ptr [eax + 0xc]

        $sequence_4 = { 8bd8 8dbd10faffff 03fe 3bfb }
            // n = 4, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   8dbd10faffff         | lea                 edi, [ebp - 0x5f0]
            //   03fe                 | add                 edi, esi
            //   3bfb                 | cmp                 edi, ebx

        $sequence_5 = { 0f1f4000 e8???????? 33d2 f7f3 8a4c15ac 880c3e }
            // n = 6, score = 100
            //   0f1f4000             | nop                 dword ptr [eax]
            //   e8????????           |                     
            //   33d2                 | xor                 edx, edx
            //   f7f3                 | div                 ebx
            //   8a4c15ac             | mov                 cl, byte ptr [ebp + edx - 0x54]
            //   880c3e               | mov                 byte ptr [esi + edi], cl

        $sequence_6 = { 8b5dec 895a10 8b5df0 8b55e4 894b24 897330 }
            // n = 6, score = 100
            //   8b5dec               | mov                 ebx, dword ptr [ebp - 0x14]
            //   895a10               | mov                 dword ptr [edx + 0x10], ebx
            //   8b5df0               | mov                 ebx, dword ptr [ebp - 0x10]
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   894b24               | mov                 dword ptr [ebx + 0x24], ecx
            //   897330               | mov                 dword ptr [ebx + 0x30], esi

        $sequence_7 = { 0f8484010000 b9???????? 8bc7 660f1f440000 668b10 663b11 751e }
            // n = 7, score = 100
            //   0f8484010000         | je                  0x18a
            //   b9????????           |                     
            //   8bc7                 | mov                 eax, edi
            //   660f1f440000         | nop                 word ptr [eax + eax]
            //   668b10               | mov                 dx, word ptr [eax]
            //   663b11               | cmp                 dx, word ptr [ecx]
            //   751e                 | jne                 0x20

        $sequence_8 = { 6bc030 03048db8690310 eb05 b8???????? f6402820 }
            // n = 5, score = 100
            //   6bc030               | imul                eax, eax, 0x30
            //   03048db8690310       | add                 eax, dword ptr [ecx*4 + 0x100369b8]
            //   eb05                 | jmp                 7
            //   b8????????           |                     
            //   f6402820             | test                byte ptr [eax + 0x28], 0x20

        $sequence_9 = { e8???????? 68???????? 6a0a 6a18 8d8520f9ffff c645fc01 50 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   68????????           |                     
            //   6a0a                 | push                0xa
            //   6a18                 | push                0x18
            //   8d8520f9ffff         | lea                 eax, [ebp - 0x6e0]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   50                   | push                eax

        $sequence_10 = { 7409 83e801 0f85b1000000 8b4508 dd00 ebc2 c745e40cc24200 }
            // n = 7, score = 100
            //   7409                 | je                  0xb
            //   83e801               | sub                 eax, 1
            //   0f85b1000000         | jne                 0xb7
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   dd00                 | fld                 qword ptr [eax]
            //   ebc2                 | jmp                 0xffffffc4
            //   c745e40cc24200       | mov                 dword ptr [ebp - 0x1c], 0x42c20c

        $sequence_11 = { 50 c745e810000000 ff15???????? c746140f000000 c7461000000000 c60600 807dec00 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   c745e810000000       | mov                 dword ptr [ebp - 0x18], 0x10
            //   ff15????????         |                     
            //   c746140f000000       | mov                 dword ptr [esi + 0x14], 0xf
            //   c7461000000000       | mov                 dword ptr [esi + 0x10], 0
            //   c60600               | mov                 byte ptr [esi], 0
            //   807dec00             | cmp                 byte ptr [ebp - 0x14], 0

        $sequence_12 = { 8bce e8???????? 8b4510 85c0 7479 8b4614 }
            // n = 6, score = 100
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   85c0                 | test                eax, eax
            //   7479                 | je                  0x7b
            //   8b4614               | mov                 eax, dword ptr [esi + 0x14]

        $sequence_13 = { 6a0a 8854072a 8b048de0874300 66c1ea08 8854072b 8b048de0874300 59 }
            // n = 7, score = 100
            //   6a0a                 | push                0xa
            //   8854072a             | mov                 byte ptr [edi + eax + 0x2a], dl
            //   8b048de0874300       | mov                 eax, dword ptr [ecx*4 + 0x4387e0]
            //   66c1ea08             | shr                 dx, 8
            //   8854072b             | mov                 byte ptr [edi + eax + 0x2b], dl
            //   8b048de0874300       | mov                 eax, dword ptr [ecx*4 + 0x4387e0]
            //   59                   | pop                 ecx

        $sequence_14 = { 33c9 eb0e 8bcb 8d7101 }
            // n = 4, score = 100
            //   33c9                 | xor                 ecx, ecx
            //   eb0e                 | jmp                 0x10
            //   8bcb                 | mov                 ecx, ebx
            //   8d7101               | lea                 esi, [ecx + 1]

        $sequence_15 = { e8???????? 83c408 8b4798 8b4004 c7443898943c4300 8b4798 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b4798               | mov                 eax, dword ptr [edi - 0x68]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   c7443898943c4300     | mov                 dword ptr [eax + edi - 0x68], 0x433c94
            //   8b4798               | mov                 eax, dword ptr [edi - 0x68]

    condition:
        7 of them and filesize < 499712
}