rule win_pteranodon_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.pteranodon."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pteranodon"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff75a8 e8???????? 83ec18 8d45d8 8bcc 6aff }
            // n = 6, score = 100
            //   ff75a8               | push                dword ptr [ebp - 0x58]
            //   e8????????           |                     
            //   83ec18               | sub                 esp, 0x18
            //   8d45d8               | lea                 eax, [ebp - 0x28]
            //   8bcc                 | mov                 ecx, esp
            //   6aff                 | push                -1

        $sequence_1 = { ff15???????? 6a00 8d85b8faffff 50 }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   8d85b8faffff         | lea                 eax, [ebp - 0x548]
            //   50                   | push                eax

        $sequence_2 = { 1bc0 5f f7d8 5e 5b 3bc1 7419 }
            // n = 7, score = 100
            //   1bc0                 | sbb                 eax, eax
            //   5f                   | pop                 edi
            //   f7d8                 | neg                 eax
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   3bc1                 | cmp                 eax, ecx
            //   7419                 | je                  0x1b

        $sequence_3 = { 660f28b860010310 660f54f0 660f5cc6 660f59f4 660f5cf2 f20f58fe }
            // n = 6, score = 100
            //   660f28b860010310     | movapd              xmm7, xmmword ptr [eax + 0x10030160]
            //   660f54f0             | andpd               xmm6, xmm0
            //   660f5cc6             | subpd               xmm0, xmm6
            //   660f59f4             | mulpd               xmm6, xmm4
            //   660f5cf2             | subpd               xmm6, xmm2
            //   f20f58fe             | addsd               xmm7, xmm6

        $sequence_4 = { 8d7108 c745f800000000 57 33ff }
            // n = 4, score = 100
            //   8d7108               | lea                 esi, [ecx + 8]
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi

        $sequence_5 = { e8???????? 8d8da8f8ffff c645fc18 51 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   8d8da8f8ffff         | lea                 ecx, [ebp - 0x758]
            //   c645fc18             | mov                 byte ptr [ebp - 4], 0x18
            //   51                   | push                ecx

        $sequence_6 = { 68???????? 68???????? 6a00 ff15???????? 8b4dfc 33c0 5f }
            // n = 7, score = 100
            //   68????????           |                     
            //   68????????           |                     
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi

        $sequence_7 = { 53 c785b4faffff00000000 ff15???????? 894708 8b85b4faffff }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   c785b4faffff00000000     | mov    dword ptr [ebp - 0x54c], 0
            //   ff15????????         |                     
            //   894708               | mov                 dword ptr [edi + 8], eax
            //   8b85b4faffff         | mov                 eax, dword ptr [ebp - 0x54c]

        $sequence_8 = { 8d8dc8fdffff 83c414 2bce 6690 8a06 8d7601 884431ff }
            // n = 7, score = 100
            //   8d8dc8fdffff         | lea                 ecx, [ebp - 0x238]
            //   83c414               | add                 esp, 0x14
            //   2bce                 | sub                 ecx, esi
            //   6690                 | nop                 
            //   8a06                 | mov                 al, byte ptr [esi]
            //   8d7601               | lea                 esi, [esi + 1]
            //   884431ff             | mov                 byte ptr [ecx + esi - 1], al

        $sequence_9 = { 50 ba???????? 8d8df0f8ffff e8???????? 8d8da8f8ffff c645fc20 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   ba????????           |                     
            //   8d8df0f8ffff         | lea                 ecx, [ebp - 0x710]
            //   e8????????           |                     
            //   8d8da8f8ffff         | lea                 ecx, [ebp - 0x758]
            //   c645fc20             | mov                 byte ptr [ebp - 4], 0x20

    condition:
        7 of them and filesize < 499712
}