rule win_stabuniq_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.stabuniq."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stabuniq"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 e8???????? 68ff000000 6a00 }
            // n = 4, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   68ff000000           | push                0xff
            //   6a00                 | push                0

        $sequence_1 = { 8b45f8 50 8b4d0c ff9178010000 8945f8 837df800 7507 }
            // n = 7, score = 100
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   ff9178010000         | call                dword ptr [ecx + 0x178]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   837df800             | cmp                 dword ptr [ebp - 8], 0
            //   7507                 | jne                 9

        $sequence_2 = { 8b0c90 51 e8???????? 8b5508 03d0 895508 8b4508 }
            // n = 7, score = 100
            //   8b0c90               | mov                 ecx, dword ptr [eax + edx*4]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   03d0                 | add                 edx, eax
            //   895508               | mov                 dword ptr [ebp + 8], edx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_3 = { 8b95c4fcffff 69d2ff000000 8b4508 8d8c101f090000 51 8d95f8feffff 52 }
            // n = 7, score = 100
            //   8b95c4fcffff         | mov                 edx, dword ptr [ebp - 0x33c]
            //   69d2ff000000         | imul                edx, edx, 0xff
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8d8c101f090000       | lea                 ecx, [eax + edx + 0x91f]
            //   51                   | push                ecx
            //   8d95f8feffff         | lea                 edx, [ebp - 0x108]
            //   52                   | push                edx

        $sequence_4 = { 8b4dec 51 8b5508 ff522c 8b45f0 8b08 51 }
            // n = 7, score = 100
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   51                   | push                ecx
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   ff522c               | call                dword ptr [edx + 0x2c]
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   51                   | push                ecx

        $sequence_5 = { 884df0 8b5508 83c201 895508 8b4508 33c9 }
            // n = 6, score = 100
            //   884df0               | mov                 byte ptr [ebp - 0x10], cl
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   83c201               | add                 edx, 1
            //   895508               | mov                 dword ptr [ebp + 8], edx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33c9                 | xor                 ecx, ecx

        $sequence_6 = { c20400 55 8bec 51 c745fc00000000 8b4508 0fbe08 }
            // n = 7, score = 100
            //   c20400               | ret                 4
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   0fbe08               | movsx               ecx, byte ptr [eax]

        $sequence_7 = { 8b45f0 25ff000000 83f863 7502 eb49 8b4d10 8a55e4 }
            // n = 7, score = 100
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   25ff000000           | and                 eax, 0xff
            //   83f863               | cmp                 eax, 0x63
            //   7502                 | jne                 4
            //   eb49                 | jmp                 0x4b
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   8a55e4               | mov                 dl, byte ptr [ebp - 0x1c]

        $sequence_8 = { c7400800000000 8b4d08 668b9106020000 668995b0fcffff c785b4fcffff00002084 6a25 6a00 }
            // n = 7, score = 100
            //   c7400800000000       | mov                 dword ptr [eax + 8], 0
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   668b9106020000       | mov                 dx, word ptr [ecx + 0x206]
            //   668995b0fcffff       | mov                 word ptr [ebp - 0x350], dx
            //   c785b4fcffff00002084     | mov    dword ptr [ebp - 0x34c], 0x84200000
            //   6a25                 | push                0x25
            //   6a00                 | push                0

        $sequence_9 = { 7460 8b4d10 81c10f030000 51 8b5510 ff524c }
            // n = 6, score = 100
            //   7460                 | je                  0x62
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   81c10f030000         | add                 ecx, 0x30f
            //   51                   | push                ecx
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   ff524c               | call                dword ptr [edx + 0x4c]

    condition:
        7 of them and filesize < 57344
}