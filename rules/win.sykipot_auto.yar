rule win_sykipot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.sykipot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sykipot"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b9000a0000 33c0 53 55 56 }
            // n = 5, score = 200
            //   b9000a0000           | mov                 ecx, 0xa00
            //   33c0                 | xor                 eax, eax
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi

        $sequence_1 = { 8b1d???????? f3ab 66ab 68???????? 68???????? aa }
            // n = 6, score = 200
            //   8b1d????????         |                     
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   68????????           |                     
            //   68????????           |                     
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_2 = { 5b 81c40c020000 c3 56 8b35???????? ffd6 }
            // n = 6, score = 200
            //   5b                   | pop                 ebx
            //   81c40c020000         | add                 esp, 0x20c
            //   c3                   | ret                 
            //   56                   | push                esi
            //   8b35????????         |                     
            //   ffd6                 | call                esi

        $sequence_3 = { 8d44244c 52 50 6a1f 56 c744246004000000 ffd7 }
            // n = 7, score = 200
            //   8d44244c             | lea                 eax, [esp + 0x4c]
            //   52                   | push                edx
            //   50                   | push                eax
            //   6a1f                 | push                0x1f
            //   56                   | push                esi
            //   c744246004000000     | mov                 dword ptr [esp + 0x60], 4
            //   ffd7                 | call                edi

        $sequence_4 = { 50 6a00 ff15???????? bf???????? 83c9ff 33c0 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_5 = { 8bcc 8911 8b94244c060000 894104 895108 8bcd }
            // n = 6, score = 200
            //   8bcc                 | mov                 ecx, esp
            //   8911                 | mov                 dword ptr [ecx], edx
            //   8b94244c060000       | mov                 edx, dword ptr [esp + 0x64c]
            //   894104               | mov                 dword ptr [ecx + 4], eax
            //   895108               | mov                 dword ptr [ecx + 8], edx
            //   8bcd                 | mov                 ecx, ebp

        $sequence_6 = { 8d442440 8d8c2458020000 50 55 68???????? 51 ffd3 }
            // n = 7, score = 200
            //   8d442440             | lea                 eax, [esp + 0x40]
            //   8d8c2458020000       | lea                 ecx, [esp + 0x258]
            //   50                   | push                eax
            //   55                   | push                ebp
            //   68????????           |                     
            //   51                   | push                ecx
            //   ffd3                 | call                ebx

        $sequence_7 = { a4 b939000000 33c0 8dbc24a9010000 8d942488000000 f3ab 66ab }
            // n = 7, score = 200
            //   a4                   | movsb               byte ptr es:[edi], byte ptr [esi]
            //   b939000000           | mov                 ecx, 0x39
            //   33c0                 | xor                 eax, eax
            //   8dbc24a9010000       | lea                 edi, [esp + 0x1a9]
            //   8d942488000000       | lea                 edx, [esp + 0x88]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax

        $sequence_8 = { c20c00 8b450c 48 7515 6a00 6a00 6a00 }
            // n = 7, score = 200
            //   c20c00               | ret                 0xc
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   48                   | dec                 eax
            //   7515                 | jne                 0x17
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_9 = { 49 79e3 47 03f5 3bfd }
            // n = 5, score = 200
            //   49                   | dec                 ecx
            //   79e3                 | jns                 0xffffffe5
            //   47                   | inc                 edi
            //   03f5                 | add                 esi, ebp
            //   3bfd                 | cmp                 edi, ebp

    condition:
        7 of them and filesize < 286720
}