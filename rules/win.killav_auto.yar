rule win_killav_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.killav."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.killav"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2bc1 83c0fc 83f81f 0f87e60a0000 52 }
            // n = 5, score = 100
            //   2bc1                 | sub                 eax, ecx
            //   83c0fc               | add                 eax, -4
            //   83f81f               | cmp                 eax, 0x1f
            //   0f87e60a0000         | ja                  0xaec
            //   52                   | push                edx

        $sequence_1 = { 8955fc 8b049570ba4300 8945f8 807c072900 7507 8bc1 e9???????? }
            // n = 7, score = 100
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   8b049570ba4300       | mov                 eax, dword ptr [edx*4 + 0x43ba70]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   807c072900           | cmp                 byte ptr [edi + eax + 0x29], 0
            //   7507                 | jne                 9
            //   8bc1                 | mov                 eax, ecx
            //   e9????????           |                     

        $sequence_2 = { 8b0b 8bc1 c1f806 83e13f 6bd138 8b0c8570ba4300 8b4514 }
            // n = 7, score = 100
            //   8b0b                 | mov                 ecx, dword ptr [ebx]
            //   8bc1                 | mov                 eax, ecx
            //   c1f806               | sar                 eax, 6
            //   83e13f               | and                 ecx, 0x3f
            //   6bd138               | imul                edx, ecx, 0x38
            //   8b0c8570ba4300       | mov                 ecx, dword ptr [eax*4 + 0x43ba70]
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]

        $sequence_3 = { 8934b8 8bc7 83e03f 6bc838 8b049570ba4300 8b440818 }
            // n = 6, score = 100
            //   8934b8               | mov                 dword ptr [eax + edi*4], esi
            //   8bc7                 | mov                 eax, edi
            //   83e03f               | and                 eax, 0x3f
            //   6bc838               | imul                ecx, eax, 0x38
            //   8b049570ba4300       | mov                 eax, dword ptr [edx*4 + 0x43ba70]
            //   8b440818             | mov                 eax, dword ptr [eax + ecx + 0x18]

        $sequence_4 = { 7214 8b49fc 83c223 2bc1 83c0fc 83f81f 0f8706090000 }
            // n = 7, score = 100
            //   7214                 | jb                  0x16
            //   8b49fc               | mov                 ecx, dword ptr [ecx - 4]
            //   83c223               | add                 edx, 0x23
            //   2bc1                 | sub                 eax, ecx
            //   83c0fc               | add                 eax, -4
            //   83f81f               | cmp                 eax, 0x1f
            //   0f8706090000         | ja                  0x90c

        $sequence_5 = { c745cc00000000 51 6a00 6a00 6a04 }
            // n = 5, score = 100
            //   c745cc00000000       | mov                 dword ptr [ebp - 0x34], 0
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a04                 | push                4

        $sequence_6 = { 8b45f0 c70300000000 c70700000000 c70600000000 c7405c00000000 894850 895054 }
            // n = 7, score = 100
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   c70300000000         | mov                 dword ptr [ebx], 0
            //   c70700000000         | mov                 dword ptr [edi], 0
            //   c70600000000         | mov                 dword ptr [esi], 0
            //   c7405c00000000       | mov                 dword ptr [eax + 0x5c], 0
            //   894850               | mov                 dword ptr [eax + 0x50], ecx
            //   895054               | mov                 dword ptr [eax + 0x54], edx

        $sequence_7 = { 83feff 7576 eb56 8b048580bb4200 6800080000 6a00 }
            // n = 6, score = 100
            //   83feff               | cmp                 esi, -1
            //   7576                 | jne                 0x78
            //   eb56                 | jmp                 0x58
            //   8b048580bb4200       | mov                 eax, dword ptr [eax*4 + 0x42bb80]
            //   6800080000           | push                0x800
            //   6a00                 | push                0

        $sequence_8 = { 897b38 c7433c00000000 8b4e04 894de8 8b01 ff5004 8d45e4 }
            // n = 7, score = 100
            //   897b38               | mov                 dword ptr [ebx + 0x38], edi
            //   c7433c00000000       | mov                 dword ptr [ebx + 0x3c], 0
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   ff5004               | call                dword ptr [eax + 4]
            //   8d45e4               | lea                 eax, [ebp - 0x1c]

        $sequence_9 = { 6a19 33c0 c745d800000000 68???????? c745e800000000 c745ec07000000 668945d8 }
            // n = 7, score = 100
            //   6a19                 | push                0x19
            //   33c0                 | xor                 eax, eax
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0
            //   68????????           |                     
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   c745ec07000000       | mov                 dword ptr [ebp - 0x14], 7
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax

    condition:
        7 of them and filesize < 517120
}