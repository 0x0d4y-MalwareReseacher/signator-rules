rule win_breakthrough_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.breakthrough_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breakthrough_loader"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 53 ff75f4 ff15???????? 85c0 7924 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff75f4               | push                dword ptr [ebp - 0xc]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7924                 | jns                 0x26
            //   50                   | push                eax

        $sequence_1 = { 81fa00010000 7313 8a8720154500 08441619 42 0fb64101 }
            // n = 6, score = 100
            //   81fa00010000         | cmp                 edx, 0x100
            //   7313                 | jae                 0x15
            //   8a8720154500         | mov                 al, byte ptr [edi + 0x451520]
            //   08441619             | or                  byte ptr [esi + edx + 0x19], al
            //   42                   | inc                 edx
            //   0fb64101             | movzx               eax, byte ptr [ecx + 1]

        $sequence_2 = { 894df0 8b34cde8994400 8b4d08 6a5a 2bce 5b }
            // n = 6, score = 100
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   8b34cde8994400       | mov                 esi, dword ptr [ecx*8 + 0x4499e8]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   6a5a                 | push                0x5a
            //   2bce                 | sub                 ecx, esi
            //   5b                   | pop                 ebx

        $sequence_3 = { 742a 8b75f8 8bce 8935???????? 8b16 }
            // n = 5, score = 100
            //   742a                 | je                  0x2c
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   8bce                 | mov                 ecx, esi
            //   8935????????         |                     
            //   8b16                 | mov                 edx, dword ptr [esi]

        $sequence_4 = { 8b4dc0 33c0 c745d807000000 8945d4 668945c4 83f908 720d }
            // n = 7, score = 100
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]
            //   33c0                 | xor                 eax, eax
            //   c745d807000000       | mov                 dword ptr [ebp - 0x28], 7
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   668945c4             | mov                 word ptr [ebp - 0x3c], ax
            //   83f908               | cmp                 ecx, 8
            //   720d                 | jb                  0xf

        $sequence_5 = { ff15???????? 85c0 7e3d 8db5d0d6ffff 0f1f4000 8a06 3c20 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7e3d                 | jle                 0x3f
            //   8db5d0d6ffff         | lea                 esi, dword ptr [ebp - 0x2930]
            //   0f1f4000             | nop                 dword ptr [eax]
            //   8a06                 | mov                 al, byte ptr [esi]
            //   3c20                 | cmp                 al, 0x20

        $sequence_6 = { 8bcb 6a20 8b4020 ffd0 837f3800 }
            // n = 5, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   6a20                 | push                0x20
            //   8b4020               | mov                 eax, dword ptr [eax + 0x20]
            //   ffd0                 | call                eax
            //   837f3800             | cmp                 dword ptr [edi + 0x38], 0

        $sequence_7 = { 742a 8b75f8 8bce 8935???????? 8b16 ff5204 56 }
            // n = 7, score = 100
            //   742a                 | je                  0x2c
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   8bce                 | mov                 ecx, esi
            //   8935????????         |                     
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   ff5204               | call                dword ptr [edx + 4]
            //   56                   | push                esi

        $sequence_8 = { 83e03f 6bc830 8b049540354500 f644082801 7421 57 e8???????? }
            // n = 7, score = 100
            //   83e03f               | and                 eax, 0x3f
            //   6bc830               | imul                ecx, eax, 0x30
            //   8b049540354500       | mov                 eax, dword ptr [edx*4 + 0x453540]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7421                 | je                  0x23
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_9 = { 6a00 ff74241c 50 ff15???????? 8bf0 85f6 7441 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   ff74241c             | push                dword ptr [esp + 0x1c]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7441                 | je                  0x43

    condition:
        7 of them and filesize < 753664
}