rule win_breakthrough_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.breakthrough_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breakthrough_loader"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c60100 b8???????? c745dc887d4400 8945bc 33db 385d18 8945c0 }
            // n = 7, score = 100
            //   c60100               | mov                 byte ptr [ecx], 0
            //   b8????????           |                     
            //   c745dc887d4400       | mov                 dword ptr [ebp - 0x24], 0x447d88
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   33db                 | xor                 ebx, ebx
            //   385d18               | cmp                 byte ptr [ebp + 0x18], bl
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax

        $sequence_1 = { 8d9424a0010000 83c408 8bf2 0f1f440000 }
            // n = 4, score = 100
            //   8d9424a0010000       | lea                 edx, [esp + 0x1a0]
            //   83c408               | add                 esp, 8
            //   8bf2                 | mov                 esi, edx
            //   0f1f440000           | nop                 dword ptr [eax + eax]

        $sequence_2 = { 837e1408 723b 8b06 33c9 }
            // n = 4, score = 100
            //   837e1408             | cmp                 dword ptr [esi + 0x14], 8
            //   723b                 | jb                  0x3d
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   33c9                 | xor                 ecx, ecx

        $sequence_3 = { 8855ff 83e13f c1f806 6bc930 8855d4 8b048540354500 88540828 }
            // n = 7, score = 100
            //   8855ff               | mov                 byte ptr [ebp - 1], dl
            //   83e13f               | and                 ecx, 0x3f
            //   c1f806               | sar                 eax, 6
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8855d4               | mov                 byte ptr [ebp - 0x2c], dl
            //   8b048540354500       | mov                 eax, dword ptr [eax*4 + 0x453540]
            //   88540828             | mov                 byte ptr [eax + ecx + 0x28], dl

        $sequence_4 = { 6a02 ff15???????? 68???????? 8bf8 ff15???????? c7856cffffff02000050 6a10 }
            // n = 7, score = 100
            //   6a02                 | push                2
            //   ff15????????         |                     
            //   68????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   ff15????????         |                     
            //   c7856cffffff02000050     | mov    dword ptr [ebp - 0x94], 0x50000002
            //   6a10                 | push                0x10

        $sequence_5 = { 8b75e8 83fa10 0f43ce 8d5901 0f1f8000000000 8a01 41 }
            // n = 7, score = 100
            //   8b75e8               | mov                 esi, dword ptr [ebp - 0x18]
            //   83fa10               | cmp                 edx, 0x10
            //   0f43ce               | cmovae              ecx, esi
            //   8d5901               | lea                 ebx, [ecx + 1]
            //   0f1f8000000000       | nop                 dword ptr [eax]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx

        $sequence_6 = { 8b049540354500 c644082801 897de4 c745fcfeffffff e8???????? 8bc7 e8???????? }
            // n = 7, score = 100
            //   8b049540354500       | mov                 eax, dword ptr [edx*4 + 0x453540]
            //   c644082801           | mov                 byte ptr [eax + ecx + 0x28], 1
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   c745fcfeffffff       | mov                 dword ptr [ebp - 4], 0xfffffffe
            //   e8????????           |                     
            //   8bc7                 | mov                 eax, edi
            //   e8????????           |                     

        $sequence_7 = { 753f 660f1f440000 85f6 743d }
            // n = 4, score = 100
            //   753f                 | jne                 0x41
            //   660f1f440000         | nop                 word ptr [eax + eax]
            //   85f6                 | test                esi, esi
            //   743d                 | je                  0x3f

        $sequence_8 = { 7471 8b3d???????? 90 68???????? ff7604 e8???????? 83c408 }
            // n = 7, score = 100
            //   7471                 | je                  0x73
            //   8b3d????????         |                     
            //   90                   | nop                 
            //   68????????           |                     
            //   ff7604               | push                dword ptr [esi + 4]
            //   e8????????           |                     
            //   83c408               | add                 esp, 8

        $sequence_9 = { 8908 8b472c 8910 837f3800 ff774c 7517 e8???????? }
            // n = 7, score = 100
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b472c               | mov                 eax, dword ptr [edi + 0x2c]
            //   8910                 | mov                 dword ptr [eax], edx
            //   837f3800             | cmp                 dword ptr [edi + 0x38], 0
            //   ff774c               | push                dword ptr [edi + 0x4c]
            //   7517                 | jne                 0x19
            //   e8????????           |                     

    condition:
        7 of them and filesize < 753664
}