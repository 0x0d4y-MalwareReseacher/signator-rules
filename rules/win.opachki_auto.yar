rule win_opachki_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.opachki."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.opachki"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85ff 7452 8b5204 85d2 }
            // n = 4, score = 300
            //   85ff                 | test                edi, edi
            //   7452                 | je                  0x54
            //   8b5204               | mov                 edx, dword ptr [edx + 4]
            //   85d2                 | test                edx, edx

        $sequence_1 = { 81ec20010000 53 56 68ff000000 }
            // n = 4, score = 300
            //   81ec20010000         | sub                 esp, 0x120
            //   53                   | push                ebx
            //   56                   | push                esi
            //   68ff000000           | push                0xff

        $sequence_2 = { 50 ff15???????? 83c40c 8b4f04 }
            // n = 4, score = 300
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c40c               | add                 esp, 0xc
            //   8b4f04               | mov                 ecx, dword ptr [edi + 4]

        $sequence_3 = { c3 55 8bec 81ec00010000 ff7508 }
            // n = 5, score = 300
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec00010000         | sub                 esp, 0x100
            //   ff7508               | push                dword ptr [ebp + 8]

        $sequence_4 = { 8bf1 83660800 58 50 c706???????? }
            // n = 5, score = 300
            //   8bf1                 | mov                 esi, ecx
            //   83660800             | and                 dword ptr [esi + 8], 0
            //   58                   | pop                 eax
            //   50                   | push                eax
            //   c706????????         |                     

        $sequence_5 = { 8d4df4 51 8d4dec 51 50 ff15???????? ff75fc }
            // n = 7, score = 300
            //   8d4df4               | lea                 ecx, [ebp - 0xc]
            //   51                   | push                ecx
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   ff75fc               | push                dword ptr [ebp - 4]

        $sequence_6 = { b001 eb23 40 50 ff7604 89460c ff15???????? }
            // n = 7, score = 300
            //   b001                 | mov                 al, 1
            //   eb23                 | jmp                 0x25
            //   40                   | inc                 eax
            //   50                   | push                eax
            //   ff7604               | push                dword ptr [esi + 4]
            //   89460c               | mov                 dword ptr [esi + 0xc], eax
            //   ff15????????         |                     

        $sequence_7 = { 53 56 84d2 7441 }
            // n = 4, score = 300
            //   53                   | push                ebx
            //   56                   | push                esi
            //   84d2                 | test                dl, dl
            //   7441                 | je                  0x43

        $sequence_8 = { ebc1 3c67 7507 884705 b301 }
            // n = 5, score = 200
            //   ebc1                 | jmp                 0xffffffc3
            //   3c67                 | cmp                 al, 0x67
            //   7507                 | jne                 9
            //   884705               | mov                 byte ptr [edi + 5], al
            //   b301                 | mov                 bl, 1

        $sequence_9 = { 7504 ad 89471a f6c110 7427 }
            // n = 5, score = 200
            //   7504                 | jne                 6
            //   ad                   | lodsd               eax, dword ptr [esi]
            //   89471a               | mov                 dword ptr [edi + 0x1a], eax
            //   f6c110               | test                cl, 0x10
            //   7427                 | je                  0x29

        $sequence_10 = { 3c64 7404 3c65 7505 884703 ebcc }
            // n = 6, score = 200
            //   3c64                 | cmp                 al, 0x64
            //   7404                 | je                  6
            //   3c65                 | cmp                 al, 0x65
            //   7505                 | jne                 7
            //   884703               | mov                 byte ptr [edi + 3], al
            //   ebcc                 | jmp                 0xffffffce

        $sequence_11 = { 80c910 30ff 08ed 7514 }
            // n = 4, score = 200
            //   80c910               | or                  cl, 0x10
            //   30ff                 | xor                 bh, bh
            //   08ed                 | or                  ch, ch
            //   7514                 | jne                 0x16

        $sequence_12 = { ac 3cf3 7404 3cf2 7505 884701 }
            // n = 6, score = 200
            //   ac                   | lodsb               al, byte ptr [esi]
            //   3cf3                 | cmp                 al, 0xf3
            //   7404                 | je                  6
            //   3cf2                 | cmp                 al, 0xf2
            //   7505                 | jne                 7
            //   884701               | mov                 byte ptr [edi + 1], al

        $sequence_13 = { 88da 88c6 80e603 c0e802 8a0401 00f0 }
            // n = 6, score = 200
            //   88da                 | mov                 dl, bl
            //   88c6                 | mov                 dh, al
            //   80e603               | and                 dh, 3
            //   c0e802               | shr                 al, 2
            //   8a0401               | mov                 al, byte ptr [ecx + eax]
            //   00f0                 | add                 al, dh

        $sequence_14 = { ebf2 3cf0 7505 884702 }
            // n = 4, score = 200
            //   ebf2                 | jmp                 0xfffffff4
            //   3cf0                 | cmp                 al, 0xf0
            //   7505                 | jne                 7
            //   884702               | mov                 byte ptr [edi + 2], al

    condition:
        7 of them and filesize < 122880
}