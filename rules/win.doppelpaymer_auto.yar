rule win_doppelpaymer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.doppelpaymer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doppelpaymer"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 80790264 751d 80790561 7517 }
            // n = 4, score = 700
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19

        $sequence_1 = { 80790600 7523 80790264 751d }
            // n = 4, score = 700
            //   80790600             | cmp                 byte ptr [ecx + 6], 0
            //   7523                 | jne                 0x25
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f

        $sequence_2 = { e8???????? 8b08 e8???????? 3db6389096 }
            // n = 4, score = 700
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   e8????????           |                     
            //   3db6389096           | cmp                 eax, 0x969038b6

        $sequence_3 = { 83ec28 6800002002 6a00 6a01 }
            // n = 4, score = 700
            //   83ec28               | sub                 esp, 0x28
            //   6800002002           | push                0x2200000
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_4 = { 80790561 7517 80790361 7511 80790474 750b }
            // n = 6, score = 700
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19
            //   80790361             | cmp                 byte ptr [ecx + 3], 0x61
            //   7511                 | jne                 0x13
            //   80790474             | cmp                 byte ptr [ecx + 4], 0x74
            //   750b                 | jne                 0xd

        $sequence_5 = { baffffff7f 43 e8???????? 3bd8 }
            // n = 4, score = 700
            //   baffffff7f           | mov                 edx, 0x7fffffff
            //   43                   | inc                 ebx
            //   e8????????           |                     
            //   3bd8                 | cmp                 ebx, eax

        $sequence_6 = { 8d4c2414 e8???????? 6a0f 8bcb 6a07 5a }
            // n = 6, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   6a0f                 | push                0xf
            //   8bcb                 | mov                 ecx, ebx
            //   6a07                 | push                7
            //   5a                   | pop                 edx

        $sequence_7 = { 8d4c2414 e8???????? 84c0 7511 }
            // n = 4, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7511                 | jne                 0x13

        $sequence_8 = { 83c114 8b55c0 8b7214 83fe00 }
            // n = 4, score = 100
            //   83c114               | add                 ecx, 0x14
            //   8b55c0               | mov                 edx, dword ptr [ebp - 0x40]
            //   8b7214               | mov                 esi, dword ptr [edx + 0x14]
            //   83fe00               | cmp                 esi, 0

        $sequence_9 = { 31c0 8b4ddc 0fb75114 83c118 01d1 894dd8 }
            // n = 6, score = 100
            //   31c0                 | xor                 eax, eax
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   0fb75114             | movzx               edx, word ptr [ecx + 0x14]
            //   83c118               | add                 ecx, 0x18
            //   01d1                 | add                 ecx, edx
            //   894dd8               | mov                 dword ptr [ebp - 0x28], ecx

        $sequence_10 = { 8b4dd8 81c1ffff0000 81e1ffff0000 01c1 8b45d4 01c8 8945d0 }
            // n = 7, score = 100
            //   8b4dd8               | mov                 ecx, dword ptr [ebp - 0x28]
            //   81c1ffff0000         | add                 ecx, 0xffff
            //   81e1ffff0000         | and                 ecx, 0xffff
            //   01c1                 | add                 ecx, eax
            //   8b45d4               | mov                 eax, dword ptr [ebp - 0x2c]
            //   01c8                 | add                 eax, ecx
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax

        $sequence_11 = { 894dc8 8975c4 e8???????? 8b45c8 83c028 }
            // n = 5, score = 100
            //   894dc8               | mov                 dword ptr [ebp - 0x38], ecx
            //   8975c4               | mov                 dword ptr [ebp - 0x3c], esi
            //   e8????????           |                     
            //   8b45c8               | mov                 eax, dword ptr [ebp - 0x38]
            //   83c028               | add                 eax, 0x28

        $sequence_12 = { 8b45dc b901000000 ba25155e0b 2b55ec 8b75e8 39d6 }
            // n = 6, score = 100
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   b901000000           | mov                 ecx, 1
            //   ba25155e0b           | mov                 edx, 0xb5e1525
            //   2b55ec               | sub                 edx, dword ptr [ebp - 0x14]
            //   8b75e8               | mov                 esi, dword ptr [ebp - 0x18]
            //   39d6                 | cmp                 esi, edx

        $sequence_13 = { 6683f800 894db4 748f e9???????? 31c0 }
            // n = 5, score = 100
            //   6683f800             | cmp                 ax, 0
            //   894db4               | mov                 dword ptr [ebp - 0x4c], ecx
            //   748f                 | je                  0xffffff91
            //   e9????????           |                     
            //   31c0                 | xor                 eax, eax

        $sequence_14 = { 5b 5d c3 8b45e8 890424 }
            // n = 5, score = 100
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   890424               | mov                 dword ptr [esp], eax

        $sequence_15 = { 894dac 8975b4 8955c0 e9???????? 8a45ca }
            // n = 5, score = 100
            //   894dac               | mov                 dword ptr [ebp - 0x54], ecx
            //   8975b4               | mov                 dword ptr [ebp - 0x4c], esi
            //   8955c0               | mov                 dword ptr [ebp - 0x40], edx
            //   e9????????           |                     
            //   8a45ca               | mov                 al, byte ptr [ebp - 0x36]

        $sequence_16 = { c1ea1a 0fb69248644201 c1e91a 0fbec9 }
            // n = 4, score = 100
            //   c1ea1a               | shr                 edx, 0x1a
            //   0fb69248644201       | movzx               edx, byte ptr [edx + 0x1426448]
            //   c1e91a               | shr                 ecx, 0x1a
            //   0fbec9               | movsx               ecx, cl

        $sequence_17 = { c1ea1a 0fb69248644201 c1e106 885601 8bd1 }
            // n = 5, score = 100
            //   c1ea1a               | shr                 edx, 0x1a
            //   0fb69248644201       | movzx               edx, byte ptr [edx + 0x1426448]
            //   c1e106               | shl                 ecx, 6
            //   885601               | mov                 byte ptr [esi + 1], dl
            //   8bd1                 | mov                 edx, ecx

    condition:
        7 of them and filesize < 7266304
}