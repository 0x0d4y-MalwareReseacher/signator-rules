rule win_doppelpaymer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.doppelpaymer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doppelpaymer"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { baffffff7f 43 e8???????? 3bd8 }
            // n = 4, score = 700
            //   baffffff7f           | mov                 edx, 0x7fffffff
            //   43                   | inc                 ebx
            //   e8????????           |                     
            //   3bd8                 | cmp                 ebx, eax

        $sequence_1 = { e8???????? 8b08 e8???????? 3db6389096 }
            // n = 4, score = 700
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   e8????????           |                     
            //   3db6389096           | cmp                 eax, 0x969038b6

        $sequence_2 = { 80790600 7523 80790264 751d }
            // n = 4, score = 700
            //   80790600             | cmp                 byte ptr [ecx + 6], 0
            //   7523                 | jne                 0x25
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f

        $sequence_3 = { 80790561 7517 80790361 7511 80790474 750b }
            // n = 6, score = 700
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19
            //   80790361             | cmp                 byte ptr [ecx + 3], 0x61
            //   7511                 | jne                 0x13
            //   80790474             | cmp                 byte ptr [ecx + 4], 0x74
            //   750b                 | jne                 0xd

        $sequence_4 = { 80790264 751d 80790561 7517 }
            // n = 4, score = 700
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19

        $sequence_5 = { 83ec28 6800002002 6a00 6a01 }
            // n = 4, score = 700
            //   83ec28               | sub                 esp, 0x28
            //   6800002002           | push                0x2200000
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_6 = { 8d4c2414 e8???????? 84c0 7511 }
            // n = 4, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7511                 | jne                 0x13

        $sequence_7 = { 8d4c2414 e8???????? 6a0f 8bcb 6a07 }
            // n = 5, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   6a0f                 | push                0xf
            //   8bcb                 | mov                 ecx, ebx
            //   6a07                 | push                7

        $sequence_8 = { 8b45b0 8b4054 89459c 8b45b0 8b402c 894598 89e0 }
            // n = 7, score = 100
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]
            //   8b4054               | mov                 eax, dword ptr [eax + 0x54]
            //   89459c               | mov                 dword ptr [ebp - 0x64], eax
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]
            //   8b402c               | mov                 eax, dword ptr [eax + 0x2c]
            //   894598               | mov                 dword ptr [ebp - 0x68], eax
            //   89e0                 | mov                 eax, esp

        $sequence_9 = { 897dac 8945bc 894da8 74c3 e9???????? }
            // n = 5, score = 100
            //   897dac               | mov                 dword ptr [ebp - 0x54], edi
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   894da8               | mov                 dword ptr [ebp - 0x58], ecx
            //   74c3                 | je                  0xffffffc5
            //   e9????????           |                     

        $sequence_10 = { 08fb f6c301 8975b0 894dc8 8945e0 0f853fffffff }
            // n = 6, score = 100
            //   08fb                 | or                  bl, bh
            //   f6c301               | test                bl, 1
            //   8975b0               | mov                 dword ptr [ebp - 0x50], esi
            //   894dc8               | mov                 dword ptr [ebp - 0x38], ecx
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   0f853fffffff         | jne                 0xffffff45

        $sequence_11 = { 8b4de8 8b55cc 8b75c4 8b7dc8 8b5dd0 8945b0 }
            // n = 6, score = 100
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   8b55cc               | mov                 edx, dword ptr [ebp - 0x34]
            //   8b75c4               | mov                 esi, dword ptr [ebp - 0x3c]
            //   8b7dc8               | mov                 edi, dword ptr [ebp - 0x38]
            //   8b5dd0               | mov                 ebx, dword ptr [ebp - 0x30]
            //   8945b0               | mov                 dword ptr [ebp - 0x50], eax

        $sequence_12 = { c1ee1f 03f2 b856555555 f7e9 8bc2 c1e81f 03c2 }
            // n = 7, score = 100
            //   c1ee1f               | shr                 esi, 0x1f
            //   03f2                 | add                 esi, edx
            //   b856555555           | mov                 eax, 0x55555556
            //   f7e9                 | imul                ecx
            //   8bc2                 | mov                 eax, edx
            //   c1e81f               | shr                 eax, 0x1f
            //   03c2                 | add                 eax, edx

        $sequence_13 = { 8b450c 8b4d08 66bad0c0 66c745f2d0c0 c745ec25155e0b }
            // n = 5, score = 100
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   66bad0c0             | mov                 dx, 0xc0d0
            //   66c745f2d0c0         | mov                 word ptr [ebp - 0xe], 0xc0d0
            //   c745ec25155e0b       | mov                 dword ptr [ebp - 0x14], 0xb5e1525

        $sequence_14 = { 8b45b0 8b4828 8b559c 891424 894c2404 8b4da8 894c2408 }
            // n = 7, score = 100
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]
            //   8b4828               | mov                 ecx, dword ptr [eax + 0x28]
            //   8b559c               | mov                 edx, dword ptr [ebp - 0x64]
            //   891424               | mov                 dword ptr [esp], edx
            //   894c2404             | mov                 dword ptr [esp + 4], ecx
            //   8b4da8               | mov                 ecx, dword ptr [ebp - 0x58]
            //   894c2408             | mov                 dword ptr [esp + 8], ecx

        $sequence_15 = { 895db8 88957bffffff 89b574ffffff 894da8 88b573ffffff }
            // n = 5, score = 100
            //   895db8               | mov                 dword ptr [ebp - 0x48], ebx
            //   88957bffffff         | mov                 byte ptr [ebp - 0x85], dl
            //   89b574ffffff         | mov                 dword ptr [ebp - 0x8c], esi
            //   894da8               | mov                 dword ptr [ebp - 0x58], ecx
            //   88b573ffffff         | mov                 byte ptr [ebp - 0x8d], dh

        $sequence_16 = { 897d84 ffd0 83ec10 8b4df0 81c1f8034681 894dd0 0f2805???????? }
            // n = 7, score = 100
            //   897d84               | mov                 dword ptr [ebp - 0x7c], edi
            //   ffd0                 | call                eax
            //   83ec10               | sub                 esp, 0x10
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   81c1f8034681         | add                 ecx, 0x814603f8
            //   894dd0               | mov                 dword ptr [ebp - 0x30], ecx
            //   0f2805????????       |                     

        $sequence_17 = { c1ef02 85ff 7e5f 8d14b500000000 }
            // n = 4, score = 100
            //   c1ef02               | shr                 edi, 2
            //   85ff                 | test                edi, edi
            //   7e5f                 | jle                 0x61
            //   8d14b500000000       | lea                 edx, [esi*4]

    condition:
        7 of them and filesize < 7266304
}