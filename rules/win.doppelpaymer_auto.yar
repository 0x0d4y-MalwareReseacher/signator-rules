rule win_doppelpaymer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.doppelpaymer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doppelpaymer"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 80790264 751d 80790561 7517 }
            // n = 4, score = 700
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19

        $sequence_1 = { 80790600 7523 80790264 751d }
            // n = 4, score = 700
            //   80790600             | cmp                 byte ptr [ecx + 6], 0
            //   7523                 | jne                 0x25
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f

        $sequence_2 = { e8???????? 8b08 e8???????? 3db6389096 }
            // n = 4, score = 700
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   e8????????           |                     
            //   3db6389096           | cmp                 eax, 0x969038b6

        $sequence_3 = { 80790561 7517 80790361 7511 80790474 750b }
            // n = 6, score = 700
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19
            //   80790361             | cmp                 byte ptr [ecx + 3], 0x61
            //   7511                 | jne                 0x13
            //   80790474             | cmp                 byte ptr [ecx + 4], 0x74
            //   750b                 | jne                 0xd

        $sequence_4 = { 83ec28 6800002002 6a00 6a01 }
            // n = 4, score = 700
            //   83ec28               | sub                 esp, 0x28
            //   6800002002           | push                0x2200000
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_5 = { baffffff7f 43 e8???????? 3bd8 }
            // n = 4, score = 700
            //   baffffff7f           | mov                 edx, 0x7fffffff
            //   43                   | inc                 ebx
            //   e8????????           |                     
            //   3bd8                 | cmp                 ebx, eax

        $sequence_6 = { 8d4c2414 e8???????? 50 8d4c247c e8???????? 8d8424d8000000 }
            // n = 6, score = 600
            //   8d4c2414             | lea                 ecx, dword ptr [esp + 0x14]
            //   e8????????           |                     
            //   50                   | push                eax
            //   8d4c247c             | lea                 ecx, dword ptr [esp + 0x7c]
            //   e8????????           |                     
            //   8d8424d8000000       | lea                 eax, dword ptr [esp + 0xd8]

        $sequence_7 = { 8d4c2414 e8???????? 6a00 8d4c2404 e8???????? 8bf0 6a00 }
            // n = 7, score = 600
            //   8d4c2414             | lea                 ecx, dword ptr [esp + 0x14]
            //   e8????????           |                     
            //   6a00                 | push                0
            //   8d4c2404             | lea                 ecx, dword ptr [esp + 4]
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   6a00                 | push                0

        $sequence_8 = { 8945a0 8b45a0 8b4da4 0fb755f2 89d6 81f6dc000000 81f22fcfffff }
            // n = 7, score = 100
            //   8945a0               | mov                 dword ptr [ebp - 0x60], eax
            //   8b45a0               | mov                 eax, dword ptr [ebp - 0x60]
            //   8b4da4               | mov                 ecx, dword ptr [ebp - 0x5c]
            //   0fb755f2             | movzx               edx, word ptr [ebp - 0xe]
            //   89d6                 | mov                 esi, edx
            //   81f6dc000000         | xor                 esi, 0xdc
            //   81f22fcfffff         | xor                 edx, 0xffffcf2f

        $sequence_9 = { c1e804 2401 7437 68dd2a8088 687cc93ad6 e8???????? 85c0 }
            // n = 7, score = 100
            //   c1e804               | shr                 eax, 4
            //   2401                 | and                 al, 1
            //   7437                 | je                  0x39
            //   68dd2a8088           | push                0x88802add
            //   687cc93ad6           | push                0xd63ac97c
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_10 = { c1e804 48 8945c4 897db4 }
            // n = 4, score = 100
            //   c1e804               | shr                 eax, 4
            //   48                   | dec                 eax
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax
            //   897db4               | mov                 dword ptr [ebp - 0x4c], edi

        $sequence_11 = { 72e1 ebc0 83c41c 5b 5d c3 }
            // n = 6, score = 100
            //   72e1                 | jb                  0xffffffe3
            //   ebc0                 | jmp                 0xffffffc2
            //   83c41c               | add                 esp, 0x1c
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_12 = { 8b55e4 8b743204 83fe00 0f95c2 8945d4 }
            // n = 5, score = 100
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   8b743204             | mov                 esi, dword ptr [edx + esi + 4]
            //   83fe00               | cmp                 esi, 0
            //   0f95c2               | setne               dl
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax

        $sequence_13 = { 7481 ebd2 55 89e5 53 }
            // n = 5, score = 100
            //   7481                 | je                  0xffffff83
            //   ebd2                 | jmp                 0xffffffd4
            //   55                   | push                ebp
            //   89e5                 | mov                 ebp, esp
            //   53                   | push                ebx

        $sequence_14 = { 0f47f7 8b45b4 8930 83fe00 894dbc 0f841cfeffff e9???????? }
            // n = 7, score = 100
            //   0f47f7               | cmova               esi, edi
            //   8b45b4               | mov                 eax, dword ptr [ebp - 0x4c]
            //   8930                 | mov                 dword ptr [eax], esi
            //   83fe00               | cmp                 esi, 0
            //   894dbc               | mov                 dword ptr [ebp - 0x44], ecx
            //   0f841cfeffff         | je                  0xfffffe22
            //   e9????????           |                     

        $sequence_15 = { 8a45cf a801 7502 eb5d 31c0 }
            // n = 5, score = 100
            //   8a45cf               | mov                 al, byte ptr [ebp - 0x31]
            //   a801                 | test                al, 1
            //   7502                 | jne                 4
            //   eb5d                 | jmp                 0x5f
            //   31c0                 | xor                 eax, eax

        $sequence_16 = { 8b7dec 01d7 8b5110 8b5de8 03590c 891c24 897c2404 }
            // n = 7, score = 100
            //   8b7dec               | mov                 edi, dword ptr [ebp - 0x14]
            //   01d7                 | add                 edi, edx
            //   8b5110               | mov                 edx, dword ptr [ecx + 0x10]
            //   8b5de8               | mov                 ebx, dword ptr [ebp - 0x18]
            //   03590c               | add                 ebx, dword ptr [ecx + 0xc]
            //   891c24               | mov                 dword ptr [esp], ebx
            //   897c2404             | mov                 dword ptr [esp + 4], edi

        $sequence_17 = { 8b8d6cffffff 8d55b4 8d75d0 8b7df0 81c7f8034681 }
            // n = 5, score = 100
            //   8b8d6cffffff         | mov                 ecx, dword ptr [ebp - 0x94]
            //   8d55b4               | lea                 edx, dword ptr [ebp - 0x4c]
            //   8d75d0               | lea                 esi, dword ptr [ebp - 0x30]
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   81c7f8034681         | add                 edi, 0x814603f8

    condition:
        7 of them and filesize < 7266304
}