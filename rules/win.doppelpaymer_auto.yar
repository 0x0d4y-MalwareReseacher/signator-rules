rule win_doppelpaymer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.doppelpaymer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.doppelpaymer"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { baffffff7f 43 e8???????? 3bd8 }
            // n = 4, score = 700
            //   baffffff7f           | mov                 edx, 0x7fffffff
            //   43                   | inc                 ebx
            //   e8????????           |                     
            //   3bd8                 | cmp                 ebx, eax

        $sequence_1 = { 80790600 7523 80790264 751d }
            // n = 4, score = 700
            //   80790600             | cmp                 byte ptr [ecx + 6], 0
            //   7523                 | jne                 0x25
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f

        $sequence_2 = { e8???????? 8b08 e8???????? 3db6389096 }
            // n = 4, score = 700
            //   e8????????           |                     
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   e8????????           |                     
            //   3db6389096           | cmp                 eax, 0x969038b6

        $sequence_3 = { 80790561 7517 80790361 7511 80790474 750b }
            // n = 6, score = 700
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19
            //   80790361             | cmp                 byte ptr [ecx + 3], 0x61
            //   7511                 | jne                 0x13
            //   80790474             | cmp                 byte ptr [ecx + 4], 0x74
            //   750b                 | jne                 0xd

        $sequence_4 = { 83ec28 6800002002 6a00 6a01 }
            // n = 4, score = 700
            //   83ec28               | sub                 esp, 0x28
            //   6800002002           | push                0x2200000
            //   6a00                 | push                0
            //   6a01                 | push                1

        $sequence_5 = { 80790264 751d 80790561 7517 }
            // n = 4, score = 700
            //   80790264             | cmp                 byte ptr [ecx + 2], 0x64
            //   751d                 | jne                 0x1f
            //   80790561             | cmp                 byte ptr [ecx + 5], 0x61
            //   7517                 | jne                 0x19

        $sequence_6 = { 8d4c2414 e8???????? 84c0 7511 }
            // n = 4, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7511                 | jne                 0x13

        $sequence_7 = { 8d4c2414 e8???????? 6a0f 8bcb 6a07 5a 6a05 }
            // n = 7, score = 600
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   6a0f                 | push                0xf
            //   8bcb                 | mov                 ecx, ebx
            //   6a07                 | push                7
            //   5a                   | pop                 edx
            //   6a05                 | push                5

        $sequence_8 = { 894de8 8955e4 8945e0 741c eb4e 8b45dc 83c0f8 }
            // n = 7, score = 100
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx
            //   8955e4               | mov                 dword ptr [ebp - 0x1c], edx
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   741c                 | je                  0x1e
            //   eb4e                 | jmp                 0x50
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   83c0f8               | add                 eax, -8

        $sequence_9 = { 5b 5d c3 8a45cb 3c00 }
            // n = 5, score = 100
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8a45cb               | mov                 al, byte ptr [ebp - 0x35]
            //   3c00                 | cmp                 al, 0

        $sequence_10 = { 885dbb 8975b4 8955b0 745e 31c0 8a4dbb }
            // n = 6, score = 100
            //   885dbb               | mov                 byte ptr [ebp - 0x45], bl
            //   8975b4               | mov                 dword ptr [ebp - 0x4c], esi
            //   8955b0               | mov                 dword ptr [ebp - 0x50], edx
            //   745e                 | je                  0x60
            //   31c0                 | xor                 eax, eax
            //   8a4dbb               | mov                 cl, byte ptr [ebp - 0x45]

        $sequence_11 = { 8b450c 8b4d08 31d2 8d75d1 c745f0e7566258 }
            // n = 5, score = 100
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   31d2                 | xor                 edx, edx
            //   8d75d1               | lea                 esi, [ebp - 0x2f]
            //   c745f0e7566258       | mov                 dword ptr [ebp - 0x10], 0x586256e7

        $sequence_12 = { c1ef02 85ff 7e6d 8bff }
            // n = 4, score = 100
            //   c1ef02               | shr                 edi, 2
            //   85ff                 | test                edi, edi
            //   7e6d                 | jle                 0x6f
            //   8bff                 | mov                 edi, edi

        $sequence_13 = { 8b45c4 81c480000000 5e 5f 5b }
            // n = 5, score = 100
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   81c480000000         | add                 esp, 0x80
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi
            //   5b                   | pop                 ebx

        $sequence_14 = { 8945f4 e8???????? 8d0d34302b00 31d2 }
            // n = 4, score = 100
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   e8????????           |                     
            //   8d0d34302b00         | lea                 ecx, [0x2b3034]
            //   31d2                 | xor                 edx, edx

        $sequence_15 = { c1ef02 85ff 7e5f 8d14b500000000 52 8d4df0 }
            // n = 6, score = 100
            //   c1ef02               | shr                 edi, 2
            //   85ff                 | test                edi, edi
            //   7e5f                 | jle                 0x61
            //   8d14b500000000       | lea                 edx, [esi*4]
            //   52                   | push                edx
            //   8d4df0               | lea                 ecx, [ebp - 0x10]

        $sequence_16 = { 8bbd58ffffff c1e704 01fe 8bbd54ffffff c1e703 01fe c1e302 }
            // n = 7, score = 100
            //   8bbd58ffffff         | mov                 edi, dword ptr [ebp - 0xa8]
            //   c1e704               | shl                 edi, 4
            //   01fe                 | add                 esi, edi
            //   8bbd54ffffff         | mov                 edi, dword ptr [ebp - 0xac]
            //   c1e703               | shl                 edi, 3
            //   01fe                 | add                 esi, edi
            //   c1e302               | shl                 ebx, 2

        $sequence_17 = { 8945d0 894dcc 0f8594000000 8b45d0 b9e8f49929 }
            // n = 5, score = 100
            //   8945d0               | mov                 dword ptr [ebp - 0x30], eax
            //   894dcc               | mov                 dword ptr [ebp - 0x34], ecx
            //   0f8594000000         | jne                 0x9a
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   b9e8f49929           | mov                 ecx, 0x2999f4e8

    condition:
        7 of them and filesize < 7266304
}