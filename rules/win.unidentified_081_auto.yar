rule win_unidentified_081_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.unidentified_081."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_081"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 884f07 743a 8bcf e8???????? }
            // n = 4, score = 100
            //   884f07               | mov                 byte ptr [edi + 7], cl
            //   743a                 | je                  0x3c
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     

        $sequence_1 = { ff15???????? 57 ff15???????? 8b4dfc 8a45e7 33cd 5f }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8a45e7               | mov                 al, byte ptr [ebp - 0x19]
            //   33cd                 | xor                 ecx, ebp
            //   5f                   | pop                 edi

        $sequence_2 = { 83e31f c1e306 8b0485d0d14100 0fbe440304 83e001 7472 }
            // n = 6, score = 100
            //   83e31f               | and                 ebx, 0x1f
            //   c1e306               | shl                 ebx, 6
            //   8b0485d0d14100       | mov                 eax, dword ptr [eax*4 + 0x41d1d0]
            //   0fbe440304           | movsx               eax, byte ptr [ebx + eax + 4]
            //   83e001               | and                 eax, 1
            //   7472                 | je                  0x74

        $sequence_3 = { 85ff 7409 57 e8???????? 83c404 80bda3fdffff00 741c }
            // n = 7, score = 100
            //   85ff                 | test                edi, edi
            //   7409                 | je                  0xb
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   80bda3fdffff00       | cmp                 byte ptr [ebp - 0x25d], 0
            //   741c                 | je                  0x1e

        $sequence_4 = { 8bf7 bb04000000 8d642400 8bce }
            // n = 4, score = 100
            //   8bf7                 | mov                 esi, edi
            //   bb04000000           | mov                 ebx, 4
            //   8d642400             | lea                 esp, [esp]
            //   8bce                 | mov                 ecx, esi

        $sequence_5 = { 8d4900 0fb70c77 8d41d0 6683f809 7705 }
            // n = 5, score = 100
            //   8d4900               | lea                 ecx, [ecx]
            //   0fb70c77             | movzx               ecx, word ptr [edi + esi*2]
            //   8d41d0               | lea                 eax, [ecx - 0x30]
            //   6683f809             | cmp                 ax, 9
            //   7705                 | ja                  7

        $sequence_6 = { 6a00 6800000040 50 ff15???????? 8bf0 83feff 0f8467010000 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   6800000040           | push                0x40000000
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   83feff               | cmp                 esi, -1
            //   0f8467010000         | je                  0x16d

        $sequence_7 = { 0f8450030000 8b8528e5ffff 8b8d24e5ffff 8b0485d0d14100 f644010480 0f8432030000 e8???????? }
            // n = 7, score = 100
            //   0f8450030000         | je                  0x356
            //   8b8528e5ffff         | mov                 eax, dword ptr [ebp - 0x1ad8]
            //   8b8d24e5ffff         | mov                 ecx, dword ptr [ebp - 0x1adc]
            //   8b0485d0d14100       | mov                 eax, dword ptr [eax*4 + 0x41d1d0]
            //   f644010480           | test                byte ptr [ecx + eax + 4], 0x80
            //   0f8432030000         | je                  0x338
            //   e8????????           |                     

        $sequence_8 = { 80ea57 eb02 32d2 8bc6 c0e104 d1e8 }
            // n = 6, score = 100
            //   80ea57               | sub                 dl, 0x57
            //   eb02                 | jmp                 4
            //   32d2                 | xor                 dl, dl
            //   8bc6                 | mov                 eax, esi
            //   c0e104               | shl                 cl, 4
            //   d1e8                 | shr                 eax, 1

        $sequence_9 = { 58 668986b8000000 668986be010000 c74668f0b44100 83a6b803000000 }
            // n = 5, score = 100
            //   58                   | pop                 eax
            //   668986b8000000       | mov                 word ptr [esi + 0xb8], ax
            //   668986be010000       | mov                 word ptr [esi + 0x1be], ax
            //   c74668f0b44100       | mov                 dword ptr [esi + 0x68], 0x41b4f0
            //   83a6b803000000       | and                 dword ptr [esi + 0x3b8], 0

    condition:
        7 of them and filesize < 273408
}