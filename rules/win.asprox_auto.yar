rule win_asprox_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.asprox."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.asprox"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945e4 6800100000 6a00 8b0d???????? }
            // n = 4, score = 1200
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   6800100000           | push                0x1000
            //   6a00                 | push                0
            //   8b0d????????         |                     

        $sequence_1 = { ffd1 8b55c8 52 ff15???????? 8b45d0 8b08 8b55d0 }
            // n = 7, score = 1200
            //   ffd1                 | call                ecx
            //   8b55c8               | mov                 edx, dword ptr [ebp - 0x38]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b55d0               | mov                 edx, dword ptr [ebp - 0x30]

        $sequence_2 = { 52 6a00 a1???????? 50 ff15???????? 8b4df8 51 }
            // n = 7, score = 1200
            //   52                   | push                edx
            //   6a00                 | push                0
            //   a1????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   51                   | push                ecx

        $sequence_3 = { 890d???????? 813d????????00010000 7470 a1???????? 33d2 f7750c 8b4508 }
            // n = 7, score = 1200
            //   890d????????         |                     
            //   813d????????00010000     |     
            //   7470                 | je                  0x72
            //   a1????????           |                     
            //   33d2                 | xor                 edx, edx
            //   f7750c               | div                 dword ptr [ebp + 0xc]
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_4 = { 8b45cc 8b08 8b55cc 52 8b4168 ffd0 8945f0 }
            // n = 7, score = 1200
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b55cc               | mov                 edx, dword ptr [ebp - 0x34]
            //   52                   | push                edx
            //   8b4168               | mov                 eax, dword ptr [ecx + 0x68]
            //   ffd0                 | call                eax
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax

        $sequence_5 = { 8bb3540c0000 8bcf d1f9 0fb6340e 894da0 897d08 214508 }
            // n = 7, score = 1200
            //   8bb3540c0000         | mov                 esi, dword ptr [ebx + 0xc54]
            //   8bcf                 | mov                 ecx, edi
            //   d1f9                 | sar                 ecx, 1
            //   0fb6340e             | movzx               esi, byte ptr [esi + ecx]
            //   894da0               | mov                 dword ptr [ebp - 0x60], ecx
            //   897d08               | mov                 dword ptr [ebp + 8], edi
            //   214508               | and                 dword ptr [ebp + 8], eax

        $sequence_6 = { ff401c ebab 8b8640fa0000 8b8e40040000 40 8945f4 3bc8 }
            // n = 7, score = 1200
            //   ff401c               | inc                 dword ptr [eax + 0x1c]
            //   ebab                 | jmp                 0xffffffad
            //   8b8640fa0000         | mov                 eax, dword ptr [esi + 0xfa40]
            //   8b8e40040000         | mov                 ecx, dword ptr [esi + 0x440]
            //   40                   | inc                 eax
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   3bc8                 | cmp                 ecx, eax

        $sequence_7 = { 8b55e0 83c201 8955e0 c745e400100000 c745e800100000 eb86 }
            // n = 6, score = 1200
            //   8b55e0               | mov                 edx, dword ptr [ebp - 0x20]
            //   83c201               | add                 edx, 1
            //   8955e0               | mov                 dword ptr [ebp - 0x20], edx
            //   c745e400100000       | mov                 dword ptr [ebp - 0x1c], 0x1000
            //   c745e800100000       | mov                 dword ptr [ebp - 0x18], 0x1000
            //   eb86                 | jmp                 0xffffff88

        $sequence_8 = { 8b5590 8b85f0feffff 034210 8b4de4 8b95f8feffff 891488 8b45ec }
            // n = 7, score = 1200
            //   8b5590               | mov                 edx, dword ptr [ebp - 0x70]
            //   8b85f0feffff         | mov                 eax, dword ptr [ebp - 0x110]
            //   034210               | add                 eax, dword ptr [edx + 0x10]
            //   8b4de4               | mov                 ecx, dword ptr [ebp - 0x1c]
            //   8b95f8feffff         | mov                 edx, dword ptr [ebp - 0x108]
            //   891488               | mov                 dword ptr [eax + ecx*4], edx
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]

        $sequence_9 = { 0f8543010000 8b9580feffff 899550feffff 8b8550feffff 83c002 89854cfeffff 8b8d50feffff }
            // n = 7, score = 1200
            //   0f8543010000         | jne                 0x149
            //   8b9580feffff         | mov                 edx, dword ptr [ebp - 0x180]
            //   899550feffff         | mov                 dword ptr [ebp - 0x1b0], edx
            //   8b8550feffff         | mov                 eax, dword ptr [ebp - 0x1b0]
            //   83c002               | add                 eax, 2
            //   89854cfeffff         | mov                 dword ptr [ebp - 0x1b4], eax
            //   8b8d50feffff         | mov                 ecx, dword ptr [ebp - 0x1b0]

    condition:
        7 of them and filesize < 155648
}