rule win_flusihoc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.flusihoc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.flusihoc"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 6a40 8d442428 6a00 50 c744242c44000000 e8???????? }
            // n = 7, score = 400
            //   57                   | push                edi
            //   6a40                 | push                0x40
            //   8d442428             | lea                 eax, [esp + 0x28]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   c744242c44000000     | mov                 dword ptr [esp + 0x2c], 0x44
            //   e8????????           |                     

        $sequence_1 = { 8d7c2428 50 f3a5 c684246401000000 e8???????? 83c40c }
            // n = 6, score = 400
            //   8d7c2428             | lea                 edi, [esp + 0x28]
            //   50                   | push                eax
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   c684246401000000     | mov                 byte ptr [esp + 0x164], 0
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_2 = { 8b542414 52 ffd6 6a0a }
            // n = 4, score = 400
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]
            //   52                   | push                edx
            //   ffd6                 | call                esi
            //   6a0a                 | push                0xa

        $sequence_3 = { ffd6 6a0a ff15???????? ebb1 }
            // n = 4, score = 400
            //   ffd6                 | call                esi
            //   6a0a                 | push                0xa
            //   ff15????????         |                     
            //   ebb1                 | jmp                 0xffffffb3

        $sequence_4 = { ff15???????? 8b4c2410 51 ffd6 8b542414 }
            // n = 5, score = 400
            //   ff15????????         |                     
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   51                   | push                ecx
            //   ffd6                 | call                esi
            //   8b542414             | mov                 edx, dword ptr [esp + 0x14]

        $sequence_5 = { 33c0 888c045e010000 8a4c042c 40 80f92f }
            // n = 5, score = 400
            //   33c0                 | xor                 eax, eax
            //   888c045e010000       | mov                 byte ptr [esp + eax + 0x15e], cl
            //   8a4c042c             | mov                 cl, byte ptr [esp + eax + 0x2c]
            //   40                   | inc                 eax
            //   80f92f               | cmp                 cl, 0x2f

        $sequence_6 = { 3d68010000 7505 fe06 fe4e17 83f834 }
            // n = 5, score = 400
            //   3d68010000           | cmp                 eax, 0x168
            //   7505                 | jne                 7
            //   fe06                 | inc                 byte ptr [esi]
            //   fe4e17               | dec                 byte ptr [esi + 0x17]
            //   83f834               | cmp                 eax, 0x34

        $sequence_7 = { 7505 fe06 fe461e 3d68010000 }
            // n = 4, score = 400
            //   7505                 | jne                 7
            //   fe06                 | inc                 byte ptr [esi]
            //   fe461e               | inc                 byte ptr [esi + 0x1e]
            //   3d68010000           | cmp                 eax, 0x168

        $sequence_8 = { ffd3 8b442410 6aff 50 ff15???????? }
            // n = 5, score = 400
            //   ffd3                 | call                ebx
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   6aff                 | push                -1
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_9 = { 84c0 7420 ff15???????? 83c8ff }
            // n = 4, score = 400
            //   84c0                 | test                al, al
            //   7420                 | je                  0x22
            //   ff15????????         |                     
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_10 = { 50 f3a5 c684246402000000 e8???????? 68d6000000 }
            // n = 5, score = 400
            //   50                   | push                eax
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   c684246402000000     | mov                 byte ptr [esp + 0x264], 0
            //   e8????????           |                     
            //   68d6000000           | push                0xd6

        $sequence_11 = { 6a01 6a02 ff15???????? 6a10 8d4c2414 }
            // n = 5, score = 400
            //   6a01                 | push                1
            //   6a02                 | push                2
            //   ff15????????         |                     
            //   6a10                 | push                0x10
            //   8d4c2414             | lea                 ecx, [esp + 0x14]

        $sequence_12 = { 6a00 6a00 ff15???????? 8b35???????? 6860ea0000 ffd6 ebf7 }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8b35????????         |                     
            //   6860ea0000           | push                0xea60
            //   ffd6                 | call                esi
            //   ebf7                 | jmp                 0xfffffff9

        $sequence_13 = { ffd6 ebf7 3b0d???????? 7502 f3c3 e9???????? 8bff }
            // n = 7, score = 200
            //   ffd6                 | call                esi
            //   ebf7                 | jmp                 0xfffffff9
            //   3b0d????????         |                     
            //   7502                 | jne                 4
            //   f3c3                 | ret                 
            //   e9????????           |                     
            //   8bff                 | mov                 edi, edi

        $sequence_14 = { 3db7000000 7510 56 ff15???????? 33c0 }
            // n = 5, score = 200
            //   3db7000000           | cmp                 eax, 0xb7
            //   7510                 | jne                 0x12
            //   56                   | push                esi
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_15 = { 6a01 6a00 ff15???????? 8bf0 ff15???????? 3db7000000 7510 }
            // n = 7, score = 200
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   ff15????????         |                     
            //   3db7000000           | cmp                 eax, 0xb7
            //   7510                 | jne                 0x12

    condition:
        7 of them and filesize < 319488
}