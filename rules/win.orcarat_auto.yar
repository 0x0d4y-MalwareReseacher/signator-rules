rule win_orcarat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.orcarat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.orcarat"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 89855c030000 0f855d010000 8d442418 6a0a }
            // n = 4, score = 200
            //   89855c030000         | mov                 dword ptr [ebp + 0x35c], eax
            //   0f855d010000         | jne                 0x163
            //   8d442418             | lea                 eax, [esp + 0x18]
            //   6a0a                 | push                0xa

        $sequence_1 = { 50 8d4c2424 68???????? 51 c70744000000 899e08030000 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   8d4c2424             | lea                 ecx, [esp + 0x24]
            //   68????????           |                     
            //   51                   | push                ecx
            //   c70744000000         | mov                 dword ptr [edi], 0x44
            //   899e08030000         | mov                 dword ptr [esi + 0x308], ebx

        $sequence_2 = { c3 8b04d564af4000 a3???????? c3 81f9bc000000 7212 81f9ca000000 }
            // n = 7, score = 200
            //   c3                   | ret                 
            //   8b04d564af4000       | mov                 eax, dword ptr [edx*8 + 0x40af64]
            //   a3????????           |                     
            //   c3                   | ret                 
            //   81f9bc000000         | cmp                 ecx, 0xbc
            //   7212                 | jb                  0x14
            //   81f9ca000000         | cmp                 ecx, 0xca

        $sequence_3 = { 762f 8d442410 c744241000000000 50 6800080000 57 }
            // n = 6, score = 200
            //   762f                 | jbe                 0x31
            //   8d442410             | lea                 eax, [esp + 0x10]
            //   c744241000000000     | mov                 dword ptr [esp + 0x10], 0
            //   50                   | push                eax
            //   6800080000           | push                0x800
            //   57                   | push                edi

        $sequence_4 = { ffb614aa4000 8d8560ffffff 50 e8???????? 6810200100 8d8560ffffff }
            // n = 6, score = 200
            //   ffb614aa4000         | push                dword ptr [esi + 0x40aa14]
            //   8d8560ffffff         | lea                 eax, [ebp - 0xa0]
            //   50                   | push                eax
            //   e8????????           |                     
            //   6810200100           | push                0x12010
            //   8d8560ffffff         | lea                 eax, [ebp - 0xa0]

        $sequence_5 = { 6a02 f3a4 8d7c2464 83c9ff f2ae f7d1 }
            // n = 6, score = 200
            //   6a02                 | push                2
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8d7c2464             | lea                 edi, [esp + 0x64]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx

        $sequence_6 = { 51 8bcd 8d440201 8d542424 }
            // n = 4, score = 200
            //   51                   | push                ecx
            //   8bcd                 | mov                 ecx, ebp
            //   8d440201             | lea                 eax, [edx + eax + 1]
            //   8d542424             | lea                 edx, [esp + 0x24]

        $sequence_7 = { 8d94241c010000 8bc1 8bf7 8bfa 8d94241c010000 c1e902 }
            // n = 6, score = 200
            //   8d94241c010000       | lea                 edx, [esp + 0x11c]
            //   8bc1                 | mov                 eax, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bfa                 | mov                 edi, edx
            //   8d94241c010000       | lea                 edx, [esp + 0x11c]
            //   c1e902               | shr                 ecx, 2

        $sequence_8 = { f7d1 49 51 68???????? 56 ffd3 8b842438080000 }
            // n = 7, score = 200
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   51                   | push                ecx
            //   68????????           |                     
            //   56                   | push                esi
            //   ffd3                 | call                ebx
            //   8b842438080000       | mov                 eax, dword ptr [esp + 0x838]

        $sequence_9 = { f2ae f7d1 49 51 68???????? 53 56 }
            // n = 7, score = 200
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   51                   | push                ecx
            //   68????????           |                     
            //   53                   | push                ebx
            //   56                   | push                esi

    condition:
        7 of them and filesize < 114688
}