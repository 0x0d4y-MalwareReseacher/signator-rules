rule win_c0d0so0_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.c0d0so0."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.c0d0so0"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8365fc00 33d2 8d4c0118 663b5006 0f8399000000 }
            // n = 5, score = 600
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   33d2                 | xor                 edx, edx
            //   8d4c0118             | lea                 ecx, dword ptr [ecx + eax + 0x18]
            //   663b5006             | cmp                 dx, word ptr [eax + 6]
            //   0f8399000000         | jae                 0x9f

        $sequence_1 = { 59 eb0b 56 50 53 e8???????? }
            // n = 6, score = 600
            //   59                   | pop                 ecx
            //   eb0b                 | jmp                 0xd
            //   56                   | push                esi
            //   50                   | push                eax
            //   53                   | push                ebx
            //   e8????????           |                     

        $sequence_2 = { 8907 56 894834 e8???????? }
            // n = 4, score = 600
            //   8907                 | mov                 dword ptr [edi], eax
            //   56                   | push                esi
            //   894834               | mov                 dword ptr [eax + 0x34], ecx
            //   e8????????           |                     

        $sequence_3 = { 57 6a04 bf00200000 57 ff7350 ff7334 ffd6 }
            // n = 7, score = 600
            //   57                   | push                edi
            //   6a04                 | push                4
            //   bf00200000           | mov                 edi, 0x2000
            //   57                   | push                edi
            //   ff7350               | push                dword ptr [ebx + 0x50]
            //   ff7334               | push                dword ptr [ebx + 0x34]
            //   ffd6                 | call                esi

        $sequence_4 = { 807e0d00 c6460801 7469 8b460e 8b1d???????? 8365f800 83c012 }
            // n = 7, score = 600
            //   807e0d00             | cmp                 byte ptr [esi + 0xd], 0
            //   c6460801             | mov                 byte ptr [esi + 8], 1
            //   7469                 | je                  0x6b
            //   8b460e               | mov                 eax, dword ptr [esi + 0xe]
            //   8b1d????????         |                     
            //   8365f800             | and                 dword ptr [ebp - 8], 0
            //   83c012               | add                 eax, 0x12

        $sequence_5 = { 8a4e04 304c3012 8b0e 40 }
            // n = 4, score = 600
            //   8a4e04               | mov                 cl, byte ptr [esi + 4]
            //   304c3012             | xor                 byte ptr [eax + esi + 0x12], cl
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   40                   | inc                 eax

        $sequence_6 = { 33c9 8b02 85c0 740f 8b00 47 89048e }
            // n = 7, score = 600
            //   33c9                 | xor                 ecx, ecx
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   85c0                 | test                eax, eax
            //   740f                 | je                  0x11
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   47                   | inc                 edi
            //   89048e               | mov                 dword ptr [esi + ecx*4], eax

        $sequence_7 = { fec1 0fb6f1 3b7508 7d2a 8bd6 2bd0 57 }
            // n = 7, score = 600
            //   fec1                 | inc                 cl
            //   0fb6f1               | movzx               esi, cl
            //   3b7508               | cmp                 esi, dword ptr [ebp + 8]
            //   7d2a                 | jge                 0x2c
            //   8bd6                 | mov                 edx, esi
            //   2bd0                 | sub                 edx, eax
            //   57                   | push                edi

        $sequence_8 = { 895508 894df4 e8???????? 59 }
            // n = 4, score = 600
            //   895508               | mov                 dword ptr [ebp + 8], edx
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_9 = { 6a10 68ff010f00 68???????? 68???????? 50 ff15???????? }
            // n = 6, score = 600
            //   6a10                 | push                0x10
            //   68ff010f00           | push                0xf01ff
            //   68????????           |                     
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 450560
}