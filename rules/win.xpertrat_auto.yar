rule win_xpertrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.xpertrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xpertrat"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff0468 ff0a 250004003c 6c 70ff 0808 008a3800cc1c }
            // n = 7, score = 200
            //   ff0468               | inc                 dword ptr [eax + ebp*2]
            //   ff0a                 | dec                 dword ptr [edx]
            //   250004003c           | and                 eax, 0x3c000400
            //   6c                   | insb                byte ptr es:[edi], dx
            //   70ff                 | jo                  1
            //   0808                 | or                  byte ptr [eax], cl
            //   008a3800cc1c         | add                 byte ptr [edx + 0x1ccc0038], cl

        $sequence_1 = { 0474 ff0478 ff05???????? 000d???????? 0878ff }
            // n = 5, score = 200
            //   0474                 | add                 al, 0x74
            //   ff0478               | inc                 dword ptr [eax + edi*2]
            //   ff05????????         |                     
            //   000d????????         |                     
            //   0878ff               | or                  byte ptr [eax - 1], bh

        $sequence_2 = { 000d???????? 0870ff 0d80000700 0474 }
            // n = 4, score = 200
            //   000d????????         |                     
            //   0870ff               | or                  byte ptr [eax - 1], dh
            //   0d80000700           | or                  eax, 0x70080
            //   0474                 | add                 al, 0x74

        $sequence_3 = { 0000 00a1cc004400 0bc0 7402 ffe0 }
            // n = 5, score = 200
            //   0000                 | add                 byte ptr [eax], al
            //   00a1cc004400         | add                 byte ptr [ecx + 0x4400cc], ah
            //   0bc0                 | or                  eax, eax
            //   7402                 | je                  4
            //   ffe0                 | jmp                 eax

        $sequence_4 = { 40 0430 ff0a 4c }
            // n = 4, score = 200
            //   40                   | inc                 eax
            //   0430                 | add                 al, 0x30
            //   ff0a                 | dec                 dword ptr [edx]
            //   4c                   | dec                 esp

        $sequence_5 = { ff4d40 ff08 40 0430 }
            // n = 4, score = 200
            //   ff4d40               | dec                 dword ptr [ebp + 0x40]
            //   ff08                 | dec                 dword ptr [eax]
            //   40                   | inc                 eax
            //   0430                 | add                 al, 0x30

        $sequence_6 = { 5e 006c70ff 0808 008f38001b26 001b 0d002a2364 }
            // n = 6, score = 200
            //   5e                   | pop                 esi
            //   006c70ff             | add                 byte ptr [eax + esi*2 - 1], ch
            //   0808                 | or                  byte ptr [eax], cl
            //   008f38001b26         | add                 byte ptr [edi + 0x261b0038], cl
            //   001b                 | add                 byte ptr [ebx], bl
            //   0d002a2364           | or                  eax, 0x64232a00

        $sequence_7 = { 0d98000700 6e 74ff 6e }
            // n = 4, score = 200
            //   0d98000700           | or                  eax, 0x70098
            //   6e                   | outsb               dx, byte ptr [esi]
            //   74ff                 | je                  1
            //   6e                   | outsb               dx, byte ptr [esi]

        $sequence_8 = { eb17 c745fc09000000 8b5508 8b82f0000000 }
            // n = 4, score = 100
            //   eb17                 | jmp                 0x19
            //   c745fc09000000       | mov                 dword ptr [ebp - 4], 9
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b82f0000000         | mov                 eax, dword ptr [edx + 0xf0]

        $sequence_9 = { eb18 a810 7409 c7458801000000 }
            // n = 4, score = 100
            //   eb18                 | jmp                 0x1a
            //   a810                 | test                al, 0x10
            //   7409                 | je                  0xb
            //   c7458801000000       | mov                 dword ptr [ebp - 0x78], 1

        $sequence_10 = { eb18 a802 7409 c745e801000000 }
            // n = 4, score = 100
            //   eb18                 | jmp                 0x1a
            //   a802                 | test                al, 2
            //   7409                 | je                  0xb
            //   c745e801000000       | mov                 dword ptr [ebp - 0x18], 1

        $sequence_11 = { eb18 6a07 8b7508 8b4e4c }
            // n = 4, score = 100
            //   eb18                 | jmp                 0x1a
            //   6a07                 | push                7
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8b4e4c               | mov                 ecx, dword ptr [esi + 0x4c]

        $sequence_12 = { eb18 c745fc09000000 8b4508 8b88c0000000 }
            // n = 4, score = 100
            //   eb18                 | jmp                 0x1a
            //   c745fc09000000       | mov                 dword ptr [ebp - 4], 9
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b88c0000000         | mov                 ecx, dword ptr [eax + 0xc0]

        $sequence_13 = { eb18 8b7508 8d45e8 8b5648 }
            // n = 4, score = 100
            //   eb18                 | jmp                 0x1a
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   8b5648               | mov                 edx, dword ptr [esi + 0x48]

        $sequence_14 = { eb18 8b06 8d4dc4 51 }
            // n = 4, score = 100
            //   eb18                 | jmp                 0x1a
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   51                   | push                ecx

        $sequence_15 = { eb18 8b4e74 50 51 }
            // n = 4, score = 100
            //   eb18                 | jmp                 0x1a
            //   8b4e74               | mov                 ecx, dword ptr [esi + 0x74]
            //   50                   | push                eax
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 8560640
}