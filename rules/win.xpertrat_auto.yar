rule win_xpertrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.xpertrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.xpertrat"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 40 0430 ff0a 4c 000c00 }
            // n = 5, score = 200
            //   40                   | inc                 eax
            //   0430                 | add                 al, 0x30
            //   ff0a                 | dec                 dword ptr [edx]
            //   4c                   | dec                 esp
            //   000c00               | add                 byte ptr [eax + eax], cl

        $sequence_1 = { 00a1cc004400 0bc0 7402 ffe0 }
            // n = 4, score = 200
            //   00a1cc004400         | add                 byte ptr [ecx + 0x4400cc], ah
            //   0bc0                 | or                  eax, eax
            //   7402                 | je                  4
            //   ffe0                 | jmp                 eax

        $sequence_2 = { 008a3800cc1c 5e 006c70ff 0808 008f38001b26 }
            // n = 5, score = 200
            //   008a3800cc1c         | add                 byte ptr [edx + 0x1ccc0038], cl
            //   5e                   | pop                 esi
            //   006c70ff             | add                 byte ptr [eax + esi*2 - 1], ch
            //   0808                 | or                  byte ptr [eax], cl
            //   008f38001b26         | add                 byte ptr [edi + 0x261b0038], cl

        $sequence_3 = { 045c ff4d40 ff08 40 0430 }
            // n = 5, score = 200
            //   045c                 | add                 al, 0x5c
            //   ff4d40               | dec                 dword ptr [ebp + 0x40]
            //   ff08                 | dec                 dword ptr [eax]
            //   40                   | inc                 eax
            //   0430                 | add                 al, 0x30

        $sequence_4 = { 0000 ae 045c ff4d40 }
            // n = 4, score = 200
            //   0000                 | add                 byte ptr [eax], al
            //   ae                   | scasb               al, byte ptr es:[edi]
            //   045c                 | add                 al, 0x5c
            //   ff4d40               | dec                 dword ptr [ebp + 0x40]

        $sequence_5 = { 0870ff 0d80000700 0474 ff0478 ff05???????? }
            // n = 5, score = 200
            //   0870ff               | or                  byte ptr [eax - 1], dh
            //   0d80000700           | or                  eax, 0x70080
            //   0474                 | add                 al, 0x74
            //   ff0478               | inc                 dword ptr [eax + edi*2]
            //   ff05????????         |                     

        $sequence_6 = { ff0a 250004003c 6c 70ff 0808 008a3800cc1c }
            // n = 6, score = 200
            //   ff0a                 | dec                 dword ptr [edx]
            //   250004003c           | and                 eax, 0x3c000400
            //   6c                   | insb                byte ptr es:[edi], dx
            //   70ff                 | jo                  1
            //   0808                 | or                  byte ptr [eax], cl
            //   008a3800cc1c         | add                 byte ptr [edx + 0x1ccc0038], cl

        $sequence_7 = { 008f38001b26 001b 0d002a2364 ff08 }
            // n = 4, score = 200
            //   008f38001b26         | add                 byte ptr [edi + 0x261b0038], cl
            //   001b                 | add                 byte ptr [ebx], bl
            //   0d002a2364           | or                  eax, 0x64232a00
            //   ff08                 | dec                 dword ptr [eax]

        $sequence_8 = { eb0f 8b16 8d45d0 50 }
            // n = 4, score = 100
            //   eb0f                 | jmp                 0x11
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   8d45d0               | lea                 eax, [ebp - 0x30]
            //   50                   | push                eax

        $sequence_9 = { eb0f 8b45dc 034580 0f802f020000 }
            // n = 4, score = 100
            //   eb0f                 | jmp                 0x11
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   034580               | add                 eax, dword ptr [ebp - 0x80]
            //   0f802f020000         | jo                  0x235

        $sequence_10 = { eb0f 8b4ddc 034d84 0f808b150000 }
            // n = 4, score = 100
            //   eb0f                 | jmp                 0x11
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   034d84               | add                 ecx, dword ptr [ebp - 0x7c]
            //   0f808b150000         | jo                  0x1591

        $sequence_11 = { eb0f 8b550c 8b0e 6a01 }
            // n = 4, score = 100
            //   eb0f                 | jmp                 0x11
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   6a01                 | push                1

        $sequence_12 = { eb0e ff15???????? 8bf8 8b8d00fdffff 85c9 }
            // n = 5, score = 100
            //   eb0e                 | jmp                 0x10
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   8b8d00fdffff         | mov                 ecx, dword ptr [ebp - 0x300]
            //   85c9                 | test                ecx, ecx

        $sequence_13 = { eb0f 83e802 f7d8 1bc0 }
            // n = 4, score = 100
            //   eb0f                 | jmp                 0x11
            //   83e802               | sub                 eax, 2
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax

        $sequence_14 = { eb0e ff7580 ffb57cffffff e8???????? }
            // n = 4, score = 100
            //   eb0e                 | jmp                 0x10
            //   ff7580               | push                dword ptr [ebp - 0x80]
            //   ffb57cffffff         | push                dword ptr [ebp - 0x84]
            //   e8????????           |                     

        $sequence_15 = { eb0f 8b0e 8d5594 52 }
            // n = 4, score = 100
            //   eb0f                 | jmp                 0x11
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   8d5594               | lea                 edx, [ebp - 0x6c]
            //   52                   | push                edx

    condition:
        7 of them and filesize < 8560640
}