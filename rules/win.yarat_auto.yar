rule win_yarat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.yarat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.yarat"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bdf 660fbaf947 b900000000 66f7dd 2bd9 0fbfc9 80f5f6 }
            // n = 7, score = 100
            //   8bdf                 | mov                 ebx, edi
            //   660fbaf947           | btc                 cx, 0x47
            //   b900000000           | mov                 ecx, 0
            //   66f7dd               | neg                 bp
            //   2bd9                 | sub                 ebx, ecx
            //   0fbfc9               | movsx               ecx, cx
            //   80f5f6               | xor                 ch, 0xf6

        $sequence_1 = { e8???????? 84c0 0f8569ffffff 388798000000 756b 837f3000 0f8457ffffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   0f8569ffffff         | jne                 0xffffff6f
            //   388798000000         | cmp                 byte ptr [edi + 0x98], al
            //   756b                 | jne                 0x6d
            //   837f3000             | cmp                 dword ptr [edi + 0x30], 0
            //   0f8457ffffff         | je                  0xffffff5d

        $sequence_2 = { e8???????? c745fc0a000000 8b8518ffffff 8b4004 c7840518ffffff4c080a10 8b8518ffffff 8b4804 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c745fc0a000000       | mov                 dword ptr [ebp - 4], 0xa
            //   8b8518ffffff         | mov                 eax, dword ptr [ebp - 0xe8]
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   c7840518ffffff4c080a10     | mov    dword ptr [ebp + eax - 0xe8], 0x100a084c
            //   8b8518ffffff         | mov                 eax, dword ptr [ebp - 0xe8]
            //   8b4804               | mov                 ecx, dword ptr [eax + 4]

        $sequence_3 = { 8d8947adcfad 33d9 03f1 56 c3 8b17 f6d9 }
            // n = 7, score = 100
            //   8d8947adcfad         | lea                 ecx, [ecx - 0x523052b9]
            //   33d9                 | xor                 ebx, ecx
            //   03f1                 | add                 esi, ecx
            //   56                   | push                esi
            //   c3                   | ret                 
            //   8b17                 | mov                 edx, dword ptr [edi]
            //   f6d9                 | neg                 cl

        $sequence_4 = { eb05 be04000000 a1???????? f6400810 751b 83fe02 7516 }
            // n = 7, score = 100
            //   eb05                 | jmp                 7
            //   be04000000           | mov                 esi, 4
            //   a1????????           |                     
            //   f6400810             | test                byte ptr [eax + 8], 0x10
            //   751b                 | jne                 0x1d
            //   83fe02               | cmp                 esi, 2
            //   7516                 | jne                 0x18

        $sequence_5 = { eb05 be02000000 33c0 0f57c0 83bff802000003 0f1145d0 0f95c0 }
            // n = 7, score = 100
            //   eb05                 | jmp                 7
            //   be02000000           | mov                 esi, 2
            //   33c0                 | xor                 eax, eax
            //   0f57c0               | xorps               xmm0, xmm0
            //   83bff802000003       | cmp                 dword ptr [edi + 0x2f8], 3
            //   0f1145d0             | movups              xmmword ptr [ebp - 0x30], xmm0
            //   0f95c0               | setne               al

        $sequence_6 = { f8 f9 66f7c64706 33cb c1c102 0fc9 f8 }
            // n = 7, score = 100
            //   f8                   | clc                 
            //   f9                   | stc                 
            //   66f7c64706           | test                si, 0x647
            //   33cb                 | xor                 ecx, ebx
            //   c1c102               | rol                 ecx, 2
            //   0fc9                 | bswap               ecx
            //   f8                   | clc                 

        $sequence_7 = { f5 81c504000000 81ff1671a85b f5 33c3 f5 c1c803 }
            // n = 7, score = 100
            //   f5                   | cmc                 
            //   81c504000000         | add                 ebp, 4
            //   81ff1671a85b         | cmp                 edi, 0x5ba87116
            //   f5                   | cmc                 
            //   33c3                 | xor                 eax, ebx
            //   f5                   | cmc                 
            //   c1c803               | ror                 eax, 3

        $sequence_8 = { b801000000 eb42 8b4dfc 8b45f8 83c102 894dfc 3bc8 }
            // n = 7, score = 100
            //   b801000000           | mov                 eax, 1
            //   eb42                 | jmp                 0x44
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   83c102               | add                 ecx, 2
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   3bc8                 | cmp                 ecx, eax

        $sequence_9 = { 8b16 0fbfc6 66d3d0 8b4604 d2f9 8a4e08 81c602000000 }
            // n = 7, score = 100
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   0fbfc6               | movsx               eax, si
            //   66d3d0               | rcl                 ax, cl
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   d2f9                 | sar                 cl, cl
            //   8a4e08               | mov                 cl, byte ptr [esi + 8]
            //   81c602000000         | add                 esi, 2

    condition:
        7 of them and filesize < 8692736
}