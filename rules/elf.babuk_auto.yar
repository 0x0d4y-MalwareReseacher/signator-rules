rule elf_babuk_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects elf.babuk."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/elf.babuk"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b2d???????? 8b74245c 89f7 29ee 8b0d???????? 898c24c4000000 01f1 }
            // n = 7, score = 200
            //   8b2d????????         |                     
            //   8b74245c             | mov                 esi, dword ptr [esp + 0x5c]
            //   89f7                 | mov                 edi, esi
            //   29ee                 | sub                 esi, ebp
            //   8b0d????????         |                     
            //   898c24c4000000       | mov                 dword ptr [esp + 0xc4], ecx
            //   01f1                 | add                 ecx, esi

        $sequence_1 = { eb0c 41 0fb77c242e 89f2 89d8 89fb 39d9 }
            // n = 7, score = 200
            //   eb0c                 | jmp                 0xe
            //   41                   | inc                 ecx
            //   0fb77c242e           | movzx               edi, word ptr [esp + 0x2e]
            //   89f2                 | mov                 edx, esi
            //   89d8                 | mov                 eax, ebx
            //   89fb                 | mov                 ebx, edi
            //   39d9                 | cmp                 ecx, ebx

        $sequence_2 = { e8???????? 8b442420 8b4c241c e9???????? e8???????? e8???????? 8b0424 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8b442420             | mov                 eax, dword ptr [esp + 0x20]
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   e9????????           |                     
            //   e8????????           |                     
            //   e8????????           |                     
            //   8b0424               | mov                 eax, dword ptr [esp]

        $sequence_3 = { c744241801000000 8d442434 8944241c c744242002000000 c744242402000000 e8???????? 8b442458 }
            // n = 7, score = 200
            //   c744241801000000     | mov                 dword ptr [esp + 0x18], 1
            //   8d442434             | lea                 eax, [esp + 0x34]
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   c744242002000000     | mov                 dword ptr [esp + 0x20], 2
            //   c744242402000000     | mov                 dword ptr [esp + 0x24], 2
            //   e8????????           |                     
            //   8b442458             | mov                 eax, dword ptr [esp + 0x58]

        $sequence_4 = { ebcf 891424 8b442424 89442404 894c2408 e8???????? 0fb644240c }
            // n = 7, score = 200
            //   ebcf                 | jmp                 0xffffffd1
            //   891424               | mov                 dword ptr [esp], edx
            //   8b442424             | mov                 eax, dword ptr [esp + 0x24]
            //   89442404             | mov                 dword ptr [esp + 4], eax
            //   894c2408             | mov                 dword ptr [esp + 8], ecx
            //   e8????????           |                     
            //   0fb644240c           | movzx               eax, byte ptr [esp + 0xc]

        $sequence_5 = { e8???????? c684248c00000001 83ec80 c3 88442422 8b842484000000 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   c684248c00000001     | mov                 byte ptr [esp + 0x8c], 1
            //   83ec80               | sub                 esp, -0x80
            //   c3                   | ret                 
            //   88442422             | mov                 byte ptr [esp + 0x22], al
            //   8b842484000000       | mov                 eax, dword ptr [esp + 0x84]

        $sequence_6 = { c70424b4000000 8b542434 89542404 894c2408 8944240c 8b442444 89442410 }
            // n = 7, score = 200
            //   c70424b4000000       | mov                 dword ptr [esp], 0xb4
            //   8b542434             | mov                 edx, dword ptr [esp + 0x34]
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   894c2408             | mov                 dword ptr [esp + 8], ecx
            //   8944240c             | mov                 dword ptr [esp + 0xc], eax
            //   8b442444             | mov                 eax, dword ptr [esp + 0x44]
            //   89442410             | mov                 dword ptr [esp + 0x10], eax

        $sequence_7 = { 8d540a01 8b0490 89442418 890424 e8???????? 8b442404 c744241c00000000 }
            // n = 7, score = 200
            //   8d540a01             | lea                 edx, [edx + ecx + 1]
            //   8b0490               | mov                 eax, dword ptr [eax + edx*4]
            //   89442418             | mov                 dword ptr [esp + 0x18], eax
            //   890424               | mov                 dword ptr [esp], eax
            //   e8????????           |                     
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   c744241c00000000     | mov                 dword ptr [esp + 0x1c], 0

        $sequence_8 = { 8b442404 85c0 0f8554010000 8b44243c 89442404 8b4c241c 890c24 }
            // n = 7, score = 200
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   85c0                 | test                eax, eax
            //   0f8554010000         | jne                 0x15a
            //   8b44243c             | mov                 eax, dword ptr [esp + 0x3c]
            //   89442404             | mov                 dword ptr [esp + 4], eax
            //   8b4c241c             | mov                 ecx, dword ptr [esp + 0x1c]
            //   890c24               | mov                 dword ptr [esp], ecx

        $sequence_9 = { 8bac24d8000000 8bbc242c030000 01fd 11cb 8b4c243c 8bac247c020000 0fafcd }
            // n = 7, score = 200
            //   8bac24d8000000       | mov                 ebp, dword ptr [esp + 0xd8]
            //   8bbc242c030000       | mov                 edi, dword ptr [esp + 0x32c]
            //   01fd                 | add                 ebp, edi
            //   11cb                 | adc                 ebx, ecx
            //   8b4c243c             | mov                 ecx, dword ptr [esp + 0x3c]
            //   8bac247c020000       | mov                 ebp, dword ptr [esp + 0x27c]
            //   0fafcd               | imul                ecx, ebp

    condition:
        7 of them and filesize < 4186112
}