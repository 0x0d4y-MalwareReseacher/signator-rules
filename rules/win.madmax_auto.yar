rule win_madmax_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.madmax."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.madmax"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { dbcd 33aff3f1e5b6 8c81939ba2c2 2a6712 7139 b568 6e }
            // n = 7, score = 100
            //   dbcd                 | fcmovne             st(0), st(5)
            //   33aff3f1e5b6         | xor                 ebp, dword ptr [edi - 0x491a0e0d]
            //   8c81939ba2c2         | mov                 word ptr [ecx - 0x3d5d646d], es
            //   2a6712               | sub                 ah, byte ptr [edi + 0x12]
            //   7139                 | jno                 0x3b
            //   b568                 | mov                 ch, 0x68
            //   6e                   | outsb               dx, byte ptr [esi]

        $sequence_1 = { f605????????6e 0f8513010000 12baa4460178 f7d9 bfd9278202 7162 4a }
            // n = 7, score = 100
            //   f605????????6e       |                     
            //   0f8513010000         | jne                 0x119
            //   12baa4460178         | adc                 bh, byte ptr [edx + 0x780146a4]
            //   f7d9                 | neg                 ecx
            //   bfd9278202           | mov                 edi, 0x28227d9
            //   7162                 | jno                 0x64
            //   4a                   | dec                 edx

        $sequence_2 = { f605????????68 0f8514010000 dc6bc4 c55a65 dcd1 50 57 }
            // n = 7, score = 100
            //   f605????????68       |                     
            //   0f8514010000         | jne                 0x11a
            //   dc6bc4               | fsubr               qword ptr [ebx - 0x3c]
            //   c55a65               | lds                 ebx, ptr [edx + 0x65]
            //   dcd1                 | fcom                st(0), st(1)
            //   50                   | push                eax
            //   57                   | push                edi

        $sequence_3 = { eb12 8b45e0 8a807c141710 08443b1d 0fb64601 47 3bf8 }
            // n = 7, score = 100
            //   eb12                 | jmp                 0x14
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   8a807c141710         | mov                 al, byte ptr [eax + 0x1017147c]
            //   08443b1d             | or                  byte ptr [ebx + edi + 0x1d], al
            //   0fb64601             | movzx               eax, byte ptr [esi + 1]
            //   47                   | inc                 edi
            //   3bf8                 | cmp                 edi, eax

        $sequence_4 = { fb 40 f3693903a176b8 d046f7 314abb 0b93f53202f3 c443af }
            // n = 7, score = 100
            //   fb                   | sti                 
            //   40                   | inc                 eax
            //   f3693903a176b8       | imul                edi, dword ptr [ecx], 0xb876a103
            //   d046f7               | rol                 byte ptr [esi - 9], 1
            //   314abb               | xor                 dword ptr [edx - 0x45], ecx
            //   0b93f53202f3         | or                  edx, dword ptr [ebx - 0xcfdcd0b]
            //   c443af               | les                 eax, ptr [ebx - 0x51]

        $sequence_5 = { 7394 aa 7474 3c1f f7655c 96 4e }
            // n = 7, score = 100
            //   7394                 | jae                 0xffffff96
            //   aa                   | stosb               byte ptr es:[edi], al
            //   7474                 | je                  0x76
            //   3c1f                 | cmp                 al, 0x1f
            //   f7655c               | mul                 dword ptr [ebp + 0x5c]
            //   96                   | xchg                eax, esi
            //   4e                   | dec                 esi

        $sequence_6 = { 42 1d66c6f80d 10b2a3665c47 96 1e 5f 09f0 }
            // n = 7, score = 100
            //   42                   | inc                 edx
            //   1d66c6f80d           | sbb                 eax, 0xdf8c666
            //   10b2a3665c47         | adc                 byte ptr [edx + 0x475c66a3], dh
            //   96                   | xchg                eax, esi
            //   1e                   | push                ds
            //   5f                   | pop                 edi
            //   09f0                 | or                  eax, esi

        $sequence_7 = { fff4 64d7 80456d92 b241 87c2 2a9a8d7deeb7 68d2cd1153 }
            // n = 7, score = 100
            //   fff4                 | push                esp
            //   64d7                 | xlatb               
            //   80456d92             | add                 byte ptr [ebp + 0x6d], 0x92
            //   b241                 | mov                 dl, 0x41
            //   87c2                 | xchg                edx, eax
            //   2a9a8d7deeb7         | sub                 bl, byte ptr [edx - 0x48118273]
            //   68d2cd1153           | push                0x5311cdd2

        $sequence_8 = { fd 92 5a 95 1a514b 4d 840a }
            // n = 7, score = 100
            //   fd                   | std                 
            //   92                   | xchg                eax, edx
            //   5a                   | pop                 edx
            //   95                   | xchg                eax, ebp
            //   1a514b               | sbb                 dl, byte ptr [ecx + 0x4b]
            //   4d                   | dec                 ebp
            //   840a                 | test                byte ptr [edx], cl

        $sequence_9 = { 9d 8b55e4 59 8bc3 59 b322 9c }
            // n = 7, score = 100
            //   9d                   | popfd               
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   59                   | pop                 ecx
            //   8bc3                 | mov                 eax, ebx
            //   59                   | pop                 ecx
            //   b322                 | mov                 bl, 0x22
            //   9c                   | pushfd              

    condition:
        7 of them and filesize < 3227648
}