rule win_pickpocket_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.pickpocket."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pickpocket"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 750f b962890100 e8???????? }
            // n = 4, score = 400
            //   85c0                 | movzx               ecx, byte ptr [edi + 1]
            //   750f                 | push                3
            //   b962890100           | push                dword ptr [ebp + 0xc]
            //   e8????????           |                     

        $sequence_1 = { 750f b962890100 e8???????? e9???????? }
            // n = 4, score = 400
            //   750f                 | dec                 esp
            //   b962890100           | mov                 dword ptr [edi + 0x20], edi
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_2 = { 7e16 b91bcc0000 eb05 b916cc0000 e8???????? e9???????? }
            // n = 6, score = 400
            //   7e16                 | dec                 eax
            //   b91bcc0000           | arpl                ax, dx
            //   eb05                 | dec                 eax
            //   b916cc0000           | lea                 ecx, [ebx + 8]
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_3 = { 7407 b935d70000 eb09 8bc7 eb0a }
            // n = 5, score = 400
            //   7407                 | dec                 eax
            //   b935d70000           | lea                 eax, [0x1e47f]
            //   eb09                 | dec                 eax
            //   8bc7                 | mov                 dword ptr [ecx + 8], eax
            //   eb0a                 | dec                 eax

        $sequence_4 = { e8???????? 85c0 740f b990cc0000 }
            // n = 4, score = 400
            //   e8????????           |                     
            //   85c0                 | mov                 dword ptr [ebp - 0xac], eax
            //   740f                 | mov                 edi, dword ptr [ebp - 0x108]
            //   b990cc0000           | mov                 eax, dword ptr [ebp - 0x11c]

        $sequence_5 = { eb0c b96ccb0000 eb05 b960cb0000 }
            // n = 4, score = 400
            //   eb0c                 | mov                 ecx, dword ptr [ebp - 0x30]
            //   b96ccb0000           | mov                 dword ptr [ebp - 8], eax
            //   eb05                 | lea                 edx, [eax*4 + 4]
            //   b960cb0000           | mov                 ecx, dword ptr [ebp - 0x30]

        $sequence_6 = { 740f b931d20000 e8???????? e9???????? }
            // n = 4, score = 400
            //   740f                 | dec                 eax
            //   b931d20000           | arpl                si, ax
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_7 = { e8???????? 85c0 750e b958de0100 e8???????? }
            // n = 5, score = 400
            //   e8????????           |                     
            //   85c0                 | xor                 ecx, ecx
            //   750e                 | and                 dword ptr [esp + 0x20], 0
            //   b958de0100           | inc                 ebp
            //   e8????????           |                     

        $sequence_8 = { b935d70000 eb09 8bc7 eb0a }
            // n = 4, score = 400
            //   b935d70000           | mov                 dword ptr [ebp - 0x70], edi
            //   eb09                 | mov                 dword ptr [ebp - 0x80], edx
            //   8bc7                 | mov                 al, byte ptr [ebx + 3]
            //   eb0a                 | test                al, 0xc0

        $sequence_9 = { 7404 8b01 eb03 83c8ff }
            // n = 4, score = 400
            //   7404                 | mov                 eax, dword ptr [esp + 0x3c]
            //   8b01                 | dec                 eax
            //   eb03                 | cwde                
            //   83c8ff               | dec                 eax

    condition:
        7 of them and filesize < 1458176
}