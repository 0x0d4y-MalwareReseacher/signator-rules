rule win_pickpocket_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.pickpocket."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pickpocket"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7e16 b91bcc0000 eb05 b916cc0000 e8???????? e9???????? }
            // n = 6, score = 400
            //   7e16                 | inc                 ebp
            //   b91bcc0000           | mov                 esp, eax
            //   eb05                 | dec                 eax
            //   b916cc0000           | mov                 dword ptr [esp + 0x30], edi
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_1 = { 85c0 740f b989000100 e8???????? }
            // n = 4, score = 400
            //   85c0                 | test                eax, eax
            //   740f                 | jne                 0x420
            //   b989000100           | mov                 edi, dword ptr [ebp - 4]
            //   e8????????           |                     

        $sequence_2 = { e8???????? 85c0 750f b9af770100 }
            // n = 4, score = 400
            //   e8????????           |                     
            //   85c0                 | mov                 ecx, esp
            //   750f                 | dec                 eax
            //   b9af770100           | mov                 ecx, edi

        $sequence_3 = { 85c0 740f b989000100 e8???????? e9???????? }
            // n = 5, score = 400
            //   85c0                 | mov                 cl, 0x62
            //   740f                 | dec                 eax
            //   b989000100           | mov                 dword ptr [esp + 0x20], eax
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_4 = { 7404 8b01 eb03 83c8ff }
            // n = 4, score = 400
            //   7404                 | dec                 eax
            //   8b01                 | mov                 ecx, dword ptr [esp + 0x50]
            //   eb03                 | dec                 eax
            //   83c8ff               | mov                 dword ptr [esi], eax

        $sequence_5 = { d3e0 a846 750f b99be00100 e8???????? e9???????? }
            // n = 6, score = 400
            //   d3e0                 | jne                 0x503
            //   a846                 | jne                 0x506
            //   750f                 | mov                 eax, dword ptr [ebx + 8]
            //   b99be00100           | cmp                 byte ptr [eax + 0x1e], 5
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_6 = { eb09 8bc7 eb0a b9a9d60000 e8???????? }
            // n = 5, score = 400
            //   eb09                 | mov                 ebx, ebp
            //   8bc7                 | mov                 byte ptr [edi + esi*8 + 1], bl
            //   eb0a                 | jmp                 0x933
            //   b9a9d60000           | cmp                 ebx, -0xa
            //   e8????????           |                     

        $sequence_7 = { 790e b91dca0000 e8???????? 8907 }
            // n = 4, score = 400
            //   790e                 | cmp                 ebx, dword ptr [ebp + 0x3c]
            //   b91dca0000           | dec                 esp
            //   e8????????           |                     
            //   8907                 | mov                 dword ptr [esp + 0x80], esi

        $sequence_8 = { 33c0 85c0 750e 85c9 }
            // n = 4, score = 400
            //   33c0                 | cmp                 eax, dword ptr [ebp - 0x2c]
            //   85c0                 | jl                  4
            //   750e                 | jg                  0xb2
            //   85c9                 | adc                 eax, dword ptr [ebp - 8]

        $sequence_9 = { 33c0 85c0 750e 85c9 7408 }
            // n = 5, score = 400
            //   33c0                 | mov                 edx, 1
            //   85c0                 | mov                 dword ptr [ebp - 0x19], eax
            //   750e                 | mov                 word ptr [ebp - 0x15], 1
            //   85c9                 | mov                 edx, 1
            //   7408                 | mov                 dword ptr [ebp - 0x80], ebx

    condition:
        7 of them and filesize < 1458176
}