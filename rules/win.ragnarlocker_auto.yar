rule win_ragnarlocker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.ragnarlocker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ragnarlocker"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fa4ca1e c1ef02 8975c0 33f6 0bf2 c1e11e }
            // n = 6, score = 300
            //   0fa4ca1e             | shld                edx, ecx, 0x1e
            //   c1ef02               | shr                 edi, 2
            //   8975c0               | mov                 dword ptr [ebp - 0x40], esi
            //   33f6                 | xor                 esi, esi
            //   0bf2                 | or                  esi, edx
            //   c1e11e               | shl                 ecx, 0x1e

        $sequence_1 = { 0bd8 0fb64102 0fa4de08 99 c1e308 0bf2 0bd8 }
            // n = 7, score = 300
            //   0bd8                 | or                  ebx, eax
            //   0fb64102             | movzx               eax, byte ptr [ecx + 2]
            //   0fa4de08             | shld                esi, ebx, 8
            //   99                   | cdq                 
            //   c1e308               | shl                 ebx, 8
            //   0bf2                 | or                  esi, edx
            //   0bd8                 | or                  ebx, eax

        $sequence_2 = { 8b5644 e8???????? 88437a 0fb64646 884379 0fb64647 884378 }
            // n = 7, score = 300
            //   8b5644               | mov                 edx, dword ptr [esi + 0x44]
            //   e8????????           |                     
            //   88437a               | mov                 byte ptr [ebx + 0x7a], al
            //   0fb64646             | movzx               eax, byte ptr [esi + 0x46]
            //   884379               | mov                 byte ptr [ebx + 0x79], al
            //   0fb64647             | movzx               eax, byte ptr [esi + 0x47]
            //   884378               | mov                 byte ptr [ebx + 0x78], al

        $sequence_3 = { 99 c1e308 0bf2 0bd8 0fb6410d 0fa4de08 }
            // n = 6, score = 300
            //   99                   | cdq                 
            //   c1e308               | shl                 ebx, 8
            //   0bf2                 | or                  esi, edx
            //   0bd8                 | or                  ebx, eax
            //   0fb6410d             | movzx               eax, byte ptr [ecx + 0xd]
            //   0fa4de08             | shld                esi, ebx, 8

        $sequence_4 = { c1e108 0bc8 0fb64704 c1e108 0bc8 894b08 }
            // n = 6, score = 300
            //   c1e108               | shl                 ecx, 8
            //   0bc8                 | or                  ecx, eax
            //   0fb64704             | movzx               eax, byte ptr [edi + 4]
            //   c1e108               | shl                 ecx, 8
            //   0bc8                 | or                  ecx, eax
            //   894b08               | mov                 dword ptr [ebx + 8], ecx

        $sequence_5 = { 83e0fe 50 53 ff15???????? 6a00 6880000010 6a03 }
            // n = 7, score = 300
            //   83e0fe               | and                 eax, 0xfffffffe
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   6880000010           | push                0x10000080
            //   6a03                 | push                3

        $sequence_6 = { 0bf2 0bd8 0fa4de08 0fb64154 33ff c1e308 }
            // n = 6, score = 300
            //   0bf2                 | or                  esi, edx
            //   0bd8                 | or                  ebx, eax
            //   0fa4de08             | shld                esi, ebx, 8
            //   0fb64154             | movzx               eax, byte ptr [ecx + 0x54]
            //   33ff                 | xor                 edi, edi
            //   c1e308               | shl                 ebx, 8

        $sequence_7 = { 0fb6416c 0fa4de08 99 c1e308 0bf2 0bd8 0fb6416d }
            // n = 7, score = 300
            //   0fb6416c             | movzx               eax, byte ptr [ecx + 0x6c]
            //   0fa4de08             | shld                esi, ebx, 8
            //   99                   | cdq                 
            //   c1e308               | shl                 ebx, 8
            //   0bf2                 | or                  esi, edx
            //   0bd8                 | or                  ebx, eax
            //   0fb6416d             | movzx               eax, byte ptr [ecx + 0x6d]

        $sequence_8 = { 8b4df0 03de 13fa 035d88 }
            // n = 4, score = 300
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   03de                 | add                 ebx, esi
            //   13fa                 | adc                 edi, edx
            //   035d88               | add                 ebx, dword ptr [ebp - 0x78]

        $sequence_9 = { 33c0 5b 5d c3 8b4d0c 8bf3 8a21 }
            // n = 7, score = 300
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8bf3                 | mov                 esi, ebx
            //   8a21                 | mov                 ah, byte ptr [ecx]

    condition:
        7 of them and filesize < 147456
}