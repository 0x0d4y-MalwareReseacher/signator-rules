rule win_typehash_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.typehash."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.typehash"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 89442438 88542428 e8???????? bf???????? 83c9ff 33c0 }
            // n = 6, score = 100
            //   89442438             | mov                 dword ptr [esp + 0x38], eax
            //   88542428             | mov                 byte ptr [esp + 0x28], dl
            //   e8????????           |                     
            //   bf????????           |                     
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 03c8 837d1805 7538 837d1000 7508 8bb6b42b4100 eb06 }
            // n = 7, score = 100
            //   03c8                 | add                 ecx, eax
            //   837d1805             | cmp                 dword ptr [ebp + 0x18], 5
            //   7538                 | jne                 0x3a
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0
            //   7508                 | jne                 0xa
            //   8bb6b42b4100         | mov                 esi, dword ptr [esi + 0x412bb4]
            //   eb06                 | jmp                 8

        $sequence_2 = { e9???????? 8d8d50edffff e9???????? 8d8d38edffff e9???????? }
            // n = 5, score = 100
            //   e9????????           |                     
            //   8d8d50edffff         | lea                 ecx, [ebp - 0x12b0]
            //   e9????????           |                     
            //   8d8d38edffff         | lea                 ecx, [ebp - 0x12c8]
            //   e9????????           |                     

        $sequence_3 = { 7402 8901 c9 c3 ff35???????? ff742408 e8???????? }
            // n = 7, score = 100
            //   7402                 | je                  4
            //   8901                 | mov                 dword ptr [ecx], eax
            //   c9                   | leave               
            //   c3                   | ret                 
            //   ff35????????         |                     
            //   ff742408             | push                dword ptr [esp + 8]
            //   e8????????           |                     

        $sequence_4 = { 83f908 7229 f3a5 ff2495f8334000 8bc7 }
            // n = 5, score = 100
            //   83f908               | cmp                 ecx, 8
            //   7229                 | jb                  0x2b
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   ff2495f8334000       | jmp                 dword ptr [edx*4 + 0x4033f8]
            //   8bc7                 | mov                 eax, edi

        $sequence_5 = { 8bca 83e103 f3aa 8d4c2414 e8???????? b93f000000 33c0 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   8d4c2414             | lea                 ecx, [esp + 0x14]
            //   e8????????           |                     
            //   b93f000000           | mov                 ecx, 0x3f
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { 8a442403 53 55 56 33ed }
            // n = 5, score = 100
            //   8a442403             | mov                 al, byte ptr [esp + 3]
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi
            //   33ed                 | xor                 ebp, ebp

        $sequence_7 = { 0fb6da f683c13c410004 7406 8816 46 40 }
            // n = 6, score = 100
            //   0fb6da               | movzx               ebx, dl
            //   f683c13c410004       | test                byte ptr [ebx + 0x413cc1], 4
            //   7406                 | je                  8
            //   8816                 | mov                 byte ptr [esi], dl
            //   46                   | inc                 esi
            //   40                   | inc                 eax

        $sequence_8 = { 6a01 8d4c2450 c68424cc00000001 e8???????? bf???????? }
            // n = 5, score = 100
            //   6a01                 | push                1
            //   8d4c2450             | lea                 ecx, [esp + 0x50]
            //   c68424cc00000001     | mov                 byte ptr [esp + 0xcc], 1
            //   e8????????           |                     
            //   bf????????           |                     

        $sequence_9 = { 3bf3 763a 8d2c30 53 55 8d4c2418 e8???????? }
            // n = 7, score = 100
            //   3bf3                 | cmp                 esi, ebx
            //   763a                 | jbe                 0x3c
            //   8d2c30               | lea                 ebp, [eax + esi]
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   e8????????           |                     

    condition:
        7 of them and filesize < 180224
}