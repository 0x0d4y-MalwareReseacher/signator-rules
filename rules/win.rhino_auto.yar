rule win_rhino_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rhino."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rhino"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bce ff7560 ff755c ff7558 ff7554 e8???????? 8b4554 }
            // n = 7, score = 400
            //   8bce                 | mov                 ecx, esi
            //   ff7560               | push                dword ptr [ebp + 0x60]
            //   ff755c               | push                dword ptr [ebp + 0x5c]
            //   ff7558               | push                dword ptr [ebp + 0x58]
            //   ff7554               | push                dword ptr [ebp + 0x54]
            //   e8????????           |                     
            //   8b4554               | mov                 eax, dword ptr [ebp + 0x54]

        $sequence_1 = { 8bec 56 8bf1 57 807e1900 741c 8d4510 }
            // n = 7, score = 400
            //   8bec                 | mov                 ebp, esp
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   57                   | push                edi
            //   807e1900             | cmp                 byte ptr [esi + 0x19], 0
            //   741c                 | je                  0x1e
            //   8d4510               | lea                 eax, [ebp + 0x10]

        $sequence_2 = { 5e c3 bf???????? 57 e8???????? 59 833d????????ff }
            // n = 7, score = 400
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   bf????????           |                     
            //   57                   | push                edi
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   833d????????ff       |                     

        $sequence_3 = { 6a00 83d200 8b4010 03da 83d500 f76704 8bf0 }
            // n = 7, score = 400
            //   6a00                 | push                0
            //   83d200               | adc                 edx, 0
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]
            //   03da                 | add                 ebx, edx
            //   83d500               | adc                 ebp, 0
            //   f76704               | mul                 dword ptr [edi + 4]
            //   8bf0                 | mov                 esi, eax

        $sequence_4 = { 894c242c 8b4caffc 50 8d442434 894c2438 50 8d442448 }
            // n = 7, score = 400
            //   894c242c             | mov                 dword ptr [esp + 0x2c], ecx
            //   8b4caffc             | mov                 ecx, dword ptr [edi + ebp*4 - 4]
            //   50                   | push                eax
            //   8d442434             | lea                 eax, [esp + 0x34]
            //   894c2438             | mov                 dword ptr [esp + 0x38], ecx
            //   50                   | push                eax
            //   8d442448             | lea                 eax, [esp + 0x48]

        $sequence_5 = { 03fe 6a02 13d1 8bc2 59 f7e1 8bcf }
            // n = 7, score = 400
            //   03fe                 | add                 edi, esi
            //   6a02                 | push                2
            //   13d1                 | adc                 edx, ecx
            //   8bc2                 | mov                 eax, edx
            //   59                   | pop                 ecx
            //   f7e1                 | mul                 ecx
            //   8bcf                 | mov                 ecx, edi

        $sequence_6 = { ff15???????? 6a2a 59 6a02 66890c46 33c9 894508 }
            // n = 7, score = 400
            //   ff15????????         |                     
            //   6a2a                 | push                0x2a
            //   59                   | pop                 ecx
            //   6a02                 | push                2
            //   66890c46             | mov                 word ptr [esi + eax*2], cx
            //   33c9                 | xor                 ecx, ecx
            //   894508               | mov                 dword ptr [ebp + 8], eax

        $sequence_7 = { 6bdb18 8bf8 33c9 897de0 894dfc 03df 8d4318 }
            // n = 7, score = 400
            //   6bdb18               | imul                ebx, ebx, 0x18
            //   8bf8                 | mov                 edi, eax
            //   33c9                 | xor                 ecx, ecx
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   03df                 | add                 ebx, edi
            //   8d4318               | lea                 eax, [ebx + 0x18]

        $sequence_8 = { eb05 1bc0 83c801 85c0 751c ff7308 68???????? }
            // n = 7, score = 400
            //   eb05                 | jmp                 7
            //   1bc0                 | sbb                 eax, eax
            //   83c801               | or                  eax, 1
            //   85c0                 | test                eax, eax
            //   751c                 | jne                 0x1e
            //   ff7308               | push                dword ptr [ebx + 8]
            //   68????????           |                     

        $sequence_9 = { 03d5 8b6c2428 03c6 8954241c 8d0483 8b5c2430 89442438 }
            // n = 7, score = 400
            //   03d5                 | add                 edx, ebp
            //   8b6c2428             | mov                 ebp, dword ptr [esp + 0x28]
            //   03c6                 | add                 eax, esi
            //   8954241c             | mov                 dword ptr [esp + 0x1c], edx
            //   8d0483               | lea                 eax, [ebx + eax*4]
            //   8b5c2430             | mov                 ebx, dword ptr [esp + 0x30]
            //   89442438             | mov                 dword ptr [esp + 0x38], eax

    condition:
        7 of them and filesize < 1288192
}