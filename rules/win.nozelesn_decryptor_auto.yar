rule win_nozelesn_decryptor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.nozelesn_decryptor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nozelesn_decryptor"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c1e007 33d0 d1c9 33d6 8bc3 c1ce07 33ca }
            // n = 7, score = 100
            //   c1e007               | shl                 eax, 7
            //   33d0                 | xor                 edx, eax
            //   d1c9                 | ror                 ecx, 1
            //   33d6                 | xor                 edx, esi
            //   8bc3                 | mov                 eax, ebx
            //   c1ce07               | ror                 esi, 7
            //   33ca                 | xor                 ecx, edx

        $sequence_1 = { 8945f4 33da 8bc2 894de8 }
            // n = 4, score = 100
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   33da                 | xor                 ebx, edx
            //   8bc2                 | mov                 eax, edx
            //   894de8               | mov                 dword ptr [ebp - 0x18], ecx

        $sequence_2 = { 8b8560fdffff 898518fdffff 8b8564fdffff 89851cfdffff 6a48 8d8590fcffff 6a00 }
            // n = 7, score = 100
            //   8b8560fdffff         | mov                 eax, dword ptr [ebp - 0x2a0]
            //   898518fdffff         | mov                 dword ptr [ebp - 0x2e8], eax
            //   8b8564fdffff         | mov                 eax, dword ptr [ebp - 0x29c]
            //   89851cfdffff         | mov                 dword ptr [ebp - 0x2e4], eax
            //   6a48                 | push                0x48
            //   8d8590fcffff         | lea                 eax, [ebp - 0x370]
            //   6a00                 | push                0

        $sequence_3 = { 668945bc 83fa08 c645fc02 51 8d45d4 0f4345d4 8d4dbc }
            // n = 7, score = 100
            //   668945bc             | mov                 word ptr [ebp - 0x44], ax
            //   83fa08               | cmp                 edx, 8
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   51                   | push                ecx
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   0f4345d4             | cmovae              eax, dword ptr [ebp - 0x2c]
            //   8d4dbc               | lea                 ecx, [ebp - 0x44]

        $sequence_4 = { 807d1c00 8d4dc0 8b06 c745fc01000000 8945bc 51 7412 }
            // n = 7, score = 100
            //   807d1c00             | cmp                 byte ptr [ebp + 0x1c], 0
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   51                   | push                ecx
            //   7412                 | je                  0x14

        $sequence_5 = { 33c3 894df4 8bc8 0bcf 8b7dec }
            // n = 5, score = 100
            //   33c3                 | xor                 eax, ebx
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8bc8                 | mov                 ecx, eax
            //   0bcf                 | or                  ecx, edi
            //   8b7dec               | mov                 edi, dword ptr [ebp - 0x14]

        $sequence_6 = { c1ca0d 8bf7 8bca 33f3 0b4dec }
            // n = 5, score = 100
            //   c1ca0d               | ror                 edx, 0xd
            //   8bf7                 | mov                 esi, edi
            //   8bca                 | mov                 ecx, edx
            //   33f3                 | xor                 esi, ebx
            //   0b4dec               | or                  ecx, dword ptr [ebp - 0x14]

        $sequence_7 = { c1e606 8d8f08010000 8bc6 03ca 2bc2 50 e8???????? }
            // n = 7, score = 100
            //   c1e606               | shl                 esi, 6
            //   8d8f08010000         | lea                 ecx, [edi + 0x108]
            //   8bc6                 | mov                 eax, esi
            //   03ca                 | add                 ecx, edx
            //   2bc2                 | sub                 eax, edx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_8 = { 6a20 ab ab ab a1???????? 894304 5f }
            // n = 7, score = 100
            //   6a20                 | push                0x20
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   a1????????           |                     
            //   894304               | mov                 dword ptr [ebx + 4], eax
            //   5f                   | pop                 edi

        $sequence_9 = { 894714 6bc30c 57 8bb0706e4600 8bce ff15???????? ffd6 }
            // n = 7, score = 100
            //   894714               | mov                 dword ptr [edi + 0x14], eax
            //   6bc30c               | imul                eax, ebx, 0xc
            //   57                   | push                edi
            //   8bb0706e4600         | mov                 esi, dword ptr [eax + 0x466e70]
            //   8bce                 | mov                 ecx, esi
            //   ff15????????         |                     
            //   ffd6                 | call                esi

    condition:
        7 of them and filesize < 1122304
}