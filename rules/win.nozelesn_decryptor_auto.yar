rule win_nozelesn_decryptor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.nozelesn_decryptor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nozelesn_decryptor"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb08 8bd8 8985d4f6ffff 0fb60c9d0e624600 0fb6349d0f624600 8bf9 }
            // n = 6, score = 100
            //   eb08                 | jmp                 0xa
            //   8bd8                 | mov                 ebx, eax
            //   8985d4f6ffff         | mov                 dword ptr [ebp - 0x92c], eax
            //   0fb60c9d0e624600     | movzx               ecx, byte ptr [ebx*4 + 0x46620e]
            //   0fb6349d0f624600     | movzx               esi, byte ptr [ebx*4 + 0x46620f]
            //   8bf9                 | mov                 edi, ecx

        $sequence_1 = { 83f81f 0f879a010000 52 51 e8???????? 83c408 33c0 }
            // n = 7, score = 100
            //   83f81f               | cmp                 eax, 0x1f
            //   0f879a010000         | ja                  0x1a0
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 56 e8???????? 8bf8 59 83ffff 7407 8b34bd504a4600 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   59                   | pop                 ecx
            //   83ffff               | cmp                 edi, -1
            //   7407                 | je                  9
            //   8b34bd504a4600       | mov                 esi, dword ptr [edi*4 + 0x464a50]

        $sequence_3 = { 6a20 5a e8???????? 8b7df0 8b55fc 8b5dfc 0bd7 }
            // n = 7, score = 100
            //   6a20                 | push                0x20
            //   5a                   | pop                 edx
            //   e8????????           |                     
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b5dfc               | mov                 ebx, dword ptr [ebp - 4]
            //   0bd7                 | or                  edx, edi

        $sequence_4 = { e8???????? 8b4c2434 83c40c 8b442444 894110 8d44242c 895914 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4c2434             | mov                 ecx, dword ptr [esp + 0x34]
            //   83c40c               | add                 esp, 0xc
            //   8b442444             | mov                 eax, dword ptr [esp + 0x44]
            //   894110               | mov                 dword ptr [ecx + 0x10], eax
            //   8d44242c             | lea                 eax, dword ptr [esp + 0x2c]
            //   895914               | mov                 dword ptr [ecx + 0x14], ebx

        $sequence_5 = { 51 8d4dfc 51 8d4df0 51 6a1a }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8d4dfc               | lea                 ecx, dword ptr [ebp - 4]
            //   51                   | push                ecx
            //   8d4df0               | lea                 ecx, dword ptr [ebp - 0x10]
            //   51                   | push                ecx
            //   6a1a                 | push                0x1a

        $sequence_6 = { c1e003 33cf c1cb07 33d8 894dec 33de c1cf0d }
            // n = 7, score = 100
            //   c1e003               | shl                 eax, 3
            //   33cf                 | xor                 ecx, edi
            //   c1cb07               | ror                 ebx, 7
            //   33d8                 | xor                 ebx, eax
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   33de                 | xor                 ebx, esi
            //   c1cf0d               | ror                 edi, 0xd

        $sequence_7 = { 33c2 8945f0 8b4de8 8d45ec 50 8d45f0 23df }
            // n = 7, score = 100
            //   33c2                 | xor                 eax, edx
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   8b4de8               | mov                 ecx, dword ptr [ebp - 0x18]
            //   8d45ec               | lea                 eax, dword ptr [ebp - 0x14]
            //   50                   | push                eax
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   23df                 | and                 ebx, edi

        $sequence_8 = { ff75e8 56 ff15???????? 85c0 0f84c6fdffff 33c0 50 }
            // n = 7, score = 100
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   56                   | push                esi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f84c6fdffff         | je                  0xfffffdcc
            //   33c0                 | xor                 eax, eax
            //   50                   | push                eax

        $sequence_9 = { e8???????? 83c40c 85c0 746e 837e2008 8d7e20 8b4704 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   746e                 | je                  0x70
            //   837e2008             | cmp                 dword ptr [esi + 0x20], 8
            //   8d7e20               | lea                 edi, dword ptr [esi + 0x20]
            //   8b4704               | mov                 eax, dword ptr [edi + 4]

    condition:
        7 of them and filesize < 1122304
}