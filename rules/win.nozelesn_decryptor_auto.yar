rule win_nozelesn_decryptor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.nozelesn_decryptor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nozelesn_decryptor"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 837e1408 8b5e10 7202 8b36 83fb08 7319 }
            // n = 6, score = 100
            //   837e1408             | cmp                 dword ptr [esi + 0x14], 8
            //   8b5e10               | mov                 ebx, dword ptr [esi + 0x10]
            //   7202                 | jb                  4
            //   8b36                 | mov                 esi, dword ptr [esi]
            //   83fb08               | cmp                 ebx, 8
            //   7319                 | jae                 0x1b

        $sequence_1 = { 7210 8b40fc 83c623 2bc8 83c1fc 83f91f 772a }
            // n = 7, score = 100
            //   7210                 | jb                  0x12
            //   8b40fc               | mov                 eax, dword ptr [eax - 4]
            //   83c623               | add                 esi, 0x23
            //   2bc8                 | sub                 ecx, eax
            //   83c1fc               | add                 ecx, -4
            //   83f91f               | cmp                 ecx, 0x1f
            //   772a                 | ja                  0x2c

        $sequence_2 = { 8bec a1???????? 85c0 0f84b7310200 ff7508 48 a3???????? }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   0f84b7310200         | je                  0x231bd
            //   ff7508               | push                dword ptr [ebp + 8]
            //   48                   | dec                 eax
            //   a3????????           |                     

        $sequence_3 = { 8b8d78ffffff 33c0 33d2 c60730 89bd7cffffff 47 897da0 }
            // n = 7, score = 100
            //   8b8d78ffffff         | mov                 ecx, dword ptr [ebp - 0x88]
            //   33c0                 | xor                 eax, eax
            //   33d2                 | xor                 edx, edx
            //   c60730               | mov                 byte ptr [edi], 0x30
            //   89bd7cffffff         | mov                 dword ptr [ebp - 0x84], edi
            //   47                   | inc                 edi
            //   897da0               | mov                 dword ptr [ebp - 0x60], edi

        $sequence_4 = { c1ce03 8bd3 33d7 8975f4 8bc6 894df0 33c1 }
            // n = 7, score = 100
            //   c1ce03               | ror                 esi, 3
            //   8bd3                 | mov                 edx, ebx
            //   33d7                 | xor                 edx, edi
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi
            //   8bc6                 | mov                 eax, esi
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   33c1                 | xor                 eax, ecx

        $sequence_5 = { 894740 c74744ffff0000 c645fc02 837b1408 8985dcfdffff 7202 8b1b }
            // n = 7, score = 100
            //   894740               | mov                 dword ptr [edi + 0x40], eax
            //   c74744ffff0000       | mov                 dword ptr [edi + 0x44], 0xffff
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   837b1408             | cmp                 dword ptr [ebx + 0x14], 8
            //   8985dcfdffff         | mov                 dword ptr [ebp - 0x224], eax
            //   7202                 | jb                  4
            //   8b1b                 | mov                 ebx, dword ptr [ebx]

        $sequence_6 = { 33f2 33cb c1c107 d1c6 }
            // n = 4, score = 100
            //   33f2                 | xor                 esi, edx
            //   33cb                 | xor                 ecx, ebx
            //   c1c107               | rol                 ecx, 7
            //   d1c6                 | rol                 esi, 1

        $sequence_7 = { 8bfa 8955f8 f7d7 c1cb0d 8bd7 }
            // n = 5, score = 100
            //   8bfa                 | mov                 edi, edx
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   f7d7                 | not                 edi
            //   c1cb0d               | ror                 ebx, 0xd
            //   8bd7                 | mov                 edx, edi

        $sequence_8 = { 894804 e8???????? c22000 6a1c b8???????? e8???????? 8bf9 }
            // n = 7, score = 100
            //   894804               | mov                 dword ptr [eax + 4], ecx
            //   e8????????           |                     
            //   c22000               | ret                 0x20
            //   6a1c                 | push                0x1c
            //   b8????????           |                     
            //   e8????????           |                     
            //   8bf9                 | mov                 edi, ecx

        $sequence_9 = { 8b33 8d0412 50 56 57 e8???????? ff75f0 }
            // n = 7, score = 100
            //   8b33                 | mov                 esi, dword ptr [ebx]
            //   8d0412               | lea                 eax, [edx + edx]
            //   50                   | push                eax
            //   56                   | push                esi
            //   57                   | push                edi
            //   e8????????           |                     
            //   ff75f0               | push                dword ptr [ebp - 0x10]

    condition:
        7 of them and filesize < 1122304
}