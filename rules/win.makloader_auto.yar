rule win_makloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.makloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.makloader"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b4dfc e8???????? 8b4dfc 884126 ba01000000 6bc226 8b4d08 }
            // n = 7, score = 200
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   884126               | mov                 byte ptr [ecx + 0x26], al
            //   ba01000000           | mov                 edx, 1
            //   6bc226               | imul                eax, edx, 0x26
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_1 = { c1fa06 83e03f 57 6bf830 8955f4 8b1495885d4200 897df0 }
            // n = 7, score = 200
            //   c1fa06               | sar                 edx, 6
            //   83e03f               | and                 eax, 0x3f
            //   57                   | push                edi
            //   6bf830               | imul                edi, eax, 0x30
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8b1495885d4200       | mov                 edx, dword ptr [edx*4 + 0x425d88]
            //   897df0               | mov                 dword ptr [ebp - 0x10], edi

        $sequence_2 = { e8???????? 8b4dfc 884113 ba01000000 }
            // n = 4, score = 200
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   884113               | mov                 byte ptr [ecx + 0x13], al
            //   ba01000000           | mov                 edx, 1

        $sequence_3 = { c78564ebffff00000000 8d8de0f3ffff 898d68ebffff 8d9558e6ffff 89956cebffff c78570ebffff00040000 8d8558ebffff }
            // n = 7, score = 200
            //   c78564ebffff00000000     | mov    dword ptr [ebp - 0x149c], 0
            //   8d8de0f3ffff         | lea                 ecx, [ebp - 0xc20]
            //   898d68ebffff         | mov                 dword ptr [ebp - 0x1498], ecx
            //   8d9558e6ffff         | lea                 edx, [ebp - 0x19a8]
            //   89956cebffff         | mov                 dword ptr [ebp - 0x1494], edx
            //   c78570ebffff00040000     | mov    dword ptr [ebp - 0x1490], 0x400
            //   8d8558ebffff         | lea                 eax, [ebp - 0x14a8]

        $sequence_4 = { 83e13f c1f806 6bc930 8b0485885d4200 f644082801 7406 8b440818 }
            // n = 7, score = 200
            //   83e13f               | and                 ecx, 0x3f
            //   c1f806               | sar                 eax, 6
            //   6bc930               | imul                ecx, ecx, 0x30
            //   8b0485885d4200       | mov                 eax, dword ptr [eax*4 + 0x425d88]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7406                 | je                  8
            //   8b440818             | mov                 eax, dword ptr [eax + ecx + 0x18]

        $sequence_5 = { 6bc000 c780dc57420002000000 6a04 58 6bc000 8b0d???????? 894c05f8 }
            // n = 7, score = 200
            //   6bc000               | imul                eax, eax, 0
            //   c780dc57420002000000     | mov    dword ptr [eax + 0x4257dc], 2
            //   6a04                 | push                4
            //   58                   | pop                 eax
            //   6bc000               | imul                eax, eax, 0
            //   8b0d????????         |                     
            //   894c05f8             | mov                 dword ptr [ebp + eax - 8], ecx

        $sequence_6 = { 894415c0 b908000000 c1e100 ba08000000 d1e2 }
            // n = 5, score = 200
            //   894415c0             | mov                 dword ptr [ebp + edx - 0x40], eax
            //   b908000000           | mov                 ecx, 8
            //   c1e100               | shl                 ecx, 0
            //   ba08000000           | mov                 edx, 8
            //   d1e2                 | shl                 edx, 1

        $sequence_7 = { 8bec 5d e9???????? ff25???????? 55 8bec f6450801 }
            // n = 7, score = 200
            //   8bec                 | mov                 ebp, esp
            //   5d                   | pop                 ebp
            //   e9????????           |                     
            //   ff25????????         |                     
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   f6450801             | test                byte ptr [ebp + 8], 1

        $sequence_8 = { 8b4c05bc 894c15bc 8b4405c0 894415c0 b908000000 c1e100 }
            // n = 6, score = 200
            //   8b4c05bc             | mov                 ecx, dword ptr [ebp + eax - 0x44]
            //   894c15bc             | mov                 dword ptr [ebp + edx - 0x44], ecx
            //   8b4405c0             | mov                 eax, dword ptr [ebp + eax - 0x40]
            //   894415c0             | mov                 dword ptr [ebp + edx - 0x40], eax
            //   b908000000           | mov                 ecx, 8
            //   c1e100               | shl                 ecx, 0

        $sequence_9 = { 99 b118 e8???????? 0bf0 0bfa 8b8538fdffff 8b8d34fdffff }
            // n = 7, score = 200
            //   99                   | cdq                 
            //   b118                 | mov                 cl, 0x18
            //   e8????????           |                     
            //   0bf0                 | or                  esi, eax
            //   0bfa                 | or                  edi, edx
            //   8b8538fdffff         | mov                 eax, dword ptr [ebp - 0x2c8]
            //   8b8d34fdffff         | mov                 ecx, dword ptr [ebp - 0x2cc]

    condition:
        7 of them and filesize < 335872
}