rule win_makloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.makloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.makloader"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bf0 c1ee08 8b4d08 51 }
            // n = 4, score = 200
            //   8bf0                 | mov                 esi, eax
            //   c1ee08               | shr                 esi, 8
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   51                   | push                ecx

        $sequence_1 = { 88412d ba01000000 6bc22d 8b4d08 }
            // n = 4, score = 200
            //   88412d               | mov                 byte ptr [ecx + 0x2d], al
            //   ba01000000           | mov                 edx, 1
            //   6bc22d               | imul                eax, edx, 0x2d
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_2 = { e8???????? 8b4dfc 884113 ba01000000 }
            // n = 4, score = 200
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   884113               | mov                 byte ptr [ecx + 0x13], al
            //   ba01000000           | mov                 edx, 1

        $sequence_3 = { ba01000000 6bc222 8b4d08 0fb61401 52 8b4dfc e8???????? }
            // n = 7, score = 200
            //   ba01000000           | mov                 edx, 1
            //   6bc222               | imul                eax, edx, 0x22
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   0fb61401             | movzx               edx, byte ptr [ecx + eax]
            //   52                   | push                edx
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   e8????????           |                     

        $sequence_4 = { 83ec0c 8b4508 8945f8 8b4d0c 8b5508 }
            // n = 5, score = 200
            //   83ec0c               | sub                 esp, 0xc
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]

        $sequence_5 = { e8???????? 83c410 89856ce6ffff 8b8540e6ffff 50 e8???????? 83c404 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   89856ce6ffff         | mov                 dword ptr [ebp - 0x1994], eax
            //   8b8540e6ffff         | mov                 eax, dword ptr [ebp - 0x19c0]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_6 = { 89856ce6ffff 8b8ddce5ffff 51 e8???????? 83c404 898598e5ffff c785c4eaffff01000100 }
            // n = 7, score = 200
            //   89856ce6ffff         | mov                 dword ptr [ebp - 0x1994], eax
            //   8b8ddce5ffff         | mov                 ecx, dword ptr [ebp - 0x1a24]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   898598e5ffff         | mov                 dword ptr [ebp - 0x1a68], eax
            //   c785c4eaffff01000100     | mov    dword ptr [ebp - 0x153c], 0x10001

        $sequence_7 = { 75bd 8b5508 899530e6ffff 8b8530e6ffff 8985b0e5ffff 8b8d30e6ffff 8a11 }
            // n = 7, score = 200
            //   75bd                 | jne                 0xffffffbf
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   899530e6ffff         | mov                 dword ptr [ebp - 0x19d0], edx
            //   8b8530e6ffff         | mov                 eax, dword ptr [ebp - 0x19d0]
            //   8985b0e5ffff         | mov                 dword ptr [ebp - 0x1a50], eax
            //   8b8d30e6ffff         | mov                 ecx, dword ptr [ebp - 0x19d0]
            //   8a11                 | mov                 dl, byte ptr [ecx]

        $sequence_8 = { 83c404 8945d4 c745d800000000 c745c400000000 8d4dc4 51 6800100000 }
            // n = 7, score = 200
            //   83c404               | add                 esp, 4
            //   8945d4               | mov                 dword ptr [ebp - 0x2c], eax
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0
            //   c745c400000000       | mov                 dword ptr [ebp - 0x3c], 0
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   51                   | push                ecx
            //   6800100000           | push                0x1000

        $sequence_9 = { 886de1 8b1485885d4200 8a4c132d f6c104 7419 8a441a2e 80e1fb }
            // n = 7, score = 200
            //   886de1               | mov                 byte ptr [ebp - 0x1f], ch
            //   8b1485885d4200       | mov                 edx, dword ptr [eax*4 + 0x425d88]
            //   8a4c132d             | mov                 cl, byte ptr [ebx + edx + 0x2d]
            //   f6c104               | test                cl, 4
            //   7419                 | je                  0x1b
            //   8a441a2e             | mov                 al, byte ptr [edx + ebx + 0x2e]
            //   80e1fb               | and                 cl, 0xfb

    condition:
        7 of them and filesize < 335872
}