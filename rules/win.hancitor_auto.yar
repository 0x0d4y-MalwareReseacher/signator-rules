rule win_hancitor_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.hancitor."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hancitor"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 6824040000 6a00 6a00 6a00 }
            // n = 5, score = 1000
            //   6a00                 | push                0
            //   6824040000           | push                0x424
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_1 = { 6800010000 6a40 68???????? e8???????? 83c40c }
            // n = 5, score = 800
            //   6800010000           | push                0x100
            //   6a40                 | push                0x40
            //   68????????           |                     
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc

        $sequence_2 = { 68???????? 8d85dcfaffff 50 ff15???????? }
            // n = 4, score = 700
            //   68????????           |                     
            //   8d85dcfaffff         | lea                 eax, [ebp - 0x524]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_3 = { 7448 8b5508 0fbe02 85c0 7504 }
            // n = 5, score = 600
            //   7448                 | je                  0x4a
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   0fbe02               | movsx               eax, byte ptr [edx]
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6

        $sequence_4 = { 8bec 51 8b4508 8945fc b901000000 6bd100 8b45fc }
            // n = 7, score = 600
            //   8bec                 | mov                 ebp, esp
            //   51                   | push                ecx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   b901000000           | mov                 ecx, 1
            //   6bd100               | imul                edx, ecx, 0
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_5 = { 83c410 85c0 7424 837d1400 7408 8b5514 }
            // n = 6, score = 600
            //   83c410               | add                 esp, 0x10
            //   85c0                 | test                eax, eax
            //   7424                 | je                  0x26
            //   837d1400             | cmp                 dword ptr [ebp + 0x14], 0
            //   7408                 | je                  0xa
            //   8b5514               | mov                 edx, dword ptr [ebp + 0x14]

        $sequence_6 = { c1e000 8b4d08 0fbe1401 83fa3a 7407 }
            // n = 5, score = 600
            //   c1e000               | shl                 eax, 0
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   0fbe1401             | movsx               edx, byte ptr [ecx + eax]
            //   83fa3a               | cmp                 edx, 0x3a
            //   7407                 | je                  9

        $sequence_7 = { 8b5508 83c201 895508 eb0b 8b4508 83c001 894508 }
            // n = 7, score = 600
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   83c201               | add                 edx, 1
            //   895508               | mov                 dword ptr [ebp + 8], edx
            //   eb0b                 | jmp                 0xd
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c001               | add                 eax, 1
            //   894508               | mov                 dword ptr [ebp + 8], eax

        $sequence_8 = { 8b4d08 51 ff15???????? 85c0 7502 eb0f }
            // n = 6, score = 600
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7502                 | jne                 4
            //   eb0f                 | jmp                 0x11

        $sequence_9 = { 8b440828 03c1 ffd0 33c0 }
            // n = 4, score = 500
            //   8b440828             | mov                 eax, dword ptr [eax + ecx + 0x28]
            //   03c1                 | add                 eax, ecx
            //   ffd0                 | call                eax
            //   33c0                 | xor                 eax, eax

        $sequence_10 = { 55 8bec a1???????? 85c0 740c ff7508 6a00 }
            // n = 7, score = 500
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe
            //   ff7508               | push                dword ptr [ebp + 8]
            //   6a00                 | push                0

        $sequence_11 = { 8b4dfc 85c0 7402 8908 8b5518 }
            // n = 5, score = 500
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   85c0                 | test                eax, eax
            //   7402                 | je                  4
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b5518               | mov                 edx, dword ptr [ebp + 0x18]

        $sequence_12 = { 57 ff7508 ff15???????? 5f 8bc6 5e }
            // n = 6, score = 500
            //   57                   | push                edi
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi

        $sequence_13 = { 7502 5d c3 ff7508 6a00 50 }
            // n = 6, score = 500
            //   7502                 | jne                 4
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   ff7508               | push                dword ptr [ebp + 8]
            //   6a00                 | push                0
            //   50                   | push                eax

        $sequence_14 = { 57 8b483c 33f6 03c8 6a40 6800300000 }
            // n = 6, score = 500
            //   57                   | push                edi
            //   8b483c               | mov                 ecx, dword ptr [eax + 0x3c]
            //   33f6                 | xor                 esi, esi
            //   03c8                 | add                 ecx, eax
            //   6a40                 | push                0x40
            //   6800300000           | push                0x3000

        $sequence_15 = { 50 c60600 ff15???????? 8b3d???????? 85c0 }
            // n = 5, score = 500
            //   50                   | push                eax
            //   c60600               | mov                 byte ptr [esi], 0
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_16 = { fd 008d4556f400 08640f08 ed }
            // n = 4, score = 100
            //   fd                   | std                 
            //   008d4556f400         | add                 byte ptr [ebp + 0xf45645], cl
            //   08640f08             | or                  byte ptr [edi + ecx + 8], ah
            //   ed                   | in                  eax, dx

        $sequence_17 = { f9 a6 c3 4b fd }
            // n = 5, score = 100
            //   f9                   | stc                 
            //   a6                   | cmpsb               byte ptr [esi], byte ptr es:[edi]
            //   c3                   | ret                 
            //   4b                   | dec                 ebx
            //   fd                   | std                 

        $sequence_18 = { 837db80a 0f8d7f010000 8b45c4 0345cc 8945c4 8b45cc 0345e4 }
            // n = 7, score = 100
            //   837db80a             | cmp                 dword ptr [ebp - 0x48], 0xa
            //   0f8d7f010000         | jge                 0x185
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   0345cc               | add                 eax, dword ptr [ebp - 0x34]
            //   8945c4               | mov                 dword ptr [ebp - 0x3c], eax
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   0345e4               | add                 eax, dword ptr [ebp - 0x1c]

        $sequence_19 = { 8945c0 8b45b8 48 8945b8 a1???????? 83c044 }
            // n = 6, score = 100
            //   8945c0               | mov                 dword ptr [ebp - 0x40], eax
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   48                   | dec                 eax
            //   8945b8               | mov                 dword ptr [ebp - 0x48], eax
            //   a1????????           |                     
            //   83c044               | add                 eax, 0x44

        $sequence_20 = { 8b45dc 05c8e40a00 8945dc 817d88dab21701 7508 }
            // n = 5, score = 100
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   05c8e40a00           | add                 eax, 0xae4c8
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   817d88dab21701       | cmp                 dword ptr [ebp - 0x78], 0x117b2da
            //   7508                 | jne                 0xa

        $sequence_21 = { b9382baa99 8d45fc 50 6a00 }
            // n = 4, score = 100
            //   b9382baa99           | mov                 ecx, 0x99aa2b38
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_22 = { cdf4 ba7925d2c6 08cc ca2c28 }
            // n = 4, score = 100
            //   cdf4                 | int                 0xf4
            //   ba7925d2c6           | mov                 edx, 0xc6d22579
            //   08cc                 | or                  ah, cl
            //   ca2c28               | retf                0x282c

        $sequence_23 = { 7414 8b45e4 0345c0 8945e4 8b45dc 05c8e40a00 }
            // n = 6, score = 100
            //   7414                 | je                  0x16
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   0345c0               | add                 eax, dword ptr [ebp - 0x40]
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   05c8e40a00           | add                 eax, 0xae4c8

    condition:
        7 of them and filesize < 106496
}