rule win_montysthree_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.montysthree."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.montysthree"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945dc 3bc6 7428 56 56 }
            // n = 5, score = 200
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   3bc6                 | cmp                 eax, esi
            //   7428                 | je                  0x2a
            //   56                   | push                esi
            //   56                   | push                esi

        $sequence_1 = { ff7108 ff15???????? c3 8b4108 85c0 }
            // n = 5, score = 200
            //   ff7108               | push                dword ptr [ecx + 8]
            //   ff15????????         |                     
            //   c3                   | ret                 
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   85c0                 | test                eax, eax

        $sequence_2 = { 2f 9b 52 0061ca d4b7 }
            // n = 5, score = 200
            //   2f                   | das                 
            //   9b                   | wait                
            //   52                   | push                edx
            //   0061ca               | add                 byte ptr [ecx - 0x36], ah
            //   d4b7                 | aam                 0xb7

        $sequence_3 = { ff750c 33db ff7508 33ff 68???????? e8???????? }
            // n = 6, score = 200
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   33db                 | xor                 ebx, ebx
            //   ff7508               | push                dword ptr [ebp + 8]
            //   33ff                 | xor                 edi, edi
            //   68????????           |                     
            //   e8????????           |                     

        $sequence_4 = { e8???????? ff30 688d000000 eb98 53 68???????? 6a0e }
            // n = 7, score = 200
            //   e8????????           |                     
            //   ff30                 | push                dword ptr [eax]
            //   688d000000           | push                0x8d
            //   eb98                 | jmp                 0xffffff9a
            //   53                   | push                ebx
            //   68????????           |                     
            //   6a0e                 | push                0xe

        $sequence_5 = { 85c0 0f85b3feffff ff15???????? 83f812 5e }
            // n = 5, score = 200
            //   85c0                 | test                eax, eax
            //   0f85b3feffff         | jne                 0xfffffeb9
            //   ff15????????         |                     
            //   83f812               | cmp                 eax, 0x12
            //   5e                   | pop                 esi

        $sequence_6 = { 0f84b5000000 53 53 8d456c 50 8d4570 50 }
            // n = 7, score = 200
            //   0f84b5000000         | je                  0xbb
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   8d456c               | lea                 eax, dword ptr [ebp + 0x6c]
            //   50                   | push                eax
            //   8d4570               | lea                 eax, dword ptr [ebp + 0x70]
            //   50                   | push                eax

        $sequence_7 = { 68???????? 8d4d58 e8???????? 85c0 0f8d8e000000 8d4df8 897568 }
            // n = 7, score = 200
            //   68????????           |                     
            //   8d4d58               | lea                 ecx, dword ptr [ebp + 0x58]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f8d8e000000         | jge                 0x94
            //   8d4df8               | lea                 ecx, dword ptr [ebp - 8]
            //   897568               | mov                 dword ptr [ebp + 0x68], esi

        $sequence_8 = { 6a14 68???????? e8???????? 33db 895dfc 391d???????? }
            // n = 6, score = 200
            //   6a14                 | push                0x14
            //   68????????           |                     
            //   e8????????           |                     
            //   33db                 | xor                 ebx, ebx
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   391d????????         |                     

        $sequence_9 = { 5d c3 55 8bec 81ec00010000 33c0 }
            // n = 6, score = 200
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81ec00010000         | sub                 esp, 0x100
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 458752
}