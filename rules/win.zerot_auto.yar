rule win_zerot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.zerot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zerot"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 88040a 41 3bcf 7cef }
            // n = 4, score = 200
            //   88040a               | mov                 byte ptr [edx + ecx], al
            //   41                   | inc                 ecx
            //   3bcf                 | cmp                 ecx, edi
            //   7cef                 | jl                  0xfffffff1

        $sequence_1 = { 8d7901 0f1f440000 8a01 41 84c0 75f9 6a40 }
            // n = 7, score = 200
            //   8d7901               | lea                 edi, [ecx + 1]
            //   0f1f440000           | nop                 dword ptr [eax + eax]
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   41                   | inc                 ecx
            //   84c0                 | test                al, al
            //   75f9                 | jne                 0xfffffffb
            //   6a40                 | push                0x40

        $sequence_2 = { ff15???????? 68???????? ff15???????? 8b45b4 }
            // n = 4, score = 200
            //   ff15????????         |                     
            //   68????????           |                     
            //   ff15????????         |                     
            //   8b45b4               | mov                 eax, dword ptr [ebp - 0x4c]

        $sequence_3 = { 75f9 2bce 51 52 8d8bc6000000 }
            // n = 5, score = 200
            //   75f9                 | jne                 0xfffffffb
            //   2bce                 | sub                 ecx, esi
            //   51                   | push                ecx
            //   52                   | push                edx
            //   8d8bc6000000         | lea                 ecx, [ebx + 0xc6]

        $sequence_4 = { 8d85f4fbffff c7853cfcffffc0d40100 32db c78518fcffff04000000 50 }
            // n = 5, score = 200
            //   8d85f4fbffff         | lea                 eax, [ebp - 0x40c]
            //   c7853cfcffffc0d40100     | mov    dword ptr [ebp - 0x3c4], 0x1d4c0
            //   32db                 | xor                 bl, bl
            //   c78518fcffff04000000     | mov    dword ptr [ebp - 0x3e8], 4
            //   50                   | push                eax

        $sequence_5 = { 85c0 740c 81bd34fcffffc8000000 7421 8b8530fcffff 40 898530fcffff }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   740c                 | je                  0xe
            //   81bd34fcffffc8000000     | cmp    dword ptr [ebp - 0x3cc], 0xc8
            //   7421                 | je                  0x23
            //   8b8530fcffff         | mov                 eax, dword ptr [ebp - 0x3d0]
            //   40                   | inc                 eax
            //   898530fcffff         | mov                 dword ptr [ebp - 0x3d0], eax

        $sequence_6 = { 50 6a00 6a00 ffd3 8b460c }
            // n = 5, score = 200
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ffd3                 | call                ebx
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]

        $sequence_7 = { e8???????? 83c40c 8d853cfaffff 6800020000 50 68???????? }
            // n = 6, score = 200
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d853cfaffff         | lea                 eax, [ebp - 0x5c4]
            //   6800020000           | push                0x200
            //   50                   | push                eax
            //   68????????           |                     

        $sequence_8 = { 83c404 8b8548fcffff 85c0 7409 }
            // n = 4, score = 200
            //   83c404               | add                 esp, 4
            //   8b8548fcffff         | mov                 eax, dword ptr [ebp - 0x3b8]
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb

        $sequence_9 = { 50 6a00 ffd6 8d8524fdffff }
            // n = 4, score = 200
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ffd6                 | call                esi
            //   8d8524fdffff         | lea                 eax, [ebp - 0x2dc]

    condition:
        7 of them and filesize < 303104
}