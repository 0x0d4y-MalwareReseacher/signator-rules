rule win_graphite_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.graphite."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.graphite"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 80e13f 80c980 52 880e 8b4c2414 c1e906 }
            // n = 6, score = 100
            //   80e13f               | and                 cl, 0x3f
            //   80c980               | or                  cl, 0x80
            //   52                   | push                edx
            //   880e                 | mov                 byte ptr [esi], cl
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   c1e906               | shr                 ecx, 6

        $sequence_1 = { 7636 8d442410 33d2 50 56 42 }
            // n = 6, score = 100
            //   7636                 | jbe                 0x38
            //   8d442410             | lea                 eax, dword ptr [esp + 0x10]
            //   33d2                 | xor                 edx, edx
            //   50                   | push                eax
            //   56                   | push                esi
            //   42                   | inc                 edx

        $sequence_2 = { e8???????? 83c40c 85c0 754f 8b3d???????? eb31 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   754f                 | jne                 0x51
            //   8b3d????????         |                     
            //   eb31                 | jmp                 0x33

        $sequence_3 = { c78544ffffff393d3a7a c78548ffffff5a767b79 c7854cffffff4b457863 c78550ffffff3b784b42 c78554ffffff36637476 c78558ffffff77582460 }
            // n = 6, score = 100
            //   c78544ffffff393d3a7a     | mov    dword ptr [ebp - 0xbc], 0x7a3a3d39
            //   c78548ffffff5a767b79     | mov    dword ptr [ebp - 0xb8], 0x797b765a
            //   c7854cffffff4b457863     | mov    dword ptr [ebp - 0xb4], 0x6378454b
            //   c78550ffffff3b784b42     | mov    dword ptr [ebp - 0xb0], 0x424b783b
            //   c78554ffffff36637476     | mov    dword ptr [ebp - 0xac], 0x76746336
            //   c78558ffffff77582460     | mov    dword ptr [ebp - 0xa8], 0x60245877

        $sequence_4 = { 80f95c 7501 40 8a08 80f922 75e9 68???????? }
            // n = 7, score = 100
            //   80f95c               | cmp                 cl, 0x5c
            //   7501                 | jne                 3
            //   40                   | inc                 eax
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   80f922               | cmp                 cl, 0x22
            //   75e9                 | jne                 0xffffffeb
            //   68????????           |                     

        $sequence_5 = { ff15???????? 50 ff15???????? 8d44240c 897c240c 50 57 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8d44240c             | lea                 eax, dword ptr [esp + 0xc]
            //   897c240c             | mov                 dword ptr [esp + 0xc], edi
            //   50                   | push                eax
            //   57                   | push                edi

        $sequence_6 = { 53 e8???????? 83c40c 85c0 745c 8b44241c 8d542410 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   745c                 | je                  0x5e
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   8d542410             | lea                 edx, dword ptr [esp + 0x10]

        $sequence_7 = { e8???????? 8bf0 56 ff15???????? 03c0 50 56 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   03c0                 | add                 eax, eax
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_8 = { e9???????? 8a0f 0fbec1 83e862 0f8478010000 83e804 }
            // n = 6, score = 100
            //   e9????????           |                     
            //   8a0f                 | mov                 cl, byte ptr [edi]
            //   0fbec1               | movsx               eax, cl
            //   83e862               | sub                 eax, 0x62
            //   0f8478010000         | je                  0x17e
            //   83e804               | sub                 eax, 4

        $sequence_9 = { ffd6 8b7c241c 8bf0 85ff 0f8410010000 85ed 0f8408010000 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   8b7c241c             | mov                 edi, dword ptr [esp + 0x1c]
            //   8bf0                 | mov                 esi, eax
            //   85ff                 | test                edi, edi
            //   0f8410010000         | je                  0x116
            //   85ed                 | test                ebp, ebp
            //   0f8408010000         | je                  0x10e

    condition:
        7 of them and filesize < 75776
}