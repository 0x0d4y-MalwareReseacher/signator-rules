rule win_arkei_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.arkei_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.arkei_stealer"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ff15???????? 85c0 74be 8b45e0 }
            // n = 4, score = 400
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   74be                 | je                  0xffffffc0
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]

        $sequence_1 = { 682000cc00 53 56 6a00 6a00 57 53 }
            // n = 7, score = 400
            //   682000cc00           | push                0xcc0020
            //   53                   | push                ebx
            //   56                   | push                esi
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   57                   | push                edi
            //   53                   | push                ebx

        $sequence_2 = { c70628000000 8b4dc8 894e04 8b55cc }
            // n = 4, score = 400
            //   c70628000000         | mov                 dword ptr [esi], 0x28
            //   8b4dc8               | mov                 ecx, dword ptr [ebp - 0x38]
            //   894e04               | mov                 dword ptr [esi + 4], ecx
            //   8b55cc               | mov                 edx, dword ptr [ebp - 0x34]

        $sequence_3 = { 8bf0 ffd3 8bd8 53 56 }
            // n = 5, score = 400
            //   8bf0                 | mov                 esi, eax
            //   ffd3                 | call                ebx
            //   8bd8                 | mov                 ebx, eax
            //   53                   | push                ebx
            //   56                   | push                esi

        $sequence_4 = { c70628000000 8b4dc8 894e04 8b55cc 895608 668b45d4 }
            // n = 6, score = 400
            //   c70628000000         | mov                 dword ptr [esi], 0x28
            //   8b4dc8               | mov                 ecx, dword ptr [ebp - 0x38]
            //   894e04               | mov                 dword ptr [esi + 4], ecx
            //   8b55cc               | mov                 edx, dword ptr [ebp - 0x34]
            //   895608               | mov                 dword ptr [esi + 8], edx
            //   668b45d4             | mov                 ax, word ptr [ebp - 0x2c]

        $sequence_5 = { 33d2 894dee 8955f2 8b4e20 8b16 8d448a0e }
            // n = 6, score = 400
            //   33d2                 | xor                 edx, edx
            //   894dee               | mov                 dword ptr [ebp - 0x12], ecx
            //   8955f2               | mov                 dword ptr [ebp - 0xe], edx
            //   8b4e20               | mov                 ecx, dword ptr [esi + 0x20]
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   8d448a0e             | lea                 eax, [edx + ecx*4 + 0xe]

        $sequence_6 = { 8b00 50 ff15???????? 83f8ff 740b a810 7507 }
            // n = 7, score = 400
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83f8ff               | cmp                 eax, -1
            //   740b                 | je                  0xd
            //   a810                 | test                al, 0x10
            //   7507                 | jne                 9

        $sequence_7 = { 85c0 74aa 8b4dd6 0faf4dd4 0fb7c1 }
            // n = 5, score = 400
            //   85c0                 | test                eax, eax
            //   74aa                 | je                  0xffffffac
            //   8b4dd6               | mov                 ecx, dword ptr [ebp - 0x2a]
            //   0faf4dd4             | imul                ecx, dword ptr [ebp - 0x2c]
            //   0fb7c1               | movzx               eax, cx

        $sequence_8 = { c1f803 0fafc1 0faf4608 33ff 50 57 897e10 }
            // n = 7, score = 400
            //   c1f803               | sar                 eax, 3
            //   0fafc1               | imul                eax, ecx
            //   0faf4608             | imul                eax, dword ptr [esi + 8]
            //   33ff                 | xor                 edi, edi
            //   50                   | push                eax
            //   57                   | push                edi
            //   897e10               | mov                 dword ptr [esi + 0x10], edi

        $sequence_9 = { 6a00 51 ff15???????? 85c0 74be }
            // n = 5, score = 400
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   74be                 | je                  0xffffffc0

    condition:
        7 of them and filesize < 1744896
}