rule win_crypt0l0cker_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.crypt0l0cker."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.crypt0l0cker"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e9???????? 8b9dccfcffff e9???????? 0fb7c8 83c702 6a2d }
            // n = 6, score = 100
            //   e9????????           |                     
            //   8b9dccfcffff         | mov                 ebx, dword ptr [ebp - 0x334]
            //   e9????????           |                     
            //   0fb7c8               | movzx               ecx, ax
            //   83c702               | add                 edi, 2
            //   6a2d                 | push                0x2d

        $sequence_1 = { 8bd6 8bcb e8???????? 8d45e0 c6838000000004 50 8bd6 }
            // n = 7, score = 100
            //   8bd6                 | mov                 edx, esi
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   c6838000000004       | mov                 byte ptr [ebx + 0x80], 4
            //   50                   | push                eax
            //   8bd6                 | mov                 edx, esi

        $sequence_2 = { b001 8bb5dcfcffff 8bd1 c1ea03 83e107 d2e0 080432 }
            // n = 7, score = 100
            //   b001                 | mov                 al, 1
            //   8bb5dcfcffff         | mov                 esi, dword ptr [ebp - 0x324]
            //   8bd1                 | mov                 edx, ecx
            //   c1ea03               | shr                 edx, 3
            //   83e107               | and                 ecx, 7
            //   d2e0                 | shl                 al, cl
            //   080432               | or                  byte ptr [edx + esi], al

        $sequence_3 = { 50 57 e8???????? 83c408 85c0 750b 50 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   750b                 | jne                 0xd
            //   50                   | push                eax

        $sequence_4 = { 8945f0 0fb7471a 8b7df0 0faffa 0fafc1 897de8 8b7df0 }
            // n = 7, score = 100
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   0fb7471a             | movzx               eax, word ptr [edi + 0x1a]
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]
            //   0faffa               | imul                edi, edx
            //   0fafc1               | imul                eax, ecx
            //   897de8               | mov                 dword ptr [ebp - 0x18], edi
            //   8b7df0               | mov                 edi, dword ptr [ebp - 0x10]

        $sequence_5 = { 8975e8 3bf2 7301 41 03fe 8bc1 3bfe }
            // n = 7, score = 100
            //   8975e8               | mov                 dword ptr [ebp - 0x18], esi
            //   3bf2                 | cmp                 esi, edx
            //   7301                 | jae                 3
            //   41                   | inc                 ecx
            //   03fe                 | add                 edi, esi
            //   8bc1                 | mov                 eax, ecx
            //   3bfe                 | cmp                 edi, esi

        $sequence_6 = { 3d57000780 7408 85c0 7509 33f6 eb05 be02000000 }
            // n = 7, score = 100
            //   3d57000780           | cmp                 eax, 0x80070057
            //   7408                 | je                  0xa
            //   85c0                 | test                eax, eax
            //   7509                 | jne                 0xb
            //   33f6                 | xor                 esi, esi
            //   eb05                 | jmp                 7
            //   be02000000           | mov                 esi, 2

        $sequence_7 = { 0facc118 c1e818 884dec 8bc2 8bcb 0facd308 0facc110 }
            // n = 7, score = 100
            //   0facc118             | shrd                ecx, eax, 0x18
            //   c1e818               | shr                 eax, 0x18
            //   884dec               | mov                 byte ptr [ebp - 0x14], cl
            //   8bc2                 | mov                 eax, edx
            //   8bcb                 | mov                 ecx, ebx
            //   0facd308             | shrd                ebx, edx, 8
            //   0facc110             | shrd                ecx, eax, 0x10

        $sequence_8 = { 56 57 8965e8 8bf1 8975e0 c745e400000000 897604 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   8965e8               | mov                 dword ptr [ebp - 0x18], esp
            //   8bf1                 | mov                 esi, ecx
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   c745e400000000       | mov                 dword ptr [ebp - 0x1c], 0
            //   897604               | mov                 dword ptr [esi + 4], esi

        $sequence_9 = { 0f8581020000 807dee81 0f8577020000 ff75ef ff15???????? 8b0f 8bd3 }
            // n = 7, score = 100
            //   0f8581020000         | jne                 0x287
            //   807dee81             | cmp                 byte ptr [ebp - 0x12], 0x81
            //   0f8577020000         | jne                 0x27d
            //   ff75ef               | push                dword ptr [ebp - 0x11]
            //   ff15????????         |                     
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   8bd3                 | mov                 edx, ebx

    condition:
        7 of them and filesize < 917504
}