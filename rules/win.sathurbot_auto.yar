rule win_sathurbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.sathurbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sathurbot"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f6c201 0f9445ee 83f90a 0f9c45ef b842fd04c0 e9???????? 3d1e6b1677 }
            // n = 7, score = 100
            //   f6c201               | test                dl, 1
            //   0f9445ee             | sete                byte ptr [ebp - 0x12]
            //   83f90a               | cmp                 ecx, 0xa
            //   0f9c45ef             | setl                byte ptr [ebp - 0x11]
            //   b842fd04c0           | mov                 eax, 0xc004fd42
            //   e9????????           |                     
            //   3d1e6b1677           | cmp                 eax, 0x77166b1e

        $sequence_1 = { f6c201 0f94c0 0f9445e0 83f90a 0f9cc1 0f9c45e1 08c1 }
            // n = 7, score = 100
            //   f6c201               | test                dl, 1
            //   0f94c0               | sete                al
            //   0f9445e0             | sete                byte ptr [ebp - 0x20]
            //   83f90a               | cmp                 ecx, 0xa
            //   0f9cc1               | setl                cl
            //   0f9c45e1             | setl                byte ptr [ebp - 0x1f]
            //   08c1                 | or                  cl, al

        $sequence_2 = { e9???????? 81f9b8c18a25 0f85dafaffff 837d10ff 0f9445e3 8b0d???????? 8d51ff }
            // n = 7, score = 100
            //   e9????????           |                     
            //   81f9b8c18a25         | cmp                 ecx, 0x258ac1b8
            //   0f85dafaffff         | jne                 0xfffffae0
            //   837d10ff             | cmp                 dword ptr [ebp + 0x10], -1
            //   0f9445e3             | sete                byte ptr [ebp - 0x1d]
            //   8b0d????????         |                     
            //   8d51ff               | lea                 edx, dword ptr [ecx - 1]

        $sequence_3 = { b9f754d3d6 b8fa20e607 0f45c8 e9???????? 81f90f947d4c 0f85faf2ffff 8b463c }
            // n = 7, score = 100
            //   b9f754d3d6           | mov                 ecx, 0xd6d354f7
            //   b8fa20e607           | mov                 eax, 0x7e620fa
            //   0f45c8               | cmovne              ecx, eax
            //   e9????????           |                     
            //   81f90f947d4c         | cmp                 ecx, 0x4c7d940f
            //   0f85faf2ffff         | jne                 0xfffff300
            //   8b463c               | mov                 eax, dword ptr [esi + 0x3c]

        $sequence_4 = { b87295a393 3d54a42c66 7f3c 3d9d3ebeac 7f41 3d7295a393 0f8550010000 }
            // n = 7, score = 100
            //   b87295a393           | mov                 eax, 0x93a39572
            //   3d54a42c66           | cmp                 eax, 0x662ca454
            //   7f3c                 | jg                  0x3e
            //   3d9d3ebeac           | cmp                 eax, 0xacbe3e9d
            //   7f41                 | jg                  0x43
            //   3d7295a393           | cmp                 eax, 0x93a39572
            //   0f8550010000         | jne                 0x156

        $sequence_5 = { eb0a ba5ee72ce5 e9???????? 8b45e0 83c414 5e 5f }
            // n = 7, score = 100
            //   eb0a                 | jmp                 0xc
            //   ba5ee72ce5           | mov                 edx, 0xe52ce75e
            //   e9????????           |                     
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   83c414               | add                 esp, 0x14
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_6 = { f6c101 0f94c0 813d????????0a000000 0f9cc1 08c1 b8133834e4 b93ab483ec }
            // n = 7, score = 100
            //   f6c101               | test                cl, 1
            //   0f94c0               | sete                al
            //   813d????????0a000000     |     
            //   0f9cc1               | setl                cl
            //   08c1                 | or                  cl, al
            //   b8133834e4           | mov                 eax, 0xe4343813
            //   b93ab483ec           | mov                 ecx, 0xec83b43a

        $sequence_7 = { ff15???????? 83ec04 8a542453 b817651c82 e9???????? 3d3a7e6eeb 7f76 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   83ec04               | sub                 esp, 4
            //   8a542453             | mov                 dl, byte ptr [esp + 0x53]
            //   b817651c82           | mov                 eax, 0x821c6517
            //   e9????????           |                     
            //   3d3a7e6eeb           | cmp                 eax, 0xeb6e7e3a
            //   7f76                 | jg                  0x78

        $sequence_8 = { f6c701 bbf4c532bf 0f45df ebc1 6bda18 0319 8918 }
            // n = 7, score = 100
            //   f6c701               | test                bh, 1
            //   bbf4c532bf           | mov                 ebx, 0xbf32c5f4
            //   0f45df               | cmovne              ebx, edi
            //   ebc1                 | jmp                 0xffffffc3
            //   6bda18               | imul                ebx, edx, 0x18
            //   0319                 | add                 ebx, dword ptr [ecx]
            //   8918                 | mov                 dword ptr [eax], ebx

        $sequence_9 = { e9???????? 3d0b149afa 0f85e9f0ffff 8b842480000000 a1???????? 8d48ff 0fafc8 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   3d0b149afa           | cmp                 eax, 0xfa9a140b
            //   0f85e9f0ffff         | jne                 0xfffff0ef
            //   8b842480000000       | mov                 eax, dword ptr [esp + 0x80]
            //   a1????????           |                     
            //   8d48ff               | lea                 ecx, dword ptr [eax - 1]
            //   0fafc8               | imul                ecx, eax

    condition:
        7 of them and filesize < 2727936
}