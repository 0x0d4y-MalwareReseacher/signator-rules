rule win_svcready_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.svcready."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.svcready"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8935???????? 834dfcff b9???????? e8???????? 8b4df4 5e }
            // n = 6, score = 500
            //   8935????????         |                     
            //   834dfcff             | or                  dword ptr [ebp - 4], 0xffffffff
            //   b9????????           |                     
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   5e                   | pop                 esi

        $sequence_1 = { 8bea 8bf1 e8???????? 84c0 0f8482000000 807e2200 757c }
            // n = 7, score = 500
            //   8bea                 | mov                 ebp, edx
            //   8bf1                 | mov                 esi, ecx
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   0f8482000000         | je                  0x88
            //   807e2200             | cmp                 byte ptr [esi + 0x22], 0
            //   757c                 | jne                 0x7e

        $sequence_2 = { 8bf1 8b4610 0b4614 c60600 0f84d2000000 64a130000000 }
            // n = 6, score = 500
            //   8bf1                 | mov                 esi, ecx
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]
            //   0b4614               | or                  eax, dword ptr [esi + 0x14]
            //   c60600               | mov                 byte ptr [esi], 0
            //   0f84d2000000         | je                  0xd8
            //   64a130000000         | mov                 eax, dword ptr fs:[0x30]

        $sequence_3 = { 33d2 5f 85c0 5e 0f48ca 5d 8bc1 }
            // n = 7, score = 500
            //   33d2                 | xor                 edx, edx
            //   5f                   | pop                 edi
            //   85c0                 | test                eax, eax
            //   5e                   | pop                 esi
            //   0f48ca               | cmovs               ecx, edx
            //   5d                   | pop                 ebp
            //   8bc1                 | mov                 eax, ecx

        $sequence_4 = { 8bf8 23fb 89542410 8bcf 33ca 0bd5 8bf1 }
            // n = 7, score = 500
            //   8bf8                 | mov                 edi, eax
            //   23fb                 | and                 edi, ebx
            //   89542410             | mov                 dword ptr [esp + 0x10], edx
            //   8bcf                 | mov                 ecx, edi
            //   33ca                 | xor                 ecx, edx
            //   0bd5                 | or                  edx, ebp
            //   8bf1                 | mov                 esi, ecx

        $sequence_5 = { c1f805 2bc8 33c0 890e 40 5f 5e }
            // n = 7, score = 500
            //   c1f805               | sar                 eax, 5
            //   2bc8                 | sub                 ecx, eax
            //   33c0                 | xor                 eax, eax
            //   890e                 | mov                 dword ptr [esi], ecx
            //   40                   | inc                 eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_6 = { 33c3 8bd7 33c5 0bd3 8bda 0bd1 33d9 }
            // n = 7, score = 500
            //   33c3                 | xor                 eax, ebx
            //   8bd7                 | mov                 edx, edi
            //   33c5                 | xor                 eax, ebp
            //   0bd3                 | or                  edx, ebx
            //   8bda                 | mov                 ebx, edx
            //   0bd1                 | or                  edx, ecx
            //   33d9                 | xor                 ebx, ecx

        $sequence_7 = { ffd0 88442418 3bfe 741c 8b13 8bcb }
            // n = 6, score = 500
            //   ffd0                 | call                eax
            //   88442418             | mov                 byte ptr [esp + 0x18], al
            //   3bfe                 | cmp                 edi, esi
            //   741c                 | je                  0x1e
            //   8b13                 | mov                 edx, dword ptr [ebx]
            //   8bcb                 | mov                 ecx, ebx

        $sequence_8 = { 33f0 33f1 c1ca05 33d3 8b2d???????? 33d1 }
            // n = 6, score = 500
            //   33f0                 | xor                 esi, eax
            //   33f1                 | xor                 esi, ecx
            //   c1ca05               | ror                 edx, 5
            //   33d3                 | xor                 edx, ebx
            //   8b2d????????         |                     
            //   33d1                 | xor                 edx, ecx

        $sequence_9 = { 3c58 7504 897c2414 52 51 e8???????? 89442430 }
            // n = 7, score = 500
            //   3c58                 | cmp                 al, 0x58
            //   7504                 | jne                 6
            //   897c2414             | mov                 dword ptr [esp + 0x14], edi
            //   52                   | push                edx
            //   51                   | push                ecx
            //   e8????????           |                     
            //   89442430             | mov                 dword ptr [esp + 0x30], eax

    condition:
        7 of them and filesize < 1187840
}