rule win_alphanc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.alphanc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alphanc"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c6842487010000bf c68424880100008d 888c2489010000 c684248a010000a7 8884248b010000 c684248c0100008a 889c248d010000 }
            // n = 7, score = 100
            //   c6842487010000bf     | mov                 byte ptr [esp + 0x187], 0xbf
            //   c68424880100008d     | mov                 byte ptr [esp + 0x188], 0x8d
            //   888c2489010000       | mov                 byte ptr [esp + 0x189], cl
            //   c684248a010000a7     | mov                 byte ptr [esp + 0x18a], 0xa7
            //   8884248b010000       | mov                 byte ptr [esp + 0x18b], al
            //   c684248c0100008a     | mov                 byte ptr [esp + 0x18c], 0x8a
            //   889c248d010000       | mov                 byte ptr [esp + 0x18d], bl

        $sequence_1 = { 8bac2414020000 85ed 56 750e a0???????? 84c0 7405 }
            // n = 7, score = 100
            //   8bac2414020000       | mov                 ebp, dword ptr [esp + 0x214]
            //   85ed                 | test                ebp, ebp
            //   56                   | push                esi
            //   750e                 | jne                 0x10
            //   a0????????           |                     
            //   84c0                 | test                al, al
            //   7405                 | je                  7

        $sequence_2 = { 8b542420 8bd8 8d4601 50 52 53 e8???????? }
            // n = 7, score = 100
            //   8b542420             | mov                 edx, dword ptr [esp + 0x20]
            //   8bd8                 | mov                 ebx, eax
            //   8d4601               | lea                 eax, dword ptr [esi + 1]
            //   50                   | push                eax
            //   52                   | push                edx
            //   53                   | push                ebx
            //   e8????????           |                     

        $sequence_3 = { c644242f8c 88442430 c6442431bf c644243288 c6442433be 88542434 88542435 }
            // n = 7, score = 100
            //   c644242f8c           | mov                 byte ptr [esp + 0x2f], 0x8c
            //   88442430             | mov                 byte ptr [esp + 0x30], al
            //   c6442431bf           | mov                 byte ptr [esp + 0x31], 0xbf
            //   c644243288           | mov                 byte ptr [esp + 0x32], 0x88
            //   c6442433be           | mov                 byte ptr [esp + 0x33], 0xbe
            //   88542434             | mov                 byte ptr [esp + 0x34], dl
            //   88542435             | mov                 byte ptr [esp + 0x35], dl

        $sequence_4 = { e8???????? 83c408 e9???????? 6a00 55 e8???????? 6893020000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   e9????????           |                     
            //   6a00                 | push                0
            //   55                   | push                ebp
            //   e8????????           |                     
            //   6893020000           | push                0x293

        $sequence_5 = { e8???????? 83c408 85c0 7520 68930a0000 68???????? 6a10 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7520                 | jne                 0x22
            //   68930a0000           | push                0xa93
            //   68????????           |                     
            //   6a10                 | push                0x10

        $sequence_6 = { 0f8285000000 8b74241c 8b7c2418 c1ed1e 8b4360 8d4b50 51 }
            // n = 7, score = 100
            //   0f8285000000         | jb                  0x8b
            //   8b74241c             | mov                 esi, dword ptr [esp + 0x1c]
            //   8b7c2418             | mov                 edi, dword ptr [esp + 0x18]
            //   c1ed1e               | shr                 ebp, 0x1e
            //   8b4360               | mov                 eax, dword ptr [ebx + 0x60]
            //   8d4b50               | lea                 ecx, dword ptr [ebx + 0x50]
            //   51                   | push                ecx

        $sequence_7 = { e8???????? 8bf8 83c408 3bfb 0f8ee1060000 8b5658 c7825003000080210000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   83c408               | add                 esp, 8
            //   3bfb                 | cmp                 edi, ebx
            //   0f8ee1060000         | jle                 0x6e7
            //   8b5658               | mov                 edx, dword ptr [esi + 0x58]
            //   c7825003000080210000     | mov    dword ptr [edx + 0x350], 0x2180

        $sequence_8 = { e8???????? 8b95c0000000 83c408 894210 8b85c0000000 8b4810 85c9 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b95c0000000         | mov                 edx, dword ptr [ebp + 0xc0]
            //   83c408               | add                 esp, 8
            //   894210               | mov                 dword ptr [edx + 0x10], eax
            //   8b85c0000000         | mov                 eax, dword ptr [ebp + 0xc0]
            //   8b4810               | mov                 ecx, dword ptr [eax + 0x10]
            //   85c9                 | test                ecx, ecx

        $sequence_9 = { 8d442408 50 81c6c4020000 e8???????? 8b442410 8b4c240c 25ffff0000 }
            // n = 7, score = 100
            //   8d442408             | lea                 eax, dword ptr [esp + 8]
            //   50                   | push                eax
            //   81c6c4020000         | add                 esi, 0x2c4
            //   e8????????           |                     
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]
            //   25ffff0000           | and                 eax, 0xffff

    condition:
        7 of them and filesize < 2015232
}