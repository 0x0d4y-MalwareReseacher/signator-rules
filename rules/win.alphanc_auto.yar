rule win_alphanc_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.alphanc."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alphanc"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 3d3b290000 7556 8b0d???????? 53 53 6af8 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   3d3b290000           | cmp                 eax, 0x293b
            //   7556                 | jne                 0x58
            //   8b0d????????         |                     
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   6af8                 | push                -8

        $sequence_1 = { 8b7214 eb09 8b4558 8bb04c030000 56 e8???????? 56 }
            // n = 7, score = 100
            //   8b7214               | mov                 esi, dword ptr [edx + 0x14]
            //   eb09                 | jmp                 0xb
            //   8b4558               | mov                 eax, dword ptr [ebp + 0x58]
            //   8bb04c030000         | mov                 esi, dword ptr [eax + 0x34c]
            //   56                   | push                esi
            //   e8????????           |                     
            //   56                   | push                esi

        $sequence_2 = { e8???????? 8bf0 83c404 3bf3 8975e0 7518 8b5508 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4
            //   3bf3                 | cmp                 esi, ebx
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   7518                 | jne                 0x1a
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]

        $sequence_3 = { 753a 68ae020000 68???????? 55 e8???????? 8bf0 83c40c }
            // n = 7, score = 100
            //   753a                 | jne                 0x3c
            //   68ae020000           | push                0x2ae
            //   68????????           |                     
            //   55                   | push                ebp
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c40c               | add                 esp, 0xc

        $sequence_4 = { e8???????? 83c408 85c0 7527 8b442414 c780a8000000200c4a00 8b4c2420 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7527                 | jne                 0x29
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   c780a8000000200c4a00     | mov    dword ptr [eax + 0xa8], 0x4a0c20
            //   8b4c2420             | mov                 ecx, dword ptr [esp + 0x20]

        $sequence_5 = { e8???????? 83c408 85c0 7c28 8bbc24f0000000 8b4c2414 57 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   85c0                 | test                eax, eax
            //   7c28                 | jl                  0x2a
            //   8bbc24f0000000       | mov                 edi, dword ptr [esp + 0xf0]
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   57                   | push                edi

        $sequence_6 = { c1ea18 8bc3 884e0e 8b4c2430 88560c 8b542428 885e0f }
            // n = 7, score = 100
            //   c1ea18               | shr                 edx, 0x18
            //   8bc3                 | mov                 eax, ebx
            //   884e0e               | mov                 byte ptr [esi + 0xe], cl
            //   8b4c2430             | mov                 ecx, dword ptr [esp + 0x30]
            //   88560c               | mov                 byte ptr [esi + 0xc], dl
            //   8b542428             | mov                 edx, dword ptr [esp + 0x28]
            //   885e0f               | mov                 byte ptr [esi + 0xf], bl

        $sequence_7 = { c1ea1f 22c2 8d56ff f7d3 c1ea1f c1eb1f 22d3 }
            // n = 7, score = 100
            //   c1ea1f               | shr                 edx, 0x1f
            //   22c2                 | and                 al, dl
            //   8d56ff               | lea                 edx, dword ptr [esi - 1]
            //   f7d3                 | not                 ebx
            //   c1ea1f               | shr                 edx, 0x1f
            //   c1eb1f               | shr                 ebx, 0x1f
            //   22d3                 | and                 dl, bl

        $sequence_8 = { e9???????? 8d44246a 50 57 ffd6 85c0 a3???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8d44246a             | lea                 eax, dword ptr [esp + 0x6a]
            //   50                   | push                eax
            //   57                   | push                edi
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   a3????????           |                     

        $sequence_9 = { c3 8b44240c 85c0 740f 8b442408 8b8004010000 c1e806 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]
            //   85c0                 | test                eax, eax
            //   740f                 | je                  0x11
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   8b8004010000         | mov                 eax, dword ptr [eax + 0x104]
            //   c1e806               | shr                 eax, 6

    condition:
        7 of them and filesize < 2015232
}