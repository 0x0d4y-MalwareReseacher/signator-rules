rule win_rapid_ransom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rapid_ransom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rapid_ransom"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 6801000004 6800a40000 ff75f8 ff15???????? }
            // n = 5, score = 300
            //   50                   | push                eax
            //   6801000004           | push                0x4000001
            //   6800a40000           | push                0xa400
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff15????????         |                     

        $sequence_1 = { 8bf0 8d45fc 50 56 8d45f4 50 }
            // n = 6, score = 200
            //   8bf0                 | mov                 esi, eax
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   56                   | push                esi
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax

        $sequence_2 = { 6a02 6a00 6a07 6800000040 51 8bfa }
            // n = 6, score = 200
            //   6a02                 | push                2
            //   6a00                 | push                0
            //   6a07                 | push                7
            //   6800000040           | push                0x40000000
            //   51                   | push                ecx
            //   8bfa                 | mov                 edi, edx

        $sequence_3 = { 50 56 6a00 6a07 6a00 ff75fc ffd7 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   56                   | push                esi
            //   6a00                 | push                0
            //   6a07                 | push                7
            //   6a00                 | push                0
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ffd7                 | call                edi

        $sequence_4 = { eb05 803e00 7509 803a00 0f840c010000 8d742464 b8???????? }
            // n = 7, score = 200
            //   eb05                 | jmp                 7
            //   803e00               | cmp                 byte ptr [esi], 0
            //   7509                 | jne                 0xb
            //   803a00               | cmp                 byte ptr [edx], 0
            //   0f840c010000         | je                  0x112
            //   8d742464             | lea                 esi, [esp + 0x64]
            //   b8????????           |                     

        $sequence_5 = { 83c801 85c0 7415 8b55fc 43 }
            // n = 5, score = 200
            //   83c801               | or                  eax, 1
            //   85c0                 | test                eax, eax
            //   7415                 | je                  0x17
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   43                   | inc                 ebx

        $sequence_6 = { 56 884de0 ff15???????? 83c410 8bc6 5f }
            // n = 6, score = 200
            //   56                   | push                esi
            //   884de0               | mov                 byte ptr [ebp - 0x20], cl
            //   ff15????????         |                     
            //   83c410               | add                 esp, 0x10
            //   8bc6                 | mov                 eax, esi
            //   5f                   | pop                 edi

        $sequence_7 = { 8b4104 894604 8b4108 894608 8d410c 894610 8b4104 }
            // n = 7, score = 200
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]
            //   894604               | mov                 dword ptr [esi + 4], eax
            //   8b4108               | mov                 eax, dword ptr [ecx + 8]
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   8d410c               | lea                 eax, [ecx + 0xc]
            //   894610               | mov                 dword ptr [esi + 0x10], eax
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]

        $sequence_8 = { 6a00 6801001f00 ff15???????? 85c0 0f859b050000 }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   6801001f00           | push                0x1f0001
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f859b050000         | jne                 0x5a1

        $sequence_9 = { 803800 7407 46 803c0600 75f9 8d4701 03c6 }
            // n = 7, score = 100
            //   803800               | cmp                 byte ptr [eax], 0
            //   7407                 | je                  9
            //   46                   | inc                 esi
            //   803c0600             | cmp                 byte ptr [esi + eax], 0
            //   75f9                 | jne                 0xfffffffb
            //   8d4701               | lea                 eax, [edi + 1]
            //   03c6                 | add                 eax, esi

        $sequence_10 = { 57 ff15???????? 85c0 7510 8b7dac }
            // n = 5, score = 100
            //   57                   | push                edi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7510                 | jne                 0x12
            //   8b7dac               | mov                 edi, dword ptr [ebp - 0x54]

        $sequence_11 = { 6bf638 8b04bde8d04100 807c302800 7d3c e8???????? 8b404c 83b8a800000000 }
            // n = 7, score = 100
            //   6bf638               | imul                esi, esi, 0x38
            //   8b04bde8d04100       | mov                 eax, dword ptr [edi*4 + 0x41d0e8]
            //   807c302800           | cmp                 byte ptr [eax + esi + 0x28], 0
            //   7d3c                 | jge                 0x3e
            //   e8????????           |                     
            //   8b404c               | mov                 eax, dword ptr [eax + 0x4c]
            //   83b8a800000000       | cmp                 dword ptr [eax + 0xa8], 0

        $sequence_12 = { 5f a3???????? 8d45f4 50 }
            // n = 4, score = 100
            //   5f                   | pop                 edi
            //   a3????????           |                     
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax

        $sequence_13 = { 33ff 50 33db 897df0 }
            // n = 4, score = 100
            //   33ff                 | xor                 edi, edi
            //   50                   | push                eax
            //   33db                 | xor                 ebx, ebx
            //   897df0               | mov                 dword ptr [ebp - 0x10], edi

        $sequence_14 = { 75f9 8bc8 85c0 780c 803c0b2f }
            // n = 5, score = 100
            //   75f9                 | jne                 0xfffffffb
            //   8bc8                 | mov                 ecx, eax
            //   85c0                 | test                eax, eax
            //   780c                 | js                  0xe
            //   803c0b2f             | cmp                 byte ptr [ebx + ecx], 0x2f

    condition:
        7 of them and filesize < 286720
}