rule win_whiteblackcrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.whiteblackcrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.whiteblackcrypt"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f20f1035???????? 0f853ffeffff 84c9 7410 84c0 }
            // n = 5, score = 100
            //   f20f1035????????     |                     
            //   0f853ffeffff         | dec                 eax
            //   84c9                 | mov                 edi, ebp
            //   7410                 | dec                 eax
            //   84c0                 | mov                 ecx, ebx

        $sequence_1 = { 4989c4 4d63c0 4889c1 e8???????? }
            // n = 4, score = 100
            //   4989c4               | cmp                 esi, -1
            //   4d63c0               | dec                 eax
            //   4889c1               | test                ebp, ebp
            //   e8????????           |                     

        $sequence_2 = { 31c1 324c243a 334c243c 4431e1 4131e8 40326c243d }
            // n = 6, score = 100
            //   31c1                 | mov                 ecx, ebx
            //   324c243a             | dec                 eax
            //   334c243c             | not                 esi
            //   4431e1               | dec                 eax
            //   4131e8               | mov                 ecx, esi
            //   40326c243d           | dec                 eax

        $sequence_3 = { 660f28f4 e9???????? 85c0 f20f1035???????? 0f841bffffff }
            // n = 5, score = 100
            //   660f28f4             | inc                 ecx
            //   e9????????           |                     
            //   85c0                 | mov                 byte ptr [ebx + 0xd], al
            //   f20f1035????????     |                     
            //   0f841bffffff         | inc                 ecx

        $sequence_4 = { 4131cd 0fb6c9 e8???????? 4489f9 4431d0 }
            // n = 5, score = 100
            //   4131cd               | lea                 eax, dword ptr [edx - 0x1010101]
            //   0fb6c9               | not                 edx
            //   e8????????           |                     
            //   4489f9               | mov                 eax, dword ptr [esp + 0x20]
            //   4431d0               | dec                 eax

        $sequence_5 = { 57 56 53 4883ec60 4885c9 4889ce 4889d3 }
            // n = 7, score = 100
            //   57                   | je                  0x1529
            //   56                   | mov                 edx, 0x5c
            //   53                   | mov                 word ptr [ebx], dx
            //   4883ec60             | dec                 ecx
            //   4885c9               | lea                 ebx, dword ptr [ecx + ebp]
            //   4889ce               | je                  0x153f
            //   4889d3               | mov                 eax, dword ptr [esp + 0x20]

        $sequence_6 = { 0f84d4000000 488b8b38020000 e8???????? 48c7c0ffffffff 48898338020000 }
            // n = 5, score = 100
            //   0f84d4000000         | lea                 ebx, dword ptr [esp + 0x50]
            //   488b8b38020000       | dec                 ax
            //   e8????????           |                     
            //   48c7c0ffffffff       | movd                mm3, edi
            //   48898338020000       | jp                  0xc95

        $sequence_7 = { 8801 48ffc1 ebe8 c3 55 }
            // n = 5, score = 100
            //   8801                 | mov                 edi, esi
            //   48ffc1               | inc                 esp
            //   ebe8                 | mov                 ecx, edx
            //   c3                   | inc                 esp
            //   55                   | xor                 edi, ecx

        $sequence_8 = { 0f854effffff 85c0 41b800050000 0f8440ffffff 66480f6eef 660f2eee 7a05 }
            // n = 7, score = 100
            //   0f854effffff         | and                 ecx, 0xfffff
            //   85c0                 | inc                 ecx
            //   41b800050000         | and                 ecx, 0x7ff00000
            //   0f8440ffffff         | or                  ecx, eax
            //   66480f6eef           | ucomisd             xmm0, xmm1
            //   660f2eee             | inc                 ebp
            //   7a05                 | mov                 ebx, ecx

        $sequence_9 = { e8???????? 4531c0 89f2 4889d9 e8???????? 4401e6 4d63c4 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   4531c0               | xor                 eax, eax
            //   89f2                 | dec                 eax
            //   4889d9               | add                 esp, 0x38
            //   e8????????           |                     
            //   4401e6               | ret                 
            //   4d63c4               | jmp                 0x1d02

    condition:
        7 of them and filesize < 99328
}