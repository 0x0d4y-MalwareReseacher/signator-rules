rule win_leash_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.leash."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.leash"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b55e8 53 51 52 e8???????? 83c40c 8d85ccfbffff }
            // n = 7, score = 200
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d85ccfbffff         | lea                 eax, [ebp - 0x434]

        $sequence_1 = { 52 6a10 68???????? e8???????? 8b0d???????? }
            // n = 5, score = 200
            //   52                   | push                edx
            //   6a10                 | push                0x10
            //   68????????           |                     
            //   e8????????           |                     
            //   8b0d????????         |                     

        $sequence_2 = { 57 e8???????? 83c40c 8b9308080000 8bba08040000 }
            // n = 5, score = 200
            //   57                   | push                edi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8b9308080000         | mov                 edx, dword ptr [ebx + 0x808]
            //   8bba08040000         | mov                 edi, dword ptr [edx + 0x408]

        $sequence_3 = { 56 57 ffd3 8bfe 83c9ff 33c0 }
            // n = 6, score = 200
            //   56                   | push                esi
            //   57                   | push                edi
            //   ffd3                 | call                ebx
            //   8bfe                 | mov                 edi, esi
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { 8d8d10ffffff 68???????? 51 e8???????? 8b5de4 83c424 }
            // n = 6, score = 200
            //   8d8d10ffffff         | lea                 ecx, [ebp - 0xf0]
            //   68????????           |                     
            //   51                   | push                ecx
            //   e8????????           |                     
            //   8b5de4               | mov                 ebx, dword ptr [ebp - 0x1c]
            //   83c424               | add                 esp, 0x24

        $sequence_5 = { aa b9ff000000 33c0 8dbd9dccffff 889d9cccffff f3ab }
            // n = 6, score = 200
            //   aa                   | stosb               byte ptr es:[edi], al
            //   b9ff000000           | mov                 ecx, 0xff
            //   33c0                 | xor                 eax, eax
            //   8dbd9dccffff         | lea                 edi, [ebp - 0x3363]
            //   889d9cccffff         | mov                 byte ptr [ebp - 0x3364], bl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_6 = { 8dbd48faffff 8d9510ffffff 83c9ff 33c0 f2ae f7d1 2bf9 }
            // n = 7, score = 200
            //   8dbd48faffff         | lea                 edi, [ebp - 0x5b8]
            //   8d9510ffffff         | lea                 edx, [ebp - 0xf0]
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx

        $sequence_7 = { f3a4 8d4da4 51 68???????? 50 68???????? 50 }
            // n = 7, score = 200
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8d4da4               | lea                 ecx, [ebp - 0x5c]
            //   51                   | push                ecx
            //   68????????           |                     
            //   50                   | push                eax
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_8 = { e8???????? 68???????? 6a00 e8???????? 8a08 83c408 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   68????????           |                     
            //   6a00                 | push                0
            //   e8????????           |                     
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   83c408               | add                 esp, 8

        $sequence_9 = { ff761c e8???????? 8b45fc 3bc3 894640 741d }
            // n = 6, score = 200
            //   ff761c               | push                dword ptr [esi + 0x1c]
            //   e8????????           |                     
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   3bc3                 | cmp                 eax, ebx
            //   894640               | mov                 dword ptr [esi + 0x40], eax
            //   741d                 | je                  0x1f

    condition:
        7 of them and filesize < 761856
}