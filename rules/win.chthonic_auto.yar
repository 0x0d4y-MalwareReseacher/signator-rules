rule win_chthonic_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.chthonic."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chthonic"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 894df0 e9???????? 8b4514 8b4df4 8908 }
            // n = 5, score = 600
            //   894df0               | mov                 dword ptr [ebp - 0x10], ecx
            //   e9????????           |                     
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   8908                 | mov                 dword ptr [eax], ecx

        $sequence_1 = { 729b 8b4508 5f 5e }
            // n = 4, score = 600
            //   729b                 | jb                  0xffffff9d
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_2 = { c1c108 81e1ff00ff00 0bc1 89470c 5f 5e }
            // n = 6, score = 600
            //   c1c108               | rol                 ecx, 8
            //   81e1ff00ff00         | and                 ecx, 0xff00ff
            //   0bc1                 | or                  eax, ecx
            //   89470c               | mov                 dword ptr [edi + 0xc], eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_3 = { 32cb 80e17f 8808 b001 5b c3 }
            // n = 6, score = 600
            //   32cb                 | xor                 cl, bl
            //   80e17f               | and                 cl, 0x7f
            //   8808                 | mov                 byte ptr [eax], cl
            //   b001                 | mov                 al, 1
            //   5b                   | pop                 ebx
            //   c3                   | ret                 

        $sequence_4 = { 3bf3 7cbc 33db 33f6 33ff }
            // n = 5, score = 600
            //   3bf3                 | cmp                 esi, ebx
            //   7cbc                 | jl                  0xffffffbe
            //   33db                 | xor                 ebx, ebx
            //   33f6                 | xor                 esi, esi
            //   33ff                 | xor                 edi, edi

        $sequence_5 = { 33c0 5e 5b c9 c3 0fb706 8b4df4 }
            // n = 7, score = 600
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c3                   | ret                 
            //   0fb706               | movzx               eax, word ptr [esi]
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]

        $sequence_6 = { ff751c ff7518 ff7514 53 ff7510 ff7508 e8???????? }
            // n = 7, score = 600
            //   ff751c               | push                dword ptr [ebp + 0x1c]
            //   ff7518               | push                dword ptr [ebp + 0x18]
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   53                   | push                ebx
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     

        $sequence_7 = { 33f6 33ff 395d0c 7665 46 81e6ff000080 }
            // n = 6, score = 600
            //   33f6                 | xor                 esi, esi
            //   33ff                 | xor                 edi, edi
            //   395d0c               | cmp                 dword ptr [ebp + 0xc], ebx
            //   7665                 | jbe                 0x67
            //   46                   | inc                 esi
            //   81e6ff000080         | and                 esi, 0x800000ff

        $sequence_8 = { 7665 46 81e6ff000080 7908 4e }
            // n = 5, score = 600
            //   7665                 | jbe                 0x67
            //   46                   | inc                 esi
            //   81e6ff000080         | and                 esi, 0x800000ff
            //   7908                 | jns                 0xa
            //   4e                   | dec                 esi

        $sequence_9 = { 0fb6f3 83e10f 8d4c880c 2931 830003 8b00 8ad3 }
            // n = 7, score = 600
            //   0fb6f3               | movzx               esi, bl
            //   83e10f               | and                 ecx, 0xf
            //   8d4c880c             | lea                 ecx, [eax + ecx*4 + 0xc]
            //   2931                 | sub                 dword ptr [ecx], esi
            //   830003               | add                 dword ptr [eax], 3
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8ad3                 | mov                 dl, bl

    condition:
        7 of them and filesize < 425984
}