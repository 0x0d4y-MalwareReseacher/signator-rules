rule win_chthonic_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.chthonic."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.chthonic"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5f c1ee1f e9???????? 8b041a 8bc8 83c204 }
            // n = 6, score = 600
            //   5f                   | pop                 edi
            //   c1ee1f               | shr                 esi, 0x1f
            //   e9????????           |                     
            //   8b041a               | mov                 eax, dword ptr [edx + ebx]
            //   8bc8                 | mov                 ecx, eax
            //   83c204               | add                 edx, 4

        $sequence_1 = { 7459 4f 8bf0 8bcf d3ee 83e601 }
            // n = 6, score = 600
            //   7459                 | je                  0x5b
            //   4f                   | dec                 edi
            //   8bf0                 | mov                 esi, eax
            //   8bcf                 | mov                 ecx, edi
            //   d3ee                 | shr                 esi, cl
            //   83e601               | and                 esi, 1

        $sequence_2 = { 47 8a01 8845ff 8d84bdfcfbffff 8b10 8911 0fb64dff }
            // n = 7, score = 600
            //   47                   | inc                 edi
            //   8a01                 | mov                 al, byte ptr [ecx]
            //   8845ff               | mov                 byte ptr [ebp - 1], al
            //   8d84bdfcfbffff       | lea                 eax, dword ptr [ebp + edi*4 - 0x404]
            //   8b10                 | mov                 edx, dword ptr [eax]
            //   8911                 | mov                 dword ptr [ecx], edx
            //   0fb64dff             | movzx               ecx, byte ptr [ebp - 1]

        $sequence_3 = { 0f845d010000 4f 8bf0 8bcf }
            // n = 4, score = 600
            //   0f845d010000         | je                  0x163
            //   4f                   | dec                 edi
            //   8bf0                 | mov                 esi, eax
            //   8bcf                 | mov                 ecx, edi

        $sequence_4 = { 85f6 74cf 8345fc02 b9000d0000 3b4df8 }
            // n = 5, score = 600
            //   85f6                 | test                esi, esi
            //   74cf                 | je                  0xffffffd1
            //   8345fc02             | add                 dword ptr [ebp - 4], 2
            //   b9000d0000           | mov                 ecx, 0xd00
            //   3b4df8               | cmp                 ecx, dword ptr [ebp - 8]

        $sequence_5 = { 0d00ffffff 40 8a8485fcfbffff 300419 }
            // n = 4, score = 600
            //   0d00ffffff           | or                  eax, 0xffffff00
            //   40                   | inc                 eax
            //   8a8485fcfbffff       | mov                 al, byte ptr [ebp + eax*4 - 0x404]
            //   300419               | xor                 byte ptr [ecx + ebx], al

        $sequence_6 = { 68e8030000 83d101 51 50 e8???????? eb00 }
            // n = 6, score = 600
            //   68e8030000           | push                0x3e8
            //   83d101               | adc                 ecx, 1
            //   51                   | push                ecx
            //   50                   | push                eax
            //   e8????????           |                     
            //   eb00                 | jmp                 2

        $sequence_7 = { 880c33 42 8b5d08 ebd3 c745f801000000 }
            // n = 5, score = 600
            //   880c33               | mov                 byte ptr [ebx + esi], cl
            //   42                   | inc                 edx
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   ebd3                 | jmp                 0xffffffd5
            //   c745f801000000       | mov                 dword ptr [ebp - 8], 1

        $sequence_8 = { b8ecff0000 660145f0 8d45f0 50 56 e8???????? }
            // n = 6, score = 600
            //   b8ecff0000           | mov                 eax, 0xffec
            //   660145f0             | add                 word ptr [ebp - 0x10], ax
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_9 = { 0fb655ff 8911 8b00 8b4d08 }
            // n = 4, score = 600
            //   0fb655ff             | movzx               edx, byte ptr [ebp - 1]
            //   8911                 | mov                 dword ptr [ecx], edx
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 425984
}