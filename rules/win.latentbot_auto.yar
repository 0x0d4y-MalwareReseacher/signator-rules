rule win_latentbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.latentbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.latentbot"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 49 8bcc e8???????? 45 33c9 45 33c0 }
            // n = 7, score = 100
            //   49                   | dec                 ecx
            //   8bcc                 | mov                 ecx, esp
            //   e8????????           |                     
            //   45                   | inc                 ebp
            //   33c9                 | xor                 ecx, ecx
            //   45                   | inc                 ebp
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 894df4 8d4df4 51 68522a4000 56 56 8975f8 }
            // n = 7, score = 100
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8d4df4               | lea                 ecx, [ebp - 0xc]
            //   51                   | push                ecx
            //   68522a4000           | push                0x402a52
            //   56                   | push                esi
            //   56                   | push                esi
            //   8975f8               | mov                 dword ptr [ebp - 8], esi

        $sequence_2 = { ff7514 8945f0 e8???????? 3bc3 0f84bf020000 80780ae8 6a0a }
            // n = 7, score = 100
            //   ff7514               | push                dword ptr [ebp + 0x14]
            //   8945f0               | mov                 dword ptr [ebp - 0x10], eax
            //   e8????????           |                     
            //   3bc3                 | cmp                 eax, ebx
            //   0f84bf020000         | je                  0x2c5
            //   80780ae8             | cmp                 byte ptr [eax + 0xa], 0xe8
            //   6a0a                 | push                0xa

        $sequence_3 = { 7502 46 46 90 24e7 3c26 58 }
            // n = 7, score = 100
            //   7502                 | jne                 4
            //   46                   | inc                 esi
            //   46                   | inc                 esi
            //   90                   | nop                 
            //   24e7                 | and                 al, 0xe7
            //   3c26                 | cmp                 al, 0x26
            //   58                   | pop                 eax

        $sequence_4 = { 3b5d44 0f8316070000 0fb603 8d4b01 }
            // n = 4, score = 100
            //   3b5d44               | cmp                 ebx, dword ptr [ebp + 0x44]
            //   0f8316070000         | jae                 0x71c
            //   0fb603               | movzx               eax, byte ptr [ebx]
            //   8d4b01               | lea                 ecx, [ebx + 1]

        $sequence_5 = { 663bc3 7437 8d4900 0fb7c0 8d68bf 6683fd19 }
            // n = 6, score = 100
            //   663bc3               | cmp                 ax, bx
            //   7437                 | je                  0x39
            //   8d4900               | lea                 ecx, [ecx]
            //   0fb7c0               | movzx               eax, ax
            //   8d68bf               | lea                 ebp, [eax - 0x41]
            //   6683fd19             | cmp                 bp, 0x19

        $sequence_6 = { e8???????? 83c404 85c0 7407 6a41 59 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   6a41                 | push                0x41
            //   59                   | pop                 ecx

        $sequence_7 = { ff54244c 85c0 7d6b 33ff 397c2430 7409 57 }
            // n = 7, score = 100
            //   ff54244c             | call                dword ptr [esp + 0x4c]
            //   85c0                 | test                eax, eax
            //   7d6b                 | jge                 0x6d
            //   33ff                 | xor                 edi, edi
            //   397c2430             | cmp                 dword ptr [esp + 0x30], edi
            //   7409                 | je                  0xb
            //   57                   | push                edi

        $sequence_8 = { 2d00100000 48 ffc9 ebf0 c3 6a04 59 }
            // n = 7, score = 100
            //   2d00100000           | sub                 eax, 0x1000
            //   48                   | dec                 eax
            //   ffc9                 | dec                 ecx
            //   ebf0                 | jmp                 0xfffffff2
            //   c3                   | ret                 
            //   6a04                 | push                4
            //   59                   | pop                 ecx

        $sequence_9 = { 8b16 33c9 51 890e 8bdc 52 }
            // n = 6, score = 100
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   33c9                 | xor                 ecx, ecx
            //   51                   | push                ecx
            //   890e                 | mov                 dword ptr [esi], ecx
            //   8bdc                 | mov                 ebx, esp
            //   52                   | push                edx

    condition:
        7 of them and filesize < 401408
}