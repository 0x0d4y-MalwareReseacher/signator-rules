rule win_bohmini_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.bohmini."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bohmini"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 ffd5 8d8424ac010000 6800040000 50 6a00 ff15???????? }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   ffd5                 | call                ebp
            //   8d8424ac010000       | lea                 eax, [esp + 0x1ac]
            //   6800040000           | push                0x400
            //   50                   | push                eax
            //   6a00                 | push                0
            //   ff15????????         |                     

        $sequence_1 = { 6a01 ffd5 5f 5e 5d 5b }
            // n = 6, score = 100
            //   6a01                 | push                1
            //   ffd5                 | call                ebp
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx

        $sequence_2 = { 8a0b 56 884c2418 33f6 eb04 }
            // n = 5, score = 100
            //   8a0b                 | mov                 cl, byte ptr [ebx]
            //   56                   | push                esi
            //   884c2418             | mov                 byte ptr [esp + 0x18], cl
            //   33f6                 | xor                 esi, esi
            //   eb04                 | jmp                 6

        $sequence_3 = { 8d542410 52 e8???????? 83c404 8bf0 8bfa }
            // n = 6, score = 100
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8bf0                 | mov                 esi, eax
            //   8bfa                 | mov                 edi, edx

        $sequence_4 = { f3a4 ff15???????? 8b0d???????? 5f }
            // n = 4, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   ff15????????         |                     
            //   8b0d????????         |                     
            //   5f                   | pop                 edi

        $sequence_5 = { 8bd8 83fbff 7474 56 8d4c240c 57 51 }
            // n = 7, score = 100
            //   8bd8                 | mov                 ebx, eax
            //   83fbff               | cmp                 ebx, -1
            //   7474                 | je                  0x76
            //   56                   | push                esi
            //   8d4c240c             | lea                 ecx, [esp + 0xc]
            //   57                   | push                edi
            //   51                   | push                ecx

        $sequence_6 = { 8944240c ff15???????? 8b542404 6a00 }
            // n = 4, score = 100
            //   8944240c             | mov                 dword ptr [esp + 0xc], eax
            //   ff15????????         |                     
            //   8b542404             | mov                 edx, dword ptr [esp + 4]
            //   6a00                 | push                0

        $sequence_7 = { 7418 8d542410 6a10 52 e8???????? }
            // n = 5, score = 100
            //   7418                 | je                  0x1a
            //   8d542410             | lea                 edx, [esp + 0x10]
            //   6a10                 | push                0x10
            //   52                   | push                edx
            //   e8????????           |                     

        $sequence_8 = { 7507 c7412088130000 8d542414 6a00 52 ff15???????? }
            // n = 6, score = 100
            //   7507                 | jne                 9
            //   c7412088130000       | mov                 dword ptr [ecx + 0x20], 0x1388
            //   8d542414             | lea                 edx, [esp + 0x14]
            //   6a00                 | push                0
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_9 = { 83c628 3bc1 89442414 0f8248ffffff }
            // n = 4, score = 100
            //   83c628               | add                 esi, 0x28
            //   3bc1                 | cmp                 eax, ecx
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   0f8248ffffff         | jb                  0xffffff4e

    condition:
        7 of them and filesize < 139264
}