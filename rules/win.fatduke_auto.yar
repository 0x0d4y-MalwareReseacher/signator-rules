rule win_fatduke_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.fatduke."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fatduke"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f6e9 88853bfeffff a1???????? 8b0d???????? b172 f6e9 88853cfeffff }
            // n = 7, score = 100
            //   f6e9                 | imul                cl
            //   88853bfeffff         | mov                 byte ptr [ebp - 0x1c5], al
            //   a1????????           |                     
            //   8b0d????????         |                     
            //   b172                 | mov                 cl, 0x72
            //   f6e9                 | imul                cl
            //   88853cfeffff         | mov                 byte ptr [ebp - 0x1c4], al

        $sequence_1 = { f6e9 8b0d???????? 88859dfdffff a1???????? 8ac1 b16e f6e9 }
            // n = 7, score = 100
            //   f6e9                 | imul                cl
            //   8b0d????????         |                     
            //   88859dfdffff         | mov                 byte ptr [ebp - 0x263], al
            //   a1????????           |                     
            //   8ac1                 | mov                 al, cl
            //   b16e                 | mov                 cl, 0x6e
            //   f6e9                 | imul                cl

        $sequence_2 = { c745f064110000 c745ec191b0000 8b4dec 8b45f0 99 f7f9 6893080000 }
            // n = 7, score = 100
            //   c745f064110000       | mov                 dword ptr [ebp - 0x10], 0x1164
            //   c745ec191b0000       | mov                 dword ptr [ebp - 0x14], 0x1b19
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   99                   | cdq                 
            //   f7f9                 | idiv                ecx
            //   6893080000           | push                0x893

        $sequence_3 = { f6e9 8b0d???????? 8845cd a1???????? 8ac1 b16e f6e9 }
            // n = 7, score = 100
            //   f6e9                 | imul                cl
            //   8b0d????????         |                     
            //   8845cd               | mov                 byte ptr [ebp - 0x33], al
            //   a1????????           |                     
            //   8ac1                 | mov                 al, cl
            //   b16e                 | mov                 cl, 0x6e
            //   f6e9                 | imul                cl

        $sequence_4 = { f6e9 8b0d???????? 8845e4 a1???????? 8ac1 89bd68ffffff b172 }
            // n = 7, score = 100
            //   f6e9                 | imul                cl
            //   8b0d????????         |                     
            //   8845e4               | mov                 byte ptr [ebp - 0x1c], al
            //   a1????????           |                     
            //   8ac1                 | mov                 al, cl
            //   89bd68ffffff         | mov                 dword ptr [ebp - 0x98], edi
            //   b172                 | mov                 cl, 0x72

        $sequence_5 = { eb56 68???????? 8d4dc0 e8???????? 8b4da4 8d45c0 56 }
            // n = 7, score = 100
            //   eb56                 | jmp                 0x58
            //   68????????           |                     
            //   8d4dc0               | lea                 ecx, [ebp - 0x40]
            //   e8????????           |                     
            //   8b4da4               | mov                 ecx, dword ptr [ebp - 0x5c]
            //   8d45c0               | lea                 eax, [ebp - 0x40]
            //   56                   | push                esi

        $sequence_6 = { e9???????? 8d8ddcfeffff e9???????? 8d8dd8feffff e9???????? 8d8de4fbffff e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8d8ddcfeffff         | lea                 ecx, [ebp - 0x124]
            //   e9????????           |                     
            //   8d8dd8feffff         | lea                 ecx, [ebp - 0x128]
            //   e9????????           |                     
            //   8d8de4fbffff         | lea                 ecx, [ebp - 0x41c]
            //   e9????????           |                     

        $sequence_7 = { e9???????? 8b8de0f9ffff 81c100020000 e9???????? 8b8de0f9ffff 81c118020000 e9???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8b8de0f9ffff         | mov                 ecx, dword ptr [ebp - 0x620]
            //   81c100020000         | add                 ecx, 0x200
            //   e9????????           |                     
            //   8b8de0f9ffff         | mov                 ecx, dword ptr [ebp - 0x620]
            //   81c118020000         | add                 ecx, 0x218
            //   e9????????           |                     

        $sequence_8 = { f6e9 8b0d???????? 88442445 a1???????? 8ac1 c0e005 02c1 }
            // n = 7, score = 100
            //   f6e9                 | imul                cl
            //   8b0d????????         |                     
            //   88442445             | mov                 byte ptr [esp + 0x45], al
            //   a1????????           |                     
            //   8ac1                 | mov                 al, cl
            //   c0e005               | shl                 al, 5
            //   02c1                 | add                 al, cl

        $sequence_9 = { e8???????? c68424d802000017 8d942490010000 8d8c2484010000 e8???????? c68424d802000018 8b4d08 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c68424d802000017     | mov                 byte ptr [esp + 0x2d8], 0x17
            //   8d942490010000       | lea                 edx, [esp + 0x190]
            //   8d8c2484010000       | lea                 ecx, [esp + 0x184]
            //   e8????????           |                     
            //   c68424d802000018     | mov                 byte ptr [esp + 0x2d8], 0x18
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

    condition:
        7 of them and filesize < 9012224
}