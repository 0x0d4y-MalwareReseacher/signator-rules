rule win_electric_powder_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.electric_powder."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.electric_powder"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 56 e8???????? 83c428 eb1b 53 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c428               | add                 esp, 0x28
            //   eb1b                 | jmp                 0x1d
            //   53                   | push                ebx

        $sequence_1 = { 33c0 5f 5d c20800 b9ffffff7f 8d4201 2bca }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   b9ffffff7f           | mov                 ecx, 0x7fffffff
            //   8d4201               | lea                 eax, [edx + 1]
            //   2bca                 | sub                 ecx, edx

        $sequence_2 = { 55 8bec 6aff 68???????? 64a100000000 50 b8a0110000 }
            // n = 7, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   6aff                 | push                -1
            //   68????????           |                     
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   50                   | push                eax
            //   b8a0110000           | mov                 eax, 0x11a0

        $sequence_3 = { 0f435508 837e1410 7202 8b3e 8bc1 83e01f }
            // n = 6, score = 100
            //   0f435508             | cmovae              edx, dword ptr [ebp + 8]
            //   837e1410             | cmp                 dword ptr [esi + 0x14], 0x10
            //   7202                 | jb                  4
            //   8b3e                 | mov                 edi, dword ptr [esi]
            //   8bc1                 | mov                 eax, ecx
            //   83e01f               | and                 eax, 0x1f

        $sequence_4 = { 33c9 41 33c0 8bf1 894dec 8b4dfc 8b55f4 }
            // n = 7, score = 100
            //   33c9                 | xor                 ecx, ecx
            //   41                   | inc                 ecx
            //   33c0                 | xor                 eax, eax
            //   8bf1                 | mov                 esi, ecx
            //   894dec               | mov                 dword ptr [ebp - 0x14], ecx
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]

        $sequence_5 = { 33c0 eb0a 83c102 b801000000 890f 6683395d 743b }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   eb0a                 | jmp                 0xc
            //   83c102               | add                 ecx, 2
            //   b801000000           | mov                 eax, 1
            //   890f                 | mov                 dword ptr [edi], ecx
            //   6683395d             | cmp                 word ptr [ecx], 0x5d
            //   743b                 | je                  0x3d

        $sequence_6 = { 7220 8d7a23 3bfa 764a 8bd7 a81f }
            // n = 6, score = 100
            //   7220                 | jb                  0x22
            //   8d7a23               | lea                 edi, [edx + 0x23]
            //   3bfa                 | cmp                 edi, edx
            //   764a                 | jbe                 0x4c
            //   8bd7                 | mov                 edx, edi
            //   a81f                 | test                al, 0x1f

        $sequence_7 = { c785a8efffff15000000 6a2a 8db598efffff 0f43b598efffff 68???????? 56 e8???????? }
            // n = 7, score = 100
            //   c785a8efffff15000000     | mov    dword ptr [ebp - 0x1058], 0x15
            //   6a2a                 | push                0x2a
            //   8db598efffff         | lea                 esi, [ebp - 0x1068]
            //   0f43b598efffff       | cmovae              esi, dword ptr [ebp - 0x1068]
            //   68????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_8 = { 8bca 8d4102 898538efffff 668b01 83c102 6685c0 }
            // n = 6, score = 100
            //   8bca                 | mov                 ecx, edx
            //   8d4102               | lea                 eax, [ecx + 2]
            //   898538efffff         | mov                 dword ptr [ebp - 0x10c8], eax
            //   668b01               | mov                 ax, word ptr [ecx]
            //   83c102               | add                 ecx, 2
            //   6685c0               | test                ax, ax

        $sequence_9 = { 68???????? 8807 e8???????? c645fc01 83c8ff 8b8decfbffff 83c1f0 }
            // n = 7, score = 100
            //   68????????           |                     
            //   8807                 | mov                 byte ptr [edi], al
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   83c8ff               | or                  eax, 0xffffffff
            //   8b8decfbffff         | mov                 ecx, dword ptr [ebp - 0x414]
            //   83c1f0               | add                 ecx, -0x10

    condition:
        7 of them and filesize < 565248
}