rule win_electric_powder_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.electric_powder."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.electric_powder"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a01 68???????? 8d8d50fdffff c78560fdffff00000000 c78564fdffff0f000000 c68550fdffff00 e8???????? }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   68????????           |                     
            //   8d8d50fdffff         | lea                 ecx, dword ptr [ebp - 0x2b0]
            //   c78560fdffff00000000     | mov    dword ptr [ebp - 0x2a0], 0
            //   c78564fdffff0f000000     | mov    dword ptr [ebp - 0x29c], 0xf
            //   c68550fdffff00       | mov                 byte ptr [ebp - 0x2b0], 0
            //   e8????????           |                     

        $sequence_1 = { 68???????? c60600 e8???????? c645fc00 }
            // n = 4, score = 100
            //   68????????           |                     
            //   c60600               | mov                 byte ptr [esi], 0
            //   e8????????           |                     
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0

        $sequence_2 = { 8d8520fdffff ba???????? 50 8d8d90fcffff e8???????? 8d8d58fbffff }
            // n = 6, score = 100
            //   8d8520fdffff         | lea                 eax, dword ptr [ebp - 0x2e0]
            //   ba????????           |                     
            //   50                   | push                eax
            //   8d8d90fcffff         | lea                 ecx, dword ptr [ebp - 0x370]
            //   e8????????           |                     
            //   8d8d58fbffff         | lea                 ecx, dword ptr [ebp - 0x4a8]

        $sequence_3 = { e8???????? 83c404 89450c 8bc8 57 ff7508 897e10 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   89450c               | mov                 dword ptr [ebp + 0xc], eax
            //   8bc8                 | mov                 ecx, eax
            //   57                   | push                edi
            //   ff7508               | push                dword ptr [ebp + 8]
            //   897e10               | mov                 dword ptr [esi + 0x10], edi

        $sequence_4 = { 50 8b08 ff5108 ff15???????? c645fc02 83ceff }
            // n = 6, score = 100
            //   50                   | push                eax
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   ff5108               | call                dword ptr [ecx + 8]
            //   ff15????????         |                     
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   83ceff               | or                  esi, 0xffffffff

        $sequence_5 = { 8bd6 c1fa06 83e03f 57 6bf830 8955f4 8b1495d0fa4300 }
            // n = 7, score = 100
            //   8bd6                 | mov                 edx, esi
            //   c1fa06               | sar                 edx, 6
            //   83e03f               | and                 eax, 0x3f
            //   57                   | push                edi
            //   6bf830               | imul                edi, eax, 0x30
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8b1495d0fa4300       | mov                 edx, dword ptr [edx*4 + 0x43fad0]

        $sequence_6 = { 668b01 83c102 6685c0 75f5 2bca 8d8580fdffff d1f9 }
            // n = 7, score = 100
            //   668b01               | mov                 ax, word ptr [ecx]
            //   83c102               | add                 ecx, 2
            //   6685c0               | test                ax, ax
            //   75f5                 | jne                 0xfffffff7
            //   2bca                 | sub                 ecx, edx
            //   8d8580fdffff         | lea                 eax, dword ptr [ebp - 0x280]
            //   d1f9                 | sar                 ecx, 1

        $sequence_7 = { 75f1 eb2b ff750c 8d4102 8bce 894508 8d4508 }
            // n = 7, score = 100
            //   75f1                 | jne                 0xfffffff3
            //   eb2b                 | jmp                 0x2d
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   8d4102               | lea                 eax, dword ptr [ecx + 2]
            //   8bce                 | mov                 ecx, esi
            //   894508               | mov                 dword ptr [ebp + 8], eax
            //   8d4508               | lea                 eax, dword ptr [ebp + 8]

        $sequence_8 = { 8807 e8???????? c645fc01 83c8ff 8b8decfbffff 83c1f0 f00fc1410c }
            // n = 7, score = 100
            //   8807                 | mov                 byte ptr [edi], al
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   83c8ff               | or                  eax, 0xffffffff
            //   8b8decfbffff         | mov                 ecx, dword ptr [ebp - 0x414]
            //   83c1f0               | add                 ecx, -0x10
            //   f00fc1410c           | lock xadd           dword ptr [ecx + 0xc], eax

        $sequence_9 = { 8b4d08 8d5010 8b4704 85c9 750d 52 }
            // n = 6, score = 100
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8d5010               | lea                 edx, dword ptr [eax + 0x10]
            //   8b4704               | mov                 eax, dword ptr [edi + 4]
            //   85c9                 | test                ecx, ecx
            //   750d                 | jne                 0xf
            //   52                   | push                edx

    condition:
        7 of them and filesize < 565248
}