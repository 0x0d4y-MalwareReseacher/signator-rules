rule win_electric_powder_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.electric_powder."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.electric_powder"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bca 6bc030 c1f906 03048dd0fa4300 eb02 8bc7 80782900 }
            // n = 7, score = 100
            //   8bca                 | mov                 ecx, edx
            //   6bc030               | imul                eax, eax, 0x30
            //   c1f906               | sar                 ecx, 6
            //   03048dd0fa4300       | add                 eax, dword ptr [ecx*4 + 0x43fad0]
            //   eb02                 | jmp                 4
            //   8bc7                 | mov                 eax, edi
            //   80782900             | cmp                 byte ptr [eax + 0x29], 0

        $sequence_1 = { 8b4614 83c40c 40 3dffffff7f 7745 03c0 3d00100000 }
            // n = 7, score = 100
            //   8b4614               | mov                 eax, dword ptr [esi + 0x14]
            //   83c40c               | add                 esp, 0xc
            //   40                   | inc                 eax
            //   3dffffff7f           | cmp                 eax, 0x7fffffff
            //   7745                 | ja                  0x47
            //   03c0                 | add                 eax, eax
            //   3d00100000           | cmp                 eax, 0x1000

        $sequence_2 = { 8d7223 3bf2 7640 8bd6 5e a81f 7539 }
            // n = 7, score = 100
            //   8d7223               | lea                 esi, [edx + 0x23]
            //   3bf2                 | cmp                 esi, edx
            //   7640                 | jbe                 0x42
            //   8bd6                 | mov                 edx, esi
            //   5e                   | pop                 esi
            //   a81f                 | test                al, 0x1f
            //   7539                 | jne                 0x3b

        $sequence_3 = { 8d0440 8d04c7 894608 8b4df4 64890d00000000 59 5f }
            // n = 7, score = 100
            //   8d0440               | lea                 eax, [eax + eax*2]
            //   8d04c7               | lea                 eax, [edi + eax*8]
            //   894608               | mov                 dword ptr [esi + 8], eax
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx
            //   5f                   | pop                 edi

        $sequence_4 = { 68???????? c685fceeffff00 8bce ffb5fceeffff 6a01 e8???????? 8d8d98efffff }
            // n = 7, score = 100
            //   68????????           |                     
            //   c685fceeffff00       | mov                 byte ptr [ebp - 0x1104], 0
            //   8bce                 | mov                 ecx, esi
            //   ffb5fceeffff         | push                dword ptr [ebp - 0x1104]
            //   6a01                 | push                1
            //   e8????????           |                     
            //   8d8d98efffff         | lea                 ecx, [ebp - 0x1068]

        $sequence_5 = { 8b4018 99 8955fc 8b4ddc 8b55e4 8b0c8dd0fa4300 f644112804 }
            // n = 7, score = 100
            //   8b4018               | mov                 eax, dword ptr [eax + 0x18]
            //   99                   | cdq                 
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   8b0c8dd0fa4300       | mov                 ecx, dword ptr [ecx*4 + 0x43fad0]
            //   f644112804           | test                byte ptr [ecx + edx + 0x28], 4

        $sequence_6 = { 46 897dd4 837f1410 8bde 8bcf 7205 8b0f }
            // n = 7, score = 100
            //   46                   | inc                 esi
            //   897dd4               | mov                 dword ptr [ebp - 0x2c], edi
            //   837f1410             | cmp                 dword ptr [edi + 0x14], 0x10
            //   8bde                 | mov                 ebx, esi
            //   8bcf                 | mov                 ecx, edi
            //   7205                 | jb                  7
            //   8b0f                 | mov                 ecx, dword ptr [edi]

        $sequence_7 = { 8d45c4 50 8b45e8 0345cc 8b37 50 52 }
            // n = 7, score = 100
            //   8d45c4               | lea                 eax, [ebp - 0x3c]
            //   50                   | push                eax
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   0345cc               | add                 eax, dword ptr [ebp - 0x34]
            //   8b37                 | mov                 esi, dword ptr [edi]
            //   50                   | push                eax
            //   52                   | push                edx

        $sequence_8 = { 0094a843003c19 43 00a4a443004019 43 00441943 004819 43 }
            // n = 7, score = 100
            //   0094a843003c19       | add                 byte ptr [eax + ebp*4 + 0x193c0043], dl
            //   43                   | inc                 ebx
            //   00a4a443004019       | add                 byte ptr [esp + 0x19400043], ah
            //   43                   | inc                 ebx
            //   00441943             | add                 byte ptr [ecx + ebx + 0x43], al
            //   004819               | add                 byte ptr [eax + 0x19], cl
            //   43                   | inc                 ebx

        $sequence_9 = { 53 8bd9 56 51 895dfc 8b4308 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   8bd9                 | mov                 ebx, ecx
            //   56                   | push                esi
            //   51                   | push                ecx
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   8b4308               | mov                 eax, dword ptr [ebx + 8]

    condition:
        7 of them and filesize < 565248
}