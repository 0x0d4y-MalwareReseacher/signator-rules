rule win_woolger_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.woolger."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.woolger"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 7506 50 e8???????? 68???????? 68b80b0000 6a00 }
            // n = 7, score = 200
            //   85c0                 | test                eax, eax
            //   7506                 | jne                 8
            //   50                   | push                eax
            //   e8????????           |                     
            //   68????????           |                     
            //   68b80b0000           | push                0xbb8
            //   6a00                 | push                0

        $sequence_1 = { 83ec54 6a40 8d45b0 6a00 50 c745ac44000000 e8???????? }
            // n = 7, score = 200
            //   83ec54               | sub                 esp, 0x54
            //   6a40                 | push                0x40
            //   8d45b0               | lea                 eax, dword ptr [ebp - 0x50]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   c745ac44000000       | mov                 dword ptr [ebp - 0x54], 0x44
            //   e8????????           |                     

        $sequence_2 = { ffd3 6a00 6a00 6a00 8d8dd4f4ffff 51 }
            // n = 6, score = 200
            //   ffd3                 | call                ebx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d8dd4f4ffff         | lea                 ecx, dword ptr [ebp - 0xb2c]
            //   51                   | push                ecx

        $sequence_3 = { 50 f3a4 ff15???????? 6a00 ff15???????? 6a00 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6a00                 | push                0

        $sequence_4 = { 85c0 7506 50 e8???????? 68???????? 68b80b0000 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   7506                 | jne                 8
            //   50                   | push                eax
            //   e8????????           |                     
            //   68????????           |                     
            //   68b80b0000           | push                0xbb8

        $sequence_5 = { be???????? e9???????? 83f826 750a be???????? e9???????? 83f827 }
            // n = 7, score = 200
            //   be????????           |                     
            //   e9????????           |                     
            //   83f826               | cmp                 eax, 0x26
            //   750a                 | jne                 0xc
            //   be????????           |                     
            //   e9????????           |                     
            //   83f827               | cmp                 eax, 0x27

        $sequence_6 = { 53 57 8b7d10 89bdecfeffff 0f8c50020000 8b450c 3d00010000 }
            // n = 7, score = 200
            //   53                   | push                ebx
            //   57                   | push                edi
            //   8b7d10               | mov                 edi, dword ptr [ebp + 0x10]
            //   89bdecfeffff         | mov                 dword ptr [ebp - 0x114], edi
            //   0f8c50020000         | jl                  0x256
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   3d00010000           | cmp                 eax, 0x100

        $sequence_7 = { b90d000000 be???????? f3a5 66a5 8dbdfcf8ffff }
            // n = 5, score = 200
            //   b90d000000           | mov                 ecx, 0xd
            //   be????????           |                     
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]
            //   8dbdfcf8ffff         | lea                 edi, dword ptr [ebp - 0x704]

        $sequence_8 = { 84d2 75f9 8dbdfcf8ffff 2bc1 8bf1 }
            // n = 5, score = 200
            //   84d2                 | test                dl, dl
            //   75f9                 | jne                 0xfffffffb
            //   8dbdfcf8ffff         | lea                 edi, dword ptr [ebp - 0x704]
            //   2bc1                 | sub                 eax, ecx
            //   8bf1                 | mov                 esi, ecx

        $sequence_9 = { cc 6a10 68???????? e8???????? 33f6 }
            // n = 5, score = 200
            //   cc                   | int3                
            //   6a10                 | push                0x10
            //   68????????           |                     
            //   e8????????           |                     
            //   33f6                 | xor                 esi, esi

    condition:
        7 of them and filesize < 196608
}