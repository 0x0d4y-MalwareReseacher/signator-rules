rule win_woolger_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.woolger."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.woolger"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83e103 50 f3a4 ff15???????? 6a00 ff15???????? 6a00 }
            // n = 7, score = 200
            //   83e103               | and                 ecx, 3
            //   50                   | push                eax
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6a00                 | push                0

        $sequence_1 = { ffd3 6a00 6a00 6a00 8d8dd4f4ffff 51 }
            // n = 6, score = 200
            //   ffd3                 | call                ebx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d8dd4f4ffff         | lea                 ecx, [ebp - 0xb2c]
            //   51                   | push                ecx

        $sequence_2 = { 8d8dfcfdffff 51 50 ff15???????? b9???????? 8d85fcfdffff 8d9b00000000 }
            // n = 7, score = 200
            //   8d8dfcfdffff         | lea                 ecx, [ebp - 0x204]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff15????????         |                     
            //   b9????????           |                     
            //   8d85fcfdffff         | lea                 eax, [ebp - 0x204]
            //   8d9b00000000         | lea                 ebx, [ebx]

        $sequence_3 = { 56 8985f4f4ffff ffd7 8dbdfcf8ffff 8985f8f4ffff c685fcf8ffff00 }
            // n = 6, score = 200
            //   56                   | push                esi
            //   8985f4f4ffff         | mov                 dword ptr [ebp - 0xb0c], eax
            //   ffd7                 | call                edi
            //   8dbdfcf8ffff         | lea                 edi, [ebp - 0x704]
            //   8985f8f4ffff         | mov                 dword ptr [ebp - 0xb08], eax
            //   c685fcf8ffff00       | mov                 byte ptr [ebp - 0x704], 0

        $sequence_4 = { 8bf0 56 57 e8???????? 56 e8???????? 8b4dfc }
            // n = 7, score = 200
            //   8bf0                 | mov                 esi, eax
            //   56                   | push                esi
            //   57                   | push                edi
            //   e8????????           |                     
            //   56                   | push                esi
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

        $sequence_5 = { 85c0 7506 50 e8???????? 68???????? 68b80b0000 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   7506                 | jne                 8
            //   50                   | push                eax
            //   e8????????           |                     
            //   68????????           |                     
            //   68b80b0000           | push                0xbb8

        $sequence_6 = { 83f828 750a be???????? e9???????? 83f82c 750a be???????? }
            // n = 7, score = 200
            //   83f828               | cmp                 eax, 0x28
            //   750a                 | jne                 0xc
            //   be????????           |                     
            //   e9????????           |                     
            //   83f82c               | cmp                 eax, 0x2c
            //   750a                 | jne                 0xc
            //   be????????           |                     

        $sequence_7 = { f3a4 ff15???????? 6a00 ff15???????? 6a00 50 }
            // n = 6, score = 200
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6a00                 | push                0
            //   50                   | push                eax

        $sequence_8 = { 66a5 8dbdfcf8ffff 4f 8a4701 47 84c0 }
            // n = 6, score = 200
            //   66a5                 | movsw               word ptr es:[edi], word ptr [esi]
            //   8dbdfcf8ffff         | lea                 edi, [ebp - 0x704]
            //   4f                   | dec                 edi
            //   8a4701               | mov                 al, byte ptr [edi + 1]
            //   47                   | inc                 edi
            //   84c0                 | test                al, al

        $sequence_9 = { 8bf0 83c408 85f6 7465 57 6a02 }
            // n = 6, score = 200
            //   8bf0                 | mov                 esi, eax
            //   83c408               | add                 esp, 8
            //   85f6                 | test                esi, esi
            //   7465                 | je                  0x67
            //   57                   | push                edi
            //   6a02                 | push                2

    condition:
        7 of them and filesize < 196608
}