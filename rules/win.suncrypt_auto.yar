rule win_suncrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.suncrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suncrypt"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f91d 72ec 8a4de2 8d855cffffff 8d55e2 84c9 7419 }
            // n = 7, score = 200
            //   83f91d               | cmp                 ecx, 0x1d
            //   72ec                 | jb                  0xffffffee
            //   8a4de2               | mov                 cl, byte ptr [ebp - 0x1e]
            //   8d855cffffff         | lea                 eax, dword ptr [ebp - 0xa4]
            //   8d55e2               | lea                 edx, dword ptr [ebp - 0x1e]
            //   84c9                 | test                cl, cl
            //   7419                 | je                  0x1b

        $sequence_1 = { 8d85f4fdffff 50 53 ff15???????? 5f 5e 5b }
            // n = 7, score = 200
            //   8d85f4fdffff         | lea                 eax, dword ptr [ebp - 0x20c]
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx

        $sequence_2 = { 8be5 5d c3 8b02 8b400c 3d???????? 74e6 }
            // n = 7, score = 200
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   3d????????           |                     
            //   74e6                 | je                  0xffffffe8

        $sequence_3 = { c645cb7d c645cc68 c645cd6c c645ce22 c645cf38 c645d079 c645d168 }
            // n = 7, score = 200
            //   c645cb7d             | mov                 byte ptr [ebp - 0x35], 0x7d
            //   c645cc68             | mov                 byte ptr [ebp - 0x34], 0x68
            //   c645cd6c             | mov                 byte ptr [ebp - 0x33], 0x6c
            //   c645ce22             | mov                 byte ptr [ebp - 0x32], 0x22
            //   c645cf38             | mov                 byte ptr [ebp - 0x31], 0x38
            //   c645d079             | mov                 byte ptr [ebp - 0x30], 0x79
            //   c645d168             | mov                 byte ptr [ebp - 0x2f], 0x68

        $sequence_4 = { 03ca 33f1 894dd0 8b4df0 c1c608 8975c0 0375f4 }
            // n = 7, score = 200
            //   03ca                 | add                 ecx, edx
            //   33f1                 | xor                 esi, ecx
            //   894dd0               | mov                 dword ptr [ebp - 0x30], ecx
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   c1c608               | rol                 esi, 8
            //   8975c0               | mov                 dword ptr [ebp - 0x40], esi
            //   0375f4               | add                 esi, dword ptr [ebp - 0xc]

        $sequence_5 = { 8a45f8 0f1f440000 8a440df8 0fbec0 83e802 88440df8 41 }
            // n = 7, score = 200
            //   8a45f8               | mov                 al, byte ptr [ebp - 8]
            //   0f1f440000           | nop                 dword ptr [eax + eax]
            //   8a440df8             | mov                 al, byte ptr [ebp + ecx - 8]
            //   0fbec0               | movsx               eax, al
            //   83e802               | sub                 eax, 2
            //   88440df8             | mov                 byte ptr [ebp + ecx - 8], al
            //   41                   | inc                 ecx

        $sequence_6 = { 8d85c8feffff 50 e8???????? 83c418 be04000000 8d85c8feffff }
            // n = 6, score = 200
            //   8d85c8feffff         | lea                 eax, dword ptr [ebp - 0x138]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   be04000000           | mov                 esi, 4
            //   8d85c8feffff         | lea                 eax, dword ptr [ebp - 0x138]

        $sequence_7 = { 8bbd78ffffff c1c008 898524ffffff 03c1 8b8d38ffffff 33d0 034d98 }
            // n = 7, score = 200
            //   8bbd78ffffff         | mov                 edi, dword ptr [ebp - 0x88]
            //   c1c008               | rol                 eax, 8
            //   898524ffffff         | mov                 dword ptr [ebp - 0xdc], eax
            //   03c1                 | add                 eax, ecx
            //   8b8d38ffffff         | mov                 ecx, dword ptr [ebp - 0xc8]
            //   33d0                 | xor                 edx, eax
            //   034d98               | add                 ecx, dword ptr [ebp - 0x68]

        $sequence_8 = { ff15???????? 6af6 ffd7 5f 5e 8be5 }
            // n = 6, score = 200
            //   ff15????????         |                     
            //   6af6                 | push                -0xa
            //   ffd7                 | call                edi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   8be5                 | mov                 esp, ebp

        $sequence_9 = { 03c8 8b4508 13f2 0fa4ce01 89705c 03c9 894858 }
            // n = 7, score = 200
            //   03c8                 | add                 ecx, eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   13f2                 | adc                 esi, edx
            //   0fa4ce01             | shld                esi, ecx, 1
            //   89705c               | mov                 dword ptr [eax + 0x5c], esi
            //   03c9                 | add                 ecx, ecx
            //   894858               | mov                 dword ptr [eax + 0x58], ecx

    condition:
        7 of them and filesize < 172032
}