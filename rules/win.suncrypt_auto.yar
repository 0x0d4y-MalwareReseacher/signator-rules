rule win_suncrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.suncrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suncrypt"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f294590 660fefe2 660f380025???????? 0f28c6 0f2975b0 660ffec3 0f28dc }
            // n = 7, score = 200
            //   0f294590             | movaps              xmmword ptr [ebp - 0x70], xmm0
            //   660fefe2             | pxor                xmm4, xmm2
            //   660f380025????????     |     
            //   0f28c6               | movaps              xmm0, xmm6
            //   0f2975b0             | movaps              xmmword ptr [ebp - 0x50], xmm6
            //   660ffec3             | paddd               xmm0, xmm3
            //   0f28dc               | movaps              xmm3, xmm4

        $sequence_1 = { 84c0 0f8570ffffff 5f 5e }
            // n = 4, score = 200
            //   84c0                 | test                al, al
            //   0f8570ffffff         | jne                 0xffffff76
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_2 = { 33cf c1c107 894dc4 8b4d84 03cb 8bf1 }
            // n = 6, score = 200
            //   33cf                 | xor                 ecx, edi
            //   c1c107               | rol                 ecx, 7
            //   894dc4               | mov                 dword ptr [ebp - 0x3c], ecx
            //   8b4d84               | mov                 ecx, dword ptr [ebp - 0x7c]
            //   03cb                 | add                 ecx, ebx
            //   8bf1                 | mov                 esi, ecx

        $sequence_3 = { 6898000000 8945f4 8d85acfbffff 6a00 }
            // n = 4, score = 200
            //   6898000000           | push                0x98
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   8d85acfbffff         | lea                 eax, dword ptr [ebp - 0x454]
            //   6a00                 | push                0

        $sequence_4 = { e8???????? 8d8590fdffff 50 8d8578feffff 50 8d85e0fdffff }
            // n = 6, score = 200
            //   e8????????           |                     
            //   8d8590fdffff         | lea                 eax, dword ptr [ebp - 0x270]
            //   50                   | push                eax
            //   8d8578feffff         | lea                 eax, dword ptr [ebp - 0x188]
            //   50                   | push                eax
            //   8d85e0fdffff         | lea                 eax, dword ptr [ebp - 0x220]

        $sequence_5 = { 8b45c0 0422 83f02a 8845e6 }
            // n = 4, score = 200
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   0422                 | add                 al, 0x22
            //   83f02a               | xor                 eax, 0x2a
            //   8845e6               | mov                 byte ptr [ebp - 0x1a], al

        $sequence_6 = { 50 e8???????? 0fa4c209 c1e009 }
            // n = 4, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   0fa4c209             | shld                edx, eax, 9
            //   c1e009               | shl                 eax, 9

        $sequence_7 = { c645ef4e c645f068 c645f14e c645f257 c645f34c c645f45b }
            // n = 6, score = 200
            //   c645ef4e             | mov                 byte ptr [ebp - 0x11], 0x4e
            //   c645f068             | mov                 byte ptr [ebp - 0x10], 0x68
            //   c645f14e             | mov                 byte ptr [ebp - 0xf], 0x4e
            //   c645f257             | mov                 byte ptr [ebp - 0xe], 0x57
            //   c645f34c             | mov                 byte ptr [ebp - 0xd], 0x4c
            //   c645f45b             | mov                 byte ptr [ebp - 0xc], 0x5b

        $sequence_8 = { 660f72d114 660febc8 0f2845d0 0f28e1 660ffee2 0f28d7 660ffe9560ffffff }
            // n = 7, score = 200
            //   660f72d114           | psrld               xmm1, 0x14
            //   660febc8             | por                 xmm1, xmm0
            //   0f2845d0             | movaps              xmm0, xmmword ptr [ebp - 0x30]
            //   0f28e1               | movaps              xmm4, xmm1
            //   660ffee2             | paddd               xmm4, xmm2
            //   0f28d7               | movaps              xmm2, xmm7
            //   660ffe9560ffffff     | paddd               xmm2, xmmword ptr [ebp - 0xa0]

        $sequence_9 = { 46 8b03 85c0 0f844d010000 c70300000000 8bd8 895d0c }
            // n = 7, score = 200
            //   46                   | inc                 esi
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   85c0                 | test                eax, eax
            //   0f844d010000         | je                  0x153
            //   c70300000000         | mov                 dword ptr [ebx], 0
            //   8bd8                 | mov                 ebx, eax
            //   895d0c               | mov                 dword ptr [ebp + 0xc], ebx

    condition:
        7 of them and filesize < 172032
}