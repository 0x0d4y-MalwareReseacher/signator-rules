rule win_suncrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.suncrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suncrypt"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 83c404 8b35???????? 6888130000 ffd6 833d????????00 7505 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b35????????         |                     
            //   6888130000           | push                0x1388
            //   ffd6                 | call                esi
            //   833d????????00       |                     
            //   7505                 | jne                 7

        $sequence_1 = { 0411 83f020 8845d5 8b45c0 }
            // n = 4, score = 200
            //   0411                 | add                 al, 0x11
            //   83f020               | xor                 eax, 0x20
            //   8845d5               | mov                 byte ptr [ebp - 0x2b], al
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]

        $sequence_2 = { c7470400000000 c70700000000 837b0800 7505 897b08 }
            // n = 5, score = 200
            //   c7470400000000       | mov                 dword ptr [edi + 4], 0
            //   c70700000000         | mov                 dword ptr [edi], 0
            //   837b0800             | cmp                 dword ptr [ebx + 8], 0
            //   7505                 | jne                 7
            //   897b08               | mov                 dword ptr [ebx + 8], edi

        $sequence_3 = { ff75f8 8bf0 8b4508 56 6aff 50 a1???????? }
            // n = 7, score = 200
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   8bf0                 | mov                 esi, eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   6aff                 | push                -1
            //   50                   | push                eax
            //   a1????????           |                     

        $sequence_4 = { 8b75c4 8d45d4 50 56 8d45fc 50 ff75d0 }
            // n = 7, score = 200
            //   8b75c4               | mov                 esi, dword ptr [ebp - 0x3c]
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   50                   | push                eax
            //   56                   | push                esi
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   ff75d0               | push                dword ptr [ebp - 0x30]

        $sequence_5 = { 8b4818 8b7810 8b18 8b7008 894df4 8b4820 }
            // n = 6, score = 200
            //   8b4818               | mov                 ecx, dword ptr [eax + 0x18]
            //   8b7810               | mov                 edi, dword ptr [eax + 0x10]
            //   8b18                 | mov                 ebx, dword ptr [eax]
            //   8b7008               | mov                 esi, dword ptr [eax + 8]
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   8b4820               | mov                 ecx, dword ptr [eax + 0x20]

        $sequence_6 = { 6841db0100 ffb50cffffff 894598 ffb508ffffff 89559c e8???????? 6a00 }
            // n = 7, score = 200
            //   6841db0100           | push                0x1db41
            //   ffb50cffffff         | push                dword ptr [ebp - 0xf4]
            //   894598               | mov                 dword ptr [ebp - 0x68], eax
            //   ffb508ffffff         | push                dword ptr [ebp - 0xf8]
            //   89559c               | mov                 dword ptr [ebp - 0x64], edx
            //   e8????????           |                     
            //   6a00                 | push                0

        $sequence_7 = { 8b45dc 041a 83f043 8845fa 8b45dc 041b 83f06f }
            // n = 7, score = 200
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   041a                 | add                 al, 0x1a
            //   83f043               | xor                 eax, 0x43
            //   8845fa               | mov                 byte ptr [ebp - 6], al
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   041b                 | add                 al, 0x1b
            //   83f06f               | xor                 eax, 0x6f

        $sequence_8 = { 897d98 8b7de0 33c6 037dc4 c1c00c 03c8 894d88 }
            // n = 7, score = 200
            //   897d98               | mov                 dword ptr [ebp - 0x68], edi
            //   8b7de0               | mov                 edi, dword ptr [ebp - 0x20]
            //   33c6                 | xor                 eax, esi
            //   037dc4               | add                 edi, dword ptr [ebp - 0x3c]
            //   c1c00c               | rol                 eax, 0xc
            //   03c8                 | add                 ecx, eax
            //   894d88               | mov                 dword ptr [ebp - 0x78], ecx

        $sequence_9 = { 85d2 743d 80c980 884c35f4 8ac8 46 c1e807 }
            // n = 7, score = 200
            //   85d2                 | test                edx, edx
            //   743d                 | je                  0x3f
            //   80c980               | or                  cl, 0x80
            //   884c35f4             | mov                 byte ptr [ebp + esi - 0xc], cl
            //   8ac8                 | mov                 cl, al
            //   46                   | inc                 esi
            //   c1e807               | shr                 eax, 7

    condition:
        7 of them and filesize < 172032
}