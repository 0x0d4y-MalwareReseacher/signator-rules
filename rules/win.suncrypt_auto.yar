rule win_suncrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.suncrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suncrypt"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83f91d 72ec 8a4de2 8d855cffffff 8d55e2 84c9 7419 }
            // n = 7, score = 200
            //   83f91d               | cmp                 ecx, 0x1d
            //   72ec                 | jb                  0xffffffee
            //   8a4de2               | mov                 cl, byte ptr [ebp - 0x1e]
            //   8d855cffffff         | lea                 eax, [ebp - 0xa4]
            //   8d55e2               | lea                 edx, [ebp - 0x1e]
            //   84c9                 | test                cl, cl
            //   7419                 | je                  0x1b

        $sequence_1 = { 33c0 803d????????01 56 0f95c0 c745d000000000 6800040000 8945cc }
            // n = 7, score = 200
            //   33c0                 | xor                 eax, eax
            //   803d????????01       |                     
            //   56                   | push                esi
            //   0f95c0               | setne               al
            //   c745d000000000       | mov                 dword ptr [ebp - 0x30], 0
            //   6800040000           | push                0x400
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax

        $sequence_2 = { 57 53 56 e8???????? 83c408 84c0 }
            // n = 6, score = 200
            //   57                   | push                edi
            //   53                   | push                ebx
            //   56                   | push                esi
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   84c0                 | test                al, al

        $sequence_3 = { 8b45e0 83f072 8845e4 8b45e0 fec0 83f065 8845e5 }
            // n = 7, score = 200
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   83f072               | xor                 eax, 0x72
            //   8845e4               | mov                 byte ptr [ebp - 0x1c], al
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]
            //   fec0                 | inc                 al
            //   83f065               | xor                 eax, 0x65
            //   8845e5               | mov                 byte ptr [ebp - 0x1b], al

        $sequence_4 = { bf41000000 894dfc 8bd1 8a1a 8d5201 0fbe30 0fbecb }
            // n = 7, score = 200
            //   bf41000000           | mov                 edi, 0x41
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8bd1                 | mov                 edx, ecx
            //   8a1a                 | mov                 bl, byte ptr [edx]
            //   8d5201               | lea                 edx, [edx + 1]
            //   0fbe30               | movsx               esi, byte ptr [eax]
            //   0fbecb               | movsx               ecx, bl

        $sequence_5 = { 0410 83f075 8845d4 8b45c0 0411 }
            // n = 5, score = 200
            //   0410                 | add                 al, 0x10
            //   83f075               | xor                 eax, 0x75
            //   8845d4               | mov                 byte ptr [ebp - 0x2c], al
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   0411                 | add                 al, 0x11

        $sequence_6 = { 8d8518ffffff 0f108578ffffff 50 0f118538feffff 0f104588 0f118548feffff 0f104598 }
            // n = 7, score = 200
            //   8d8518ffffff         | lea                 eax, [ebp - 0xe8]
            //   0f108578ffffff       | movups              xmm0, xmmword ptr [ebp - 0x88]
            //   50                   | push                eax
            //   0f118538feffff       | movups              xmmword ptr [ebp - 0x1c8], xmm0
            //   0f104588             | movups              xmm0, xmmword ptr [ebp - 0x78]
            //   0f118548feffff       | movups              xmmword ptr [ebp - 0x1b8], xmm0
            //   0f104598             | movups              xmm0, xmmword ptr [ebp - 0x68]

        $sequence_7 = { 8b45dc 0419 83f077 8845f9 8b45dc 041a 83f043 }
            // n = 7, score = 200
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   0419                 | add                 al, 0x19
            //   83f077               | xor                 eax, 0x77
            //   8845f9               | mov                 byte ptr [ebp - 7], al
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   041a                 | add                 al, 0x1a
            //   83f043               | xor                 eax, 0x43

        $sequence_8 = { 3bf9 72f5 803800 753d 6a00 57 }
            // n = 6, score = 200
            //   3bf9                 | cmp                 edi, ecx
            //   72f5                 | jb                  0xfffffff7
            //   803800               | cmp                 byte ptr [eax], 0
            //   753d                 | jne                 0x3f
            //   6a00                 | push                0
            //   57                   | push                edi

        $sequence_9 = { 8a0a 84c9 7410 2bd6 8a06 46 3ac1 }
            // n = 7, score = 200
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   84c9                 | test                cl, cl
            //   7410                 | je                  0x12
            //   2bd6                 | sub                 edx, esi
            //   8a06                 | mov                 al, byte ptr [esi]
            //   46                   | inc                 esi
            //   3ac1                 | cmp                 al, cl

    condition:
        7 of them and filesize < 172032
}