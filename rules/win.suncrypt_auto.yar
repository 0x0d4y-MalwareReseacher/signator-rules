rule win_suncrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.suncrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.suncrypt"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5d c3 33c0 b901000000 50 51 56 }
            // n = 7, score = 200
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   33c0                 | xor                 eax, eax
            //   b901000000           | mov                 ecx, 1
            //   50                   | push                eax
            //   51                   | push                ecx
            //   56                   | push                esi

        $sequence_1 = { 894de4 33ce c1c108 894dcc 03ca 8b55f4 8bd9 }
            // n = 7, score = 200
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   33ce                 | xor                 ecx, esi
            //   c1c108               | rol                 ecx, 8
            //   894dcc               | mov                 dword ptr [ebp - 0x34], ecx
            //   03ca                 | add                 ecx, edx
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   8bd9                 | mov                 ebx, ecx

        $sequence_2 = { 8945ac 89856cffffff 8d0c02 8bc7 33c1 }
            // n = 5, score = 200
            //   8945ac               | mov                 dword ptr [ebp - 0x54], eax
            //   89856cffffff         | mov                 dword ptr [ebp - 0x94], eax
            //   8d0c02               | lea                 ecx, [edx + eax]
            //   8bc7                 | mov                 eax, edi
            //   33c1                 | xor                 eax, ecx

        $sequence_3 = { 0431 83f020 8845f5 8b45c0 0432 83f074 }
            // n = 6, score = 200
            //   0431                 | add                 al, 0x31
            //   83f020               | xor                 eax, 0x20
            //   8845f5               | mov                 byte ptr [ebp - 0xb], al
            //   8b45c0               | mov                 eax, dword ptr [ebp - 0x40]
            //   0432                 | add                 al, 0x32
            //   83f074               | xor                 eax, 0x74

        $sequence_4 = { 3c40 7518 8b06 8b400c 85c0 74a7 }
            // n = 6, score = 200
            //   3c40                 | cmp                 al, 0x40
            //   7518                 | jne                 0x1a
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   85c0                 | test                eax, eax
            //   74a7                 | je                  0xffffffa9

        $sequence_5 = { 83c002 50 ff75e8 8d470c c7470400000000 }
            // n = 5, score = 200
            //   83c002               | add                 eax, 2
            //   50                   | push                eax
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   8d470c               | lea                 eax, [edi + 0xc]
            //   c7470400000000       | mov                 dword ptr [edi + 4], 0

        $sequence_6 = { 2bd6 8a06 46 3ac1 7548 8a0c32 84c9 }
            // n = 7, score = 200
            //   2bd6                 | sub                 edx, esi
            //   8a06                 | mov                 al, byte ptr [esi]
            //   46                   | inc                 esi
            //   3ac1                 | cmp                 al, cl
            //   7548                 | jne                 0x4a
            //   8a0c32               | mov                 cl, byte ptr [edx + esi]
            //   84c9                 | test                cl, cl

        $sequence_7 = { 83c40c 5e 5d c3 8b550c 85d2 7406 }
            // n = 7, score = 200
            //   83c40c               | add                 esp, 0xc
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   85d2                 | test                edx, edx
            //   7406                 | je                  8

        $sequence_8 = { 894598 8b8544ffffff 8945fc 8b853cffffff 8955d0 8945ec }
            // n = 6, score = 200
            //   894598               | mov                 dword ptr [ebp - 0x68], eax
            //   8b8544ffffff         | mov                 eax, dword ptr [ebp - 0xbc]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8b853cffffff         | mov                 eax, dword ptr [ebp - 0xc4]
            //   8955d0               | mov                 dword ptr [ebp - 0x30], edx
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax

        $sequence_9 = { 85d2 743d 80c980 884c35f4 8ac8 46 c1e807 }
            // n = 7, score = 200
            //   85d2                 | test                edx, edx
            //   743d                 | je                  0x3f
            //   80c980               | or                  cl, 0x80
            //   884c35f4             | mov                 byte ptr [ebp + esi - 0xc], cl
            //   8ac8                 | mov                 cl, al
            //   46                   | inc                 esi
            //   c1e807               | shr                 eax, 7

    condition:
        7 of them and filesize < 172032
}