rule win_unidentified_001_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.unidentified_001."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_001"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 2dfb030000 0f841bfbffff 2d0b020000 741b 2dff030000 0f8409fbffff 2defeb0000 }
            // n = 7, score = 100
            //   2dfb030000           | sub                 eax, 0x3fb
            //   0f841bfbffff         | je                  0xfffffb21
            //   2d0b020000           | sub                 eax, 0x20b
            //   741b                 | je                  0x1d
            //   2dff030000           | sub                 eax, 0x3ff
            //   0f8409fbffff         | je                  0xfffffb0f
            //   2defeb0000           | sub                 eax, 0xebef

        $sequence_1 = { 3d45535000 0f847afdffff 3d53545000 0f8412020000 3d43595000 0f850efbffff }
            // n = 6, score = 100
            //   3d45535000           | cmp                 eax, 0x505345
            //   0f847afdffff         | je                  0xfffffd80
            //   3d53545000           | cmp                 eax, 0x505453
            //   0f8412020000         | je                  0x218
            //   3d43595000           | cmp                 eax, 0x505943
            //   0f850efbffff         | jne                 0xfffffb14

        $sequence_2 = { e9???????? 2d42444900 0f84abfeffff 2d02060000 0f8441feffff }
            // n = 5, score = 100
            //   e9????????           |                     
            //   2d42444900           | sub                 eax, 0x494442
            //   0f84abfeffff         | je                  0xfffffeb1
            //   2d02060000           | sub                 eax, 0x602
            //   0f8441feffff         | je                  0xfffffe47

        $sequence_3 = { 6896000000 ffd6 8b3d???????? 6a00 6a09 bb00010000 53 }
            // n = 7, score = 100
            //   6896000000           | push                0x96
            //   ffd6                 | call                esi
            //   8b3d????????         |                     
            //   6a00                 | push                0
            //   6a09                 | push                9
            //   bb00010000           | mov                 ebx, 0x100
            //   53                   | push                ebx

        $sequence_4 = { 40 40 663bcb 75f6 2bc2 d1f8 8945fc }
            // n = 7, score = 100
            //   40                   | inc                 eax
            //   40                   | inc                 eax
            //   663bcb               | cmp                 cx, bx
            //   75f6                 | jne                 0xfffffff8
            //   2bc2                 | sub                 eax, edx
            //   d1f8                 | sar                 eax, 1
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_5 = { 57 33ff 395dfc 7e4c 8d4608 }
            // n = 5, score = 100
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   395dfc               | cmp                 dword ptr [ebp - 4], ebx
            //   7e4c                 | jle                 0x4e
            //   8d4608               | lea                 eax, dword ptr [esi + 8]

        $sequence_6 = { 83ec54 53 33db 8d4de4 895de4 }
            // n = 5, score = 100
            //   83ec54               | sub                 esp, 0x54
            //   53                   | push                ebx
            //   33db                 | xor                 ebx, ebx
            //   8d4de4               | lea                 ecx, dword ptr [ebp - 0x1c]
            //   895de4               | mov                 dword ptr [ebp - 0x1c], ebx

        $sequence_7 = { e8???????? 8d45d4 50 6a07 57 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8d45d4               | lea                 eax, dword ptr [ebp - 0x2c]
            //   50                   | push                eax
            //   6a07                 | push                7
            //   57                   | push                edi

        $sequence_8 = { 4f 668b4702 03fe 6685c0 75f5 be???????? }
            // n = 6, score = 100
            //   4f                   | dec                 edi
            //   668b4702             | mov                 ax, word ptr [edi + 2]
            //   03fe                 | add                 edi, esi
            //   6685c0               | test                ax, ax
            //   75f5                 | jne                 0xfffffff7
            //   be????????           |                     

        $sequence_9 = { 3bc3 7406 8b08 50 ff5108 ff45ec }
            // n = 6, score = 100
            //   3bc3                 | cmp                 eax, ebx
            //   7406                 | je                  8
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   50                   | push                eax
            //   ff5108               | call                dword ptr [ecx + 8]
            //   ff45ec               | inc                 dword ptr [ebp - 0x14]

    condition:
        7 of them and filesize < 65536
}