rule win_ryuk_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.ryuk_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ryuk_stealer"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 05???????? 50 8d85b4fdffff 50 e8???????? }
            // n = 5, score = 800
            //   05????????           |                     
            //   50                   | push                eax
            //   8d85b4fdffff         | lea                 eax, [ebp - 0x24c]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { 8bca 83e103 f3a4 6a64 8d44245c }
            // n = 5, score = 800
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   6a64                 | push                0x64
            //   8d44245c             | lea                 eax, [esp + 0x5c]

        $sequence_2 = { f3a5 8bca 83e103 f3a4 6a64 8d44245c }
            // n = 6, score = 800
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   6a64                 | push                0x64
            //   8d44245c             | lea                 eax, [esp + 0x5c]

        $sequence_3 = { 8a443706 3c2f 7404 3c2d }
            // n = 4, score = 800
            //   8a443706             | mov                 al, byte ptr [edi + esi + 6]
            //   3c2f                 | cmp                 al, 0x2f
            //   7404                 | je                  6
            //   3c2d                 | cmp                 al, 0x2d

        $sequence_4 = { b910270000 f7f1 8bf2 e8???????? 8bc8 33d2 8bc6 }
            // n = 7, score = 800
            //   b910270000           | mov                 ecx, 0x2710
            //   f7f1                 | div                 ecx
            //   8bf2                 | mov                 esi, edx
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   33d2                 | xor                 edx, edx
            //   8bc6                 | mov                 eax, esi

        $sequence_5 = { b9a0860100 f7f9 81c2f8240100 52 ff15???????? 46 83fe03 }
            // n = 7, score = 800
            //   b9a0860100           | mov                 ecx, 0x186a0
            //   f7f9                 | idiv                ecx
            //   81c2f8240100         | add                 edx, 0x124f8
            //   52                   | push                edx
            //   ff15????????         |                     
            //   46                   | inc                 esi
            //   83fe03               | cmp                 esi, 3

        $sequence_6 = { ff15???????? 8d442454 50 ff15???????? 50 ff15???????? 8bf0 }
            // n = 7, score = 800
            //   ff15????????         |                     
            //   8d442454             | lea                 eax, [esp + 0x54]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_7 = { 99 b9a0860100 f7f9 81c2f8240100 52 ff15???????? 46 }
            // n = 7, score = 800
            //   99                   | cdq                 
            //   b9a0860100           | mov                 ecx, 0x186a0
            //   f7f9                 | idiv                ecx
            //   81c2f8240100         | add                 edx, 0x124f8
            //   52                   | push                edx
            //   ff15????????         |                     
            //   46                   | inc                 esi

        $sequence_8 = { 6800000080 51 ff15???????? 8bf8 83ffff 7507 }
            // n = 6, score = 800
            //   6800000080           | push                0x80000000
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   83ffff               | cmp                 edi, -1
            //   7507                 | jne                 9

        $sequence_9 = { f7f1 8bf2 e8???????? 8bc8 33d2 }
            // n = 5, score = 800
            //   f7f1                 | div                 ecx
            //   8bf2                 | mov                 esi, edx
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   33d2                 | xor                 edx, edx

    condition:
        7 of them and filesize < 368640
}