rule win_ryuk_stealer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.ryuk_stealer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ryuk_stealer"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7547 8b450c 33f6 83e801 }
            // n = 4, score = 400
            //   7547                 | jne                 0x49
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   33f6                 | xor                 esi, esi
            //   83e801               | sub                 eax, 1

        $sequence_1 = { 8b4508 56 be???????? c745ec2c574100 }
            // n = 4, score = 400
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   be????????           |                     
            //   c745ec2c574100       | mov                 dword ptr [ebp - 0x14], 0x41572c

        $sequence_2 = { 85c0 0f848e000000 0fb6443301 50 }
            // n = 4, score = 400
            //   85c0                 | test                eax, eax
            //   0f848e000000         | je                  0x94
            //   0fb6443301           | movzx               eax, byte ptr [ebx + esi + 1]
            //   50                   | push                eax

        $sequence_3 = { 83c40c 8bcb 8d5602 8bfb 668b06 83c602 663bc3 }
            // n = 7, score = 400
            //   83c40c               | add                 esp, 0xc
            //   8bcb                 | mov                 ecx, ebx
            //   8d5602               | lea                 edx, dword ptr [esi + 2]
            //   8bfb                 | mov                 edi, ebx
            //   668b06               | mov                 ax, word ptr [esi]
            //   83c602               | add                 esi, 2
            //   663bc3               | cmp                 ax, bx

        $sequence_4 = { 8d95b4fdffff 8bf2 668b02 83c202 663bc7 75f5 }
            // n = 6, score = 400
            //   8d95b4fdffff         | lea                 edx, dword ptr [ebp - 0x24c]
            //   8bf2                 | mov                 esi, edx
            //   668b02               | mov                 ax, word ptr [edx]
            //   83c202               | add                 edx, 2
            //   663bc7               | cmp                 ax, di
            //   75f5                 | jne                 0xfffffff7

        $sequence_5 = { c745e0a47a4100 eba2 894ddc c745e0a47a4100 e9???????? c745dc03000000 c745e0b07a4100 }
            // n = 7, score = 400
            //   c745e0a47a4100       | mov                 dword ptr [ebp - 0x20], 0x417aa4
            //   eba2                 | jmp                 0xffffffa4
            //   894ddc               | mov                 dword ptr [ebp - 0x24], ecx
            //   c745e0a47a4100       | mov                 dword ptr [ebp - 0x20], 0x417aa4
            //   e9????????           |                     
            //   c745dc03000000       | mov                 dword ptr [ebp - 0x24], 3
            //   c745e0b07a4100       | mov                 dword ptr [ebp - 0x20], 0x417ab0

        $sequence_6 = { 747e 0fb6443702 50 e8???????? 59 85c0 746e }
            // n = 7, score = 400
            //   747e                 | je                  0x80
            //   0fb6443702           | movzx               eax, byte ptr [edi + esi + 2]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   746e                 | je                  0x70

        $sequence_7 = { 43 3bdf 0f8256ffffff 33c0 5f 5e }
            // n = 6, score = 400
            //   43                   | inc                 ebx
            //   3bdf                 | cmp                 ebx, edi
            //   0f8256ffffff         | jb                  0xffffff5c
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_8 = { 75f3 6a0a 8d45f8 50 52 }
            // n = 5, score = 400
            //   75f3                 | jne                 0xfffffff5
            //   6a0a                 | push                0xa
            //   8d45f8               | lea                 eax, dword ptr [ebp - 8]
            //   50                   | push                eax
            //   52                   | push                edx

        $sequence_9 = { 0f85d5000000 47 8d43f6 3bf8 0f8672faffff 33ff 83c3f5 }
            // n = 7, score = 400
            //   0f85d5000000         | jne                 0xdb
            //   47                   | inc                 edi
            //   8d43f6               | lea                 eax, dword ptr [ebx - 0xa]
            //   3bf8                 | cmp                 edi, eax
            //   0f8672faffff         | jbe                 0xfffffa78
            //   33ff                 | xor                 edi, edi
            //   83c3f5               | add                 ebx, -0xb

    condition:
        7 of them and filesize < 368640
}