rule win_molerat_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.molerat_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.molerat_loader"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4db4 51 b9???????? e8???????? a1???????? 83c0f0 50 }
            // n = 7, score = 100
            //   8d4db4               | lea                 ecx, [ebp - 0x4c]
            //   51                   | push                ecx
            //   b9????????           |                     
            //   e8????????           |                     
            //   a1????????           |                     
            //   83c0f0               | add                 eax, -0x10
            //   50                   | push                eax

        $sequence_1 = { e8???????? 68???????? 8d4d40 c645fc08 e8???????? 8b4540 83c0f0 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   68????????           |                     
            //   8d4d40               | lea                 ecx, [ebp + 0x40]
            //   c645fc08             | mov                 byte ptr [ebp - 4], 8
            //   e8????????           |                     
            //   8b4540               | mov                 eax, dword ptr [ebp + 0x40]
            //   83c0f0               | add                 eax, -0x10

        $sequence_2 = { e8???????? 83c408 84c0 7474 837d1402 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   84c0                 | test                al, al
            //   7474                 | je                  0x76
            //   837d1402             | cmp                 dword ptr [ebp + 0x14], 2

        $sequence_3 = { d1f8 eb02 33c0 8d744602 3b742418 72b5 895c2418 }
            // n = 7, score = 100
            //   d1f8                 | sar                 eax, 1
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   8d744602             | lea                 esi, [esi + eax*2 + 2]
            //   3b742418             | cmp                 esi, dword ptr [esp + 0x18]
            //   72b5                 | jb                  0xffffffb7
            //   895c2418             | mov                 dword ptr [esp + 0x18], ebx

        $sequence_4 = { ffd0 c645fc22 8b45a4 83c0f0 8d480c }
            // n = 5, score = 100
            //   ffd0                 | call                eax
            //   c645fc22             | mov                 byte ptr [ebp - 4], 0x22
            //   8b45a4               | mov                 eax, dword ptr [ebp - 0x5c]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, [eax + 0xc]

        $sequence_5 = { c745ec9dc84100 894df8 8945fc 64a100000000 8945e8 8d45e8 64a300000000 }
            // n = 7, score = 100
            //   c745ec9dc84100       | mov                 dword ptr [ebp - 0x14], 0x41c89d
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   64a100000000         | mov                 eax, dword ptr fs:[0]
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   64a300000000         | mov                 dword ptr fs:[0], eax

        $sequence_6 = { 8d45e0 50 83ec10 8bc4 8b5dc0 8918 }
            // n = 6, score = 100
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   50                   | push                eax
            //   83ec10               | sub                 esp, 0x10
            //   8bc4                 | mov                 eax, esp
            //   8b5dc0               | mov                 ebx, dword ptr [ebp - 0x40]
            //   8918                 | mov                 dword ptr [eax], ebx

        $sequence_7 = { 894dc8 8b55dc 8b3a 8d45e0 50 83ec10 8bc4 }
            // n = 7, score = 100
            //   894dc8               | mov                 dword ptr [ebp - 0x38], ecx
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]
            //   8b3a                 | mov                 edi, dword ptr [edx]
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   50                   | push                eax
            //   83ec10               | sub                 esp, 0x10
            //   8bc4                 | mov                 eax, esp

        $sequence_8 = { 8b11 50 8b4204 ffd0 68???????? 68???????? }
            // n = 6, score = 100
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   50                   | push                eax
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   ffd0                 | call                eax
            //   68????????           |                     
            //   68????????           |                     

        $sequence_9 = { 83c40c 8d953cffffff 52 50 8d85c4fdffff 50 c645fc41 }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   8d953cffffff         | lea                 edx, [ebp - 0xc4]
            //   52                   | push                edx
            //   50                   | push                eax
            //   8d85c4fdffff         | lea                 eax, [ebp - 0x23c]
            //   50                   | push                eax
            //   c645fc41             | mov                 byte ptr [ebp - 4], 0x41

    condition:
        7 of them and filesize < 688128
}