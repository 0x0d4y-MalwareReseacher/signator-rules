rule win_molerat_loader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.molerat_loader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.molerat_loader"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d9558ffffff 52 50 8d85ecfdffff 50 c645fc1b e8???????? }
            // n = 7, score = 100
            //   8d9558ffffff         | lea                 edx, dword ptr [ebp - 0xa8]
            //   52                   | push                edx
            //   50                   | push                eax
            //   8d85ecfdffff         | lea                 eax, dword ptr [ebp - 0x214]
            //   50                   | push                eax
            //   c645fc1b             | mov                 byte ptr [ebp - 4], 0x1b
            //   e8????????           |                     

        $sequence_1 = { 8b4204 ffd0 c645fc02 8b85f4fdffff 83c0f0 8d480c 83caff }
            // n = 7, score = 100
            //   8b4204               | mov                 eax, dword ptr [edx + 4]
            //   ffd0                 | call                eax
            //   c645fc02             | mov                 byte ptr [ebp - 4], 2
            //   8b85f4fdffff         | mov                 eax, dword ptr [ebp - 0x20c]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, dword ptr [eax + 0xc]
            //   83caff               | or                  edx, 0xffffffff

        $sequence_2 = { 8bf0 8b442414 83c0f0 8d480c 8bd5 f00fc111 4a }
            // n = 7, score = 100
            //   8bf0                 | mov                 esi, eax
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, dword ptr [eax + 0xc]
            //   8bd5                 | mov                 edx, ebp
            //   f00fc111             | lock xadd           dword ptr [ecx], edx
            //   4a                   | dec                 edx

        $sequence_3 = { 50 c645fc57 e8???????? 83c40c 68???????? 50 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   c645fc57             | mov                 byte ptr [ebp - 4], 0x57
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_4 = { 8b46f4 3bf8 0f8d9e000000 85ff }
            // n = 4, score = 100
            //   8b46f4               | mov                 eax, dword ptr [esi - 0xc]
            //   3bf8                 | cmp                 edi, eax
            //   0f8d9e000000         | jge                 0xa4
            //   85ff                 | test                edi, edi

        $sequence_5 = { 68???????? 8d8df0feffff e8???????? 8b85f0feffff 83c0f0 8d480c 83caff }
            // n = 7, score = 100
            //   68????????           |                     
            //   8d8df0feffff         | lea                 ecx, dword ptr [ebp - 0x110]
            //   e8????????           |                     
            //   8b85f0feffff         | mov                 eax, dword ptr [ebp - 0x110]
            //   83c0f0               | add                 eax, -0x10
            //   8d480c               | lea                 ecx, dword ptr [eax + 0xc]
            //   83caff               | or                  edx, 0xffffffff

        $sequence_6 = { 83c40c 68???????? 50 8d4de0 b330 51 885dfc }
            // n = 7, score = 100
            //   83c40c               | add                 esp, 0xc
            //   68????????           |                     
            //   50                   | push                eax
            //   8d4de0               | lea                 ecx, dword ptr [ebp - 0x20]
            //   b330                 | mov                 bl, 0x30
            //   51                   | push                ecx
            //   885dfc               | mov                 byte ptr [ebp - 4], bl

        $sequence_7 = { 83c404 8d4d00 e8???????? 8b5578 }
            // n = 4, score = 100
            //   83c404               | add                 esp, 4
            //   8d4d00               | lea                 ecx, dword ptr [ebp]
            //   e8????????           |                     
            //   8b5578               | mov                 edx, dword ptr [ebp + 0x78]

        $sequence_8 = { 68???????? 6a00 ffd6 68???????? 8d4dec e8???????? 8b45ec }
            // n = 7, score = 100
            //   68????????           |                     
            //   6a00                 | push                0
            //   ffd6                 | call                esi
            //   68????????           |                     
            //   8d4dec               | lea                 ecx, dword ptr [ebp - 0x14]
            //   e8????????           |                     
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]

        $sequence_9 = { 0f95c0 84c0 0f8427060000 8d4dbc }
            // n = 4, score = 100
            //   0f95c0               | setne               al
            //   84c0                 | test                al, al
            //   0f8427060000         | je                  0x62d
            //   8d4dbc               | lea                 ecx, dword ptr [ebp - 0x44]

    condition:
        7 of them and filesize < 688128
}