rule win_synccrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.synccrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.synccrypt"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c780a000000098335a00 c780a40000000e335a00 c780a8000000a0335a00 c780ac000000a8335a00 c780b0000000b0335a00 c780b4000000b8335a00 c780b8000000c0335a00 }
            // n = 7, score = 100
            //   c780a000000098335a00     | mov    dword ptr [eax + 0xa0], 0x5a3398
            //   c780a40000000e335a00     | mov    dword ptr [eax + 0xa4], 0x5a330e
            //   c780a8000000a0335a00     | mov    dword ptr [eax + 0xa8], 0x5a33a0
            //   c780ac000000a8335a00     | mov    dword ptr [eax + 0xac], 0x5a33a8
            //   c780b0000000b0335a00     | mov    dword ptr [eax + 0xb0], 0x5a33b0
            //   c780b4000000b8335a00     | mov    dword ptr [eax + 0xb4], 0x5a33b8
            //   c780b8000000c0335a00     | mov    dword ptr [eax + 0xb8], 0x5a33c0

        $sequence_1 = { e8???????? c744240430000000 8b85fc2bfcff 89d9 890424 e8???????? 52 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c744240430000000     | mov                 dword ptr [esp + 4], 0x30
            //   8b85fc2bfcff         | mov                 eax, dword ptr [ebp - 0x3d404]
            //   89d9                 | mov                 ecx, ebx
            //   890424               | mov                 dword ptr [esp], eax
            //   e8????????           |                     
            //   52                   | push                edx

        $sequence_2 = { 891c24 89442408 ff9308010000 83832401000001 31c0 e9???????? 8b442438 }
            // n = 7, score = 100
            //   891c24               | mov                 dword ptr [esp], ebx
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   ff9308010000         | call                dword ptr [ebx + 0x108]
            //   83832401000001       | add                 dword ptr [ebx + 0x124], 1
            //   31c0                 | xor                 eax, eax
            //   e9????????           |                     
            //   8b442438             | mov                 eax, dword ptr [esp + 0x38]

        $sequence_3 = { 8d1492 8d5451d0 83c001 0fbe08 8d59d0 80fb09 76e3 }
            // n = 7, score = 100
            //   8d1492               | lea                 edx, [edx + edx*4]
            //   8d5451d0             | lea                 edx, [ecx + edx*2 - 0x30]
            //   83c001               | add                 eax, 1
            //   0fbe08               | movsx               ecx, byte ptr [eax]
            //   8d59d0               | lea                 ebx, [ecx - 0x30]
            //   80fb09               | cmp                 bl, 9
            //   76e3                 | jbe                 0xffffffe5

        $sequence_4 = { 85ff 8d148b 8b4248 740d 898b8c010000 c7424800000000 85f6 }
            // n = 7, score = 100
            //   85ff                 | test                edi, edi
            //   8d148b               | lea                 edx, [ebx + ecx*4]
            //   8b4248               | mov                 eax, dword ptr [edx + 0x48]
            //   740d                 | je                  0xf
            //   898b8c010000         | mov                 dword ptr [ebx + 0x18c], ecx
            //   c7424800000000       | mov                 dword ptr [edx + 0x48], 0
            //   85f6                 | test                esi, esi

        $sequence_5 = { c644031c80 83c001 83f838 0f87eb000000 ba38000000 29c2 01f8 }
            // n = 7, score = 100
            //   c644031c80           | mov                 byte ptr [ebx + eax + 0x1c], 0x80
            //   83c001               | add                 eax, 1
            //   83f838               | cmp                 eax, 0x38
            //   0f87eb000000         | ja                  0xf1
            //   ba38000000           | mov                 edx, 0x38
            //   29c2                 | sub                 edx, eax
            //   01f8                 | add                 eax, edi

        $sequence_6 = { e8???????? 85c0 8b54244c 0f8e93faffff 817c243c97010000 8954243c 0f8523030000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   8b54244c             | mov                 edx, dword ptr [esp + 0x4c]
            //   0f8e93faffff         | jle                 0xfffffa99
            //   817c243c97010000     | cmp                 dword ptr [esp + 0x3c], 0x197
            //   8954243c             | mov                 dword ptr [esp + 0x3c], edx
            //   0f8523030000         | jne                 0x329

        $sequence_7 = { c7442410f0010000 c744240c80165900 c7442408a7000000 c7442404a4000000 c7042422000000 e8???????? e9???????? }
            // n = 7, score = 100
            //   c7442410f0010000     | mov                 dword ptr [esp + 0x10], 0x1f0
            //   c744240c80165900     | mov                 dword ptr [esp + 0xc], 0x591680
            //   c7442408a7000000     | mov                 dword ptr [esp + 8], 0xa7
            //   c7442404a4000000     | mov                 dword ptr [esp + 4], 0xa4
            //   c7042422000000       | mov                 dword ptr [esp], 0x22
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_8 = { 85f6 7405 833e10 743b c74424105d000000 c744240ce0f05800 31f6 }
            // n = 7, score = 100
            //   85f6                 | test                esi, esi
            //   7405                 | je                  7
            //   833e10               | cmp                 dword ptr [esi], 0x10
            //   743b                 | je                  0x3d
            //   c74424105d000000     | mov                 dword ptr [esp + 0x10], 0x5d
            //   c744240ce0f05800     | mov                 dword ptr [esp + 0xc], 0x58f0e0
            //   31f6                 | xor                 esi, esi

        $sequence_9 = { c7442404???????? 893424 e8???????? 85c0 0f8ff3feffff e9???????? c7442404???????? }
            // n = 7, score = 100
            //   c7442404????????     |                     
            //   893424               | mov                 dword ptr [esp], esi
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f8ff3feffff         | jg                  0xfffffef9
            //   e9????????           |                     
            //   c7442404????????     |                     

    condition:
        7 of them and filesize < 4489216
}