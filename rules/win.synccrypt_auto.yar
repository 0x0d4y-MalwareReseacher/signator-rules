rule win_synccrypt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.synccrypt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.synccrypt"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 890424 ffd1 89f0 83e0f0 752a 85f6 7415 }
            // n = 7, score = 100
            //   890424               | mov                 dword ptr [esp], eax
            //   ffd1                 | call                ecx
            //   89f0                 | mov                 eax, esi
            //   83e0f0               | and                 eax, 0xfffffff0
            //   752a                 | jne                 0x2c
            //   85f6                 | test                esi, esi
            //   7415                 | je                  0x17

        $sequence_1 = { e8???????? 0fbed8 8b45cc 0fb65010 8b45cc c745bc00000000 c645ba00 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   0fbed8               | movsx               ebx, al
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   0fb65010             | movzx               edx, byte ptr [eax + 0x10]
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   c745bc00000000       | mov                 dword ptr [ebp - 0x44], 0
            //   c645ba00             | mov                 byte ptr [ebp - 0x46], 0

        $sequence_2 = { e8???????? 83ee01 0f8472020000 f6430510 74d8 66837b1c00 74d1 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   83ee01               | sub                 esi, 1
            //   0f8472020000         | je                  0x278
            //   f6430510             | test                byte ptr [ebx + 5], 0x10
            //   74d8                 | je                  0xffffffda
            //   66837b1c00           | cmp                 word ptr [ebx + 0x1c], 0
            //   74d1                 | je                  0xffffffd3

        $sequence_3 = { e8???????? 85c0 0f84ac060000 8b542434 8902 8344242801 8b442430 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f84ac060000         | je                  0x6b2
            //   8b542434             | mov                 edx, dword ptr [esp + 0x34]
            //   8902                 | mov                 dword ptr [edx], eax
            //   8344242801           | add                 dword ptr [esp + 0x28], 1
            //   8b442430             | mov                 eax, dword ptr [esp + 0x30]

        $sequence_4 = { c7442404???????? 893424 e8???????? b801000000 e9???????? c7442404???????? 893424 }
            // n = 7, score = 100
            //   c7442404????????     |                     
            //   893424               | mov                 dword ptr [esp], esi
            //   e8????????           |                     
            //   b801000000           | mov                 eax, 1
            //   e9????????           |                     
            //   c7442404????????     |                     
            //   893424               | mov                 dword ptr [esp], esi

        $sequence_5 = { 8d8688000000 895c2410 8954240c 893424 89442408 8b44242c 89442404 }
            // n = 7, score = 100
            //   8d8688000000         | lea                 eax, dword ptr [esi + 0x88]
            //   895c2410             | mov                 dword ptr [esp + 0x10], ebx
            //   8954240c             | mov                 dword ptr [esp + 0xc], edx
            //   893424               | mov                 dword ptr [esp], esi
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   8b44242c             | mov                 eax, dword ptr [esp + 0x2c]
            //   89442404             | mov                 dword ptr [esp + 4], eax

        $sequence_6 = { 890424 e8???????? 8b9424b4000000 89c1 8d442430 e8???????? 85c0 }
            // n = 7, score = 100
            //   890424               | mov                 dword ptr [esp], eax
            //   e8????????           |                     
            //   8b9424b4000000       | mov                 edx, dword ptr [esp + 0xb4]
            //   89c1                 | mov                 ecx, eax
            //   8d442430             | lea                 eax, dword ptr [esp + 0x30]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_7 = { c7442418b8b15a00 e8???????? 8b442434 895c2408 83c304 891c24 89442404 }
            // n = 7, score = 100
            //   c7442418b8b15a00     | mov                 dword ptr [esp + 0x18], 0x5ab1b8
            //   e8????????           |                     
            //   8b442434             | mov                 eax, dword ptr [esp + 0x34]
            //   895c2408             | mov                 dword ptr [esp + 8], ebx
            //   83c304               | add                 ebx, 4
            //   891c24               | mov                 dword ptr [esp], ebx
            //   89442404             | mov                 dword ptr [esp + 4], eax

        $sequence_8 = { c744240841000000 c744240469000000 c7042422000000 e8???????? eb96 31ff 85db }
            // n = 7, score = 100
            //   c744240841000000     | mov                 dword ptr [esp + 8], 0x41
            //   c744240469000000     | mov                 dword ptr [esp + 4], 0x69
            //   c7042422000000       | mov                 dword ptr [esp], 0x22
            //   e8????????           |                     
            //   eb96                 | jmp                 0xffffff98
            //   31ff                 | xor                 edi, edi
            //   85db                 | test                ebx, ebx

        $sequence_9 = { 8d7600 814b2800080000 85ff 74bc 31ed 893c24 e8???????? }
            // n = 7, score = 100
            //   8d7600               | lea                 esi, dword ptr [esi]
            //   814b2800080000       | or                  dword ptr [ebx + 0x28], 0x800
            //   85ff                 | test                edi, edi
            //   74bc                 | je                  0xffffffbe
            //   31ed                 | xor                 ebp, ebp
            //   893c24               | mov                 dword ptr [esp], edi
            //   e8????????           |                     

    condition:
        7 of them and filesize < 4489216
}