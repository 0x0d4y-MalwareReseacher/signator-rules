rule win_jimmy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.jimmy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.jimmy"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 ff75e4 ff55e8 83c410 83f8ff }
            // n = 5, score = 400
            //   50                   | push                eax
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   ff55e8               | call                dword ptr [ebp - 0x18]
            //   83c410               | add                 esp, 0x10
            //   83f8ff               | cmp                 eax, -1

        $sequence_1 = { 59 ff7510 e8???????? 59 0fb6c0 85c0 }
            // n = 6, score = 400
            //   59                   | pop                 ecx
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   0fb6c0               | movzx               eax, al
            //   85c0                 | test                eax, eax

        $sequence_2 = { 6a00 8d45b8 50 e8???????? 83c40c c745b804000000 8b4508 }
            // n = 7, score = 400
            //   6a00                 | push                0
            //   8d45b8               | lea                 eax, [ebp - 0x48]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   c745b804000000       | mov                 dword ptr [ebp - 0x48], 4
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_3 = { 8365f400 c745f002000000 8365ec00 c745c801000000 8d45ec 8945cc }
            // n = 6, score = 400
            //   8365f400             | and                 dword ptr [ebp - 0xc], 0
            //   c745f002000000       | mov                 dword ptr [ebp - 0x10], 2
            //   8365ec00             | and                 dword ptr [ebp - 0x14], 0
            //   c745c801000000       | mov                 dword ptr [ebp - 0x38], 1
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax

        $sequence_4 = { 8b55f4 6689044a 837d1000 7408 8b4510 8b4df8 8908 }
            // n = 7, score = 400
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]
            //   6689044a             | mov                 word ptr [edx + ecx*2], ax
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0
            //   7408                 | je                  0xa
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   8908                 | mov                 dword ptr [eax], ecx

        $sequence_5 = { 8b45fc ff30 8b45fc ff7004 68???????? 8b45e0 }
            // n = 6, score = 400
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   ff30                 | push                dword ptr [eax]
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   ff7004               | push                dword ptr [eax + 4]
            //   68????????           |                     
            //   8b45e0               | mov                 eax, dword ptr [ebp - 0x20]

        $sequence_6 = { 6a00 8b4508 83c008 50 a1???????? ff5064 8945fc }
            // n = 7, score = 400
            //   6a00                 | push                0
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c008               | add                 eax, 8
            //   50                   | push                eax
            //   a1????????           |                     
            //   ff5064               | call                dword ptr [eax + 0x64]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax

        $sequence_7 = { 8945e4 8b45e4 3b45ec 7348 }
            // n = 4, score = 400
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   3b45ec               | cmp                 eax, dword ptr [ebp - 0x14]
            //   7348                 | jae                 0x4a

        $sequence_8 = { ff75bc 6a00 8b4508 83c008 50 8b4508 }
            // n = 6, score = 400
            //   ff75bc               | push                dword ptr [ebp - 0x44]
            //   6a00                 | push                0
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c008               | add                 eax, 8
            //   50                   | push                eax
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_9 = { 51 ff7508 e8???????? 59 8945fc 837dfcff 7411 }
            // n = 7, score = 400
            //   51                   | push                ecx
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   837dfcff             | cmp                 dword ptr [ebp - 4], -1
            //   7411                 | je                  0x13

    condition:
        7 of them and filesize < 188416
}