rule win_dadjoke_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.dadjoke."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.dadjoke"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 ff15???????? 6800040000 e8???????? }
            // n = 4, score = 500
            //   50                   | push                eax
            //   ff15????????         |                     
            //   6800040000           | push                0x400
            //   e8????????           |                     

        $sequence_1 = { ff15???????? c3 55 8bec f6450801 56 8bf1 }
            // n = 7, score = 500
            //   ff15????????         |                     
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   f6450801             | test                byte ptr [ebp + 8], 1
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx

        $sequence_2 = { 56 57 6800081000 6a00 }
            // n = 4, score = 500
            //   56                   | push                esi
            //   57                   | push                edi
            //   6800081000           | push                0x100800
            //   6a00                 | push                0

        $sequence_3 = { 6a00 6a00 ff15???????? 6808020000 }
            // n = 4, score = 500
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6808020000           | push                0x208

        $sequence_4 = { ff7510 e8???????? 59 c3 8bff }
            // n = 5, score = 500
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi

        $sequence_5 = { 83c240 8955f4 8d45f0 50 6a00 }
            // n = 5, score = 400
            //   83c240               | add                 edx, 0x40
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8d45f0               | lea                 eax, dword ptr [ebp - 0x10]
            //   50                   | push                eax
            //   6a00                 | push                0

        $sequence_6 = { 0fb6840a94010000 50 b901000000 c1e102 }
            // n = 4, score = 400
            //   0fb6840a94010000     | movzx               eax, byte ptr [edx + ecx + 0x194]
            //   50                   | push                eax
            //   b901000000           | mov                 ecx, 1
            //   c1e102               | shl                 ecx, 2

        $sequence_7 = { 8b4df8 83c90f 894dd8 8d55dc 52 8d45d8 50 }
            // n = 7, score = 400
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   83c90f               | or                  ecx, 0xf
            //   894dd8               | mov                 dword ptr [ebp - 0x28], ecx
            //   8d55dc               | lea                 edx, dword ptr [ebp - 0x24]
            //   52                   | push                edx
            //   8d45d8               | lea                 eax, dword ptr [ebp - 0x28]
            //   50                   | push                eax

        $sequence_8 = { 0f94c1 8bc1 c3 a1???????? c3 }
            // n = 5, score = 300
            //   0f94c1               | sete                cl
            //   8bc1                 | mov                 eax, ecx
            //   c3                   | ret                 
            //   a1????????           |                     
            //   c3                   | ret                 

        $sequence_9 = { 5e c3 8bff 55 8bec 83ec10 33c0 }
            // n = 7, score = 300
            //   5e                   | pop                 esi
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   83ec10               | sub                 esp, 0x10
            //   33c0                 | xor                 eax, eax

        $sequence_10 = { 6a02 ff15???????? 85c0 7417 }
            // n = 4, score = 300
            //   6a02                 | push                2
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7417                 | je                  0x19

        $sequence_11 = { 8bf0 8975f4 85f6 7431 6a00 6a00 }
            // n = 6, score = 200
            //   8bf0                 | mov                 esi, eax
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi
            //   85f6                 | test                esi, esi
            //   7431                 | je                  0x33
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_12 = { 803e4d 7508 807e015a 7502 ffd6 }
            // n = 5, score = 200
            //   803e4d               | cmp                 byte ptr [esi], 0x4d
            //   7508                 | jne                 0xa
            //   807e015a             | cmp                 byte ptr [esi + 1], 0x5a
            //   7502                 | jne                 4
            //   ffd6                 | call                esi

        $sequence_13 = { 85ff 7521 8b35???????? 53 }
            // n = 4, score = 200
            //   85ff                 | test                edi, edi
            //   7521                 | jne                 0x23
            //   8b35????????         |                     
            //   53                   | push                ebx

        $sequence_14 = { 6a00 6a00 6a00 8bca 83e103 6a00 f3a4 }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3
            //   6a00                 | push                0
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]

        $sequence_15 = { 6800100000 8d041e 50 57 ff15???????? }
            // n = 5, score = 200
            //   6800100000           | push                0x1000
            //   8d041e               | lea                 eax, dword ptr [esi + ebx]
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_16 = { f3a4 68???????? ff15???????? 8bf0 }
            // n = 4, score = 200
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   68????????           |                     
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax

        $sequence_17 = { e8???????? 83c40c c7458c00000000 ff15???????? 50 e8???????? }
            // n = 6, score = 200
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   c7458c00000000       | mov                 dword ptr [ebp - 0x74], 0
            //   ff15????????         |                     
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_18 = { ff15???????? 8b85e0faffff 8d95e8faffff 6a01 52 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   8b85e0faffff         | mov                 eax, dword ptr [ebp - 0x520]
            //   8d95e8faffff         | lea                 edx, dword ptr [ebp - 0x518]
            //   6a01                 | push                1
            //   52                   | push                edx

    condition:
        7 of them and filesize < 344064
}