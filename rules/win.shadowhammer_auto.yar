rule win_shadowhammer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.shadowhammer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.shadowhammer"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 59 8906 3bc7 7422 ff45f8 83c604 ff45fc }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   8906                 | mov                 dword ptr [esi], eax
            //   3bc7                 | cmp                 eax, edi
            //   7422                 | je                  0x24
            //   ff45f8               | inc                 dword ptr [ebp - 8]
            //   83c604               | add                 esi, 4
            //   ff45fc               | inc                 dword ptr [ebp - 4]

        $sequence_1 = { ab 66ab aa 898d14feffff }
            // n = 4, score = 100
            //   ab                   | stosd               dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   898d14feffff         | mov                 dword ptr [ebp - 0x1ec], ecx

        $sequence_2 = { 53 ff5604 8bf8 8d45fc 50 57 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   ff5604               | call                dword ptr [esi + 4]
            //   8bf8                 | mov                 edi, eax
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   57                   | push                edi

        $sequence_3 = { 33c0 c3 8bff 55 8bec 683c714000 }
            // n = 6, score = 100
            //   33c0                 | xor                 eax, eax
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   683c714000           | push                0x40713c

        $sequence_4 = { 8895b2feffff c785b3feffff4e734077 c785b7feffffc70532e9 8895bbfeffff }
            // n = 4, score = 100
            //   8895b2feffff         | mov                 byte ptr [ebp - 0x14e], dl
            //   c785b3feffff4e734077     | mov    dword ptr [ebp - 0x14d], 0x7740734e
            //   c785b7feffffc70532e9     | mov    dword ptr [ebp - 0x149], 0xe93205c7
            //   8895bbfeffff         | mov                 byte ptr [ebp - 0x145], dl

        $sequence_5 = { 50 ff7508 895dfc ff564c 395dfc }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   ff564c               | call                dword ptr [esi + 0x4c]
            //   395dfc               | cmp                 dword ptr [ebp - 4], ebx

        $sequence_6 = { 8bd9 66895dbc 8bdf 66895dbe 6a4e 5b 66895dc0 }
            // n = 7, score = 100
            //   8bd9                 | mov                 ebx, ecx
            //   66895dbc             | mov                 word ptr [ebp - 0x44], bx
            //   8bdf                 | mov                 ebx, edi
            //   66895dbe             | mov                 word ptr [ebp - 0x42], bx
            //   6a4e                 | push                0x4e
            //   5b                   | pop                 ebx
            //   66895dc0             | mov                 word ptr [ebp - 0x40], bx

        $sequence_7 = { 897e14 897e70 c686c800000043 c6864b01000043 c7466818934000 }
            // n = 5, score = 100
            //   897e14               | mov                 dword ptr [esi + 0x14], edi
            //   897e70               | mov                 dword ptr [esi + 0x70], edi
            //   c686c800000043       | mov                 byte ptr [esi + 0xc8], 0x43
            //   c6864b01000043       | mov                 byte ptr [esi + 0x14b], 0x43
            //   c7466818934000       | mov                 dword ptr [esi + 0x68], 0x409318

        $sequence_8 = { 8bec 81ecf8000000 53 56 57 6a06 58 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   81ecf8000000         | sub                 esp, 0xf8
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   6a06                 | push                6
            //   58                   | pop                 eax

        $sequence_9 = { 51 6880504000 64ff3500000000 a1???????? 33c4 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   6880504000           | push                0x405080
            //   64ff3500000000       | push                dword ptr fs:[0]
            //   a1????????           |                     
            //   33c4                 | xor                 eax, esp

    condition:
        7 of them and filesize < 49152
}