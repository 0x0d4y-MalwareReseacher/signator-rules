rule win_cryptowall_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.cryptowall."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cryptowall"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 55 8bec 8b4508 83c001 50 }
            // n = 5, score = 2100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c001               | add                 eax, 1
            //   50                   | push                eax

        $sequence_1 = { 668945e6 b974000000 66894de8 ba65000000 668955ea }
            // n = 5, score = 2100
            //   668945e6             | mov                 word ptr [ebp - 0x1a], ax
            //   b974000000           | mov                 ecx, 0x74
            //   66894de8             | mov                 word ptr [ebp - 0x18], cx
            //   ba65000000           | mov                 edx, 0x65
            //   668955ea             | mov                 word ptr [ebp - 0x16], dx

        $sequence_2 = { e8???????? 83c408 8b0d???????? 898164010000 }
            // n = 4, score = 2100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b0d????????         |                     
            //   898164010000         | mov                 dword ptr [ecx + 0x164], eax

        $sequence_3 = { 8b5018 52 e8???????? 8b4028 }
            // n = 4, score = 2100
            //   8b5018               | mov                 edx, dword ptr [eax + 0x18]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8b4028               | mov                 eax, dword ptr [eax + 0x28]

        $sequence_4 = { 668945e0 b973000000 66894de2 ba79000000 668955e4 b873000000 668945e6 }
            // n = 7, score = 2100
            //   668945e0             | mov                 word ptr [ebp - 0x20], ax
            //   b973000000           | mov                 ecx, 0x73
            //   66894de2             | mov                 word ptr [ebp - 0x1e], cx
            //   ba79000000           | mov                 edx, 0x79
            //   668955e4             | mov                 word ptr [ebp - 0x1c], dx
            //   b873000000           | mov                 eax, 0x73
            //   668945e6             | mov                 word ptr [ebp - 0x1a], ax

        $sequence_5 = { e8???????? 83c408 8b0d???????? 89411c }
            // n = 4, score = 2100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b0d????????         |                     
            //   89411c               | mov                 dword ptr [ecx + 0x1c], eax

        $sequence_6 = { e8???????? 83c408 8b0d???????? 8981ac000000 }
            // n = 4, score = 2100
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8b0d????????         |                     
            //   8981ac000000         | mov                 dword ptr [ecx + 0xac], eax

        $sequence_7 = { 6a01 6880000000 6a00 8d4de8 }
            // n = 4, score = 2100
            //   6a01                 | push                1
            //   6880000000           | push                0x80
            //   6a00                 | push                0
            //   8d4de8               | lea                 ecx, dword ptr [ebp - 0x18]

        $sequence_8 = { 750a b80d0000c0 e9???????? 837d0c00 750a }
            // n = 5, score = 2100
            //   750a                 | jne                 0xc
            //   b80d0000c0           | mov                 eax, 0xc000000d
            //   e9????????           |                     
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0
            //   750a                 | jne                 0xc

        $sequence_9 = { c745f800000000 837d0800 750b 837d0c00 7505 }
            // n = 5, score = 2100
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   750b                 | jne                 0xd
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0
            //   7505                 | jne                 7

    condition:
        7 of them and filesize < 417792
}