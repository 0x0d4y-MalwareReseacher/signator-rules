rule win_backconfig_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.backconfig."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.backconfig"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 33ff ffb700264100 ff15???????? 898700264100 83c704 83ff28 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   ffb700264100         | push                dword ptr [edi + 0x412600]
            //   ff15????????         |                     
            //   898700264100         | mov                 dword ptr [edi + 0x412600], eax
            //   83c704               | add                 edi, 4
            //   83ff28               | cmp                 edi, 0x28

        $sequence_1 = { 8d75d0 e8???????? 837de410 8b45d0 7302 8bc6 }
            // n = 6, score = 100
            //   8d75d0               | lea                 esi, [ebp - 0x30]
            //   e8????????           |                     
            //   837de410             | cmp                 dword ptr [ebp - 0x1c], 0x10
            //   8b45d0               | mov                 eax, dword ptr [ebp - 0x30]
            //   7302                 | jae                 4
            //   8bc6                 | mov                 eax, esi

        $sequence_2 = { c1f805 8b0485c0504100 83e61f c1e606 8d443004 8020fe ff15???????? }
            // n = 7, score = 100
            //   c1f805               | sar                 eax, 5
            //   8b0485c0504100       | mov                 eax, dword ptr [eax*4 + 0x4150c0]
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   8d443004             | lea                 eax, [eax + esi + 4]
            //   8020fe               | and                 byte ptr [eax], 0xfe
            //   ff15????????         |                     

        $sequence_3 = { 68???????? 52 e8???????? 83c408 6a00 89850cfdffff 6a00 }
            // n = 7, score = 100
            //   68????????           |                     
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   6a00                 | push                0
            //   89850cfdffff         | mov                 dword ptr [ebp - 0x2f4], eax
            //   6a00                 | push                0

        $sequence_4 = { 57 56 e8???????? c1f805 56 8d3c85c0504100 }
            // n = 6, score = 100
            //   57                   | push                edi
            //   56                   | push                esi
            //   e8????????           |                     
            //   c1f805               | sar                 eax, 5
            //   56                   | push                esi
            //   8d3c85c0504100       | lea                 edi, [eax*4 + 0x4150c0]

        $sequence_5 = { 68???????? 50 c78504fdffff0031a004 ff15???????? 8bf8 6a05 }
            // n = 6, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   c78504fdffff0031a004     | mov    dword ptr [ebp - 0x2fc], 0x4a03100
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   6a05                 | push                5

        $sequence_6 = { 8975e0 8db1682a4100 8975e4 eb2b 8a4601 84c0 }
            // n = 6, score = 100
            //   8975e0               | mov                 dword ptr [ebp - 0x20], esi
            //   8db1682a4100         | lea                 esi, [ecx + 0x412a68]
            //   8975e4               | mov                 dword ptr [ebp - 0x1c], esi
            //   eb2b                 | jmp                 0x2d
            //   8a4601               | mov                 al, byte ptr [esi + 1]
            //   84c0                 | test                al, al

        $sequence_7 = { 85c0 7538 8bff ff15???????? 83f87a }
            // n = 5, score = 100
            //   85c0                 | test                eax, eax
            //   7538                 | jne                 0x3a
            //   8bff                 | mov                 edi, edi
            //   ff15????????         |                     
            //   83f87a               | cmp                 eax, 0x7a

    condition:
        7 of them and filesize < 217088
}