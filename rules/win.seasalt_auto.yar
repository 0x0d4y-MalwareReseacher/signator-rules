rule win_seasalt_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.seasalt."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.seasalt"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c604 83fb06 7404 85c0 75de }
            // n = 5, score = 100
            //   83c604               | add                 esi, 4
            //   83fb06               | cmp                 ebx, 6
            //   7404                 | je                  6
            //   85c0                 | test                eax, eax
            //   75de                 | jne                 0xffffffe0

        $sequence_1 = { 53 f2ae a1???????? 68???????? f7d1 }
            // n = 5, score = 100
            //   53                   | push                ebx
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   a1????????           |                     
            //   68????????           |                     
            //   f7d1                 | not                 ecx

        $sequence_2 = { 6a00 8d55e8 6a08 52 }
            // n = 4, score = 100
            //   6a00                 | push                0
            //   8d55e8               | lea                 edx, dword ptr [ebp - 0x18]
            //   6a08                 | push                8
            //   52                   | push                edx

        $sequence_3 = { 33c0 eb05 1bc0 83d8ff 3bc3 758c b901040000 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   eb05                 | jmp                 7
            //   1bc0                 | sbb                 eax, eax
            //   83d8ff               | sbb                 eax, -1
            //   3bc3                 | cmp                 eax, ebx
            //   758c                 | jne                 0xffffff8e
            //   b901040000           | mov                 ecx, 0x401

        $sequence_4 = { 8bb42418060000 57 6a00 6804020000 50 }
            // n = 5, score = 100
            //   8bb42418060000       | mov                 esi, dword ptr [esp + 0x618]
            //   57                   | push                edi
            //   6a00                 | push                0
            //   6804020000           | push                0x204
            //   50                   | push                eax

        $sequence_5 = { e8???????? 83c42c 5f eb26 8d4508 8db67ccb0010 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   83c42c               | add                 esp, 0x2c
            //   5f                   | pop                 edi
            //   eb26                 | jmp                 0x28
            //   8d4508               | lea                 eax, dword ptr [ebp + 8]
            //   8db67ccb0010         | lea                 esi, dword ptr [esi + 0x1000cb7c]

        $sequence_6 = { 49 8d84248c010000 51 50 }
            // n = 4, score = 100
            //   49                   | dec                 ecx
            //   8d84248c010000       | lea                 eax, dword ptr [esp + 0x18c]
            //   51                   | push                ecx
            //   50                   | push                eax

        $sequence_7 = { 0fb601 0fb6fa 3bc7 7714 8b55fc 8a92c0cc0010 }
            // n = 6, score = 100
            //   0fb601               | movzx               eax, byte ptr [ecx]
            //   0fb6fa               | movzx               edi, dl
            //   3bc7                 | cmp                 eax, edi
            //   7714                 | ja                  0x16
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8a92c0cc0010         | mov                 dl, byte ptr [edx + 0x1000ccc0]

        $sequence_8 = { 83e01f 8b0c8d40db0010 8d04c0 8d0481 eb05 b8???????? }
            // n = 6, score = 100
            //   83e01f               | and                 eax, 0x1f
            //   8b0c8d40db0010       | mov                 ecx, dword ptr [ecx*4 + 0x1000db40]
            //   8d04c0               | lea                 eax, dword ptr [eax + eax*8]
            //   8d0481               | lea                 eax, dword ptr [ecx + eax*4]
            //   eb05                 | jmp                 7
            //   b8????????           |                     

        $sequence_9 = { 6a00 6a02 68???????? 52 ffd5 }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   6a02                 | push                2
            //   68????????           |                     
            //   52                   | push                edx
            //   ffd5                 | call                ebp

    condition:
        7 of them and filesize < 139264
}