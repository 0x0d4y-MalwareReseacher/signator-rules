rule win_unidentified_096_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.unidentified_096."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_096"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b742458 8d442424 33ed 50 }
            // n = 4, score = 100
            //   8b742458             | mov                 esi, dword ptr [esp + 0x58]
            //   8d442424             | lea                 eax, [esp + 0x24]
            //   33ed                 | xor                 ebp, ebp
            //   50                   | push                eax

        $sequence_1 = { c744245010304000 896c2454 ff15???????? 6685c0 }
            // n = 4, score = 100
            //   c744245010304000     | mov                 dword ptr [esp + 0x50], 0x403010
            //   896c2454             | mov                 dword ptr [esp + 0x54], ebp
            //   ff15????????         |                     
            //   6685c0               | test                ax, ax

        $sequence_2 = { ffd6 6a10 0fbfd8 ffd6 6890000000 0fbff8 ffd6 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   6a10                 | push                0x10
            //   0fbfd8               | movsx               ebx, ax
            //   ffd6                 | call                esi
            //   6890000000           | push                0x90
            //   0fbff8               | movsx               edi, ax
            //   ffd6                 | call                esi

        $sequence_3 = { 55 55 6800000080 55 }
            // n = 4, score = 100
            //   55                   | push                ebp
            //   55                   | push                ebp
            //   6800000080           | push                0x80000000
            //   55                   | push                ebp

        $sequence_4 = { 5f 83c1f8 5e 83f926 }
            // n = 4, score = 100
            //   5f                   | pop                 edi
            //   83c1f8               | add                 ecx, -8
            //   5e                   | pop                 esi
            //   83f926               | cmp                 ecx, 0x26

        $sequence_5 = { c744243000114000 896c2434 896c2438 8974243c 896c2440 896c2444 c744244806000000 }
            // n = 7, score = 100
            //   c744243000114000     | mov                 dword ptr [esp + 0x30], 0x401100
            //   896c2434             | mov                 dword ptr [esp + 0x34], ebp
            //   896c2438             | mov                 dword ptr [esp + 0x38], ebp
            //   8974243c             | mov                 dword ptr [esp + 0x3c], esi
            //   896c2440             | mov                 dword ptr [esp + 0x40], ebp
            //   896c2444             | mov                 dword ptr [esp + 0x44], ebp
            //   c744244806000000     | mov                 dword ptr [esp + 0x48], 6

        $sequence_6 = { 7735 8bd1 81e2ffff0000 83c296 }
            // n = 4, score = 100
            //   7735                 | ja                  0x37
            //   8bd1                 | mov                 edx, ecx
            //   81e2ffff0000         | and                 edx, 0xffff
            //   83c296               | add                 edx, -0x6a

        $sequence_7 = { 52 e8???????? 83c424 8b4c242a 6683f930 0f8283000000 }
            // n = 6, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c424               | add                 esp, 0x24
            //   8b4c242a             | mov                 ecx, dword ptr [esp + 0x2a]
            //   6683f930             | cmp                 cx, 0x30
            //   0f8283000000         | jb                  0x89

        $sequence_8 = { 85c0 7508 5e 5d 83c44c c21000 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7508                 | jne                 0xa
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   83c44c               | add                 esp, 0x4c
            //   c21000               | ret                 0x10

        $sequence_9 = { 52 e8???????? 83c418 c3 51 68???????? }
            // n = 6, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   c3                   | ret                 
            //   51                   | push                ecx
            //   68????????           |                     

    condition:
        7 of them and filesize < 25648
}