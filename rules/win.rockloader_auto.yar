rule win_rockloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rockloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rockloader"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { d9ee 53 56 dd55ec d9e8 }
            // n = 5, score = 300
            //   d9ee                 | fldz                
            //   53                   | push                ebx
            //   56                   | push                esi
            //   dd55ec               | fst                 qword ptr [ebp - 0x14]
            //   d9e8                 | fld1                

        $sequence_1 = { 8b4508 8b4dfc 894810 c7400c04000000 8bc7 5e 5f }
            // n = 7, score = 300
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   894810               | mov                 dword ptr [eax + 0x10], ecx
            //   c7400c04000000       | mov                 dword ptr [eax + 0xc], 4
            //   8bc7                 | mov                 eax, edi
            //   5e                   | pop                 esi
            //   5f                   | pop                 edi

        $sequence_2 = { 752f 8ac3 243f 4e 0c80 8806 c1eb06 }
            // n = 7, score = 300
            //   752f                 | jne                 0x31
            //   8ac3                 | mov                 al, bl
            //   243f                 | and                 al, 0x3f
            //   4e                   | dec                 esi
            //   0c80                 | or                  al, 0x80
            //   8806                 | mov                 byte ptr [esi], al
            //   c1eb06               | shr                 ebx, 6

        $sequence_3 = { 7418 8bc3 e8???????? 50 56 }
            // n = 5, score = 300
            //   7418                 | je                  0x1a
            //   8bc3                 | mov                 eax, ebx
            //   e8????????           |                     
            //   50                   | push                eax
            //   56                   | push                esi

        $sequence_4 = { 40 8a08 3acb 7dea 0faff7 }
            // n = 5, score = 300
            //   40                   | inc                 eax
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   3acb                 | cmp                 cl, bl
            //   7dea                 | jge                 0xffffffec
            //   0faff7               | imul                esi, edi

        $sequence_5 = { 8bc8 c1f908 0bc1 8bf8 c1ff10 0bf8 }
            // n = 6, score = 300
            //   8bc8                 | mov                 ecx, eax
            //   c1f908               | sar                 ecx, 8
            //   0bc1                 | or                  eax, ecx
            //   8bf8                 | mov                 edi, eax
            //   c1ff10               | sar                 edi, 0x10
            //   0bf8                 | or                  edi, eax

        $sequence_6 = { 48 390424 7317 48 }
            // n = 4, score = 300
            //   48                   | dec                 eax
            //   390424               | cmp                 dword ptr [esp], eax
            //   7317                 | jae                 0x19
            //   48                   | dec                 eax

        $sequence_7 = { 58 e8???????? 8bf8 85ff 746f b8???????? eb13 }
            // n = 7, score = 300
            //   58                   | pop                 eax
            //   e8????????           |                     
            //   8bf8                 | mov                 edi, eax
            //   85ff                 | test                edi, edi
            //   746f                 | je                  0x71
            //   b8????????           |                     
            //   eb13                 | jmp                 0x15

        $sequence_8 = { 214dfc 8bf0 8b4708 6a05 5b }
            // n = 5, score = 300
            //   214dfc               | and                 dword ptr [ebp - 4], ecx
            //   8bf0                 | mov                 esi, eax
            //   8b4708               | mov                 eax, dword ptr [edi + 8]
            //   6a05                 | push                5
            //   5b                   | pop                 ebx

        $sequence_9 = { 7429 83e915 741f 83e93a }
            // n = 4, score = 300
            //   7429                 | je                  0x2b
            //   83e915               | sub                 ecx, 0x15
            //   741f                 | je                  0x21
            //   83e93a               | sub                 ecx, 0x3a

    condition:
        7 of them and filesize < 98304
}