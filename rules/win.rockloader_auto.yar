rule win_rockloader_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.rockloader."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rockloader"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0fb6c3 50 68???????? e8???????? 85c0 7405 }
            // n = 6, score = 300
            //   0fb6c3               | movzx               eax, bl
            //   50                   | push                eax
            //   68????????           |                     
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7405                 | je                  7

        $sequence_1 = { 5b 3818 7501 40 8a08 }
            // n = 5, score = 300
            //   5b                   | pop                 ebx
            //   3818                 | cmp                 byte ptr [eax], bl
            //   7501                 | jne                 3
            //   40                   | inc                 eax
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_2 = { 5f 5e 895114 c7410c03000000 5b c9 }
            // n = 6, score = 300
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   895114               | mov                 dword ptr [ecx + 0x14], edx
            //   c7410c03000000       | mov                 dword ptr [ecx + 0xc], 3
            //   5b                   | pop                 ebx
            //   c9                   | leave               

        $sequence_3 = { 85d2 744d 8b4e08 03c1 3b4604 }
            // n = 5, score = 300
            //   85d2                 | test                edx, edx
            //   744d                 | je                  0x4f
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   03c1                 | add                 eax, ecx
            //   3b4604               | cmp                 eax, dword ptr [esi + 4]

        $sequence_4 = { 56 6a00 50 e8???????? 8b7f08 85ff }
            // n = 6, score = 300
            //   56                   | push                esi
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b7f08               | mov                 edi, dword ptr [edi + 8]
            //   85ff                 | test                edi, edi

        $sequence_5 = { 743f 85c0 743b 8d5001 8a08 }
            // n = 5, score = 300
            //   743f                 | je                  0x41
            //   85c0                 | test                eax, eax
            //   743b                 | je                  0x3d
            //   8d5001               | lea                 edx, [eax + 1]
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_6 = { 50 ff15???????? 46 3b75f4 7ce9 ff75f8 ff15???????? }
            // n = 7, score = 300
            //   50                   | push                eax
            //   ff15????????         |                     
            //   46                   | inc                 esi
            //   3b75f4               | cmp                 esi, dword ptr [ebp - 0xc]
            //   7ce9                 | jl                  0xffffffeb
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff15????????         |                     

        $sequence_7 = { 8d85e4fbffff 50 be04010000 56 }
            // n = 4, score = 300
            //   8d85e4fbffff         | lea                 eax, [ebp - 0x41c]
            //   50                   | push                eax
            //   be04010000           | mov                 esi, 0x104
            //   56                   | push                esi

        $sequence_8 = { 3b75f4 7ce9 ff75f8 ff15???????? }
            // n = 4, score = 300
            //   3b75f4               | cmp                 esi, dword ptr [ebp - 0xc]
            //   7ce9                 | jl                  0xffffffeb
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff15????????         |                     

        $sequence_9 = { c9 c20800 85c0 740e }
            // n = 4, score = 300
            //   c9                   | leave               
            //   c20800               | ret                 8
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10

    condition:
        7 of them and filesize < 98304
}