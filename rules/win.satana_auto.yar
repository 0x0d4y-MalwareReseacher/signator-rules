rule win_satana_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.satana."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.satana"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f20f120d???????? f20f1215???????? 660f59c8 660f59d0 90 }
            // n = 5, score = 100
            //   f20f120d????????     |                     
            //   f20f1215????????     |                     
            //   660f59c8             | mulpd               xmm1, xmm0
            //   660f59d0             | mulpd               xmm2, xmm0
            //   90                   | nop                 

        $sequence_1 = { 8d95f0beffff 83c40c 2bd0 8bff 0fb708 66890c02 83c002 }
            // n = 7, score = 100
            //   8d95f0beffff         | lea                 edx, [ebp - 0x4110]
            //   83c40c               | add                 esp, 0xc
            //   2bd0                 | sub                 edx, eax
            //   8bff                 | mov                 edi, edi
            //   0fb708               | movzx               ecx, word ptr [eax]
            //   66890c02             | mov                 word ptr [edx + eax], cx
            //   83c002               | add                 eax, 2

        $sequence_2 = { eb28 68???????? e8???????? 83c404 68???????? eb0c 68???????? }
            // n = 7, score = 100
            //   eb28                 | jmp                 0x2a
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   68????????           |                     
            //   eb0c                 | jmp                 0xe
            //   68????????           |                     

        $sequence_3 = { 6a00 6800130000 ff15???????? 8bc3 }
            // n = 4, score = 100
            //   6a00                 | push                0
            //   6800130000           | push                0x1300
            //   ff15????????         |                     
            //   8bc3                 | mov                 eax, ebx

        $sequence_4 = { 898e94000000 ff15???????? 6a5c 57 ff15???????? 40 83c408 }
            // n = 7, score = 100
            //   898e94000000         | mov                 dword ptr [esi + 0x94], ecx
            //   ff15????????         |                     
            //   6a5c                 | push                0x5c
            //   57                   | push                edi
            //   ff15????????         |                     
            //   40                   | inc                 eax
            //   83c408               | add                 esp, 8

        $sequence_5 = { e8???????? 8bc8 33d2 8bf7 f7f6 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   33d2                 | xor                 edx, edx
            //   8bf7                 | mov                 esi, edi
            //   f7f6                 | div                 esi

        $sequence_6 = { 7510 8b55e8 8b4208 6a04 57 }
            // n = 5, score = 100
            //   7510                 | jne                 0x12
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   8b4208               | mov                 eax, dword ptr [edx + 8]
            //   6a04                 | push                4
            //   57                   | push                edi

        $sequence_7 = { d1f8 8d1400 52 ff15???????? }
            // n = 4, score = 100
            //   d1f8                 | sar                 eax, 1
            //   8d1400               | lea                 edx, [eax + eax]
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_8 = { 0fb6560e 0fb682a83f4100 88460e 0fb64e0f 0fb691a83f4100 88560f 8b460c }
            // n = 7, score = 100
            //   0fb6560e             | movzx               edx, byte ptr [esi + 0xe]
            //   0fb682a83f4100       | movzx               eax, byte ptr [edx + 0x413fa8]
            //   88460e               | mov                 byte ptr [esi + 0xe], al
            //   0fb64e0f             | movzx               ecx, byte ptr [esi + 0xf]
            //   0fb691a83f4100       | movzx               edx, byte ptr [ecx + 0x413fa8]
            //   88560f               | mov                 byte ptr [esi + 0xf], dl
            //   8b460c               | mov                 eax, dword ptr [esi + 0xc]

        $sequence_9 = { 3bfe 0f841b010000 8b1d???????? 68???????? 57 ffd3 68???????? }
            // n = 7, score = 100
            //   3bfe                 | cmp                 edi, esi
            //   0f841b010000         | je                  0x121
            //   8b1d????????         |                     
            //   68????????           |                     
            //   57                   | push                edi
            //   ffd3                 | call                ebx
            //   68????????           |                     

    condition:
        7 of them and filesize < 221184
}