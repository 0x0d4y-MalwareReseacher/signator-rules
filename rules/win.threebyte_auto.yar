rule win_threebyte_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.threebyte."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.threebyte"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c645e569 c645e66f c645e76e c645e85c c645e95c c645ea49 c645eb6e }
            // n = 7, score = 200
            //   c645e569             | mov                 byte ptr [ebp - 0x1b], 0x69
            //   c645e66f             | mov                 byte ptr [ebp - 0x1a], 0x6f
            //   c645e76e             | mov                 byte ptr [ebp - 0x19], 0x6e
            //   c645e85c             | mov                 byte ptr [ebp - 0x18], 0x5c
            //   c645e95c             | mov                 byte ptr [ebp - 0x17], 0x5c
            //   c645ea49             | mov                 byte ptr [ebp - 0x16], 0x49
            //   c645eb6e             | mov                 byte ptr [ebp - 0x15], 0x6e

        $sequence_1 = { eb49 8b8d80f7ffff 51 8b955cf7ffff ff520c 8b85a0f7ffff 50 }
            // n = 7, score = 200
            //   eb49                 | jmp                 0x4b
            //   8b8d80f7ffff         | mov                 ecx, dword ptr [ebp - 0x880]
            //   51                   | push                ecx
            //   8b955cf7ffff         | mov                 edx, dword ptr [ebp - 0x8a4]
            //   ff520c               | call                dword ptr [edx + 0xc]
            //   8b85a0f7ffff         | mov                 eax, dword ptr [ebp - 0x860]
            //   50                   | push                eax

        $sequence_2 = { c685f4feffff5b c685f5feffff25 c685f6feffff73 c685f7feffff5d c685f8feffff20 }
            // n = 5, score = 200
            //   c685f4feffff5b       | mov                 byte ptr [ebp - 0x10c], 0x5b
            //   c685f5feffff25       | mov                 byte ptr [ebp - 0x10b], 0x25
            //   c685f6feffff73       | mov                 byte ptr [ebp - 0x10a], 0x73
            //   c685f7feffff5d       | mov                 byte ptr [ebp - 0x109], 0x5d
            //   c685f8feffff20       | mov                 byte ptr [ebp - 0x108], 0x20

        $sequence_3 = { ff15???????? 8d95f8fdffff 52 8d85a0faffff 50 }
            // n = 5, score = 200
            //   ff15????????         |                     
            //   8d95f8fdffff         | lea                 edx, dword ptr [ebp - 0x208]
            //   52                   | push                edx
            //   8d85a0faffff         | lea                 eax, dword ptr [ebp - 0x560]
            //   50                   | push                eax

        $sequence_4 = { 52 ff15???????? c68550ffffff5b c68551ffffff3e c68552ffffff3e c68553ffffff20 c68554ffffff46 }
            // n = 7, score = 200
            //   52                   | push                edx
            //   ff15????????         |                     
            //   c68550ffffff5b       | mov                 byte ptr [ebp - 0xb0], 0x5b
            //   c68551ffffff3e       | mov                 byte ptr [ebp - 0xaf], 0x3e
            //   c68552ffffff3e       | mov                 byte ptr [ebp - 0xae], 0x3e
            //   c68553ffffff20       | mov                 byte ptr [ebp - 0xad], 0x20
            //   c68554ffffff46       | mov                 byte ptr [ebp - 0xac], 0x46

        $sequence_5 = { 8955ec 8b45ec 3b8568f7ffff 0f8278ffffff 6a00 6a00 6a00 }
            // n = 7, score = 200
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   3b8568f7ffff         | cmp                 eax, dword ptr [ebp - 0x898]
            //   0f8278ffffff         | jb                  0xffffff7e
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_6 = { c685d4feffff5a c685d5feffff53 c685d6feffff53 c685d7feffff58 c685d8feffff51 c685d9feffff5a }
            // n = 6, score = 200
            //   c685d4feffff5a       | mov                 byte ptr [ebp - 0x12c], 0x5a
            //   c685d5feffff53       | mov                 byte ptr [ebp - 0x12b], 0x53
            //   c685d6feffff53       | mov                 byte ptr [ebp - 0x12a], 0x53
            //   c685d7feffff58       | mov                 byte ptr [ebp - 0x129], 0x58
            //   c685d8feffff51       | mov                 byte ptr [ebp - 0x128], 0x51
            //   c685d9feffff5a       | mov                 byte ptr [ebp - 0x127], 0x5a

        $sequence_7 = { 8d4de0 51 e8???????? 83c404 5f 8be5 5d }
            // n = 7, score = 200
            //   8d4de0               | lea                 ecx, dword ptr [ebp - 0x20]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   5f                   | pop                 edi
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp

        $sequence_8 = { b9e1040000 33c0 8dbd55eaffff f3ab 66ab aa }
            // n = 6, score = 200
            //   b9e1040000           | mov                 ecx, 0x4e1
            //   33c0                 | xor                 eax, eax
            //   8dbd55eaffff         | lea                 edi, dword ptr [ebp - 0x15ab]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_9 = { c7403000000000 8b4dfc e8???????? 8b4dfc 894134 8b45fc 8be5 }
            // n = 7, score = 200
            //   c7403000000000       | mov                 dword ptr [eax + 0x30], 0
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   e8????????           |                     
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   894134               | mov                 dword ptr [ecx + 0x34], eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8be5                 | mov                 esp, ebp

    condition:
        7 of them and filesize < 180224
}