rule win_threebyte_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.threebyte."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.threebyte"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c68501ffffff65 c68502ffffff61 c68503ffffff64 c68504ffffff00 b90c000000 33c0 }
            // n = 6, score = 200
            //   c68501ffffff65       | mov                 byte ptr [ebp - 0xff], 0x65
            //   c68502ffffff61       | mov                 byte ptr [ebp - 0xfe], 0x61
            //   c68503ffffff64       | mov                 byte ptr [ebp - 0xfd], 0x64
            //   c68504ffffff00       | mov                 byte ptr [ebp - 0xfc], 0
            //   b90c000000           | mov                 ecx, 0xc
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 66ab 668b0d???????? 66898d6cf7ffff b9ff000000 33c0 8dbd6ef7ffff f3ab }
            // n = 7, score = 200
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   668b0d????????       |                     
            //   66898d6cf7ffff       | mov                 word ptr [ebp - 0x894], cx
            //   b9ff000000           | mov                 ecx, 0xff
            //   33c0                 | xor                 eax, eax
            //   8dbd6ef7ffff         | lea                 edi, dword ptr [ebp - 0x892]
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_2 = { c645c161 c645c272 c645c365 c645c45c c645c55c c645c64d }
            // n = 6, score = 200
            //   c645c161             | mov                 byte ptr [ebp - 0x3f], 0x61
            //   c645c272             | mov                 byte ptr [ebp - 0x3e], 0x72
            //   c645c365             | mov                 byte ptr [ebp - 0x3d], 0x65
            //   c645c45c             | mov                 byte ptr [ebp - 0x3c], 0x5c
            //   c645c55c             | mov                 byte ptr [ebp - 0x3b], 0x5c
            //   c645c64d             | mov                 byte ptr [ebp - 0x3a], 0x4d

        $sequence_3 = { 5d c3 55 8bec b838130000 e8???????? 57 }
            // n = 7, score = 200
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   b838130000           | mov                 eax, 0x1338
            //   e8????????           |                     
            //   57                   | push                edi

        $sequence_4 = { 894108 c68530ffffff48 c68531ffffff74 c68532ffffff74 c68533ffffff70 c68534ffffff4f c68535ffffff70 }
            // n = 7, score = 200
            //   894108               | mov                 dword ptr [ecx + 8], eax
            //   c68530ffffff48       | mov                 byte ptr [ebp - 0xd0], 0x48
            //   c68531ffffff74       | mov                 byte ptr [ebp - 0xcf], 0x74
            //   c68532ffffff74       | mov                 byte ptr [ebp - 0xce], 0x74
            //   c68533ffffff70       | mov                 byte ptr [ebp - 0xcd], 0x70
            //   c68534ffffff4f       | mov                 byte ptr [ebp - 0xcc], 0x4f
            //   c68535ffffff70       | mov                 byte ptr [ebp - 0xcb], 0x70

        $sequence_5 = { c78578fbffff00000000 c7857cfbffff00000000 c78580fbffff00000000 c78584fbffff00000000 c78588fbffff00000000 8b8568f7ffff }
            // n = 6, score = 200
            //   c78578fbffff00000000     | mov    dword ptr [ebp - 0x488], 0
            //   c7857cfbffff00000000     | mov    dword ptr [ebp - 0x484], 0
            //   c78580fbffff00000000     | mov    dword ptr [ebp - 0x480], 0
            //   c78584fbffff00000000     | mov    dword ptr [ebp - 0x47c], 0
            //   c78588fbffff00000000     | mov    dword ptr [ebp - 0x478], 0
            //   8b8568f7ffff         | mov                 eax, dword ptr [ebp - 0x898]

        $sequence_6 = { e9???????? 8d85ccf8ffff 50 ff15???????? 8b8d20f8ffff 51 ff15???????? }
            // n = 7, score = 200
            //   e9????????           |                     
            //   8d85ccf8ffff         | lea                 eax, dword ptr [ebp - 0x734]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b8d20f8ffff         | mov                 ecx, dword ptr [ebp - 0x7e0]
            //   51                   | push                ecx
            //   ff15????????         |                     

        $sequence_7 = { 6810270000 ff15???????? ebda 33c0 }
            // n = 4, score = 200
            //   6810270000           | push                0x2710
            //   ff15????????         |                     
            //   ebda                 | jmp                 0xffffffdc
            //   33c0                 | xor                 eax, eax

        $sequence_8 = { 83c410 8b8548f7ffff 03856cf7ffff c60000 c6854cf7ffff6d c6854df7ffff69 c6854ef7ffff63 }
            // n = 7, score = 200
            //   83c410               | add                 esp, 0x10
            //   8b8548f7ffff         | mov                 eax, dword ptr [ebp - 0x8b8]
            //   03856cf7ffff         | add                 eax, dword ptr [ebp - 0x894]
            //   c60000               | mov                 byte ptr [eax], 0
            //   c6854cf7ffff6d       | mov                 byte ptr [ebp - 0x8b4], 0x6d
            //   c6854df7ffff69       | mov                 byte ptr [ebp - 0x8b3], 0x69
            //   c6854ef7ffff63       | mov                 byte ptr [ebp - 0x8b2], 0x63

        $sequence_9 = { 56 57 c68578ffffff6b c68579ffffff65 c6857affffff72 }
            // n = 5, score = 200
            //   56                   | push                esi
            //   57                   | push                edi
            //   c68578ffffff6b       | mov                 byte ptr [ebp - 0x88], 0x6b
            //   c68579ffffff65       | mov                 byte ptr [ebp - 0x87], 0x65
            //   c6857affffff72       | mov                 byte ptr [ebp - 0x86], 0x72

    condition:
        7 of them and filesize < 180224
}