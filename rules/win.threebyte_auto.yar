rule win_threebyte_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.threebyte."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.threebyte"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c685eafbffff2f c685ebfbffff35 c685ecfbffff2e c685edfbffff30 c685eefbffff29 c685effbffff00 c645f447 }
            // n = 7, score = 200
            //   c685eafbffff2f       | mov                 byte ptr [ebp - 0x416], 0x2f
            //   c685ebfbffff35       | mov                 byte ptr [ebp - 0x415], 0x35
            //   c685ecfbffff2e       | mov                 byte ptr [ebp - 0x414], 0x2e
            //   c685edfbffff30       | mov                 byte ptr [ebp - 0x413], 0x30
            //   c685eefbffff29       | mov                 byte ptr [ebp - 0x412], 0x29
            //   c685effbffff00       | mov                 byte ptr [ebp - 0x411], 0
            //   c645f447             | mov                 byte ptr [ebp - 0xc], 0x47

        $sequence_1 = { 50 e8???????? 83c404 83c8ff eb44 8b8d24f7ffff 038d14f7ffff }
            // n = 7, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   83c8ff               | or                  eax, 0xffffffff
            //   eb44                 | jmp                 0x46
            //   8b8d24f7ffff         | mov                 ecx, dword ptr [ebp - 0x8dc]
            //   038d14f7ffff         | add                 ecx, dword ptr [ebp - 0x8ec]

        $sequence_2 = { 52 e8???????? 83c408 8d85e8feffff 50 8b4d08 51 }
            // n = 7, score = 200
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   8d85e8feffff         | lea                 eax, [ebp - 0x118]
            //   50                   | push                eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   51                   | push                ecx

        $sequence_3 = { c685f0fdffff45 c685f1fdffff72 c685f2fdffff72 c685f3fdffff6f c685f4fdffff72 c685f5fdffff21 c685f6fdffff0d }
            // n = 7, score = 200
            //   c685f0fdffff45       | mov                 byte ptr [ebp - 0x210], 0x45
            //   c685f1fdffff72       | mov                 byte ptr [ebp - 0x20f], 0x72
            //   c685f2fdffff72       | mov                 byte ptr [ebp - 0x20e], 0x72
            //   c685f3fdffff6f       | mov                 byte ptr [ebp - 0x20d], 0x6f
            //   c685f4fdffff72       | mov                 byte ptr [ebp - 0x20c], 0x72
            //   c685f5fdffff21       | mov                 byte ptr [ebp - 0x20b], 0x21
            //   c685f6fdffff0d       | mov                 byte ptr [ebp - 0x20a], 0xd

        $sequence_4 = { 8b4d08 33d2 8a11 8955f8 8b4508 83c001 }
            // n = 6, score = 200
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   33d2                 | xor                 edx, edx
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   8955f8               | mov                 dword ptr [ebp - 8], edx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c001               | add                 eax, 1

        $sequence_5 = { 51 8d8d38feffff e8???????? 85c0 7517 6830750000 ff15???????? }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   8d8d38feffff         | lea                 ecx, [ebp - 0x1c8]
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7517                 | jne                 0x19
            //   6830750000           | push                0x7530
            //   ff15????????         |                     

        $sequence_6 = { 51 8d956cfbffff 52 6813000020 8b8564f7ffff 50 8b8d10f7ffff }
            // n = 7, score = 200
            //   51                   | push                ecx
            //   8d956cfbffff         | lea                 edx, [ebp - 0x494]
            //   52                   | push                edx
            //   6813000020           | push                0x20000013
            //   8b8564f7ffff         | mov                 eax, dword ptr [ebp - 0x89c]
            //   50                   | push                eax
            //   8b8d10f7ffff         | mov                 ecx, dword ptr [ebp - 0x8f0]

        $sequence_7 = { 8d9518f7ffff 52 6805000020 8b8564f7ffff 50 8b8d10f7ffff ff5120 }
            // n = 7, score = 200
            //   8d9518f7ffff         | lea                 edx, [ebp - 0x8e8]
            //   52                   | push                edx
            //   6805000020           | push                0x20000005
            //   8b8564f7ffff         | mov                 eax, dword ptr [ebp - 0x89c]
            //   50                   | push                eax
            //   8b8d10f7ffff         | mov                 ecx, dword ptr [ebp - 0x8f0]
            //   ff5120               | call                dword ptr [ecx + 0x20]

        $sequence_8 = { 52 6a00 ff15???????? 85c0 0f85ff000000 c68518ffffff43 c68519ffffff52 }
            // n = 7, score = 200
            //   52                   | push                edx
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f85ff000000         | jne                 0x105
            //   c68518ffffff43       | mov                 byte ptr [ebp - 0xe8], 0x43
            //   c68519ffffff52       | mov                 byte ptr [ebp - 0xe7], 0x52

        $sequence_9 = { 8b4dfc c6013d 8b55fc 83c201 8955fc 8b45fc 2b4510 }
            // n = 7, score = 200
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   c6013d               | mov                 byte ptr [ecx], 0x3d
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   83c201               | add                 edx, 1
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   2b4510               | sub                 eax, dword ptr [ebp + 0x10]

    condition:
        7 of them and filesize < 180224
}