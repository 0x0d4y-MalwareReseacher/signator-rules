rule win_ziyangrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.ziyangrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ziyangrat"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c684243901000072 c684243c01000064 c684243d01000020 c684243e0100004d c684243f01000069 }
            // n = 5, score = 200
            //   c684243901000072     | mov                 byte ptr [esp + 0x139], 0x72
            //   c684243c01000064     | mov                 byte ptr [esp + 0x13c], 0x64
            //   c684243d01000020     | mov                 byte ptr [esp + 0x13d], 0x20
            //   c684243e0100004d     | mov                 byte ptr [esp + 0x13e], 0x4d
            //   c684243f01000069     | mov                 byte ptr [esp + 0x13f], 0x69

        $sequence_1 = { 85c0 742b 8b4c2418 68???????? 51 }
            // n = 5, score = 200
            //   85c0                 | test                eax, eax
            //   742b                 | je                  0x2d
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   68????????           |                     
            //   51                   | push                ecx

        $sequence_2 = { 889c2440010000 b265 f3ab 66ab aa 33c0 33c9 }
            // n = 7, score = 200
            //   889c2440010000       | mov                 byte ptr [esp + 0x140], bl
            //   b265                 | mov                 dl, 0x65
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   33c0                 | xor                 eax, eax
            //   33c9                 | xor                 ecx, ecx

        $sequence_3 = { 8b4c2444 8d442450 81e2ffff0000 50 8b442420 51 8b4c2422 }
            // n = 7, score = 200
            //   8b4c2444             | mov                 ecx, dword ptr [esp + 0x44]
            //   8d442450             | lea                 eax, [esp + 0x50]
            //   81e2ffff0000         | and                 edx, 0xffff
            //   50                   | push                eax
            //   8b442420             | mov                 eax, dword ptr [esp + 0x20]
            //   51                   | push                ecx
            //   8b4c2422             | mov                 ecx, dword ptr [esp + 0x22]

        $sequence_4 = { c644243749 c644243853 c64424394b 885c243a }
            // n = 4, score = 200
            //   c644243749           | mov                 byte ptr [esp + 0x37], 0x49
            //   c644243853           | mov                 byte ptr [esp + 0x38], 0x53
            //   c64424394b           | mov                 byte ptr [esp + 0x39], 0x4b
            //   885c243a             | mov                 byte ptr [esp + 0x3a], bl

        $sequence_5 = { f3ab 8d5c242c 8bac2484050000 c744242811000000 b980000000 33c0 }
            // n = 6, score = 200
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8d5c242c             | lea                 ebx, [esp + 0x2c]
            //   8bac2484050000       | mov                 ebp, dword ptr [esp + 0x584]
            //   c744242811000000     | mov                 dword ptr [esp + 0x28], 0x11
            //   b980000000           | mov                 ecx, 0x80
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { ffd3 85c0 742b 8b4c2418 68???????? 51 56 }
            // n = 7, score = 200
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   742b                 | je                  0x2d
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   68????????           |                     
            //   51                   | push                ecx
            //   56                   | push                esi

        $sequence_7 = { 888c240b010000 898c2413010000 898c2417010000 33c0 888c241b010000 }
            // n = 5, score = 200
            //   888c240b010000       | mov                 byte ptr [esp + 0x10b], cl
            //   898c2413010000       | mov                 dword ptr [esp + 0x113], ecx
            //   898c2417010000       | mov                 dword ptr [esp + 0x117], ecx
            //   33c0                 | xor                 eax, eax
            //   888c241b010000       | mov                 byte ptr [esp + 0x11b], cl

        $sequence_8 = { e8???????? 68e8030000 ff15???????? 33c0 83c420 c3 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   68e8030000           | push                0x3e8
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   83c420               | add                 esp, 0x20
            //   c3                   | ret                 

        $sequence_9 = { e8???????? 83c410 83c640 4f 75e5 }
            // n = 5, score = 200
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   83c640               | add                 esi, 0x40
            //   4f                   | dec                 edi
            //   75e5                 | jne                 0xffffffe7

    condition:
        7 of them and filesize < 188416
}