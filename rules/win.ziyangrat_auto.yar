rule win_ziyangrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.ziyangrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ziyangrat"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83d8ff 3bc3 0f85ce000000 8a15???????? b9ff000000 33c0 }
            // n = 6, score = 200
            //   83d8ff               | sbb                 eax, -1
            //   3bc3                 | cmp                 eax, ebx
            //   0f85ce000000         | jne                 0xd4
            //   8a15????????         |                     
            //   b9ff000000           | mov                 ecx, 0xff
            //   33c0                 | xor                 eax, eax

        $sequence_1 = { 8dbc24200a0000 c1e902 f3a5 8bca 8d8424200a0000 83e103 50 }
            // n = 7, score = 200
            //   8dbc24200a0000       | lea                 edi, [esp + 0xa20]
            //   c1e902               | shr                 ecx, 2
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8bca                 | mov                 ecx, edx
            //   8d8424200a0000       | lea                 eax, [esp + 0xa20]
            //   83e103               | and                 ecx, 3
            //   50                   | push                eax

        $sequence_2 = { 68???????? f2ae f7d1 49 8d8c0c5c090000 }
            // n = 5, score = 200
            //   68????????           |                     
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8d8c0c5c090000       | lea                 ecx, [esp + ecx + 0x95c]

        $sequence_3 = { 66ab aa b9ff000000 33c0 8dbc2411030000 88542430 f3ab }
            // n = 7, score = 200
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   b9ff000000           | mov                 ecx, 0xff
            //   33c0                 | xor                 eax, eax
            //   8dbc2411030000       | lea                 edi, [esp + 0x311]
            //   88542430             | mov                 byte ptr [esp + 0x30], dl
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_4 = { c644244d20 c644244f4f c644245054 c644245120 c644245246 c64424534f }
            // n = 6, score = 200
            //   c644244d20           | mov                 byte ptr [esp + 0x4d], 0x20
            //   c644244f4f           | mov                 byte ptr [esp + 0x4f], 0x4f
            //   c644245054           | mov                 byte ptr [esp + 0x50], 0x54
            //   c644245120           | mov                 byte ptr [esp + 0x51], 0x20
            //   c644245246           | mov                 byte ptr [esp + 0x52], 0x46
            //   c64424534f           | mov                 byte ptr [esp + 0x53], 0x4f

        $sequence_5 = { 894c2466 c644241850 c644241972 c644241a6f c644241b67 c644241c72 c644241d61 }
            // n = 7, score = 200
            //   894c2466             | mov                 dword ptr [esp + 0x66], ecx
            //   c644241850           | mov                 byte ptr [esp + 0x18], 0x50
            //   c644241972           | mov                 byte ptr [esp + 0x19], 0x72
            //   c644241a6f           | mov                 byte ptr [esp + 0x1a], 0x6f
            //   c644241b67           | mov                 byte ptr [esp + 0x1b], 0x67
            //   c644241c72           | mov                 byte ptr [esp + 0x1c], 0x72
            //   c644241d61           | mov                 byte ptr [esp + 0x1d], 0x61

        $sequence_6 = { 5e 5d 5b 81c454510000 }
            // n = 4, score = 200
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   5b                   | pop                 ebx
            //   81c454510000         | add                 esp, 0x5154

        $sequence_7 = { e8???????? 83f8ff 0f8441020000 b801000000 5f }
            // n = 5, score = 200
            //   e8????????           |                     
            //   83f8ff               | cmp                 eax, -1
            //   0f8441020000         | je                  0x247
            //   b801000000           | mov                 eax, 1
            //   5f                   | pop                 edi

        $sequence_8 = { c644245273 c644245461 88442455 885c2456 c644245c4b }
            // n = 5, score = 200
            //   c644245273           | mov                 byte ptr [esp + 0x52], 0x73
            //   c644245461           | mov                 byte ptr [esp + 0x54], 0x61
            //   88442455             | mov                 byte ptr [esp + 0x55], al
            //   885c2456             | mov                 byte ptr [esp + 0x56], bl
            //   c644245c4b           | mov                 byte ptr [esp + 0x5c], 0x4b

        $sequence_9 = { 68???????? 8d940c60090000 52 ffd5 83c410 }
            // n = 5, score = 200
            //   68????????           |                     
            //   8d940c60090000       | lea                 edx, [esp + ecx + 0x960]
            //   52                   | push                edx
            //   ffd5                 | call                ebp
            //   83c410               | add                 esp, 0x10

    condition:
        7 of them and filesize < 188416
}