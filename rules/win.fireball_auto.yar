rule win_fireball_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.fireball."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fireball"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffb5e0f5ffff e8???????? 83c404 33c0 c785f4f5ffff07000000 }
            // n = 5, score = 100
            //   ffb5e0f5ffff         | push                dword ptr [ebp - 0xa20]
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   33c0                 | xor                 eax, eax
            //   c785f4f5ffff07000000     | mov    dword ptr [ebp - 0xa0c], 7

        $sequence_1 = { 3bf3 752b 8b4614 83f808 7204 8b16 eb02 }
            // n = 7, score = 100
            //   3bf3                 | cmp                 esi, ebx
            //   752b                 | jne                 0x2d
            //   8b4614               | mov                 eax, dword ptr [esi + 0x14]
            //   83f808               | cmp                 eax, 8
            //   7204                 | jb                  6
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   eb02                 | jmp                 4

        $sequence_2 = { 59 817e5cf87f2400 7409 ff765c e8???????? 59 6a0d }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   817e5cf87f2400       | cmp                 dword ptr [esi + 0x5c], 0x247ff8
            //   7409                 | je                  0xb
            //   ff765c               | push                dword ptr [esi + 0x5c]
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   6a0d                 | push                0xd

        $sequence_3 = { 0f438d70fbffff 51 6a00 68e9fd0000 ff15???????? 8bbd88fbffff 6818060000 }
            // n = 7, score = 100
            //   0f438d70fbffff       | cmovae              ecx, dword ptr [ebp - 0x490]
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   68e9fd0000           | push                0xfde9
            //   ff15????????         |                     
            //   8bbd88fbffff         | mov                 edi, dword ptr [ebp - 0x478]
            //   6818060000           | push                0x618

        $sequence_4 = { 85c0 7810 3de4000000 7309 8b04c558812400 5d }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7810                 | js                  0x12
            //   3de4000000           | cmp                 eax, 0xe4
            //   7309                 | jae                 0xb
            //   8b04c558812400       | mov                 eax, dword ptr [eax*8 + 0x248158]
            //   5d                   | pop                 ebp

        $sequence_5 = { 31e0 31e8 31ec 31f4 3108 3210 322432 }
            // n = 7, score = 100
            //   31e0                 | xor                 eax, esp
            //   31e8                 | xor                 eax, ebp
            //   31ec                 | xor                 esp, ebp
            //   31f4                 | xor                 esp, esi
            //   3108                 | xor                 dword ptr [eax], ecx
            //   3210                 | xor                 dl, byte ptr [eax]
            //   322432               | xor                 ah, byte ptr [edx + esi]

        $sequence_6 = { e8???????? 59 59 8b7d08 833cfda8f5240000 755b 6a18 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   833cfda8f5240000     | cmp                 dword ptr [edi*8 + 0x24f5a8], 0
            //   755b                 | jne                 0x5d
            //   6a18                 | push                0x18

        $sequence_7 = { 33c0 68???????? 8d8c248c000000 c78424a000000007000000 c784249c00000000000000 668984248c000000 e8???????? }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   68????????           |                     
            //   8d8c248c000000       | lea                 ecx, [esp + 0x8c]
            //   c78424a000000007000000     | mov    dword ptr [esp + 0xa0], 7
            //   c784249c00000000000000     | mov    dword ptr [esp + 0x9c], 0
            //   668984248c000000     | mov                 word ptr [esp + 0x8c], ax
            //   e8????????           |                     

        $sequence_8 = { c68424d00100000a e8???????? 8d8c24bc000000 51 }
            // n = 4, score = 100
            //   c68424d00100000a     | mov                 byte ptr [esp + 0x1d0], 0xa
            //   e8????????           |                     
            //   8d8c24bc000000       | lea                 ecx, [esp + 0xbc]
            //   51                   | push                ecx

        $sequence_9 = { 72f1 33c0 5d c3 8b04c54c7b2400 5d c3 }
            // n = 7, score = 100
            //   72f1                 | jb                  0xfffffff3
            //   33c0                 | xor                 eax, eax
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b04c54c7b2400       | mov                 eax, dword ptr [eax*8 + 0x247b4c]
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 335872
}