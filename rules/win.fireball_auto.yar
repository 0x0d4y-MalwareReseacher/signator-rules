rule win_fireball_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.fireball."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.fireball"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c745ec07000000 c745e800000000 668945d8 83fb08 }
            // n = 4, score = 100
            //   c745ec07000000       | mov                 dword ptr [ebp - 0x14], 7
            //   c745e800000000       | mov                 dword ptr [ebp - 0x18], 0
            //   668945d8             | mov                 word ptr [ebp - 0x28], ax
            //   83fb08               | cmp                 ebx, 8

        $sequence_1 = { 8bcb 84c0 740e 8d8570f6ffff 50 }
            // n = 5, score = 100
            //   8bcb                 | mov                 ecx, ebx
            //   84c0                 | test                al, al
            //   740e                 | je                  0x10
            //   8d8570f6ffff         | lea                 eax, [ebp - 0x990]
            //   50                   | push                eax

        $sequence_2 = { 83c424 83bd00f7ffff08 8d8598fbffff 898538f6ffff 8d8d28f6ffff 51 8d85a0fdffff }
            // n = 7, score = 100
            //   83c424               | add                 esp, 0x24
            //   83bd00f7ffff08       | cmp                 dword ptr [ebp - 0x900], 8
            //   8d8598fbffff         | lea                 eax, [ebp - 0x468]
            //   898538f6ffff         | mov                 dword ptr [ebp - 0x9c8], eax
            //   8d8d28f6ffff         | lea                 ecx, [ebp - 0x9d8]
            //   51                   | push                ecx
            //   8d85a0fdffff         | lea                 eax, [ebp - 0x260]

        $sequence_3 = { e8???????? c744244800000000 6a03 33c0 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   c744244800000000     | mov                 dword ptr [esp + 0x48], 0
            //   6a03                 | push                3
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { 5d c3 56 33f6 ffb6c8f62400 }
            // n = 5, score = 100
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   56                   | push                esi
            //   33f6                 | xor                 esi, esi
            //   ffb6c8f62400         | push                dword ptr [esi + 0x24f6c8]

        $sequence_5 = { 31e0 31e8 31ec 31f4 3108 3210 322432 }
            // n = 7, score = 100
            //   31e0                 | xor                 eax, esp
            //   31e8                 | xor                 eax, ebp
            //   31ec                 | xor                 esp, ebp
            //   31f4                 | xor                 esp, esi
            //   3108                 | xor                 dword ptr [eax], ecx
            //   3210                 | xor                 dl, byte ptr [eax]
            //   322432               | xor                 ah, byte ptr [edx + esi]

        $sequence_6 = { 68???????? e8???????? 83c404 8b4c2440 64890d00000000 59 }
            // n = 6, score = 100
            //   68????????           |                     
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b4c2440             | mov                 ecx, dword ptr [esp + 0x40]
            //   64890d00000000       | mov                 dword ptr fs:[0], ecx
            //   59                   | pop                 ecx

        $sequence_7 = { e8???????? 83c404 83bd6cfbffff10 c78584fbffff0f000000 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   83bd6cfbffff10       | cmp                 dword ptr [ebp - 0x494], 0x10
            //   c78584fbffff0f000000     | mov    dword ptr [ebp - 0x47c], 0xf

        $sequence_8 = { 32dc 3220 333433 44 33543360 3384338c339433 9c }
            // n = 7, score = 100
            //   32dc                 | xor                 bl, ah
            //   3220                 | xor                 ah, byte ptr [eax]
            //   333433               | xor                 esi, dword ptr [ebx + esi]
            //   44                   | inc                 esp
            //   33543360             | xor                 edx, dword ptr [ebx + esi + 0x60]
            //   3384338c339433       | xor                 eax, dword ptr [ebx + esi + 0x3394338c]
            //   9c                   | pushfd              

        $sequence_9 = { 50 c78528f6ffff3c000000 c7855cf6ffff00000000 c78560f6ffff00000000 c7853cf6ffff03010000 c7854cf6ffff00000000 c78550f6ffff00000000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   c78528f6ffff3c000000     | mov    dword ptr [ebp - 0x9d8], 0x3c
            //   c7855cf6ffff00000000     | mov    dword ptr [ebp - 0x9a4], 0
            //   c78560f6ffff00000000     | mov    dword ptr [ebp - 0x9a0], 0
            //   c7853cf6ffff03010000     | mov    dword ptr [ebp - 0x9c4], 0x103
            //   c7854cf6ffff00000000     | mov    dword ptr [ebp - 0x9b4], 0
            //   c78550f6ffff00000000     | mov    dword ptr [ebp - 0x9b0], 0

    condition:
        7 of them and filesize < 335872
}