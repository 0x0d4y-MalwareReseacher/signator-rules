rule win_koadic_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.koadic."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.koadic"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 68???????? ff35???????? e8???????? 21c0 742b ff35???????? ff35???????? }
            // n = 7, score = 100
            //   68????????           |                     
            //   ff35????????         |                     
            //   e8????????           |                     
            //   21c0                 | and                 eax, eax
            //   742b                 | je                  0x2d
            //   ff35????????         |                     
            //   ff35????????         |                     

        $sequence_1 = { 8b4508 c1e002 5d c20800 33c0 }
            // n = 5, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   c1e002               | shl                 eax, 2
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 894118 eb19 6aec ff7508 ff15???????? 8b4d14 84c0 }
            // n = 7, score = 100
            //   894118               | mov                 dword ptr [ecx + 0x18], eax
            //   eb19                 | jmp                 0x1b
            //   6aec                 | push                -0x14
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff15????????         |                     
            //   8b4d14               | mov                 ecx, dword ptr [ebp + 0x14]
            //   84c0                 | test                al, al

        $sequence_3 = { 8d4c2420 51 e8???????? e9???????? 8a442418 c705????????a07f4000 a802 }
            // n = 7, score = 100
            //   8d4c2420             | lea                 ecx, [esp + 0x20]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   e9????????           |                     
            //   8a442418             | mov                 al, byte ptr [esp + 0x18]
            //   c705????????a07f4000     |     
            //   a802                 | test                al, 2

        $sequence_4 = { 8bfb 7413 036c2418 8d4c3118 8a1428 881401 }
            // n = 6, score = 100
            //   8bfb                 | mov                 edi, ebx
            //   7413                 | je                  0x15
            //   036c2418             | add                 ebp, dword ptr [esp + 0x18]
            //   8d4c3118             | lea                 ecx, [ecx + esi + 0x18]
            //   8a1428               | mov                 dl, byte ptr [eax + ebp]
            //   881401               | mov                 byte ptr [ecx + eax], dl

        $sequence_5 = { 80f922 7523 40 8a08 8bf0 84c9 }
            // n = 6, score = 100
            //   80f922               | cmp                 cl, 0x22
            //   7523                 | jne                 0x25
            //   40                   | inc                 eax
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   8bf0                 | mov                 esi, eax
            //   84c9                 | test                cl, cl

        $sequence_6 = { 0fb689247f4000 ff248df87e4000 6a08 50 845c2424 }
            // n = 5, score = 100
            //   0fb689247f4000       | movzx               ecx, byte ptr [ecx + 0x407f24]
            //   ff248df87e4000       | jmp                 dword ptr [ecx*4 + 0x407ef8]
            //   6a08                 | push                8
            //   50                   | push                eax
            //   845c2424             | test                byte ptr [esp + 0x24], bl

        $sequence_7 = { 845c2420 7411 8d4c242c 51 8d542420 52 }
            // n = 6, score = 100
            //   845c2420             | test                byte ptr [esp + 0x20], bl
            //   7411                 | je                  0x13
            //   8d4c242c             | lea                 ecx, [esp + 0x2c]
            //   51                   | push                ecx
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   52                   | push                edx

        $sequence_8 = { ff15???????? ff7510 57 ff35???????? ff15???????? 5b 8b45fc }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   57                   | push                edi
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   5b                   | pop                 ebx
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_9 = { 8b6c2404 ff7504 58 a3???????? ff7508 58 a3???????? }
            // n = 7, score = 100
            //   8b6c2404             | mov                 ebp, dword ptr [esp + 4]
            //   ff7504               | push                dword ptr [ebp + 4]
            //   58                   | pop                 eax
            //   a3????????           |                     
            //   ff7508               | push                dword ptr [ebp + 8]
            //   58                   | pop                 eax
            //   a3????????           |                     

    condition:
        7 of them and filesize < 180224
}