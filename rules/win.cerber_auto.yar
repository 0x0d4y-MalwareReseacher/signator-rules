rule win_cerber_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.cerber."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.cerber"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 47 56 893d???????? }
            // n = 4, score = 1200
            //   6a00                 | push                0
            //   47                   | inc                 edi
            //   56                   | push                esi
            //   893d????????         |                     

        $sequence_1 = { 33f9 8b88d0000000 89b850010000 8b7de8 23b8c8000000 }
            // n = 5, score = 1200
            //   33f9                 | xor                 edi, ecx
            //   8b88d0000000         | mov                 ecx, dword ptr [eax + 0xd0]
            //   89b850010000         | mov                 dword ptr [eax + 0x150], edi
            //   8b7de8               | mov                 edi, dword ptr [ebp - 0x18]
            //   23b8c8000000         | and                 edi, dword ptr [eax + 0xc8]

        $sequence_2 = { 83e107 c745fc08000000 7403 894dfc 8b5d0c 8a1c1f }
            // n = 6, score = 1200
            //   83e107               | and                 ecx, 7
            //   c745fc08000000       | mov                 dword ptr [ebp - 4], 8
            //   7403                 | je                  5
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx
            //   8b5d0c               | mov                 ebx, dword ptr [ebp + 0xc]
            //   8a1c1f               | mov                 bl, byte ptr [edi + ebx]

        $sequence_3 = { 83e107 7416 8b5d08 8bd1 8bf0 c1ee03 8a1c1e }
            // n = 7, score = 1200
            //   83e107               | and                 ecx, 7
            //   7416                 | je                  0x18
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   8bd1                 | mov                 edx, ecx
            //   8bf0                 | mov                 esi, eax
            //   c1ee03               | shr                 esi, 3
            //   8a1c1e               | mov                 bl, byte ptr [esi + ebx]

        $sequence_4 = { 3bf9 7415 8b4d0c 0fb60c0f }
            // n = 4, score = 1200
            //   3bf9                 | cmp                 edi, ecx
            //   7415                 | je                  0x17
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   0fb60c0f             | movzx               ecx, byte ptr [edi + ecx]

        $sequence_5 = { 33c0 5b c9 c3 55 8bec 8b550c }
            // n = 7, score = 1200
            //   33c0                 | xor                 eax, eax
            //   5b                   | pop                 ebx
            //   c9                   | leave               
            //   c3                   | ret                 
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]

        $sequence_6 = { 53 ff7508 8bc6 e8???????? 83c40c 85c0 7411 }
            // n = 7, score = 1200
            //   53                   | push                ebx
            //   ff7508               | push                dword ptr [ebp + 8]
            //   8bc6                 | mov                 eax, esi
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   85c0                 | test                eax, eax
            //   7411                 | je                  0x13

        $sequence_7 = { 0f8c3effffff 5e 5b 5f }
            // n = 4, score = 1200
            //   0f8c3effffff         | jl                  0xffffff44
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   5f                   | pop                 edi

    condition:
        7 of them and filesize < 573440
}