rule win_duqu_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.duqu."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.duqu"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? bacdc185ad 89464c 8bcb e8???????? }
            // n = 5, score = 400
            //   e8????????           |                     
            //   bacdc185ad           | mov                 edx, 0xad85c1cd
            //   89464c               | mov                 dword ptr [esi + 0x4c], eax
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     

        $sequence_1 = { bb???????? 894650 ba0ded3515 8bcb }
            // n = 4, score = 400
            //   bb????????           |                     
            //   894650               | mov                 dword ptr [esi + 0x50], eax
            //   ba0ded3515           | mov                 edx, 0x1535ed0d
            //   8bcb                 | mov                 ecx, ebx

        $sequence_2 = { e8???????? 85c0 7465 e8???????? 85c0 }
            // n = 5, score = 400
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7465                 | je                  0x67
            //   e8????????           |                     
            //   85c0                 | test                eax, eax

        $sequence_3 = { 50 8d442438 50 ff5310 85c0 }
            // n = 5, score = 400
            //   50                   | push                eax
            //   8d442438             | lea                 eax, [esp + 0x38]
            //   50                   | push                eax
            //   ff5310               | call                dword ptr [ebx + 0x10]
            //   85c0                 | test                eax, eax

        $sequence_4 = { 8a00 88442413 84c0 8b44241c 744d }
            // n = 5, score = 400
            //   8a00                 | mov                 al, byte ptr [eax]
            //   88442413             | mov                 byte ptr [esp + 0x13], al
            //   84c0                 | test                al, al
            //   8b44241c             | mov                 eax, dword ptr [esp + 0x1c]
            //   744d                 | je                  0x4f

        $sequence_5 = { 3dfb0a5ecd 0f85c5000000 3bd6 0f84bd000000 8b4224 }
            // n = 5, score = 400
            //   3dfb0a5ecd           | cmp                 eax, 0xcd5e0afb
            //   0f85c5000000         | jne                 0xcb
            //   3bd6                 | cmp                 edx, esi
            //   0f84bd000000         | je                  0xc3
            //   8b4224               | mov                 eax, dword ptr [edx + 0x24]

        $sequence_6 = { 33c9 3c2e 7502 8bf1 42 41 8a02 }
            // n = 7, score = 400
            //   33c9                 | xor                 ecx, ecx
            //   3c2e                 | cmp                 al, 0x2e
            //   7502                 | jne                 4
            //   8bf1                 | mov                 esi, ecx
            //   42                   | inc                 edx
            //   41                   | inc                 ecx
            //   8a02                 | mov                 al, byte ptr [edx]

        $sequence_7 = { 8a442413 8b5c2418 85c9 7e30 0fb6c8 }
            // n = 5, score = 400
            //   8a442413             | mov                 al, byte ptr [esp + 0x13]
            //   8b5c2418             | mov                 ebx, dword ptr [esp + 0x18]
            //   85c9                 | test                ecx, ecx
            //   7e30                 | jle                 0x32
            //   0fb6c8               | movzx               ecx, al

        $sequence_8 = { 56 51 8bf2 e8???????? }
            // n = 4, score = 400
            //   56                   | push                esi
            //   51                   | push                ecx
            //   8bf2                 | mov                 esi, edx
            //   e8????????           |                     

        $sequence_9 = { 8bcb e8???????? 894654 85c0 }
            // n = 4, score = 400
            //   8bcb                 | mov                 ecx, ebx
            //   e8????????           |                     
            //   894654               | mov                 dword ptr [esi + 0x54], eax
            //   85c0                 | test                eax, eax

        $sequence_10 = { 8be8 3bee 7509 5f }
            // n = 4, score = 200
            //   8be8                 | mov                 ebp, eax
            //   3bee                 | cmp                 ebp, esi
            //   7509                 | jne                 0xb
            //   5f                   | pop                 edi

        $sequence_11 = { 8bdf 8995dcfbffff 8995ccf3ffff c785bcebfffffeffffff }
            // n = 4, score = 200
            //   8bdf                 | mov                 ebx, edi
            //   8995dcfbffff         | mov                 dword ptr [ebp - 0x424], edx
            //   8995ccf3ffff         | mov                 dword ptr [ebp - 0xc34], edx
            //   c785bcebfffffeffffff     | mov    dword ptr [ebp - 0x1444], 0xfffffffe

        $sequence_12 = { 8be8 8bc6 2bc3 d1fd }
            // n = 4, score = 200
            //   8be8                 | mov                 ebp, eax
            //   8bc6                 | mov                 eax, esi
            //   2bc3                 | sub                 eax, ebx
            //   d1fd                 | sar                 ebp, 1

        $sequence_13 = { 8be8 ffd6 85db 741e }
            // n = 4, score = 200
            //   8be8                 | mov                 ebp, eax
            //   ffd6                 | call                esi
            //   85db                 | test                ebx, ebx
            //   741e                 | je                  0x20

        $sequence_14 = { 8beb ebab 8bd5 ff542424 }
            // n = 4, score = 200
            //   8beb                 | mov                 ebp, ebx
            //   ebab                 | jmp                 0xffffffad
            //   8bd5                 | mov                 edx, ebp
            //   ff542424             | call                dword ptr [esp + 0x24]

        $sequence_15 = { 8bde 2b1d???????? 81fbff000000 7207 c745fc01000000 }
            // n = 5, score = 200
            //   8bde                 | mov                 ebx, esi
            //   2b1d????????         |                     
            //   81fbff000000         | cmp                 ebx, 0xff
            //   7207                 | jb                  9
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1

    condition:
        7 of them and filesize < 18759680
}