rule win_royalcli_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.royalcli."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.royalcli"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8995d0feffff 8985d4feffff e9???????? 33f6 33c0 8985ccfeffff }
            // n = 6, score = 100
            //   8995d0feffff         | mov                 dword ptr [ebp - 0x130], edx
            //   8985d4feffff         | mov                 dword ptr [ebp - 0x12c], eax
            //   e9????????           |                     
            //   33f6                 | xor                 esi, esi
            //   33c0                 | xor                 eax, eax
            //   8985ccfeffff         | mov                 dword ptr [ebp - 0x134], eax

        $sequence_1 = { 742a 3c5c 7426 807e013a 7520 8bd7 }
            // n = 6, score = 100
            //   742a                 | je                  0x2c
            //   3c5c                 | cmp                 al, 0x5c
            //   7426                 | je                  0x28
            //   807e013a             | cmp                 byte ptr [esi + 1], 0x3a
            //   7520                 | jne                 0x22
            //   8bd7                 | mov                 edx, edi

        $sequence_2 = { 33cd e8???????? 8be5 5d c3 8d8decfdffff }
            // n = 6, score = 100
            //   33cd                 | xor                 ecx, ebp
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8d8decfdffff         | lea                 ecx, [ebp - 0x214]

        $sequence_3 = { 8d4a01 47 8d9b00000000 0fb641ff }
            // n = 4, score = 100
            //   8d4a01               | lea                 ecx, [edx + 1]
            //   47                   | inc                 edi
            //   8d9b00000000         | lea                 ebx, [ebx]
            //   0fb641ff             | movzx               eax, byte ptr [ecx - 1]

        $sequence_4 = { 8d85e4f6ffff 50 ffd3 8d8d04f7ffff 51 ffd3 }
            // n = 6, score = 100
            //   8d85e4f6ffff         | lea                 eax, [ebp - 0x91c]
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   8d8d04f7ffff         | lea                 ecx, [ebp - 0x8fc]
            //   51                   | push                ecx
            //   ffd3                 | call                ebx

        $sequence_5 = { c604113f eb0b 7665 3c3a 7361 0404 880411 }
            // n = 7, score = 100
            //   c604113f             | mov                 byte ptr [ecx + edx], 0x3f
            //   eb0b                 | jmp                 0xd
            //   7665                 | jbe                 0x67
            //   3c3a                 | cmp                 al, 0x3a
            //   7361                 | jae                 0x63
            //   0404                 | add                 al, 4
            //   880411               | mov                 byte ptr [ecx + edx], al

        $sequence_6 = { 85c0 0f88bc000000 8b854cf7ffff 8b08 8d9550f7ffff 52 50 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   0f88bc000000         | js                  0xc2
            //   8b854cf7ffff         | mov                 eax, dword ptr [ebp - 0x8b4]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8d9550f7ffff         | lea                 edx, [ebp - 0x8b0]
            //   52                   | push                edx
            //   50                   | push                eax

        $sequence_7 = { 8b4508 51 8d95f0feffff 52 8b95e4fdffff 50 8bce }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   51                   | push                ecx
            //   8d95f0feffff         | lea                 edx, [ebp - 0x110]
            //   52                   | push                edx
            //   8b95e4fdffff         | mov                 edx, dword ptr [ebp - 0x21c]
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi

        $sequence_8 = { 83f001 eb09 85c9 7405 3521100000 42 3bd7 }
            // n = 7, score = 100
            //   83f001               | xor                 eax, 1
            //   eb09                 | jmp                 0xb
            //   85c9                 | test                ecx, ecx
            //   7405                 | je                  7
            //   3521100000           | xor                 eax, 0x1021
            //   42                   | inc                 edx
            //   3bd7                 | cmp                 edx, edi

        $sequence_9 = { 8b4508 53 56 68???????? 50 8bf1 e8???????? }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   53                   | push                ebx
            //   56                   | push                esi
            //   68????????           |                     
            //   50                   | push                eax
            //   8bf1                 | mov                 esi, ecx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 204800
}