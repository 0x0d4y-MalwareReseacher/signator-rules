rule win_royalcli_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.royalcli."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.royalcli"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 e8???????? 8b06 8b35???????? }
            // n = 4, score = 100
            //   52                   | push                edx
            //   e8????????           |                     
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   8b35????????         |                     

        $sequence_1 = { ebde 8bc8 83e01f c1f905 8b0c8dc04b4100 c1e006 0fbe440104 }
            // n = 7, score = 100
            //   ebde                 | jmp                 0xffffffe0
            //   8bc8                 | mov                 ecx, eax
            //   83e01f               | and                 eax, 0x1f
            //   c1f905               | sar                 ecx, 5
            //   8b0c8dc04b4100       | mov                 ecx, dword ptr [ecx*4 + 0x414bc0]
            //   c1e006               | shl                 eax, 6
            //   0fbe440104           | movsx               eax, byte ptr [ecx + eax + 4]

        $sequence_2 = { 8d3c85c04b4100 e8???????? 83e01f 59 c1e006 0307 59 }
            // n = 7, score = 100
            //   8d3c85c04b4100       | lea                 edi, dword ptr [eax*4 + 0x414bc0]
            //   e8????????           |                     
            //   83e01f               | and                 eax, 0x1f
            //   59                   | pop                 ecx
            //   c1e006               | shl                 eax, 6
            //   0307                 | add                 eax, dword ptr [edi]
            //   59                   | pop                 ecx

        $sequence_3 = { 51 8d95c4f9ffff 68???????? 52 e8???????? 8b85b8f9ffff 8b8dbcf9ffff }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   8d95c4f9ffff         | lea                 edx, dword ptr [ebp - 0x63c]
            //   68????????           |                     
            //   52                   | push                edx
            //   e8????????           |                     
            //   8b85b8f9ffff         | mov                 eax, dword ptr [ebp - 0x648]
            //   8b8dbcf9ffff         | mov                 ecx, dword ptr [ebp - 0x644]

        $sequence_4 = { 56 8d8df4feffff 68???????? 51 e8???????? }
            // n = 5, score = 100
            //   56                   | push                esi
            //   8d8df4feffff         | lea                 ecx, dword ptr [ebp - 0x10c]
            //   68????????           |                     
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_5 = { eb06 8bb5fcfeffff 3bc8 0f84ab010000 8a06 3c2e 742a }
            // n = 7, score = 100
            //   eb06                 | jmp                 8
            //   8bb5fcfeffff         | mov                 esi, dword ptr [ebp - 0x104]
            //   3bc8                 | cmp                 ecx, eax
            //   0f84ab010000         | je                  0x1b1
            //   8a06                 | mov                 al, byte ptr [esi]
            //   3c2e                 | cmp                 al, 0x2e
            //   742a                 | je                  0x2c

        $sequence_6 = { 80e30f 02db 41 02db eb1d 0fb6043e }
            // n = 6, score = 100
            //   80e30f               | and                 bl, 0xf
            //   02db                 | add                 bl, bl
            //   41                   | inc                 ecx
            //   02db                 | add                 bl, bl
            //   eb1d                 | jmp                 0x1f
            //   0fb6043e             | movzx               eax, byte ptr [esi + edi]

        $sequence_7 = { 8bbd7cf7ffff f7df 1bff 83c7fe e9???????? 8b35???????? }
            // n = 6, score = 100
            //   8bbd7cf7ffff         | mov                 edi, dword ptr [ebp - 0x884]
            //   f7df                 | neg                 edi
            //   1bff                 | sbb                 edi, edi
            //   83c7fe               | add                 edi, -2
            //   e9????????           |                     
            //   8b35????????         |                     

        $sequence_8 = { 8d3c85c04b4100 8b07 c1e606 8a4c3004 f6c101 7514 e8???????? }
            // n = 7, score = 100
            //   8d3c85c04b4100       | lea                 edi, dword ptr [eax*4 + 0x414bc0]
            //   8b07                 | mov                 eax, dword ptr [edi]
            //   c1e606               | shl                 esi, 6
            //   8a4c3004             | mov                 cl, byte ptr [eax + esi + 4]
            //   f6c101               | test                cl, 1
            //   7514                 | jne                 0x16
            //   e8????????           |                     

        $sequence_9 = { 8d95ccfeffff 52 8d45d4 50 }
            // n = 4, score = 100
            //   8d95ccfeffff         | lea                 edx, dword ptr [ebp - 0x134]
            //   52                   | push                edx
            //   8d45d4               | lea                 eax, dword ptr [ebp - 0x2c]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 204800
}