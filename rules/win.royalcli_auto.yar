rule win_royalcli_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.royalcli."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.royalcli"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 03c2 8db078563412 81f66699aa55 83c41c 03f1 }
            // n = 5, score = 100
            //   03c2                 | add                 eax, edx
            //   8db078563412         | lea                 esi, [eax + 0x12345678]
            //   81f66699aa55         | xor                 esi, 0x55aa9966
            //   83c41c               | add                 esp, 0x1c
            //   03f1                 | add                 esi, ecx

        $sequence_1 = { e8???????? 33f6 83c42c 3bc6 0f8c19050000 83bda4feffff1c 0f8c0c050000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   33f6                 | xor                 esi, esi
            //   83c42c               | add                 esp, 0x2c
            //   3bc6                 | cmp                 eax, esi
            //   0f8c19050000         | jl                  0x51f
            //   83bda4feffff1c       | cmp                 dword ptr [ebp - 0x15c], 0x1c
            //   0f8c0c050000         | jl                  0x512

        $sequence_2 = { f3a4 8b95fcfeffff 8d8500ffffff 8bc8 2bd1 8bff }
            // n = 6, score = 100
            //   f3a4                 | rep movsb           byte ptr es:[edi], byte ptr [esi]
            //   8b95fcfeffff         | mov                 edx, dword ptr [ebp - 0x104]
            //   8d8500ffffff         | lea                 eax, [ebp - 0x100]
            //   8bc8                 | mov                 ecx, eax
            //   2bd1                 | sub                 edx, ecx
            //   8bff                 | mov                 edi, edi

        $sequence_3 = { 83c41c 8d9de8fdffff 8d8df0feffff e8???????? }
            // n = 4, score = 100
            //   83c41c               | add                 esp, 0x1c
            //   8d9de8fdffff         | lea                 ebx, [ebp - 0x218]
            //   8d8df0feffff         | lea                 ecx, [ebp - 0x110]
            //   e8????????           |                     

        $sequence_4 = { 8d85f0feffff 50 51 8b8dc8feffff }
            // n = 4, score = 100
            //   8d85f0feffff         | lea                 eax, [ebp - 0x110]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8b8dc8feffff         | mov                 ecx, dword ptr [ebp - 0x138]

        $sequence_5 = { 03ca 32d8 32d9 8ac3 8b5d08 88041f 47 }
            // n = 7, score = 100
            //   03ca                 | add                 ecx, edx
            //   32d8                 | xor                 bl, al
            //   32d9                 | xor                 bl, cl
            //   8ac3                 | mov                 al, bl
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   88041f               | mov                 byte ptr [edi + ebx], al
            //   47                   | inc                 edi

        $sequence_6 = { 6880000000 6a03 8910 668b15???????? 6a00 894804 6a02 }
            // n = 7, score = 100
            //   6880000000           | push                0x80
            //   6a03                 | push                3
            //   8910                 | mov                 dword ptr [eax], edx
            //   668b15????????       |                     
            //   6a00                 | push                0
            //   894804               | mov                 dword ptr [eax + 4], ecx
            //   6a02                 | push                2

        $sequence_7 = { 8d45d4 50 68???????? 68???????? ff15???????? 8b8db8f9ffff }
            // n = 6, score = 100
            //   8d45d4               | lea                 eax, [ebp - 0x2c]
            //   50                   | push                eax
            //   68????????           |                     
            //   68????????           |                     
            //   ff15????????         |                     
            //   8b8db8f9ffff         | mov                 ecx, dword ptr [ebp - 0x648]

        $sequence_8 = { 8b8550f7ffff 8b08 8b5108 50 }
            // n = 4, score = 100
            //   8b8550f7ffff         | mov                 eax, dword ptr [ebp - 0x8b0]
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   8b5108               | mov                 edx, dword ptr [ecx + 8]
            //   50                   | push                eax

        $sequence_9 = { 85c0 7531 8d85e0feffff 50 6a14 8d4de8 51 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7531                 | jne                 0x33
            //   8d85e0feffff         | lea                 eax, [ebp - 0x120]
            //   50                   | push                eax
            //   6a14                 | push                0x14
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   51                   | push                ecx

    condition:
        7 of them and filesize < 204800
}