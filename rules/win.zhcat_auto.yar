rule win_zhcat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.zhcat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zhcat"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 750a 6a00 ff15???????? eb09 ff7510 ff15???????? }
            // n = 6, score = 200
            //   750a                 | jne                 0xc
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   eb09                 | jmp                 0xb
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   ff15????????         |                     

        $sequence_1 = { 7d10 8a8c181d010000 888800494100 40 ebe6 ff35???????? }
            // n = 6, score = 200
            //   7d10                 | jge                 0x12
            //   8a8c181d010000       | mov                 cl, byte ptr [eax + ebx + 0x11d]
            //   888800494100         | mov                 byte ptr [eax + 0x414900], cl
            //   40                   | inc                 eax
            //   ebe6                 | jmp                 0xffffffe8
            //   ff35????????         |                     

        $sequence_2 = { 57 8bf0 33ff 393e 7f10 }
            // n = 5, score = 200
            //   57                   | push                edi
            //   8bf0                 | mov                 esi, eax
            //   33ff                 | xor                 edi, edi
            //   393e                 | cmp                 dword ptr [esi], edi
            //   7f10                 | jg                  0x12

        $sequence_3 = { 753d 3974241c 7407 68???????? }
            // n = 4, score = 200
            //   753d                 | jne                 0x3f
            //   3974241c             | cmp                 dword ptr [esp + 0x1c], esi
            //   7407                 | je                  9
            //   68????????           |                     

        $sequence_4 = { 53 ff15???????? 6aff 8945f4 53 8d45f4 }
            // n = 6, score = 200
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   6aff                 | push                -1
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   53                   | push                ebx
            //   8d45f4               | lea                 eax, [ebp - 0xc]

        $sequence_5 = { 6a00 8bd8 8d4508 50 bffe010000 57 53 }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   8bd8                 | mov                 ebx, eax
            //   8d4508               | lea                 eax, [ebp + 8]
            //   50                   | push                eax
            //   bffe010000           | mov                 edi, 0x1fe
            //   57                   | push                edi
            //   53                   | push                ebx

        $sequence_6 = { 59 3bf3 7409 33c0 }
            // n = 4, score = 200
            //   59                   | pop                 ecx
            //   3bf3                 | cmp                 esi, ebx
            //   7409                 | je                  0xb
            //   33c0                 | xor                 eax, eax

        $sequence_7 = { 8b1d???????? 894704 8b45ec 894708 }
            // n = 4, score = 200
            //   8b1d????????         |                     
            //   894704               | mov                 dword ptr [edi + 4], eax
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   894708               | mov                 dword ptr [edi + 8], eax

        $sequence_8 = { 59 85db 740b 6a0a 59 }
            // n = 5, score = 200
            //   59                   | pop                 ecx
            //   85db                 | test                ebx, ebx
            //   740b                 | je                  0xd
            //   6a0a                 | push                0xa
            //   59                   | pop                 ecx

        $sequence_9 = { c3 8b35???????? 6a05 ff75f0 ffd6 3bc3 }
            // n = 6, score = 200
            //   c3                   | ret                 
            //   8b35????????         |                     
            //   6a05                 | push                5
            //   ff75f0               | push                dword ptr [ebp - 0x10]
            //   ffd6                 | call                esi
            //   3bc3                 | cmp                 eax, ebx

    condition:
        7 of them and filesize < 376832
}