rule win_zhcat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.zhcat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zhcat"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7ce5 8bc3 eb03 83c8ff 5f }
            // n = 5, score = 200
            //   7ce5                 | jl                  0xffffffe7
            //   8bc3                 | mov                 eax, ebx
            //   eb03                 | jmp                 5
            //   83c8ff               | or                  eax, 0xffffffff
            //   5f                   | pop                 edi

        $sequence_1 = { 6a0c bf???????? 8bf0 59 33d2 }
            // n = 5, score = 200
            //   6a0c                 | push                0xc
            //   bf????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   59                   | pop                 ecx
            //   33d2                 | xor                 edx, edx

        $sequence_2 = { 56 6a02 58 ff750c 668945e8 }
            // n = 5, score = 200
            //   56                   | push                esi
            //   6a02                 | push                2
            //   58                   | pop                 eax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   668945e8             | mov                 word ptr [ebp - 0x18], ax

        $sequence_3 = { 385de9 750a 6a01 ff15???????? ebbf }
            // n = 5, score = 200
            //   385de9               | cmp                 byte ptr [ebp - 0x17], bl
            //   750a                 | jne                 0xc
            //   6a01                 | push                1
            //   ff15????????         |                     
            //   ebbf                 | jmp                 0xffffffc1

        $sequence_4 = { 754f 6a06 6a01 6a02 ffd7 8bf0 8975f4 }
            // n = 7, score = 200
            //   754f                 | jne                 0x51
            //   6a06                 | push                6
            //   6a01                 | push                1
            //   6a02                 | push                2
            //   ffd7                 | call                edi
            //   8bf0                 | mov                 esi, eax
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi

        $sequence_5 = { 6a00 8bd8 8d4508 50 bffe010000 57 53 }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   8bd8                 | mov                 ebx, eax
            //   8d4508               | lea                 eax, [ebp + 8]
            //   50                   | push                eax
            //   bffe010000           | mov                 edi, 0x1fe
            //   57                   | push                edi
            //   53                   | push                ebx

        $sequence_6 = { 8b7004 57 6800020000 894df8 8975f4 e8???????? 59 }
            // n = 7, score = 200
            //   8b7004               | mov                 esi, dword ptr [eax + 4]
            //   57                   | push                edi
            //   6800020000           | push                0x200
            //   894df8               | mov                 dword ptr [ebp - 8], ecx
            //   8975f4               | mov                 dword ptr [ebp - 0xc], esi
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_7 = { 741f ff742420 ff742428 ff742420 ff74241c 53 ff742428 }
            // n = 7, score = 200
            //   741f                 | je                  0x21
            //   ff742420             | push                dword ptr [esp + 0x20]
            //   ff742428             | push                dword ptr [esp + 0x28]
            //   ff742420             | push                dword ptr [esp + 0x20]
            //   ff74241c             | push                dword ptr [esp + 0x1c]
            //   53                   | push                ebx
            //   ff742428             | push                dword ptr [esp + 0x28]

        $sequence_8 = { ff35???????? ffd6 50 e8???????? ff35???????? 6a0a e8???????? }
            // n = 7, score = 200
            //   ff35????????         |                     
            //   ffd6                 | call                esi
            //   50                   | push                eax
            //   e8????????           |                     
            //   ff35????????         |                     
            //   6a0a                 | push                0xa
            //   e8????????           |                     

        $sequence_9 = { 33d2 f3a6 0f8400010000 6a03 }
            // n = 4, score = 200
            //   33d2                 | xor                 edx, edx
            //   f3a6                 | repe cmpsb          byte ptr [esi], byte ptr es:[edi]
            //   0f8400010000         | je                  0x106
            //   6a03                 | push                3

    condition:
        7 of them and filesize < 376832
}