rule win_felismus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.felismus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.felismus"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 51 6a02 68???????? }
            // n = 4, score = 100
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   6a02                 | push                2
            //   68????????           |                     

        $sequence_1 = { 8b4c2448 8bd0 d3ea 8b0d???????? d3e0 8bcf 0bd0 }
            // n = 7, score = 100
            //   8b4c2448             | mov                 ecx, dword ptr [esp + 0x48]
            //   8bd0                 | mov                 edx, eax
            //   d3ea                 | shr                 edx, cl
            //   8b0d????????         |                     
            //   d3e0                 | shl                 eax, cl
            //   8bcf                 | mov                 ecx, edi
            //   0bd0                 | or                  edx, eax

        $sequence_2 = { 0f8fde030000 6a11 ff15???????? 8bf0 83c404 85f6 0f84f8030000 }
            // n = 7, score = 100
            //   0f8fde030000         | jg                  0x3e4
            //   6a11                 | push                0x11
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4
            //   85f6                 | test                esi, esi
            //   0f84f8030000         | je                  0x3fe

        $sequence_3 = { 8bd7 33c9 8a4c3408 8bc1 83e10f c1e804 42 }
            // n = 7, score = 100
            //   8bd7                 | mov                 edx, edi
            //   33c9                 | xor                 ecx, ecx
            //   8a4c3408             | mov                 cl, byte ptr [esp + esi + 8]
            //   8bc1                 | mov                 eax, ecx
            //   83e10f               | and                 ecx, 0xf
            //   c1e804               | shr                 eax, 4
            //   42                   | inc                 edx

        $sequence_4 = { d3e7 0bc7 03c6 8b7c2430 8bca f7d1 0bc8 }
            // n = 7, score = 100
            //   d3e7                 | shl                 edi, cl
            //   0bc7                 | or                  eax, edi
            //   03c6                 | add                 eax, esi
            //   8b7c2430             | mov                 edi, dword ptr [esp + 0x30]
            //   8bca                 | mov                 ecx, edx
            //   f7d1                 | not                 ecx
            //   0bc8                 | or                  ecx, eax

        $sequence_5 = { 0bd0 8bc7 03d3 f7d0 23c3 23ca 0bc1 }
            // n = 7, score = 100
            //   0bd0                 | or                  edx, eax
            //   8bc7                 | mov                 eax, edi
            //   03d3                 | add                 edx, ebx
            //   f7d0                 | not                 eax
            //   23c3                 | and                 eax, ebx
            //   23ca                 | and                 ecx, edx
            //   0bc1                 | or                  eax, ecx

        $sequence_6 = { 8b4518 83c404 890a 50 56 894a04 894a08 }
            // n = 7, score = 100
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]
            //   83c404               | add                 esp, 4
            //   890a                 | mov                 dword ptr [edx], ecx
            //   50                   | push                eax
            //   56                   | push                esi
            //   894a04               | mov                 dword ptr [edx + 4], ecx
            //   894a08               | mov                 dword ptr [edx + 8], ecx

        $sequence_7 = { 8bd0 894c2450 d3ea 8b0d???????? d3e0 8b4c2428 0bd0 }
            // n = 7, score = 100
            //   8bd0                 | mov                 edx, eax
            //   894c2450             | mov                 dword ptr [esp + 0x50], ecx
            //   d3ea                 | shr                 edx, cl
            //   8b0d????????         |                     
            //   d3e0                 | shl                 eax, cl
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   0bd0                 | or                  edx, eax

        $sequence_8 = { 8b442410 25ff000000 41 83fd02 8a907c520110 8851ff 7d11 }
            // n = 7, score = 100
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]
            //   25ff000000           | and                 eax, 0xff
            //   41                   | inc                 ecx
            //   83fd02               | cmp                 ebp, 2
            //   8a907c520110         | mov                 dl, byte ptr [eax + 0x1001527c]
            //   8851ff               | mov                 byte ptr [ecx - 1], dl
            //   7d11                 | jge                 0x13

        $sequence_9 = { 53 681f010200 53 53 53 8b550c 52 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   681f010200           | push                0x2011f
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   52                   | push                edx

    condition:
        7 of them and filesize < 204800
}