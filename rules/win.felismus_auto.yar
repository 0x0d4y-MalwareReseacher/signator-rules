rule win_felismus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.felismus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.felismus"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 32c1 45 884702 8b4e1c 41 0faf4e14 }
            // n = 6, score = 100
            //   32c1                 | xor                 al, cl
            //   45                   | inc                 ebp
            //   884702               | mov                 byte ptr [edi + 2], al
            //   8b4e1c               | mov                 ecx, dword ptr [esi + 0x1c]
            //   41                   | inc                 ecx
            //   0faf4e14             | imul                ecx, dword ptr [esi + 0x14]

        $sequence_1 = { 66ab aa b941000000 33c0 8d7c2414 68???????? f3ab }
            // n = 7, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   b941000000           | mov                 ecx, 0x41
            //   33c0                 | xor                 eax, eax
            //   8d7c2414             | lea                 edi, dword ptr [esp + 0x14]
            //   68????????           |                     
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_2 = { 68???????? 50 ffd3 83c420 6a02 6a00 6a00 }
            // n = 7, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   83c420               | add                 esp, 0x20
            //   6a02                 | push                2
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_3 = { 46 83fe04 88040a 7ceb 43 83c704 83fb04 }
            // n = 7, score = 100
            //   46                   | inc                 esi
            //   83fe04               | cmp                 esi, 4
            //   88040a               | mov                 byte ptr [edx + ecx], al
            //   7ceb                 | jl                  0xffffffed
            //   43                   | inc                 ebx
            //   83c704               | add                 edi, 4
            //   83fb04               | cmp                 ebx, 4

        $sequence_4 = { 68e8030000 ffd6 8d442424 6a00 50 8d4c2438 }
            // n = 6, score = 100
            //   68e8030000           | push                0x3e8
            //   ffd6                 | call                esi
            //   8d442424             | lea                 eax, dword ptr [esp + 0x24]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   8d4c2438             | lea                 ecx, dword ptr [esp + 0x38]

        $sequence_5 = { 0bd0 8bc7 03d3 f7d0 23c3 23ca 0bc1 }
            // n = 7, score = 100
            //   0bd0                 | or                  edx, eax
            //   8bc7                 | mov                 eax, edi
            //   03d3                 | add                 edx, ebx
            //   f7d0                 | not                 eax
            //   23c3                 | and                 eax, ebx
            //   23ca                 | and                 ecx, edx
            //   0bc1                 | or                  eax, ecx

        $sequence_6 = { 8d9c3b937198fd 8bfb d3ef 8b0d???????? d3e3 0bfb 8b5838 }
            // n = 7, score = 100
            //   8d9c3b937198fd       | lea                 ebx, dword ptr [ebx + edi - 0x2678e6d]
            //   8bfb                 | mov                 edi, ebx
            //   d3ef                 | shr                 edi, cl
            //   8b0d????????         |                     
            //   d3e3                 | shl                 ebx, cl
            //   0bfb                 | or                  edi, ebx
            //   8b5838               | mov                 ebx, dword ptr [eax + 0x38]

        $sequence_7 = { 8910 55 895004 895008 89500c c6063c c6460121 }
            // n = 7, score = 100
            //   8910                 | mov                 dword ptr [eax], edx
            //   55                   | push                ebp
            //   895004               | mov                 dword ptr [eax + 4], edx
            //   895008               | mov                 dword ptr [eax + 8], edx
            //   89500c               | mov                 dword ptr [eax + 0xc], edx
            //   c6063c               | mov                 byte ptr [esi], 0x3c
            //   c6460121             | mov                 byte ptr [esi + 1], 0x21

        $sequence_8 = { 889df4fdffff 68f4010000 f3ab 66ab aa 8d85f4fdffff 68???????? }
            // n = 7, score = 100
            //   889df4fdffff         | mov                 byte ptr [ebp - 0x20c], bl
            //   68f4010000           | push                0x1f4
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8d85f4fdffff         | lea                 eax, dword ptr [ebp - 0x20c]
            //   68????????           |                     

        $sequence_9 = { 8bcf f7d1 894c2450 23cb 8bdf 8b403c 23de }
            // n = 7, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   f7d1                 | not                 ecx
            //   894c2450             | mov                 dword ptr [esp + 0x50], ecx
            //   23cb                 | and                 ecx, ebx
            //   8bdf                 | mov                 ebx, edi
            //   8b403c               | mov                 eax, dword ptr [eax + 0x3c]
            //   23de                 | and                 ebx, esi

    condition:
        7 of them and filesize < 204800
}