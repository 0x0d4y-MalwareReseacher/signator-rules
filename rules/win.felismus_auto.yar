rule win_felismus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.felismus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.felismus"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 aa ffd3 8b3d???????? 8d842430010000 50 33f6 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   aa                   | stosb               byte ptr es:[edi], al
            //   ffd3                 | call                ebx
            //   8b3d????????         |                     
            //   8d842430010000       | lea                 eax, [esp + 0x130]
            //   50                   | push                eax
            //   33f6                 | xor                 esi, esi

        $sequence_1 = { 56 57 50 8b442420 52 50 e8???????? }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   50                   | push                eax
            //   8b442420             | mov                 eax, dword ptr [esp + 0x20]
            //   52                   | push                edx
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_2 = { 8b4dec 8b7de8 51 8d95d8feffff 57 52 68???????? }
            // n = 7, score = 100
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   8b7de8               | mov                 edi, dword ptr [ebp - 0x18]
            //   51                   | push                ecx
            //   8d95d8feffff         | lea                 edx, [ebp - 0x128]
            //   57                   | push                edi
            //   52                   | push                edx
            //   68????????           |                     

        $sequence_3 = { 51 ffd3 83c404 b804000000 5f 5e 5d }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   ffd3                 | call                ebx
            //   83c404               | add                 esp, 4
            //   b804000000           | mov                 eax, 4
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_4 = { 83c9ff 33c0 55 f2ae f7d1 2bf9 55 }
            // n = 7, score = 100
            //   83c9ff               | or                  ecx, 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   55                   | push                ebp
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   55                   | push                ebp

        $sequence_5 = { c60700 8b7d18 8d4701 50 51 56 e8???????? }
            // n = 7, score = 100
            //   c60700               | mov                 byte ptr [edi], 0
            //   8b7d18               | mov                 edi, dword ptr [ebp + 0x18]
            //   8d4701               | lea                 eax, [edi + 1]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   56                   | push                esi
            //   e8????????           |                     

        $sequence_6 = { 5f 5e 5b c3 b900010000 33c0 8bfe }
            // n = 7, score = 100
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   c3                   | ret                 
            //   b900010000           | mov                 ecx, 0x100
            //   33c0                 | xor                 eax, eax
            //   8bfe                 | mov                 edi, esi

        $sequence_7 = { 56 ff15???????? 83c408 8945c8 85c0 0f841b010000 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   83c408               | add                 esp, 8
            //   8945c8               | mov                 dword ptr [ebp - 0x38], eax
            //   85c0                 | test                eax, eax
            //   0f841b010000         | je                  0x121

        $sequence_8 = { 55 ffd6 85c0 744f 68???????? 55 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   744f                 | je                  0x51
            //   68????????           |                     
            //   55                   | push                ebp

        $sequence_9 = { f7d0 23c2 23ce 0bc1 8b4c245c 03c1 }
            // n = 6, score = 100
            //   f7d0                 | not                 eax
            //   23c2                 | and                 eax, edx
            //   23ce                 | and                 ecx, esi
            //   0bc1                 | or                  eax, ecx
            //   8b4c245c             | mov                 ecx, dword ptr [esp + 0x5c]
            //   03c1                 | add                 eax, ecx

    condition:
        7 of them and filesize < 204800
}