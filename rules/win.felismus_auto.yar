rule win_felismus_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.felismus."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.felismus"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b442474 8d84082108b449 8b4c2448 8bd0 }
            // n = 4, score = 100
            //   8b442474             | mov                 eax, dword ptr [esp + 0x74]
            //   8d84082108b449       | lea                 eax, [eax + ecx + 0x49b40821]
            //   8b4c2448             | mov                 ecx, dword ptr [esp + 0x48]
            //   8bd0                 | mov                 edx, eax

        $sequence_1 = { 6a00 50 6a00 6a00 6a04 6a04 51 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   50                   | push                eax
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a04                 | push                4
            //   6a04                 | push                4
            //   51                   | push                ecx

        $sequence_2 = { 8b35???????? 8d442408 68???????? 50 ffd6 85c0 740b }
            // n = 7, score = 100
            //   8b35????????         |                     
            //   8d442408             | lea                 eax, [esp + 8]
            //   68????????           |                     
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   740b                 | je                  0xd

        $sequence_3 = { ffd6 8b5510 52 e8???????? 8b4514 83c404 50 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   8b5510               | mov                 edx, dword ptr [ebp + 0x10]
            //   52                   | push                edx
            //   e8????????           |                     
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   83c404               | add                 esp, 4
            //   50                   | push                eax

        $sequence_4 = { ffd6 8d442438 6a00 50 8d4c2444 6a00 51 }
            // n = 7, score = 100
            //   ffd6                 | call                esi
            //   8d442438             | lea                 eax, [esp + 0x38]
            //   6a00                 | push                0
            //   50                   | push                eax
            //   8d4c2444             | lea                 ecx, [esp + 0x44]
            //   6a00                 | push                0
            //   51                   | push                ecx

        $sequence_5 = { e8???????? 8b4c2418 8b54241c 8bc7 83c710 8908 8b4c2420 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4c2418             | mov                 ecx, dword ptr [esp + 0x18]
            //   8b54241c             | mov                 edx, dword ptr [esp + 0x1c]
            //   8bc7                 | mov                 eax, edi
            //   83c710               | add                 edi, 0x10
            //   8908                 | mov                 dword ptr [eax], ecx
            //   8b4c2420             | mov                 ecx, dword ptr [esp + 0x20]

        $sequence_6 = { 8bf0 83c404 85f6 7525 53 ff15???????? }
            // n = 6, score = 100
            //   8bf0                 | mov                 esi, eax
            //   83c404               | add                 esp, 4
            //   85f6                 | test                esi, esi
            //   7525                 | jne                 0x27
            //   53                   | push                ebx
            //   ff15????????         |                     

        $sequence_7 = { 56 ffd5 85c0 7455 68???????? 56 ffd5 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ffd5                 | call                ebp
            //   85c0                 | test                eax, eax
            //   7455                 | je                  0x57
            //   68????????           |                     
            //   56                   | push                esi
            //   ffd5                 | call                ebp

        $sequence_8 = { 8842ff 8a894c440110 880a 42 46 83fe10 7cd9 }
            // n = 7, score = 100
            //   8842ff               | mov                 byte ptr [edx - 1], al
            //   8a894c440110         | mov                 cl, byte ptr [ecx + 0x1001444c]
            //   880a                 | mov                 byte ptr [edx], cl
            //   42                   | inc                 edx
            //   46                   | inc                 esi
            //   83fe10               | cmp                 esi, 0x10
            //   7cd9                 | jl                  0xffffffdb

        $sequence_9 = { ffd7 5f 5e b001 5d 81c418030000 c3 }
            // n = 7, score = 100
            //   ffd7                 | call                edi
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   b001                 | mov                 al, 1
            //   5d                   | pop                 ebp
            //   81c418030000         | add                 esp, 0x318
            //   c3                   | ret                 

    condition:
        7 of them and filesize < 204800
}