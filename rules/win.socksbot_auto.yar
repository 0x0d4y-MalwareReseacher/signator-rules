rule win_socksbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.socksbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.socksbot"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85f6 7f0f eb06 8b7df8 8b75fc 53 }
            // n = 6, score = 300
            //   85f6                 | test                esi, esi
            //   7f0f                 | jg                  0x11
            //   eb06                 | jmp                 8
            //   8b7df8               | mov                 edi, dword ptr [ebp - 8]
            //   8b75fc               | mov                 esi, dword ptr [ebp - 4]
            //   53                   | push                ebx

        $sequence_1 = { 8bd0 881a 42 49 75fa 5b }
            // n = 6, score = 300
            //   8bd0                 | mov                 edx, eax
            //   881a                 | mov                 byte ptr [edx], bl
            //   42                   | inc                 edx
            //   49                   | dec                 ecx
            //   75fa                 | jne                 0xfffffffc
            //   5b                   | pop                 ebx

        $sequence_2 = { bf???????? 57 884509 6689750a }
            // n = 4, score = 300
            //   bf????????           |                     
            //   57                   | push                edi
            //   884509               | mov                 byte ptr [ebp + 9], al
            //   6689750a             | mov                 word ptr [ebp + 0xa], si

        $sequence_3 = { 83c40c c6443dd000 8b7df8 81eec8000000 }
            // n = 4, score = 300
            //   83c40c               | add                 esp, 0xc
            //   c6443dd000           | mov                 byte ptr [ebp + edi - 0x30], 0
            //   8b7df8               | mov                 edi, dword ptr [ebp - 8]
            //   81eec8000000         | sub                 esi, 0xc8

        $sequence_4 = { c9 c3 56 6a03 6a01 }
            // n = 5, score = 300
            //   c9                   | leave               
            //   c3                   | ret                 
            //   56                   | push                esi
            //   6a03                 | push                3
            //   6a01                 | push                1

        $sequence_5 = { 57 884508 8a450c bf???????? 57 884509 }
            // n = 6, score = 300
            //   57                   | push                edi
            //   884508               | mov                 byte ptr [ebp + 8], al
            //   8a450c               | mov                 al, byte ptr [ebp + 0xc]
            //   bf????????           |                     
            //   57                   | push                edi
            //   884509               | mov                 byte ptr [ebp + 9], al

        $sequence_6 = { ff15???????? 85c0 0f8583010000 53 57 803d????????00 0f8572010000 }
            // n = 7, score = 300
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f8583010000         | jne                 0x189
            //   53                   | push                ebx
            //   57                   | push                edi
            //   803d????????00       |                     
            //   0f8572010000         | jne                 0x178

        $sequence_7 = { 8bf0 6a40 8d45c0 50 ff15???????? }
            // n = 5, score = 300
            //   8bf0                 | mov                 esi, eax
            //   6a40                 | push                0x40
            //   8d45c0               | lea                 eax, [ebp - 0x40]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_8 = { 83c614 837e0c00 758d b001 }
            // n = 4, score = 300
            //   83c614               | add                 esi, 0x14
            //   837e0c00             | cmp                 dword ptr [esi + 0xc], 0
            //   758d                 | jne                 0xffffff8f
            //   b001                 | mov                 al, 1

        $sequence_9 = { 8b7820 8b4024 8b5ddc 03c2 }
            // n = 4, score = 300
            //   8b7820               | mov                 edi, dword ptr [eax + 0x20]
            //   8b4024               | mov                 eax, dword ptr [eax + 0x24]
            //   8b5ddc               | mov                 ebx, dword ptr [ebp - 0x24]
            //   03c2                 | add                 eax, edx

    condition:
        7 of them and filesize < 73728
}