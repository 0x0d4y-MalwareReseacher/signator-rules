rule win_bundestrojaner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.bundestrojaner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bundestrojaner"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c704 83c60f 897c2410 2bdd 8bfd c1ee04 8b442410 }
            // n = 7, score = 100
            //   83c704               | add                 edi, 4
            //   83c60f               | add                 esi, 0xf
            //   897c2410             | mov                 dword ptr [esp + 0x10], edi
            //   2bdd                 | sub                 ebx, ebp
            //   8bfd                 | mov                 edi, ebp
            //   c1ee04               | shr                 esi, 4
            //   8b442410             | mov                 eax, dword ptr [esp + 0x10]

        $sequence_1 = { e8???????? eb02 33c0 8bc8 c68424fc05000003 e8???????? a0???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   8bc8                 | mov                 ecx, eax
            //   c68424fc05000003     | mov                 byte ptr [esp + 0x5fc], 3
            //   e8????????           |                     
            //   a0????????           |                     

        $sequence_2 = { 89542410 8b4004 b906000000 8bf5 89442414 f3a5 8d4c2410 }
            // n = 7, score = 100
            //   89542410             | mov                 dword ptr [esp + 0x10], edx
            //   8b4004               | mov                 eax, dword ptr [eax + 4]
            //   b906000000           | mov                 ecx, 6
            //   8bf5                 | mov                 esi, ebp
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   8d4c2410             | lea                 ecx, dword ptr [esp + 0x10]

        $sequence_3 = { 7462 b8ffffff7f 8d4c2408 89442408 89442404 }
            // n = 5, score = 100
            //   7462                 | je                  0x64
            //   b8ffffff7f           | mov                 eax, 0x7fffffff
            //   8d4c2408             | lea                 ecx, dword ptr [esp + 8]
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   89442404             | mov                 dword ptr [esp + 4], eax

        $sequence_4 = { e8???????? 8b5c2444 8d442440 8d4c2424 50 8d54243c 51 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b5c2444             | mov                 ebx, dword ptr [esp + 0x44]
            //   8d442440             | lea                 eax, dword ptr [esp + 0x40]
            //   8d4c2424             | lea                 ecx, dword ptr [esp + 0x24]
            //   50                   | push                eax
            //   8d54243c             | lea                 edx, dword ptr [esp + 0x3c]
            //   51                   | push                ecx

        $sequence_5 = { 89482c c1ea18 c1eb10 8b1495c8f00310 81e3ff000000 33149dc8ec0310 8bd9 }
            // n = 7, score = 100
            //   89482c               | mov                 dword ptr [eax + 0x2c], ecx
            //   c1ea18               | shr                 edx, 0x18
            //   c1eb10               | shr                 ebx, 0x10
            //   8b1495c8f00310       | mov                 edx, dword ptr [edx*4 + 0x1003f0c8]
            //   81e3ff000000         | and                 ebx, 0xff
            //   33149dc8ec0310       | xor                 edx, dword ptr [ebx*4 + 0x1003ecc8]
            //   8bd9                 | mov                 ebx, ecx

        $sequence_6 = { 80fbc7 7405 80fb8f 750b 85c9 7407 80ce08 }
            // n = 7, score = 100
            //   80fbc7               | cmp                 bl, 0xc7
            //   7405                 | je                  7
            //   80fb8f               | cmp                 bl, 0x8f
            //   750b                 | jne                 0xd
            //   85c9                 | test                ecx, ecx
            //   7407                 | je                  9
            //   80ce08               | or                  dh, 8

        $sequence_7 = { 51 56 8bf1 6818020000 e8???????? 83c404 89442404 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   6818020000           | push                0x218
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   89442404             | mov                 dword ptr [esp + 4], eax

        $sequence_8 = { 8b464c 51 50 ff5214 8b461c 83c430 85c0 }
            // n = 7, score = 100
            //   8b464c               | mov                 eax, dword ptr [esi + 0x4c]
            //   51                   | push                ecx
            //   50                   | push                eax
            //   ff5214               | call                dword ptr [edx + 0x14]
            //   8b461c               | mov                 eax, dword ptr [esi + 0x1c]
            //   83c430               | add                 esp, 0x30
            //   85c0                 | test                eax, eax

        $sequence_9 = { 894504 897d08 894d0c fe40ff eb3a 8b742428 6a01 }
            // n = 7, score = 100
            //   894504               | mov                 dword ptr [ebp + 4], eax
            //   897d08               | mov                 dword ptr [ebp + 8], edi
            //   894d0c               | mov                 dword ptr [ebp + 0xc], ecx
            //   fe40ff               | inc                 byte ptr [eax - 1]
            //   eb3a                 | jmp                 0x3c
            //   8b742428             | mov                 esi, dword ptr [esp + 0x28]
            //   6a01                 | push                1

    condition:
        7 of them and filesize < 729088
}