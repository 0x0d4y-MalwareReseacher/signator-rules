rule win_bundestrojaner_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.bundestrojaner."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bundestrojaner"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 41 3bc8 0f8c45ffffff 896e08 5f 5e 5d }
            // n = 7, score = 100
            //   41                   | inc                 ecx
            //   3bc8                 | cmp                 ecx, eax
            //   0f8c45ffffff         | jl                  0xffffff4b
            //   896e08               | mov                 dword ptr [esi + 8], ebp
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp

        $sequence_1 = { 81ec08020000 53 8b9c2410020000 53 ff15???????? 85c0 0f95c0 }
            // n = 7, score = 100
            //   81ec08020000         | sub                 esp, 0x208
            //   53                   | push                ebx
            //   8b9c2410020000       | mov                 ebx, dword ptr [esp + 0x210]
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f95c0               | setne               al

        $sequence_2 = { 8b7c2410 03fb 2bcf 8b7c2410 894840 8bce 2bcf }
            // n = 7, score = 100
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]
            //   03fb                 | add                 edi, ebx
            //   2bcf                 | sub                 ecx, edi
            //   8b7c2410             | mov                 edi, dword ptr [esp + 0x10]
            //   894840               | mov                 dword ptr [eax + 0x40], ecx
            //   8bce                 | mov                 ecx, esi
            //   2bcf                 | sub                 ecx, edi

        $sequence_3 = { d9442478 d80c38 d944247c d80c10 83c004 49 dec1 }
            // n = 7, score = 100
            //   d9442478             | fld                 dword ptr [esp + 0x78]
            //   d80c38               | fmul                dword ptr [eax + edi]
            //   d944247c             | fld                 dword ptr [esp + 0x7c]
            //   d80c10               | fmul                dword ptr [eax + edx]
            //   83c004               | add                 eax, 4
            //   49                   | dec                 ecx
            //   dec1                 | faddp               st(1)

        $sequence_4 = { 83c404 8bce e8???????? 8bcf e8???????? 5f 5e }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   8bcf                 | mov                 ecx, edi
            //   e8????????           |                     
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_5 = { 6a00 51 8d4c246c e8???????? 8bd8 8bfe 46 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   8d4c246c             | lea                 ecx, [esp + 0x6c]
            //   e8????????           |                     
            //   8bd8                 | mov                 ebx, eax
            //   8bfe                 | mov                 edi, esi
            //   46                   | inc                 esi

        $sequence_6 = { 8b16 33db 8a5c241e 881a 8b0e 8b4604 41 }
            // n = 7, score = 100
            //   8b16                 | mov                 edx, dword ptr [esi]
            //   33db                 | xor                 ebx, ebx
            //   8a5c241e             | mov                 bl, byte ptr [esp + 0x1e]
            //   881a                 | mov                 byte ptr [edx], bl
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   8b4604               | mov                 eax, dword ptr [esi + 4]
            //   41                   | inc                 ecx

        $sequence_7 = { 64892500000000 81ec00010000 8a442403 53 55 56 57 }
            // n = 7, score = 100
            //   64892500000000       | mov                 dword ptr fs:[0], esp
            //   81ec00010000         | sub                 esp, 0x100
            //   8a442403             | mov                 al, byte ptr [esp + 3]
            //   53                   | push                ebx
            //   55                   | push                ebp
            //   56                   | push                esi
            //   57                   | push                edi

        $sequence_8 = { 8d448d08 8be8 f7dd 83e503 8d4c90f8 03e8 894c2410 }
            // n = 7, score = 100
            //   8d448d08             | lea                 eax, [ebp + ecx*4 + 8]
            //   8be8                 | mov                 ebp, eax
            //   f7dd                 | neg                 ebp
            //   83e503               | and                 ebp, 3
            //   8d4c90f8             | lea                 ecx, [eax + edx*4 - 8]
            //   03e8                 | add                 ebp, eax
            //   894c2410             | mov                 dword ptr [esp + 0x10], ecx

        $sequence_9 = { 8b4c2428 57 8b7c2428 8b4500 51 57 8bcd }
            // n = 7, score = 100
            //   8b4c2428             | mov                 ecx, dword ptr [esp + 0x28]
            //   57                   | push                edi
            //   8b7c2428             | mov                 edi, dword ptr [esp + 0x28]
            //   8b4500               | mov                 eax, dword ptr [ebp]
            //   51                   | push                ecx
            //   57                   | push                edi
            //   8bcd                 | mov                 ecx, ebp

    condition:
        7 of them and filesize < 729088
}