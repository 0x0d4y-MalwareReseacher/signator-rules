rule win_boxcaon_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.boxcaon."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.boxcaon"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 57 50 ff15???????? 8945f8 83f8ff 0f84b7000000 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   57                   | push                edi
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   83f8ff               | cmp                 eax, -1
            //   0f84b7000000         | je                  0xbd

        $sequence_1 = { 6a65 6689442436 58 6a6e }
            // n = 4, score = 100
            //   6a65                 | push                0x65
            //   6689442436           | mov                 word ptr [esp + 0x36], ax
            //   58                   | pop                 eax
            //   6a6e                 | push                0x6e

        $sequence_2 = { 8d45f4 50 c745f430a04000 e8???????? cc }
            // n = 5, score = 100
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   c745f430a04000       | mov                 dword ptr [ebp - 0xc], 0x40a030
            //   e8????????           |                     
            //   cc                   | int3                

        $sequence_3 = { 8d8424e0020000 50 56 ff15???????? 33c0 }
            // n = 5, score = 100
            //   8d8424e0020000       | lea                 eax, [esp + 0x2e0]
            //   50                   | push                eax
            //   56                   | push                esi
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_4 = { 2bc8 d1f9 53 51 8bc6 8bce }
            // n = 6, score = 100
            //   2bc8                 | sub                 ecx, eax
            //   d1f9                 | sar                 ecx, 1
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   8bc6                 | mov                 eax, esi
            //   8bce                 | mov                 ecx, esi

        $sequence_5 = { 8d34f5e0b14000 391e 7404 8bc7 eb6d }
            // n = 5, score = 100
            //   8d34f5e0b14000       | lea                 esi, [esi*8 + 0x40b1e0]
            //   391e                 | cmp                 dword ptr [esi], ebx
            //   7404                 | je                  6
            //   8bc7                 | mov                 eax, edi
            //   eb6d                 | jmp                 0x6f

        $sequence_6 = { 8bce e8???????? eb3d 57 }
            // n = 4, score = 100
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   eb3d                 | jmp                 0x3f
            //   57                   | push                edi

        $sequence_7 = { 8bec 8b4508 33c9 3b04cd70b04000 }
            // n = 4, score = 100
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   33c9                 | xor                 ecx, ecx
            //   3b04cd70b04000       | cmp                 eax, dword ptr [ecx*8 + 0x40b070]

        $sequence_8 = { 6a69 66899424f0000000 5a 6a63 66898424f8000000 }
            // n = 5, score = 100
            //   6a69                 | push                0x69
            //   66899424f0000000     | mov                 word ptr [esp + 0xf0], dx
            //   5a                   | pop                 edx
            //   6a63                 | push                0x63
            //   66898424f8000000     | mov                 word ptr [esp + 0xf8], ax

        $sequence_9 = { 56 6a01 6800000040 8d8424e8000000 }
            // n = 4, score = 100
            //   56                   | push                esi
            //   6a01                 | push                1
            //   6800000040           | push                0x40000000
            //   8d8424e8000000       | lea                 eax, [esp + 0xe8]

    condition:
        7 of them and filesize < 256000
}