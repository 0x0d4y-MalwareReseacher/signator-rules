rule win_unidentified_068_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.unidentified_068."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_068"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945fc 894804 c700???????? 894808 89480c c740107cc24100 8be5 }
            // n = 7, score = 100
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   894804               | mov                 dword ptr [eax + 4], ecx
            //   c700????????         |                     
            //   894808               | mov                 dword ptr [eax + 8], ecx
            //   89480c               | mov                 dword ptr [eax + 0xc], ecx
            //   c740107cc24100       | mov                 dword ptr [eax + 0x10], 0x41c27c
            //   8be5                 | mov                 esp, ebp

        $sequence_1 = { 8bf9 8975ec 895dfc 8a4760 8845f3 84c0 }
            // n = 6, score = 100
            //   8bf9                 | mov                 edi, ecx
            //   8975ec               | mov                 dword ptr [ebp - 0x14], esi
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   8a4760               | mov                 al, byte ptr [edi + 0x60]
            //   8845f3               | mov                 byte ptr [ebp - 0xd], al
            //   84c0                 | test                al, al

        $sequence_2 = { c3 e9???????? e9???????? 56 8bf1 8d4e20 e8???????? }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   e9????????           |                     
            //   e9????????           |                     
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8d4e20               | lea                 ecx, dword ptr [esi + 0x20]
            //   e8????????           |                     

        $sequence_3 = { 83675400 895df0 3b7758 762e ff7750 e8???????? 83675000 }
            // n = 7, score = 100
            //   83675400             | and                 dword ptr [edi + 0x54], 0
            //   895df0               | mov                 dword ptr [ebp - 0x10], ebx
            //   3b7758               | cmp                 esi, dword ptr [edi + 0x58]
            //   762e                 | jbe                 0x30
            //   ff7750               | push                dword ptr [edi + 0x50]
            //   e8????????           |                     
            //   83675000             | and                 dword ptr [edi + 0x50], 0

        $sequence_4 = { 83a4be9400000000 5f 33c0 5e 5d c20800 55 }
            // n = 7, score = 100
            //   83a4be9400000000     | and                 dword ptr [esi + edi*4 + 0x94], 0
            //   5f                   | pop                 edi
            //   33c0                 | xor                 eax, eax
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20800               | ret                 8
            //   55                   | push                ebp

        $sequence_5 = { 8b06 03460c 57 50 ff7620 e8???????? }
            // n = 6, score = 100
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   03460c               | add                 eax, dword ptr [esi + 0xc]
            //   57                   | push                edi
            //   50                   | push                eax
            //   ff7620               | push                dword ptr [esi + 0x20]
            //   e8????????           |                     

        $sequence_6 = { 85c0 7837 8b4b10 8b4cc104 8b4344 803c0100 7418 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7837                 | js                  0x39
            //   8b4b10               | mov                 ecx, dword ptr [ebx + 0x10]
            //   8b4cc104             | mov                 ecx, dword ptr [ecx + eax*8 + 4]
            //   8b4344               | mov                 eax, dword ptr [ebx + 0x44]
            //   803c0100             | cmp                 byte ptr [ecx + eax], 0
            //   7418                 | je                  0x1a

        $sequence_7 = { 771b 8b06 034608 57 50 ff7508 e8???????? }
            // n = 7, score = 100
            //   771b                 | ja                  0x1d
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   034608               | add                 eax, dword ptr [esi + 8]
            //   57                   | push                edi
            //   50                   | push                eax
            //   ff7508               | push                dword ptr [ebp + 8]
            //   e8????????           |                     

        $sequence_8 = { c20c00 55 8bec 8b4d08 8b4110 40 894110 }
            // n = 7, score = 100
            //   c20c00               | ret                 0xc
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8b4110               | mov                 eax, dword ptr [ecx + 0x10]
            //   40                   | inc                 eax
            //   894110               | mov                 dword ptr [ecx + 0x10], eax

        $sequence_9 = { 5f 5e 5b c20400 8b4104 85c0 7504 }
            // n = 7, score = 100
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   c20400               | ret                 4
            //   8b4104               | mov                 eax, dword ptr [ecx + 4]
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6

    condition:
        7 of them and filesize < 862208
}