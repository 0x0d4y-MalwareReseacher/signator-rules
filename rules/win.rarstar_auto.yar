rule win_rarstar_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rarstar."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rarstar"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 80a0a0d7400000 40 3bc6 72be 5e c9 c3 }
            // n = 7, score = 100
            //   80a0a0d7400000       | and                 byte ptr [eax + 0x40d7a0], 0
            //   40                   | inc                 eax
            //   3bc6                 | cmp                 eax, esi
            //   72be                 | jb                  0xffffffc0
            //   5e                   | pop                 esi
            //   c9                   | leave               
            //   c3                   | ret                 

        $sequence_1 = { 8bac242c030000 33d2 8a543c28 8bca 33d2 8a542c28 03ca }
            // n = 7, score = 100
            //   8bac242c030000       | mov                 ebp, dword ptr [esp + 0x32c]
            //   33d2                 | xor                 edx, edx
            //   8a543c28             | mov                 dl, byte ptr [esp + edi + 0x28]
            //   8bca                 | mov                 ecx, edx
            //   33d2                 | xor                 edx, edx
            //   8a542c28             | mov                 dl, byte ptr [esp + ebp + 0x28]
            //   03ca                 | add                 ecx, edx

        $sequence_2 = { 8d6afe 33ff 8bc1 85ed 7e6f }
            // n = 5, score = 100
            //   8d6afe               | lea                 ebp, [edx - 2]
            //   33ff                 | xor                 edi, edi
            //   8bc1                 | mov                 eax, ecx
            //   85ed                 | test                ebp, ebp
            //   7e6f                 | jle                 0x71

        $sequence_3 = { 8a5c0420 8a540c20 885c0c20 41 }
            // n = 4, score = 100
            //   8a5c0420             | mov                 bl, byte ptr [esp + eax + 0x20]
            //   8a540c20             | mov                 dl, byte ptr [esp + ecx + 0x20]
            //   885c0c20             | mov                 byte ptr [esp + ecx + 0x20], bl
            //   41                   | inc                 ecx

        $sequence_4 = { f3a5 ff249548574000 8bc7 ba03000000 83e904 }
            // n = 5, score = 100
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   ff249548574000       | jmp                 dword ptr [edx*4 + 0x405748]
            //   8bc7                 | mov                 eax, edi
            //   ba03000000           | mov                 edx, 3
            //   83e904               | sub                 ecx, 4

        $sequence_5 = { 8bfd 33c0 f2ae f7d1 49 8bd9 33c9 }
            // n = 7, score = 100
            //   8bfd                 | mov                 edi, ebp
            //   33c0                 | xor                 eax, eax
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8bd9                 | mov                 ebx, ecx
            //   33c9                 | xor                 ecx, ecx

        $sequence_6 = { 8bc3 85d2 7604 2bc2 03c1 }
            // n = 5, score = 100
            //   8bc3                 | mov                 eax, ebx
            //   85d2                 | test                edx, edx
            //   7604                 | jbe                 6
            //   2bc2                 | sub                 eax, edx
            //   03c1                 | add                 eax, ecx

        $sequence_7 = { ff2495c86c4000 8bc7 ba03000000 83e904 }
            // n = 4, score = 100
            //   ff2495c86c4000       | jmp                 dword ptr [edx*4 + 0x406cc8]
            //   8bc7                 | mov                 eax, edi
            //   ba03000000           | mov                 edx, 3
            //   83e904               | sub                 ecx, 4

        $sequence_8 = { f7d1 2bf9 899c2430030000 8bc1 8bf7 8bfa }
            // n = 6, score = 100
            //   f7d1                 | not                 ecx
            //   2bf9                 | sub                 edi, ecx
            //   899c2430030000       | mov                 dword ptr [esp + 0x330], ebx
            //   8bc1                 | mov                 eax, ecx
            //   8bf7                 | mov                 esi, edi
            //   8bfa                 | mov                 edi, edx

        $sequence_9 = { 5e 5d 8a149530924000 5b 8851ff }
            // n = 5, score = 100
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   8a149530924000       | mov                 dl, byte ptr [edx*4 + 0x409230]
            //   5b                   | pop                 ebx
            //   8851ff               | mov                 byte ptr [ecx - 1], dl

    condition:
        7 of them and filesize < 122880
}