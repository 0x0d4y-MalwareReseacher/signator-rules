rule win_unidentified_061_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.unidentified_061."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_061"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 ff15???????? 83c430 8d8518ecffff 89452c }
            // n = 5, score = 200
            //   50                   | push                eax
            //   ff15????????         |                     
            //   83c430               | add                 esp, 0x30
            //   8d8518ecffff         | lea                 eax, [ebp - 0x13e8]
            //   89452c               | mov                 dword ptr [ebp + 0x2c], eax

        $sequence_1 = { ff7570 8bf0 8d041e 68???????? }
            // n = 4, score = 200
            //   ff7570               | push                dword ptr [ebp + 0x70]
            //   8bf0                 | mov                 esi, eax
            //   8d041e               | lea                 eax, [esi + ebx]
            //   68????????           |                     

        $sequence_2 = { 40 803800 75f2 83c574 c9 c20400 }
            // n = 6, score = 200
            //   40                   | inc                 eax
            //   803800               | cmp                 byte ptr [eax], 0
            //   75f2                 | jne                 0xfffffff4
            //   83c574               | add                 ebp, 0x74
            //   c9                   | leave               
            //   c20400               | ret                 4

        $sequence_3 = { 50 ff75fc ffd7 85c0 7416 68c4090000 ff15???????? }
            // n = 7, score = 200
            //   50                   | push                eax
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   7416                 | je                  0x18
            //   68c4090000           | push                0x9c4
            //   ff15????????         |                     

        $sequence_4 = { c20800 55 8bec ff7508 ff15???????? 034508 837d1000 }
            // n = 7, score = 200
            //   c20800               | ret                 8
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff15????????         |                     
            //   034508               | add                 eax, dword ptr [ebp + 8]
            //   837d1000             | cmp                 dword ptr [ebp + 0x10], 0

        $sequence_5 = { ffd6 8d45ec 50 53 ff7508 68???????? }
            // n = 6, score = 200
            //   ffd6                 | call                esi
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff7508               | push                dword ptr [ebp + 8]
            //   68????????           |                     

        $sequence_6 = { 68f0550000 53 8d458c 50 }
            // n = 4, score = 200
            //   68f0550000           | push                0x55f0
            //   53                   | push                ebx
            //   8d458c               | lea                 eax, [ebp - 0x74]
            //   50                   | push                eax

        $sequence_7 = { 8d45f8 50 e8???????? 8a4510 6a00 8845f9 6a08 }
            // n = 7, score = 200
            //   8d45f8               | lea                 eax, [ebp - 8]
            //   50                   | push                eax
            //   e8????????           |                     
            //   8a4510               | mov                 al, byte ptr [ebp + 0x10]
            //   6a00                 | push                0
            //   8845f9               | mov                 byte ptr [ebp - 7], al
            //   6a08                 | push                8

        $sequence_8 = { 895d4c ff15???????? 8b3d???????? 53 8d4573 }
            // n = 5, score = 200
            //   895d4c               | mov                 dword ptr [ebp + 0x4c], ebx
            //   ff15????????         |                     
            //   8b3d????????         |                     
            //   53                   | push                ebx
            //   8d4573               | lea                 eax, [ebp + 0x73]

        $sequence_9 = { 50 8d4534 50 e8???????? 85c0 0f86d2030000 83f804 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   8d4534               | lea                 eax, [ebp + 0x34]
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f86d2030000         | jbe                 0x3d8
            //   83f804               | cmp                 eax, 4

    condition:
        7 of them and filesize < 360448
}