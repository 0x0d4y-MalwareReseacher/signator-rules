rule win_gup_proxy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.gup_proxy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gup_proxy"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bc8 c1e910 888d8afeffff 8bc8 }
            // n = 4, score = 100
            //   8bc8                 | mov                 ecx, eax
            //   c1e910               | shr                 ecx, 0x10
            //   888d8afeffff         | mov                 byte ptr [ebp - 0x176], cl
            //   8bc8                 | mov                 ecx, eax

        $sequence_1 = { 57 0f57c0 c745dc00000000 b802000000 8bf2 f30f7f45e8 6a50 }
            // n = 7, score = 100
            //   57                   | push                edi
            //   0f57c0               | xorps               xmm0, xmm0
            //   c745dc00000000       | mov                 dword ptr [ebp - 0x24], 0
            //   b802000000           | mov                 eax, 2
            //   8bf2                 | mov                 esi, edx
            //   f30f7f45e8           | movdqu              xmmword ptr [ebp - 0x18], xmm0
            //   6a50                 | push                0x50

        $sequence_2 = { 56 57 8bf1 8995dcf5ffff 50 687e660480 c785d4f5ffff00000000 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bf1                 | mov                 esi, ecx
            //   8995dcf5ffff         | mov                 dword ptr [ebp - 0xa24], edx
            //   50                   | push                eax
            //   687e660480           | push                0x8004667e
            //   c785d4f5ffff00000000     | mov    dword ptr [ebp - 0xa2c], 0

        $sequence_3 = { 660f6f05???????? f30f7f856cfcffff 660f6f05???????? f30f7f857cfcffff }
            // n = 4, score = 100
            //   660f6f05????????     |                     
            //   f30f7f856cfcffff     | movdqu              xmmword ptr [ebp - 0x394], xmm0
            //   660f6f05????????     |                     
            //   f30f7f857cfcffff     | movdqu              xmmword ptr [ebp - 0x384], xmm0

        $sequence_4 = { 391cfd508d4100 755c 6a18 e8???????? 59 }
            // n = 5, score = 100
            //   391cfd508d4100       | cmp                 dword ptr [edi*8 + 0x418d50], ebx
            //   755c                 | jne                 0x5e
            //   6a18                 | push                0x18
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_5 = { 56 33f6 ffb640834100 ff15???????? 898640834100 83c604 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   33f6                 | xor                 esi, esi
            //   ffb640834100         | push                dword ptr [esi + 0x418340]
            //   ff15????????         |                     
            //   898640834100         | mov                 dword ptr [esi + 0x418340], eax
            //   83c604               | add                 esi, 4

        $sequence_6 = { 8b9530e5ffff 8b8528e5ffff 8b8d24e5ffff 8b048510974100 f644010440 7409 }
            // n = 6, score = 100
            //   8b9530e5ffff         | mov                 edx, dword ptr [ebp - 0x1ad0]
            //   8b8528e5ffff         | mov                 eax, dword ptr [ebp - 0x1ad8]
            //   8b8d24e5ffff         | mov                 ecx, dword ptr [ebp - 0x1adc]
            //   8b048510974100       | mov                 eax, dword ptr [eax*4 + 0x419710]
            //   f644010440           | test                byte ptr [ecx + eax + 4], 0x40
            //   7409                 | je                  0xb

        $sequence_7 = { c644244400 720c ff74242c e8???????? }
            // n = 4, score = 100
            //   c644244400           | mov                 byte ptr [esp + 0x44], 0
            //   720c                 | jb                  0xe
            //   ff74242c             | push                dword ptr [esp + 0x2c]
            //   e8????????           |                     

        $sequence_8 = { c784242002000000000000 8d4c2444 6a00 68???????? c74424600f000000 }
            // n = 5, score = 100
            //   c784242002000000000000     | mov    dword ptr [esp + 0x220], 0
            //   8d4c2444             | lea                 ecx, [esp + 0x44]
            //   6a00                 | push                0
            //   68????????           |                     
            //   c74424600f000000     | mov                 dword ptr [esp + 0x60], 0xf

        $sequence_9 = { f30f7f858cfcffff 660f6f05???????? f30f7f859cfcffff 660f6f05???????? }
            // n = 4, score = 100
            //   f30f7f858cfcffff     | movdqu              xmmword ptr [ebp - 0x374], xmm0
            //   660f6f05????????     |                     
            //   f30f7f859cfcffff     | movdqu              xmmword ptr [ebp - 0x364], xmm0
            //   660f6f05????????     |                     

    condition:
        7 of them and filesize < 247808
}