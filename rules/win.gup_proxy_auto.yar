rule win_gup_proxy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.gup_proxy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.gup_proxy"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f30f7f855cfdffff 660f6f05???????? f30f7f856cfdffff 660f6f05???????? f30f7f857cfdffff }
            // n = 5, score = 100
            //   f30f7f855cfdffff     | movdqu              xmmword ptr [ebp - 0x2a4], xmm0
            //   660f6f05????????     |                     
            //   f30f7f856cfdffff     | movdqu              xmmword ptr [ebp - 0x294], xmm0
            //   660f6f05????????     |                     
            //   f30f7f857cfdffff     | movdqu              xmmword ptr [ebp - 0x284], xmm0

        $sequence_1 = { 8bfe 83e71f c1e706 8b049d10974100 0fbe443804 83e001 }
            // n = 6, score = 100
            //   8bfe                 | mov                 edi, esi
            //   83e71f               | and                 edi, 0x1f
            //   c1e706               | shl                 edi, 6
            //   8b049d10974100       | mov                 eax, dword ptr [ebx*4 + 0x419710]
            //   0fbe443804           | movsx               eax, byte ptr [eax + edi + 4]
            //   83e001               | and                 eax, 1

        $sequence_2 = { 660fd60f 8d7f08 8b048df83c4000 ffe0 }
            // n = 4, score = 100
            //   660fd60f             | movq                qword ptr [edi], xmm1
            //   8d7f08               | lea                 edi, [edi + 8]
            //   8b048df83c4000       | mov                 eax, dword ptr [ecx*4 + 0x403cf8]
            //   ffe0                 | jmp                 eax

        $sequence_3 = { 0fb6cf 8db5fcf9ffff 03f1 8a1e 8acb 02cf }
            // n = 6, score = 100
            //   0fb6cf               | movzx               ecx, bh
            //   8db5fcf9ffff         | lea                 esi, [ebp - 0x604]
            //   03f1                 | add                 esi, ecx
            //   8a1e                 | mov                 bl, byte ptr [esi]
            //   8acb                 | mov                 cl, bl
            //   02cf                 | add                 cl, bh

        $sequence_4 = { 8d85e4f5ffff c785ecf6ffff01000000 50 6a00 8d85ecf6ffff c785e4f5ffff01000000 }
            // n = 6, score = 100
            //   8d85e4f5ffff         | lea                 eax, [ebp - 0xa1c]
            //   c785ecf6ffff01000000     | mov    dword ptr [ebp - 0x914], 1
            //   50                   | push                eax
            //   6a00                 | push                0
            //   8d85ecf6ffff         | lea                 eax, [ebp - 0x914]
            //   c785e4f5ffff01000000     | mov    dword ptr [ebp - 0xa1c], 1

        $sequence_5 = { 0fb6420e 03c8 0fb6420d c1e108 }
            // n = 4, score = 100
            //   0fb6420e             | movzx               eax, byte ptr [edx + 0xe]
            //   03c8                 | add                 ecx, eax
            //   0fb6420d             | movzx               eax, byte ptr [edx + 0xd]
            //   c1e108               | shl                 ecx, 8

        $sequence_6 = { 668944245e 8d44245c 6a10 50 53 ff15???????? }
            // n = 6, score = 100
            //   668944245e           | mov                 word ptr [esp + 0x5e], ax
            //   8d44245c             | lea                 eax, [esp + 0x5c]
            //   6a10                 | push                0x10
            //   50                   | push                eax
            //   53                   | push                ebx
            //   ff15????????         |                     

        $sequence_7 = { 50 8bce e8???????? 6a04 8d8588feffff c78588feffffc22eab48 }
            // n = 6, score = 100
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   6a04                 | push                4
            //   8d8588feffff         | lea                 eax, [ebp - 0x178]
            //   c78588feffffc22eab48     | mov    dword ptr [ebp - 0x178], 0x48ab2ec2

        $sequence_8 = { c745f4741f4100 50 e8???????? cc 55 8bec }
            // n = 6, score = 100
            //   c745f4741f4100       | mov                 dword ptr [ebp - 0xc], 0x411f74
            //   50                   | push                eax
            //   e8????????           |                     
            //   cc                   | int3                
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp

        $sequence_9 = { 8bcf 8bc7 894de4 399898874100 0f84e8000000 41 83c030 }
            // n = 7, score = 100
            //   8bcf                 | mov                 ecx, edi
            //   8bc7                 | mov                 eax, edi
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx
            //   399898874100         | cmp                 dword ptr [eax + 0x418798], ebx
            //   0f84e8000000         | je                  0xee
            //   41                   | inc                 ecx
            //   83c030               | add                 eax, 0x30

    condition:
        7 of them and filesize < 247808
}