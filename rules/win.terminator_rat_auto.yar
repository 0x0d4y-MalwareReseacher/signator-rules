rule win_terminator_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.terminator_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.terminator_rat"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 83f8ff 7408 81c400040000 }
            // n = 4, score = 500
            //   e8????????           |                     
            //   83f8ff               | cmp                 eax, -1
            //   7408                 | je                  0xa
            //   81c400040000         | add                 esp, 0x400

        $sequence_1 = { 8d8784fcffff 50 ff553d 8b851d010000 33d2 }
            // n = 5, score = 500
            //   8d8784fcffff         | lea                 eax, dword ptr [edi - 0x37c]
            //   50                   | push                eax
            //   ff553d               | call                dword ptr [ebp + 0x3d]
            //   8b851d010000         | mov                 eax, dword ptr [ebp + 0x11d]
            //   33d2                 | xor                 edx, edx

        $sequence_2 = { 50 e8???????? 85c0 743d 83f8ff 7411 }
            // n = 6, score = 500
            //   50                   | push                eax
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   743d                 | je                  0x3f
            //   83f8ff               | cmp                 eax, -1
            //   7411                 | je                  0x13

        $sequence_3 = { 8b4ff4 395c8108 59 7510 53 8b5ff4 }
            // n = 6, score = 500
            //   8b4ff4               | mov                 ecx, dword ptr [edi - 0xc]
            //   395c8108             | cmp                 dword ptr [ecx + eax*4 + 8], ebx
            //   59                   | pop                 ecx
            //   7510                 | jne                 0x12
            //   53                   | push                ebx
            //   8b5ff4               | mov                 ebx, dword ptr [edi - 0xc]

        $sequence_4 = { 53 6a01 6800000080 ffb7f0fbffff ff5525 }
            // n = 5, score = 500
            //   53                   | push                ebx
            //   6a01                 | push                1
            //   6800000080           | push                0x80000000
            //   ffb7f0fbffff         | push                dword ptr [edi - 0x410]
            //   ff5525               | call                dword ptr [ebp + 0x25]

        $sequence_5 = { 2bc1 8a1401 8811 41 4e 75f7 }
            // n = 6, score = 500
            //   2bc1                 | sub                 eax, ecx
            //   8a1401               | mov                 dl, byte ptr [ecx + eax]
            //   8811                 | mov                 byte ptr [ecx], dl
            //   41                   | inc                 ecx
            //   4e                   | dec                 esi
            //   75f7                 | jne                 0xfffffff9

        $sequence_6 = { eb02 33db 8b06 3d12020000 }
            // n = 4, score = 500
            //   eb02                 | jmp                 4
            //   33db                 | xor                 ebx, ebx
            //   8b06                 | mov                 eax, dword ptr [esi]
            //   3d12020000           | cmp                 eax, 0x212

        $sequence_7 = { 57 8bfc 81ec00040000 8d8700fcffff }
            // n = 4, score = 500
            //   57                   | push                edi
            //   8bfc                 | mov                 edi, esp
            //   81ec00040000         | sub                 esp, 0x400
            //   8d8700fcffff         | lea                 eax, dword ptr [edi - 0x400]

        $sequence_8 = { 57 8bfc 83ec0c 53 56 8b7708 }
            // n = 6, score = 500
            //   57                   | push                edi
            //   8bfc                 | mov                 edi, esp
            //   83ec0c               | sub                 esp, 0xc
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b7708               | mov                 esi, dword ptr [edi + 8]

        $sequence_9 = { 5b 6800040000 ffb519010000 8947fc }
            // n = 4, score = 500
            //   5b                   | pop                 ebx
            //   6800040000           | push                0x400
            //   ffb519010000         | push                dword ptr [ebp + 0x119]
            //   8947fc               | mov                 dword ptr [edi - 4], eax

    condition:
        7 of them and filesize < 73728
}