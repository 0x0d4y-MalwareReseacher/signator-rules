rule win_breach_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.breach_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breach_rat"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b148db0ef4300 8b4dfc 2355f8 8b4908 8d0cd1 8b55f8 894de4 }
            // n = 7, score = 200
            //   8b148db0ef4300       | mov                 edx, dword ptr [ecx*4 + 0x43efb0]
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   2355f8               | and                 edx, dword ptr [ebp - 8]
            //   8b4908               | mov                 ecx, dword ptr [ecx + 8]
            //   8d0cd1               | lea                 ecx, dword ptr [ecx + edx*8]
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   894de4               | mov                 dword ptr [ebp - 0x1c], ecx

        $sequence_1 = { 50 8bf1 c745f401000000 e8???????? 83c40c c745f808020000 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   8bf1                 | mov                 esi, ecx
            //   c745f401000000       | mov                 dword ptr [ebp - 0xc], 1
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   c745f808020000       | mov                 dword ptr [ebp - 8], 0x208

        $sequence_2 = { e8???????? 68???????? 8d8564f6ffff c745fccd000000 50 8bce e8???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   68????????           |                     
            //   8d8564f6ffff         | lea                 eax, dword ptr [ebp - 0x99c]
            //   c745fccd000000       | mov                 dword ptr [ebp - 4], 0xcd
            //   50                   | push                eax
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_3 = { f7e9 c745f001000000 c1fa02 8bc2 c1e81f 03c2 83f803 }
            // n = 7, score = 200
            //   f7e9                 | imul                ecx
            //   c745f001000000       | mov                 dword ptr [ebp - 0x10], 1
            //   c1fa02               | sar                 edx, 2
            //   8bc2                 | mov                 eax, edx
            //   c1e81f               | shr                 eax, 0x1f
            //   03c2                 | add                 eax, edx
            //   83f803               | cmp                 eax, 3

        $sequence_4 = { 0fb688b1160000 880c16 b110 2a88b4160000 ff4014 66d3ef 8380b4160000f7 }
            // n = 7, score = 200
            //   0fb688b1160000       | movzx               ecx, byte ptr [eax + 0x16b1]
            //   880c16               | mov                 byte ptr [esi + edx], cl
            //   b110                 | mov                 cl, 0x10
            //   2a88b4160000         | sub                 cl, byte ptr [eax + 0x16b4]
            //   ff4014               | inc                 dword ptr [eax + 0x14]
            //   66d3ef               | shr                 di, cl
            //   8380b4160000f7       | add                 dword ptr [eax + 0x16b4], -9

        $sequence_5 = { 668945ec 8d45ec 6a10 50 ff7604 ff15???????? 85c0 }
            // n = 7, score = 200
            //   668945ec             | mov                 word ptr [ebp - 0x14], ax
            //   8d45ec               | lea                 eax, dword ptr [ebp - 0x14]
            //   6a10                 | push                0x10
            //   50                   | push                eax
            //   ff7604               | push                dword ptr [esi + 4]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_6 = { 0f841a010000 6a0c 8d856cffffff 50 6a26 57 ff15???????? }
            // n = 7, score = 200
            //   0f841a010000         | je                  0x120
            //   6a0c                 | push                0xc
            //   8d856cffffff         | lea                 eax, dword ptr [ebp - 0x94]
            //   50                   | push                eax
            //   6a26                 | push                0x26
            //   57                   | push                edi
            //   ff15????????         |                     

        $sequence_7 = { e8???????? 8bc8 e8???????? 8d8d0cf4ffff c745fcffffffff e8???????? 68???????? }
            // n = 7, score = 200
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8d8d0cf4ffff         | lea                 ecx, dword ptr [ebp - 0xbf4]
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   e8????????           |                     
            //   68????????           |                     

        $sequence_8 = { 8bc8 e8???????? 8d8db4f7ffff c745fcffffffff e8???????? 68???????? 8d8d84f7ffff }
            // n = 7, score = 200
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   8d8db4f7ffff         | lea                 ecx, dword ptr [ebp - 0x84c]
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   e8????????           |                     
            //   68????????           |                     
            //   8d8d84f7ffff         | lea                 ecx, dword ptr [ebp - 0x87c]

        $sequence_9 = { 8d8da4efffff c745fcffffffff e8???????? 68???????? 8d8d74efffff e8???????? 68???????? }
            // n = 7, score = 200
            //   8d8da4efffff         | lea                 ecx, dword ptr [ebp - 0x105c]
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   e8????????           |                     
            //   68????????           |                     
            //   8d8d74efffff         | lea                 ecx, dword ptr [ebp - 0x108c]
            //   e8????????           |                     
            //   68????????           |                     

    condition:
        7 of them and filesize < 645120
}