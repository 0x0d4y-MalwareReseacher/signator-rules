rule win_breach_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.breach_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.breach_rat"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 807dbc00 7515 33c9 8d45bc 51 50 }
            // n = 6, score = 200
            //   807dbc00             | cmp                 byte ptr [ebp - 0x44], 0
            //   7515                 | jne                 0x17
            //   33c9                 | xor                 ecx, ecx
            //   8d45bc               | lea                 eax, [ebp - 0x44]
            //   51                   | push                ecx
            //   50                   | push                eax

        $sequence_1 = { 770f 0fbec2 0fb680a0974300 83e00f eb02 33c0 8bbdc8fdffff }
            // n = 7, score = 200
            //   770f                 | ja                  0x11
            //   0fbec2               | movsx               eax, dl
            //   0fb680a0974300       | movzx               eax, byte ptr [eax + 0x4397a0]
            //   83e00f               | and                 eax, 0xf
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   8bbdc8fdffff         | mov                 edi, dword ptr [ebp - 0x238]

        $sequence_2 = { 8906 0fb6c1 84c9 7446 83f8ff 75ae eb3f }
            // n = 7, score = 200
            //   8906                 | mov                 dword ptr [esi], eax
            //   0fb6c1               | movzx               eax, cl
            //   84c9                 | test                cl, cl
            //   7446                 | je                  0x48
            //   83f8ff               | cmp                 eax, -1
            //   75ae                 | jne                 0xffffffb0
            //   eb3f                 | jmp                 0x41

        $sequence_3 = { 8bb534ffffff 8b4db4 8955ec 8b55dc 39540e10 8b55e4 8b8d7cffffff }
            // n = 7, score = 200
            //   8bb534ffffff         | mov                 esi, dword ptr [ebp - 0xcc]
            //   8b4db4               | mov                 ecx, dword ptr [ebp - 0x4c]
            //   8955ec               | mov                 dword ptr [ebp - 0x14], edx
            //   8b55dc               | mov                 edx, dword ptr [ebp - 0x24]
            //   39540e10             | cmp                 dword ptr [esi + ecx + 0x10], edx
            //   8b55e4               | mov                 edx, dword ptr [ebp - 0x1c]
            //   8b8d7cffffff         | mov                 ecx, dword ptr [ebp - 0x84]

        $sequence_4 = { 33f6 57 8d81ac000000 8d7a3c 0fb748fc 8d4008 03d1 }
            // n = 7, score = 200
            //   33f6                 | xor                 esi, esi
            //   57                   | push                edi
            //   8d81ac000000         | lea                 eax, [ecx + 0xac]
            //   8d7a3c               | lea                 edi, [edx + 0x3c]
            //   0fb748fc             | movzx               ecx, word ptr [eax - 4]
            //   8d4008               | lea                 eax, [eax + 8]
            //   03d1                 | add                 edx, ecx

        $sequence_5 = { c745d800000000 c645c800 e8???????? 6a04 68???????? 8d4de0 c645fc01 }
            // n = 7, score = 200
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0
            //   c645c800             | mov                 byte ptr [ebp - 0x38], 0
            //   e8????????           |                     
            //   6a04                 | push                4
            //   68????????           |                     
            //   8d4de0               | lea                 ecx, [ebp - 0x20]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1

        $sequence_6 = { 0f85f4feffff c74720ffffffff 33c0 5f 5e 5b 8be5 }
            // n = 7, score = 200
            //   0f85f4feffff         | jne                 0xfffffefa
            //   c74720ffffffff       | mov                 dword ptr [edi + 0x20], 0xffffffff
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   5b                   | pop                 ebx
            //   8be5                 | mov                 esp, ebp

        $sequence_7 = { 56 33f6 8945ec 57 33ff c745e80f000000 }
            // n = 6, score = 200
            //   56                   | push                esi
            //   33f6                 | xor                 esi, esi
            //   8945ec               | mov                 dword ptr [ebp - 0x14], eax
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   c745e80f000000       | mov                 dword ptr [ebp - 0x18], 0xf

        $sequence_8 = { 50 64892500000000 83ec78 53 8b5d10 56 }
            // n = 6, score = 200
            //   50                   | push                eax
            //   64892500000000       | mov                 dword ptr fs:[0], esp
            //   83ec78               | sub                 esp, 0x78
            //   53                   | push                ebx
            //   8b5d10               | mov                 ebx, dword ptr [ebp + 0x10]
            //   56                   | push                esi

        $sequence_9 = { 50 e8???????? 8b4664 83c408 8b0e 894654 e8???????? }
            // n = 7, score = 200
            //   50                   | push                eax
            //   e8????????           |                     
            //   8b4664               | mov                 eax, dword ptr [esi + 0x64]
            //   83c408               | add                 esp, 8
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   894654               | mov                 dword ptr [esi + 0x54], eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 645120
}