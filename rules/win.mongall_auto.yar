rule win_mongall_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.mongall."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mongall"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7415 ff85e4fdffff 83bde4fdffffff 740d 85f6 7fdf }
            // n = 6, score = 100
            //   7415                 | je                  0x17
            //   ff85e4fdffff         | inc                 dword ptr [ebp - 0x21c]
            //   83bde4fdffffff       | cmp                 dword ptr [ebp - 0x21c], -1
            //   740d                 | je                  0xf
            //   85f6                 | test                esi, esi
            //   7fdf                 | jg                  0xffffffe1

        $sequence_1 = { 33f6 50 8935???????? 8935???????? }
            // n = 4, score = 100
            //   33f6                 | xor                 esi, esi
            //   50                   | push                eax
            //   8935????????         |                     
            //   8935????????         |                     

        $sequence_2 = { 50 53 8d95f8fdffff e8???????? }
            // n = 4, score = 100
            //   50                   | push                eax
            //   53                   | push                ebx
            //   8d95f8fdffff         | lea                 edx, [ebp - 0x208]
            //   e8????????           |                     

        $sequence_3 = { c3 8d5801 53 e8???????? 53 8bf0 6a00 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8d5801               | lea                 ebx, [eax + 1]
            //   53                   | push                ebx
            //   e8????????           |                     
            //   53                   | push                ebx
            //   8bf0                 | mov                 esi, eax
            //   6a00                 | push                0

        $sequence_4 = { c1e006 030495603f4100 eb05 b8???????? f6400420 7414 6a02 }
            // n = 7, score = 100
            //   c1e006               | shl                 eax, 6
            //   030495603f4100       | add                 eax, dword ptr [edx*4 + 0x413f60]
            //   eb05                 | jmp                 7
            //   b8????????           |                     
            //   f6400420             | test                byte ptr [eax + 4], 0x20
            //   7414                 | je                  0x16
            //   6a02                 | push                2

        $sequence_5 = { 52 8985f8fdffff 898decfdffff c685fcfdffff00 e8???????? 8bc6 83c40c }
            // n = 7, score = 100
            //   52                   | push                edx
            //   8985f8fdffff         | mov                 dword ptr [ebp - 0x208], eax
            //   898decfdffff         | mov                 dword ptr [ebp - 0x214], ecx
            //   c685fcfdffff00       | mov                 byte ptr [ebp - 0x204], 0
            //   e8????????           |                     
            //   8bc6                 | mov                 eax, esi
            //   83c40c               | add                 esp, 0xc

        $sequence_6 = { 0f8fe8000000 747d 83e841 7410 48 48 }
            // n = 6, score = 100
            //   0f8fe8000000         | jg                  0xee
            //   747d                 | je                  0x7f
            //   83e841               | sub                 eax, 0x41
            //   7410                 | je                  0x12
            //   48                   | dec                 eax
            //   48                   | dec                 eax

        $sequence_7 = { 899d98fdffff 8bf0 8bda 83f939 7e06 038dbcfdffff 880f }
            // n = 7, score = 100
            //   899d98fdffff         | mov                 dword ptr [ebp - 0x268], ebx
            //   8bf0                 | mov                 esi, eax
            //   8bda                 | mov                 ebx, edx
            //   83f939               | cmp                 ecx, 0x39
            //   7e06                 | jle                 8
            //   038dbcfdffff         | add                 ecx, dword ptr [ebp - 0x244]
            //   880f                 | mov                 byte ptr [edi], cl

        $sequence_8 = { ff15???????? 8b4d0c 50 8b85f8feffff 50 8d95fcfeffff }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   8b85f8feffff         | mov                 eax, dword ptr [ebp - 0x108]
            //   50                   | push                eax
            //   8d95fcfeffff         | lea                 edx, [ebp - 0x104]

        $sequence_9 = { 56 50 e8???????? 8d4df0 51 e8???????? 83c410 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10

    condition:
        7 of them and filesize < 199680
}