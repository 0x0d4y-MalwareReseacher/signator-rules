rule win_rctrl_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.rctrl."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rctrl"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5e 8b8c2414100000 33cc e8???????? 8be5 }
            // n = 5, score = 100
            //   5e                   | pop                 esi
            //   8b8c2414100000       | mov                 ecx, dword ptr [esp + 0x1014]
            //   33cc                 | xor                 ecx, esp
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp

        $sequence_1 = { 8b5d08 33c9 57 33c0 8d3c9d701f5d00 f00fb10f }
            // n = 6, score = 100
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   33c9                 | xor                 ecx, ecx
            //   57                   | push                edi
            //   33c0                 | xor                 eax, eax
            //   8d3c9d701f5d00       | lea                 edi, [ebx*4 + 0x5d1f70]
            //   f00fb10f             | lock cmpxchg        dword ptr [edi], ecx

        $sequence_2 = { 33ff 8bc7 8bcf 83e03f c1f906 6bf030 03348dc8215d00 }
            // n = 7, score = 100
            //   33ff                 | xor                 edi, edi
            //   8bc7                 | mov                 eax, edi
            //   8bcf                 | mov                 ecx, edi
            //   83e03f               | and                 eax, 0x3f
            //   c1f906               | sar                 ecx, 6
            //   6bf030               | imul                esi, eax, 0x30
            //   03348dc8215d00       | add                 esi, dword ptr [ecx*4 + 0x5d21c8]

        $sequence_3 = { e8???????? 51 8bcc c645fc06 68???????? 894dc4 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   51                   | push                ecx
            //   8bcc                 | mov                 ecx, esp
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   68????????           |                     
            //   894dc4               | mov                 dword ptr [ebp - 0x3c], ecx

        $sequence_4 = { 8b8fb4000000 6a00 6aff e8???????? 837df800 }
            // n = 5, score = 100
            //   8b8fb4000000         | mov                 ecx, dword ptr [edi + 0xb4]
            //   6a00                 | push                0
            //   6aff                 | push                -1
            //   e8????????           |                     
            //   837df800             | cmp                 dword ptr [ebp - 8], 0

        $sequence_5 = { 8bf1 398688000000 7458 898688000000 8b4678 ff7020 }
            // n = 6, score = 100
            //   8bf1                 | mov                 esi, ecx
            //   398688000000         | cmp                 dword ptr [esi + 0x88], eax
            //   7458                 | je                  0x5a
            //   898688000000         | mov                 dword ptr [esi + 0x88], eax
            //   8b4678               | mov                 eax, dword ptr [esi + 0x78]
            //   ff7020               | push                dword ptr [eax + 0x20]

        $sequence_6 = { e9???????? 8d8ddcfeffff e9???????? 8b542408 8d420c 8b8ab4feffff 33c8 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8d8ddcfeffff         | lea                 ecx, [ebp - 0x124]
            //   e9????????           |                     
            //   8b542408             | mov                 edx, dword ptr [esp + 8]
            //   8d420c               | lea                 eax, [edx + 0xc]
            //   8b8ab4feffff         | mov                 ecx, dword ptr [edx - 0x14c]
            //   33c8                 | xor                 ecx, eax

        $sequence_7 = { 85c0 0f8424020000 8365b800 c745b470535700 8b4304 57 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   0f8424020000         | je                  0x22a
            //   8365b800             | and                 dword ptr [ebp - 0x48], 0
            //   c745b470535700       | mov                 dword ptr [ebp - 0x4c], 0x575370
            //   8b4304               | mov                 eax, dword ptr [ebx + 4]
            //   57                   | push                edi

        $sequence_8 = { e8???????? 8d8ef0000000 e8???????? 8bce 5e e9???????? 55 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8d8ef0000000         | lea                 ecx, [esi + 0xf0]
            //   e8????????           |                     
            //   8bce                 | mov                 ecx, esi
            //   5e                   | pop                 esi
            //   e9????????           |                     
            //   55                   | push                ebp

        $sequence_9 = { 85db 7462 85ff 745e 85f6 745a 53 }
            // n = 7, score = 100
            //   85db                 | test                ebx, ebx
            //   7462                 | je                  0x64
            //   85ff                 | test                edi, edi
            //   745e                 | je                  0x60
            //   85f6                 | test                esi, esi
            //   745a                 | je                  0x5c
            //   53                   | push                ebx

    condition:
        7 of them and filesize < 4315136
}