rule win_sinowal_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.sinowal."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.sinowal"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb41 8d4dfc 51 6810002800 8b55f8 52 }
            // n = 6, score = 200
            //   eb41                 | jmp                 0x43
            //   8d4dfc               | lea                 ecx, [ebp - 4]
            //   51                   | push                ecx
            //   6810002800           | push                0x280010
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]
            //   52                   | push                edx

        $sequence_1 = { 8b513c 8b45f8 0fbf0c10 81f950450000 7418 8b55f8 }
            // n = 6, score = 200
            //   8b513c               | mov                 edx, dword ptr [ecx + 0x3c]
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   0fbf0c10             | movsx               ecx, word ptr [eax + edx]
            //   81f950450000         | cmp                 ecx, 0x4550
            //   7418                 | je                  0x1a
            //   8b55f8               | mov                 edx, dword ptr [ebp - 8]

        $sequence_2 = { 7514 8b95ccfeffff 52 ff15???????? b8feffffff eb4c }
            // n = 6, score = 200
            //   7514                 | jne                 0x16
            //   8b95ccfeffff         | mov                 edx, dword ptr [ebp - 0x134]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   b8feffffff           | mov                 eax, 0xfffffffe
            //   eb4c                 | jmp                 0x4e

        $sequence_3 = { 33c9 0f85d5fdffff 8b95acfdffff 52 }
            // n = 4, score = 200
            //   33c9                 | xor                 ecx, ecx
            //   0f85d5fdffff         | jne                 0xfffffddb
            //   8b95acfdffff         | mov                 edx, dword ptr [ebp - 0x254]
            //   52                   | push                edx

        $sequence_4 = { 83c201 8955fc 817dfc70020000 7c11 }
            // n = 4, score = 200
            //   83c201               | add                 edx, 1
            //   8955fc               | mov                 dword ptr [ebp - 4], edx
            //   817dfc70020000       | cmp                 dword ptr [ebp - 4], 0x270
            //   7c11                 | jl                  0x13

        $sequence_5 = { 8b4dfc 51 ff15???????? 837d0c00 }
            // n = 4, score = 200
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0

        $sequence_6 = { 8b55fc 52 ff15???????? c745f400000000 eb09 8b45f4 }
            // n = 6, score = 200
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   c745f400000000       | mov                 dword ptr [ebp - 0xc], 0
            //   eb09                 | jmp                 0xb
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]

        $sequence_7 = { 52 ff15???????? c745f400000000 eb09 8b45f4 83c001 8945f4 }
            // n = 7, score = 200
            //   52                   | push                edx
            //   ff15????????         |                     
            //   c745f400000000       | mov                 dword ptr [ebp - 0xc], 0
            //   eb09                 | jmp                 0xb
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   83c001               | add                 eax, 1
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax

        $sequence_8 = { 890d???????? c705????????00000000 a1???????? 8b0c85d0669600 894dfc }
            // n = 5, score = 200
            //   890d????????         |                     
            //   c705????????00000000     |     
            //   a1????????           |                     
            //   8b0c85d0669600       | mov                 ecx, dword ptr [eax*4 + 0x9666d0]
            //   894dfc               | mov                 dword ptr [ebp - 4], ecx

        $sequence_9 = { 8b4dfc 0fb611 33d0 8b45fc 8810 8b4dfc }
            // n = 6, score = 200
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   0fb611               | movzx               edx, byte ptr [ecx]
            //   33d0                 | xor                 edx, eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   8810                 | mov                 byte ptr [eax], dl
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]

    condition:
        7 of them and filesize < 73728
}