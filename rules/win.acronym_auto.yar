rule win_acronym_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.acronym."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.acronym"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 668b544118 668955fc 0fb745fc c1e004 8b4d08 8d940190c90000 b804000000 }
            // n = 7, score = 100
            //   668b544118           | mov                 dx, word ptr [ecx + eax*2 + 0x18]
            //   668955fc             | mov                 word ptr [ebp - 4], dx
            //   0fb745fc             | movzx               eax, word ptr [ebp - 4]
            //   c1e004               | shl                 eax, 4
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8d940190c90000       | lea                 edx, [ecx + eax + 0xc990]
            //   b804000000           | mov                 eax, 4

        $sequence_1 = { 69c902010000 8b5508 8d840a24930000 8b4ddc 8b55f0 0fb70c4a 0fb61408 }
            // n = 7, score = 100
            //   69c902010000         | imul                ecx, ecx, 0x102
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8d840a24930000       | lea                 eax, [edx + ecx + 0x9324]
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   8b55f0               | mov                 edx, dword ptr [ebp - 0x10]
            //   0fb70c4a             | movzx               ecx, word ptr [edx + ecx*2]
            //   0fb61408             | movzx               edx, byte ptr [eax + ecx]

        $sequence_2 = { e9???????? e9???????? 8d4d0c e8???????? 50 8b4ddc e8???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   e9????????           |                     
            //   8d4d0c               | lea                 ecx, [ebp + 0xc]
            //   e8????????           |                     
            //   50                   | push                eax
            //   8b4ddc               | mov                 ecx, dword ptr [ebp - 0x24]
            //   e8????????           |                     

        $sequence_3 = { 0fb744413c 8b4dec 69c908040000 8b7508 8d8c0e60b10000 891481 8b55f4 }
            // n = 7, score = 100
            //   0fb744413c           | movzx               eax, word ptr [ecx + eax*2 + 0x3c]
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   69c908040000         | imul                ecx, ecx, 0x408
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8d8c0e60b10000       | lea                 ecx, [esi + ecx + 0xb160]
            //   891481               | mov                 dword ptr [ecx + eax*4], edx
            //   8b55f4               | mov                 edx, dword ptr [ebp - 0xc]

        $sequence_4 = { 8b4df0 0fb754412e 8b45ec 69c008040000 8b4d08 8d840160b10000 8b0c90 }
            // n = 7, score = 100
            //   8b4df0               | mov                 ecx, dword ptr [ebp - 0x10]
            //   0fb754412e           | movzx               edx, word ptr [ecx + eax*2 + 0x2e]
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   69c008040000         | imul                eax, eax, 0x408
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8d840160b10000       | lea                 eax, [ecx + eax + 0xb160]
            //   8b0c90               | mov                 ecx, dword ptr [eax + edx*4]

        $sequence_5 = { 8b5508 8d840a24930000 b901000000 6bc900 0fb61408 8955b0 8b45b0 }
            // n = 7, score = 100
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8d840a24930000       | lea                 eax, [edx + ecx + 0x9324]
            //   b901000000           | mov                 ecx, 1
            //   6bc900               | imul                ecx, ecx, 0
            //   0fb61408             | movzx               edx, byte ptr [eax + ecx]
            //   8955b0               | mov                 dword ptr [ebp - 0x50], edx
            //   8b45b0               | mov                 eax, dword ptr [ebp - 0x50]

        $sequence_6 = { ba04000000 c1e200 8b8415a0fbffff 8945cc b904000000 c1e100 }
            // n = 6, score = 100
            //   ba04000000           | mov                 edx, 4
            //   c1e200               | shl                 edx, 0
            //   8b8415a0fbffff       | mov                 eax, dword ptr [ebp + edx - 0x460]
            //   8945cc               | mov                 dword ptr [ebp - 0x34], eax
            //   b904000000           | mov                 ecx, 4
            //   c1e100               | shl                 ecx, 0

        $sequence_7 = { 8b45d8 3b45c4 7d0f 33c9 8b55d8 }
            // n = 5, score = 100
            //   8b45d8               | mov                 eax, dword ptr [ebp - 0x28]
            //   3b45c4               | cmp                 eax, dword ptr [ebp - 0x3c]
            //   7d0f                 | jge                 0x11
            //   33c9                 | xor                 ecx, ecx
            //   8b55d8               | mov                 edx, dword ptr [ebp - 0x28]

        $sequence_8 = { 69c002010000 8b4d08 8d940124930000 8b45cc c604020f eba1 8b4db8 }
            // n = 7, score = 100
            //   69c002010000         | imul                eax, eax, 0x102
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   8d940124930000       | lea                 edx, [ecx + eax + 0x9324]
            //   8b45cc               | mov                 eax, dword ptr [ebp - 0x34]
            //   c604020f             | mov                 byte ptr [edx + eax], 0xf
            //   eba1                 | jmp                 0xffffffa3
            //   8b4db8               | mov                 ecx, dword ptr [ebp - 0x48]

        $sequence_9 = { 51 8b55fc 8b02 8b481c ffd1 }
            // n = 5, score = 100
            //   51                   | push                ecx
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   8b481c               | mov                 ecx, dword ptr [eax + 0x1c]
            //   ffd1                 | call                ecx

    condition:
        7 of them and filesize < 466944
}