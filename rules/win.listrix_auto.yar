rule win_listrix_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.listrix."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.listrix"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5f 5e 50 ff15???????? }
            // n = 4, score = 100
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_1 = { e8???????? 83c418 8d8de4f9ffff 51 }
            // n = 4, score = 100
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   8d8de4f9ffff         | lea                 ecx, [ebp - 0x61c]
            //   51                   | push                ecx

        $sequence_2 = { 50 51 52 8d85c0f5ffff 50 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   51                   | push                ecx
            //   52                   | push                edx
            //   8d85c0f5ffff         | lea                 eax, [ebp - 0xa40]
            //   50                   | push                eax

        $sequence_3 = { d16c2408 0f8503ffffff 8b35???????? 68???????? 68???????? ff15???????? 68dc050000 }
            // n = 7, score = 100
            //   d16c2408             | shr                 dword ptr [esp + 8], 1
            //   0f8503ffffff         | jne                 0xffffff09
            //   8b35????????         |                     
            //   68????????           |                     
            //   68????????           |                     
            //   ff15????????         |                     
            //   68dc050000           | push                0x5dc

        $sequence_4 = { ebab c745e458614000 817de45c614000 7311 8b45e4 }
            // n = 5, score = 100
            //   ebab                 | jmp                 0xffffffad
            //   c745e458614000       | mov                 dword ptr [ebp - 0x1c], 0x406158
            //   817de45c614000       | cmp                 dword ptr [ebp - 0x1c], 0x40615c
            //   7311                 | jae                 0x13
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]

        $sequence_5 = { 51 8d95f4f7ffff 52 ff15???????? 8bd8 899d90f5ffff }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   8d95f4f7ffff         | lea                 edx, [ebp - 0x80c]
            //   52                   | push                edx
            //   ff15????????         |                     
            //   8bd8                 | mov                 ebx, eax
            //   899d90f5ffff         | mov                 dword ptr [ebp - 0xa70], ebx

        $sequence_6 = { ff15???????? 83f803 0f85b4000000 6aff }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   83f803               | cmp                 eax, 3
            //   0f85b4000000         | jne                 0xba
            //   6aff                 | push                -1

        $sequence_7 = { 8b8d84f5ffff 8b14b1 52 8d85f4f7ffff 50 ff15???????? }
            // n = 6, score = 100
            //   8b8d84f5ffff         | mov                 ecx, dword ptr [ebp - 0xa7c]
            //   8b14b1               | mov                 edx, dword ptr [ecx + esi*4]
            //   52                   | push                edx
            //   8d85f4f7ffff         | lea                 eax, [ebp - 0x80c]
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_8 = { ff15???????? f644240801 0f84d4000000 8b4c240c }
            // n = 4, score = 100
            //   ff15????????         |                     
            //   f644240801           | test                byte ptr [esp + 8], 1
            //   0f84d4000000         | je                  0xda
            //   8b4c240c             | mov                 ecx, dword ptr [esp + 0xc]

        $sequence_9 = { 8bec 33c0 8b4d08 3b0cc5186a4000 740a 40 83f816 }
            // n = 7, score = 100
            //   8bec                 | mov                 ebp, esp
            //   33c0                 | xor                 eax, eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   3b0cc5186a4000       | cmp                 ecx, dword ptr [eax*8 + 0x406a18]
            //   740a                 | je                  0xc
            //   40                   | inc                 eax
            //   83f816               | cmp                 eax, 0x16

    condition:
        7 of them and filesize < 106496
}