rule win_mocton_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.mocton."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mocton"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 51 e8???????? 83c408 c78550fbfffffb90ba4f c78518fbffff55263138 c78554fbffff3a17597b c78518fbffff4d2fda55 }
            // n = 7, score = 100
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   c78550fbfffffb90ba4f     | mov    dword ptr [ebp - 0x4b0], 0x4fba90fb
            //   c78518fbffff55263138     | mov    dword ptr [ebp - 0x4e8], 0x38312655
            //   c78554fbffff3a17597b     | mov    dword ptr [ebp - 0x4ac], 0x7b59173a
            //   c78518fbffff4d2fda55     | mov    dword ptr [ebp - 0x4e8], 0x55da2f4d

        $sequence_1 = { 39950ceaffff 7c34 8b850ceaffff 83e801 89850ceaffff 8b8d0ceaffff 0faf8d0ceaffff }
            // n = 7, score = 100
            //   39950ceaffff         | cmp                 dword ptr [ebp - 0x15f4], edx
            //   7c34                 | jl                  0x36
            //   8b850ceaffff         | mov                 eax, dword ptr [ebp - 0x15f4]
            //   83e801               | sub                 eax, 1
            //   89850ceaffff         | mov                 dword ptr [ebp - 0x15f4], eax
            //   8b8d0ceaffff         | mov                 ecx, dword ptr [ebp - 0x15f4]
            //   0faf8d0ceaffff       | imul                ecx, dword ptr [ebp - 0x15f4]

        $sequence_2 = { 8b85fcfdffff 051041556a 8b8dfcfdffff 83c101 898dfcfdffff 3bc2 7e0c }
            // n = 7, score = 100
            //   8b85fcfdffff         | mov                 eax, dword ptr [ebp - 0x204]
            //   051041556a           | add                 eax, 0x6a554110
            //   8b8dfcfdffff         | mov                 ecx, dword ptr [ebp - 0x204]
            //   83c101               | add                 ecx, 1
            //   898dfcfdffff         | mov                 dword ptr [ebp - 0x204], ecx
            //   3bc2                 | cmp                 eax, edx
            //   7e0c                 | jle                 0xe

        $sequence_3 = { 7451 8b8508fdffff 83e801 898508fdffff 33c9 81bd08fdfffff3d0a776 0f9ec1 }
            // n = 7, score = 100
            //   7451                 | je                  0x53
            //   8b8508fdffff         | mov                 eax, dword ptr [ebp - 0x2f8]
            //   83e801               | sub                 eax, 1
            //   898508fdffff         | mov                 dword ptr [ebp - 0x2f8], eax
            //   33c9                 | xor                 ecx, ecx
            //   81bd08fdfffff3d0a776     | cmp    dword ptr [ebp - 0x2f8], 0x76a7d0f3
            //   0f9ec1               | setle               cl

        $sequence_4 = { eb6d 8b8524fcffff 83e801 898524fcffff 8b8d2cfcffff 2b8d24fcffff 81e9fe866a18 }
            // n = 7, score = 100
            //   eb6d                 | jmp                 0x6f
            //   8b8524fcffff         | mov                 eax, dword ptr [ebp - 0x3dc]
            //   83e801               | sub                 eax, 1
            //   898524fcffff         | mov                 dword ptr [ebp - 0x3dc], eax
            //   8b8d2cfcffff         | mov                 ecx, dword ptr [ebp - 0x3d4]
            //   2b8d24fcffff         | sub                 ecx, dword ptr [ebp - 0x3dc]
            //   81e9fe866a18         | sub                 ecx, 0x186a86fe

        $sequence_5 = { c785c8fbffff10022541 eb17 8b85c8fbffff 257c0f8daf 3385d4fbffff 8985c8fbffff eb12 }
            // n = 7, score = 100
            //   c785c8fbffff10022541     | mov    dword ptr [ebp - 0x438], 0x41250210
            //   eb17                 | jmp                 0x19
            //   8b85c8fbffff         | mov                 eax, dword ptr [ebp - 0x438]
            //   257c0f8daf           | and                 eax, 0xaf8d0f7c
            //   3385d4fbffff         | xor                 eax, dword ptr [ebp - 0x42c]
            //   8985c8fbffff         | mov                 dword ptr [ebp - 0x438], eax
            //   eb12                 | jmp                 0x14

        $sequence_6 = { 50 8b4dec 51 e8???????? 83c410 c785ecfeffffd3fc6e5c c785d8feffff96cc77bf }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8b4dec               | mov                 ecx, dword ptr [ebp - 0x14]
            //   51                   | push                ecx
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   c785ecfeffffd3fc6e5c     | mov    dword ptr [ebp - 0x114], 0x5c6efcd3
            //   c785d8feffff96cc77bf     | mov    dword ptr [ebp - 0x128], 0xbf77cc96

        $sequence_7 = { c3 8bff 55 8bec 8b4508 56 8d34c590144400 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8d34c590144400       | lea                 esi, [eax*8 + 0x441490]

        $sequence_8 = { 33c0 81fa1b890667 0f9fc0 8b4dbc c1e105 034dbc 0bc1 }
            // n = 7, score = 100
            //   33c0                 | xor                 eax, eax
            //   81fa1b890667         | cmp                 edx, 0x6706891b
            //   0f9fc0               | setg                al
            //   8b4dbc               | mov                 ecx, dword ptr [ebp - 0x44]
            //   c1e105               | shl                 ecx, 5
            //   034dbc               | add                 ecx, dword ptr [ebp - 0x44]
            //   0bc1                 | or                  eax, ecx

        $sequence_9 = { baae6eb9a8 2b9520eaffff 8b8520eaffff 8b8d20eaffff 83e901 898d20eaffff 3bd0 }
            // n = 7, score = 100
            //   baae6eb9a8           | mov                 edx, 0xa8b96eae
            //   2b9520eaffff         | sub                 edx, dword ptr [ebp - 0x15e0]
            //   8b8520eaffff         | mov                 eax, dword ptr [ebp - 0x15e0]
            //   8b8d20eaffff         | mov                 ecx, dword ptr [ebp - 0x15e0]
            //   83e901               | sub                 ecx, 1
            //   898d20eaffff         | mov                 dword ptr [ebp - 0x15e0], ecx
            //   3bd0                 | cmp                 edx, eax

    condition:
        7 of them and filesize < 573440
}