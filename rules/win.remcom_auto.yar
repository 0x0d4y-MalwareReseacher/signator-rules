rule win_remcom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.remcom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcom"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 75f2 e8???????? 8b0d???????? 51 ff15???????? 5e }
            // n = 6, score = 100
            //   75f2                 | jne                 0xfffffff4
            //   e8????????           |                     
            //   8b0d????????         |                     
            //   51                   | push                ecx
            //   ff15????????         |                     
            //   5e                   | pop                 esi

        $sequence_1 = { 895df0 891f ff15???????? 8d4de8 51 6a08 50 }
            // n = 7, score = 100
            //   895df0               | mov                 dword ptr [ebp - 0x10], ebx
            //   891f                 | mov                 dword ptr [edi], ebx
            //   ff15????????         |                     
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   51                   | push                ecx
            //   6a08                 | push                8
            //   50                   | push                eax

        $sequence_2 = { c745f800000000 c745fc01000000 e8???????? 83c404 837dfc00 750d }
            // n = 6, score = 100
            //   c745f800000000       | mov                 dword ptr [ebp - 8], 0
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   837dfc00             | cmp                 dword ptr [ebp - 4], 0
            //   750d                 | jne                 0xf

        $sequence_3 = { e9???????? 8b55ec 8b45e8 8d4dec 51 }
            // n = 5, score = 100
            //   e9????????           |                     
            //   8b55ec               | mov                 edx, dword ptr [ebp - 0x14]
            //   8b45e8               | mov                 eax, dword ptr [ebp - 0x18]
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   51                   | push                ecx

        $sequence_4 = { 897de0 ff15???????? 33db 50 53 68ffff1f00 895de8 }
            // n = 7, score = 100
            //   897de0               | mov                 dword ptr [ebp - 0x20], edi
            //   ff15????????         |                     
            //   33db                 | xor                 ebx, ebx
            //   50                   | push                eax
            //   53                   | push                ebx
            //   68ffff1f00           | push                0x1fffff
            //   895de8               | mov                 dword ptr [ebp - 0x18], ebx

        $sequence_5 = { c3 8bff 55 8bec 8b4508 56 8d34c528e54000 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8bff                 | mov                 edi, edi
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   8d34c528e54000       | lea                 esi, [eax*8 + 0x40e528]

        $sequence_6 = { c1e006 030495e0fc4000 eb05 b8???????? }
            // n = 4, score = 100
            //   c1e006               | shl                 eax, 6
            //   030495e0fc4000       | add                 eax, dword ptr [edx*4 + 0x40fce0]
            //   eb05                 | jmp                 7
            //   b8????????           |                     

        $sequence_7 = { 8d4310 8d8974eb4000 5a 668b31 41 668930 41 }
            // n = 7, score = 100
            //   8d4310               | lea                 eax, [ebx + 0x10]
            //   8d8974eb4000         | lea                 ecx, [ecx + 0x40eb74]
            //   5a                   | pop                 edx
            //   668b31               | mov                 si, word ptr [ecx]
            //   41                   | inc                 ecx
            //   668930               | mov                 word ptr [eax], si
            //   41                   | inc                 ecx

        $sequence_8 = { c705????????01000000 a3???????? a3???????? 52 ff15???????? }
            // n = 5, score = 100
            //   c705????????01000000     |     
            //   a3????????           |                     
            //   a3????????           |                     
            //   52                   | push                edx
            //   ff15????????         |                     

        $sequence_9 = { 56 68ff010f00 68???????? 57 ff15???????? 8bf0 3bf3 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   68ff010f00           | push                0xf01ff
            //   68????????           |                     
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   3bf3                 | cmp                 esi, ebx

    condition:
        7 of them and filesize < 155648
}