rule win_remcom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.remcom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcom"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8985e0edffff ff15???????? 56 ff15???????? 56 ff15???????? 68???????? }
            // n = 7, score = 100
            //   8985e0edffff         | mov                 dword ptr [ebp - 0x1220], eax
            //   ff15????????         |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   68????????           |                     

        $sequence_1 = { 43 83c708 3b1e 72cc }
            // n = 4, score = 100
            //   43                   | inc                 ebx
            //   83c708               | add                 edi, 8
            //   3b1e                 | cmp                 ebx, dword ptr [esi]
            //   72cc                 | jb                  0xffffffce

        $sequence_2 = { 8935???????? ff15???????? 85c0 750a ff15???????? 5e }
            // n = 6, score = 100
            //   8935????????         |                     
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   750a                 | jne                 0xc
            //   ff15????????         |                     
            //   5e                   | pop                 esi

        $sequence_3 = { e9???????? 8b1d???????? 8d4ddc 51 6a00 6a00 6a00 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   8b1d????????         |                     
            //   8d4ddc               | lea                 ecx, [ebp - 0x24]
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0

        $sequence_4 = { c785f4feffff00000000 e8???????? 0fbe8600100000 83c40c 8d8e00100000 f7d8 1bc0 }
            // n = 7, score = 100
            //   c785f4feffff00000000     | mov    dword ptr [ebp - 0x10c], 0
            //   e8????????           |                     
            //   0fbe8600100000       | movsx               eax, byte ptr [esi + 0x1000]
            //   83c40c               | add                 esp, 0xc
            //   8d8e00100000         | lea                 ecx, [esi + 0x1000]
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax

        $sequence_5 = { 668b4c4310 66890c4578fb4000 40 ebe8 33c0 }
            // n = 5, score = 100
            //   668b4c4310           | mov                 cx, word ptr [ebx + eax*2 + 0x10]
            //   66890c4578fb4000     | mov                 word ptr [eax*2 + 0x40fb78], cx
            //   40                   | inc                 eax
            //   ebe8                 | jmp                 0xffffffea
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { 83c408 6a00 8d8dd8edffff 51 6a08 }
            // n = 5, score = 100
            //   83c408               | add                 esp, 8
            //   6a00                 | push                0
            //   8d8dd8edffff         | lea                 ecx, [ebp - 0x1228]
            //   51                   | push                ecx
            //   6a08                 | push                8

        $sequence_7 = { 56 57 33ff 8db760ec4000 ff36 }
            // n = 5, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   8db760ec4000         | lea                 esi, [edi + 0x40ec60]
            //   ff36                 | push                dword ptr [esi]

        $sequence_8 = { 8b4dfc 33cd e8???????? 8be5 5d c3 c785f4feffff01000000 }
            // n = 7, score = 100
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   33cd                 | xor                 ecx, ebp
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   c785f4feffff01000000     | mov    dword ptr [ebp - 0x10c], 1

        $sequence_9 = { 888868ea4000 40 ebe6 ff35???????? ff15???????? 85c0 }
            // n = 6, score = 100
            //   888868ea4000         | mov                 byte ptr [eax + 0x40ea68], cl
            //   40                   | inc                 eax
            //   ebe6                 | jmp                 0xffffffe8
            //   ff35????????         |                     
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

    condition:
        7 of them and filesize < 155648
}