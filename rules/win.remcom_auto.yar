rule win_remcom_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.remcom."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.remcom"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 56 ff15???????? 56 ff15???????? 68???????? ff15???????? 833d????????00 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   ff15????????         |                     
            //   56                   | push                esi
            //   ff15????????         |                     
            //   68????????           |                     
            //   ff15????????         |                     
            //   833d????????00       |                     

        $sequence_1 = { 68???????? a3???????? c705????????01000000 a3???????? }
            // n = 4, score = 100
            //   68????????           |                     
            //   a3????????           |                     
            //   c705????????01000000     |     
            //   a3????????           |                     

        $sequence_2 = { 74a5 6a00 56 ff15???????? 56 6a00 68???????? }
            // n = 7, score = 100
            //   74a5                 | je                  0xffffffa7
            //   6a00                 | push                0
            //   56                   | push                esi
            //   ff15????????         |                     
            //   56                   | push                esi
            //   6a00                 | push                0
            //   68????????           |                     

        $sequence_3 = { 897dfc 3b1cfd28e44000 7409 47 897dfc }
            // n = 5, score = 100
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   3b1cfd28e44000       | cmp                 ebx, dword ptr [edi*8 + 0x40e428]
            //   7409                 | je                  0xb
            //   47                   | inc                 edi
            //   897dfc               | mov                 dword ptr [ebp - 4], edi

        $sequence_4 = { 40 008891400023 d18a0688078a 46 018847018a46 }
            // n = 5, score = 100
            //   40                   | inc                 eax
            //   008891400023         | add                 byte ptr [eax + 0x23004091], cl
            //   d18a0688078a         | ror                 dword ptr [edx - 0x75f877fa], 1
            //   46                   | inc                 esi
            //   018847018a46         | add                 dword ptr [eax + 0x468a0147], ecx

        $sequence_5 = { 6a04 6a01 8d55f4 52 }
            // n = 4, score = 100
            //   6a04                 | push                4
            //   6a01                 | push                1
            //   8d55f4               | lea                 edx, [ebp - 0xc]
            //   52                   | push                edx

        $sequence_6 = { c1f804 59 898594fdffff 3bc1 0f87ad090000 ff24855b3f4000 838de8fdffffff }
            // n = 7, score = 100
            //   c1f804               | sar                 eax, 4
            //   59                   | pop                 ecx
            //   898594fdffff         | mov                 dword ptr [ebp - 0x26c], eax
            //   3bc1                 | cmp                 eax, ecx
            //   0f87ad090000         | ja                  0x9b3
            //   ff24855b3f4000       | jmp                 dword ptr [eax*4 + 0x403f5b]
            //   838de8fdffffff       | or                  dword ptr [ebp - 0x218], 0xffffffff

        $sequence_7 = { 8d3c8de0fc4000 8bf0 83e61f c1e606 8b0f 0fbe4c0e04 83e101 }
            // n = 7, score = 100
            //   8d3c8de0fc4000       | lea                 edi, [ecx*4 + 0x40fce0]
            //   8bf0                 | mov                 esi, eax
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   0fbe4c0e04           | movsx               ecx, byte ptr [esi + ecx + 4]
            //   83e101               | and                 ecx, 1

        $sequence_8 = { 83e01f 8bd1 c1fa05 c1e006 030495e0fc4000 eb05 b8???????? }
            // n = 7, score = 100
            //   83e01f               | and                 eax, 0x1f
            //   8bd1                 | mov                 edx, ecx
            //   c1fa05               | sar                 edx, 5
            //   c1e006               | shl                 eax, 6
            //   030495e0fc4000       | add                 eax, dword ptr [edx*4 + 0x40fce0]
            //   eb05                 | jmp                 7
            //   b8????????           |                     

        $sequence_9 = { 6a00 6a00 8d8df8feffff 51 6a00 ff15???????? }
            // n = 6, score = 100
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d8df8feffff         | lea                 ecx, [ebp - 0x108]
            //   51                   | push                ecx
            //   6a00                 | push                0
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 155648
}