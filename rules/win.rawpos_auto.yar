rule win_rawpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.rawpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rawpos"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7e04 33c0 eb56 f6451801 7442 eb24 8a19 }
            // n = 7, score = 100
            //   7e04                 | jle                 6
            //   33c0                 | xor                 eax, eax
            //   eb56                 | jmp                 0x58
            //   f6451801             | test                byte ptr [ebp + 0x18], 1
            //   7442                 | je                  0x44
            //   eb24                 | jmp                 0x26
            //   8a19                 | mov                 bl, byte ptr [ecx]

        $sequence_1 = { 8b4dc0 2b55c8 41 0fafd1 03fa e9???????? }
            // n = 6, score = 100
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]
            //   2b55c8               | sub                 edx, dword ptr [ebp - 0x38]
            //   41                   | inc                 ecx
            //   0fafd1               | imul                edx, ecx
            //   03fa                 | add                 edi, edx
            //   e9????????           |                     

        $sequence_2 = { 56 be???????? 8dbdf4feffff b941000000 f3a5 5e 56 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   be????????           |                     
            //   8dbdf4feffff         | lea                 edi, dword ptr [ebp - 0x10c]
            //   b941000000           | mov                 ecx, 0x41
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   5e                   | pop                 esi
            //   56                   | push                esi

        $sequence_3 = { 8b049df0034300 83f801 7443 85c0 7525 }
            // n = 5, score = 100
            //   8b049df0034300       | mov                 eax, dword ptr [ebx*4 + 0x4303f0]
            //   83f801               | cmp                 eax, 1
            //   7443                 | je                  0x45
            //   85c0                 | test                eax, eax
            //   7525                 | jne                 0x27

        $sequence_4 = { 33db 8a1a 03c3 83c0d0 }
            // n = 4, score = 100
            //   33db                 | xor                 ebx, ebx
            //   8a1a                 | mov                 bl, byte ptr [edx]
            //   03c3                 | add                 eax, ebx
            //   83c0d0               | add                 eax, -0x30

        $sequence_5 = { 7628 8b45f8 03c6 3bd8 721f 8b550c 8b4a08 }
            // n = 7, score = 100
            //   7628                 | jbe                 0x2a
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]
            //   03c6                 | add                 eax, esi
            //   3bd8                 | cmp                 ebx, eax
            //   721f                 | jb                  0x21
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8b4a08               | mov                 ecx, dword ptr [edx + 8]

        $sequence_6 = { e9???????? 33d2 8a5701 03d2 }
            // n = 4, score = 100
            //   e9????????           |                     
            //   33d2                 | xor                 edx, edx
            //   8a5701               | mov                 dl, byte ptr [edi + 1]
            //   03d2                 | add                 edx, edx

        $sequence_7 = { 56 51 8d45dc 50 8b55e0 83c202 52 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   51                   | push                ecx
            //   8d45dc               | lea                 eax, dword ptr [ebp - 0x24]
            //   50                   | push                eax
            //   8b55e0               | mov                 edx, dword ptr [ebp - 0x20]
            //   83c202               | add                 edx, 2
            //   52                   | push                edx

        $sequence_8 = { e9???????? 837b2400 7522 8b532c 4a 3bf2 720d }
            // n = 7, score = 100
            //   e9????????           |                     
            //   837b2400             | cmp                 dword ptr [ebx + 0x24], 0
            //   7522                 | jne                 0x24
            //   8b532c               | mov                 edx, dword ptr [ebx + 0x2c]
            //   4a                   | dec                 edx
            //   3bf2                 | cmp                 esi, edx
            //   720d                 | jb                  0xf

        $sequence_9 = { e9???????? 85db 0f8d2e010000 8b4520 f7db 8b5008 83c3fc }
            // n = 7, score = 100
            //   e9????????           |                     
            //   85db                 | test                ebx, ebx
            //   0f8d2e010000         | jge                 0x134
            //   8b4520               | mov                 eax, dword ptr [ebp + 0x20]
            //   f7db                 | neg                 ebx
            //   8b5008               | mov                 edx, dword ptr [eax + 8]
            //   83c3fc               | add                 ebx, -4

    condition:
        7 of them and filesize < 466944
}