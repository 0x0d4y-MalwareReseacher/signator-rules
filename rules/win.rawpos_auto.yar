rule win_rawpos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.rawpos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rawpos"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a00 6a00 8d4303 50 e8???????? 83c410 8bd0 }
            // n = 7, score = 100
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d4303               | lea                 eax, [ebx + 3]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c410               | add                 esp, 0x10
            //   8bd0                 | mov                 edx, eax

        $sequence_1 = { 740c 837d1c00 7510 837d2000 7e0a }
            // n = 5, score = 100
            //   740c                 | je                  0xe
            //   837d1c00             | cmp                 dword ptr [ebp + 0x1c], 0
            //   7510                 | jne                 0x12
            //   837d2000             | cmp                 dword ptr [ebp + 0x20], 0
            //   7e0a                 | jle                 0xc

        $sequence_2 = { 51 0fb745f0 0594f8ffff 50 e8???????? 83c41c }
            // n = 6, score = 100
            //   51                   | push                ecx
            //   0fb745f0             | movzx               eax, word ptr [ebp - 0x10]
            //   0594f8ffff           | add                 eax, 0xfffff894
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c41c               | add                 esp, 0x1c

        $sequence_3 = { 7e0a 66816312dfff 33c0 eb26 }
            // n = 4, score = 100
            //   7e0a                 | jle                 0xc
            //   66816312dfff         | and                 word ptr [ebx + 0x12], 0xffdf
            //   33c0                 | xor                 eax, eax
            //   eb26                 | jmp                 0x28

        $sequence_4 = { 8b4dc4 83e107 b201 d2e2 8b4dc4 85c9 }
            // n = 6, score = 100
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   83e107               | and                 ecx, 7
            //   b201                 | mov                 dl, 1
            //   d2e2                 | shl                 dl, cl
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   85c9                 | test                ecx, ecx

        $sequence_5 = { 43 e9???????? 43 33c0 8a03 03f0 40 }
            // n = 7, score = 100
            //   43                   | inc                 ebx
            //   e9????????           |                     
            //   43                   | inc                 ebx
            //   33c0                 | xor                 eax, eax
            //   8a03                 | mov                 al, byte ptr [ebx]
            //   03f0                 | add                 esi, eax
            //   40                   | inc                 eax

        $sequence_6 = { 7466 837d0800 7642 ffb49d54f0ffff 8d8550efffff 50 }
            // n = 6, score = 100
            //   7466                 | je                  0x68
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   7642                 | jbe                 0x44
            //   ffb49d54f0ffff       | push                dword ptr [ebp + ebx*4 - 0xfac]
            //   8d8550efffff         | lea                 eax, [ebp - 0x10b0]
            //   50                   | push                eax

        $sequence_7 = { 8a0e 33c0 8ac1 8b5310 }
            // n = 4, score = 100
            //   8a0e                 | mov                 cl, byte ptr [esi]
            //   33c0                 | xor                 eax, eax
            //   8ac1                 | mov                 al, cl
            //   8b5310               | mov                 edx, dword ptr [ebx + 0x10]

        $sequence_8 = { 0fbe8405e0feffff 23d0 0f95c2 83e201 3b55e8 7418 ff45c8 }
            // n = 7, score = 100
            //   0fbe8405e0feffff     | movsx               eax, byte ptr [ebp + eax - 0x120]
            //   23d0                 | and                 edx, eax
            //   0f95c2               | setne               dl
            //   83e201               | and                 edx, 1
            //   3b55e8               | cmp                 edx, dword ptr [ebp - 0x18]
            //   7418                 | je                  0x1a
            //   ff45c8               | inc                 dword ptr [ebp - 0x38]

        $sequence_9 = { 50 8b5514 52 56 8b4d0c 51 e8???????? }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8b5514               | mov                 edx, dword ptr [ebp + 0x14]
            //   52                   | push                edx
            //   56                   | push                esi
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   51                   | push                ecx
            //   e8????????           |                     

    condition:
        7 of them and filesize < 466944
}