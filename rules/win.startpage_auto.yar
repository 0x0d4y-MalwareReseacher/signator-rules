rule win_startpage_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.startpage."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.startpage"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4db8 e8???????? c645fc06 8d4dd8 837dec08 8d45b8 8d9534ffffff }
            // n = 7, score = 200
            //   8d4db8               | lea                 ecx, dword ptr [ebp - 0x48]
            //   e8????????           |                     
            //   c645fc06             | mov                 byte ptr [ebp - 4], 6
            //   8d4dd8               | lea                 ecx, dword ptr [ebp - 0x28]
            //   837dec08             | cmp                 dword ptr [ebp - 0x14], 8
            //   8d45b8               | lea                 eax, dword ptr [ebp - 0x48]
            //   8d9534ffffff         | lea                 edx, dword ptr [ebp - 0xcc]

        $sequence_1 = { cc 55 8bec 53 8bd9 33c0 8b4d08 }
            // n = 7, score = 200
            //   cc                   | int3                
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   53                   | push                ebx
            //   8bd9                 | mov                 ebx, ecx
            //   33c0                 | xor                 eax, eax
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_2 = { 8985dcfeffff 6a00 ba???????? c645fc19 8d8dd0feffff e8???????? 59 }
            // n = 7, score = 200
            //   8985dcfeffff         | mov                 dword ptr [ebp - 0x124], eax
            //   6a00                 | push                0
            //   ba????????           |                     
            //   c645fc19             | mov                 byte ptr [ebp - 4], 0x19
            //   8d8dd0feffff         | lea                 ecx, dword ptr [ebp - 0x130]
            //   e8????????           |                     
            //   59                   | pop                 ecx

        $sequence_3 = { 3b75ec 72c9 8b7df4 85db 0f8ede000000 8b07 }
            // n = 6, score = 200
            //   3b75ec               | cmp                 esi, dword ptr [ebp - 0x14]
            //   72c9                 | jb                  0xffffffcb
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]
            //   85db                 | test                ebx, ebx
            //   0f8ede000000         | jle                 0xe4
            //   8b07                 | mov                 eax, dword ptr [edi]

        $sequence_4 = { 760e 50 8d8de8deffff e8???????? eb2f 8db5ecdeffff 89b5e8deffff }
            // n = 7, score = 200
            //   760e                 | jbe                 0x10
            //   50                   | push                eax
            //   8d8de8deffff         | lea                 ecx, dword ptr [ebp - 0x2118]
            //   e8????????           |                     
            //   eb2f                 | jmp                 0x31
            //   8db5ecdeffff         | lea                 esi, dword ptr [ebp - 0x2114]
            //   89b5e8deffff         | mov                 dword ptr [ebp - 0x2118], esi

        $sequence_5 = { 50 ff76f4 56 ff7580 ff15???????? 57 ff7580 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   ff76f4               | push                dword ptr [esi - 0xc]
            //   56                   | push                esi
            //   ff7580               | push                dword ptr [ebp - 0x80]
            //   ff15????????         |                     
            //   57                   | push                edi
            //   ff7580               | push                dword ptr [ebp - 0x80]

        $sequence_6 = { ff5008 eb04 8b7c2414 85ff 780c 837b3c00 7539 }
            // n = 7, score = 200
            //   ff5008               | call                dword ptr [eax + 8]
            //   eb04                 | jmp                 6
            //   8b7c2414             | mov                 edi, dword ptr [esp + 0x14]
            //   85ff                 | test                edi, edi
            //   780c                 | js                  0xe
            //   837b3c00             | cmp                 dword ptr [ebx + 0x3c], 0
            //   7539                 | jne                 0x3b

        $sequence_7 = { 66390f 0f85a4faffff eb18 8d8dc4ddffff eb4a }
            // n = 5, score = 200
            //   66390f               | cmp                 word ptr [edi], cx
            //   0f85a4faffff         | jne                 0xfffffaaa
            //   eb18                 | jmp                 0x1a
            //   8d8dc4ddffff         | lea                 ecx, dword ptr [ebp - 0x223c]
            //   eb4a                 | jmp                 0x4c

        $sequence_8 = { 33c0 6a06 59 f3ab a1???????? 885e44 895e04 }
            // n = 7, score = 200
            //   33c0                 | xor                 eax, eax
            //   6a06                 | push                6
            //   59                   | pop                 ecx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   a1????????           |                     
            //   885e44               | mov                 byte ptr [esi + 0x44], bl
            //   895e04               | mov                 dword ptr [esi + 4], ebx

        $sequence_9 = { 8d5f1c 8b03 8b0b 8b40f4 8379fc01 }
            // n = 5, score = 200
            //   8d5f1c               | lea                 ebx, dword ptr [edi + 0x1c]
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8b0b                 | mov                 ecx, dword ptr [ebx]
            //   8b40f4               | mov                 eax, dword ptr [eax - 0xc]
            //   8379fc01             | cmp                 dword ptr [ecx - 4], 1

    condition:
        7 of them and filesize < 2277376
}