rule win_mokes_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.mokes."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mokes"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f20f58d8 f20f10442418 f20f594628 f20f58f4 f20f585f20 f20f11442418 f20f104708 }
            // n = 7, score = 400
            //   f20f58d8             | addsd               xmm3, xmm0
            //   f20f10442418         | movsd               xmm0, qword ptr [esp + 0x18]
            //   f20f594628           | mulsd               xmm0, qword ptr [esi + 0x28]
            //   f20f58f4             | addsd               xmm6, xmm4
            //   f20f585f20           | addsd               xmm3, qword ptr [edi + 0x20]
            //   f20f11442418         | movsd               qword ptr [esp + 0x18], xmm0
            //   f20f104708           | movsd               xmm0, qword ptr [edi + 8]

        $sequence_1 = { f20f58f8 f20f104618 f20f59c5 f20f59fd f20f58c1 f20f59c4 f20f58c2 }
            // n = 7, score = 400
            //   f20f58f8             | addsd               xmm7, xmm0
            //   f20f104618           | movsd               xmm0, qword ptr [esi + 0x18]
            //   f20f59c5             | mulsd               xmm0, xmm5
            //   f20f59fd             | mulsd               xmm7, xmm5
            //   f20f58c1             | addsd               xmm0, xmm1
            //   f20f59c4             | mulsd               xmm0, xmm4
            //   f20f58c2             | addsd               xmm0, xmm2

        $sequence_2 = { f20f114c2410 660f2fd0 8d0c24 f20f11442408 0f46c8 8d442410 f20f1001 }
            // n = 7, score = 400
            //   f20f114c2410         | movsd               qword ptr [esp + 0x10], xmm1
            //   660f2fd0             | comisd              xmm2, xmm0
            //   8d0c24               | lea                 ecx, [esp]
            //   f20f11442408         | movsd               qword ptr [esp + 8], xmm0
            //   0f46c8               | cmovbe              ecx, eax
            //   8d442410             | lea                 eax, [esp + 0x10]
            //   f20f1001             | movsd               xmm0, qword ptr [ecx]

        $sequence_3 = { ff742424 8d442438 50 f30f7f44243c e8???????? ff442428 89442420 }
            // n = 7, score = 400
            //   ff742424             | push                dword ptr [esp + 0x24]
            //   8d442438             | lea                 eax, [esp + 0x38]
            //   50                   | push                eax
            //   f30f7f44243c         | movdqu              xmmword ptr [esp + 0x3c], xmm0
            //   e8????????           |                     
            //   ff442428             | inc                 dword ptr [esp + 0x28]
            //   89442420             | mov                 dword ptr [esp + 0x20], eax

        $sequence_4 = { f30f7f06 c7461000000000 ff4304 85c9 7405 8b470c 8901 }
            // n = 7, score = 400
            //   f30f7f06             | movdqu              xmmword ptr [esi], xmm0
            //   c7461000000000       | mov                 dword ptr [esi + 0x10], 0
            //   ff4304               | inc                 dword ptr [ebx + 4]
            //   85c9                 | test                ecx, ecx
            //   7405                 | je                  7
            //   8b470c               | mov                 eax, dword ptr [edi + 0xc]
            //   8901                 | mov                 dword ptr [ecx], eax

        $sequence_5 = { ffd3 8b4508 8bc8 81e177770000 7412 50 8bd6 }
            // n = 7, score = 400
            //   ffd3                 | call                ebx
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   8bc8                 | mov                 ecx, eax
            //   81e177770000         | and                 ecx, 0x7777
            //   7412                 | je                  0x14
            //   50                   | push                eax
            //   8bd6                 | mov                 edx, esi

        $sequence_6 = { f30f1144241c 8b4510 f20f104c2418 8b4904 f20f1000 f20f105008 83791000 }
            // n = 7, score = 400
            //   f30f1144241c         | movss               dword ptr [esp + 0x1c], xmm0
            //   8b4510               | mov                 eax, dword ptr [ebp + 0x10]
            //   f20f104c2418         | movsd               xmm1, qword ptr [esp + 0x18]
            //   8b4904               | mov                 ecx, dword ptr [ecx + 4]
            //   f20f1000             | movsd               xmm0, qword ptr [eax]
            //   f20f105008           | movsd               xmm2, qword ptr [eax + 8]
            //   83791000             | cmp                 dword ptr [ecx + 0x10], 0

        $sequence_7 = { e8???????? 8d4c2430 c68424840000000a 51 8d4c2428 51 8bc8 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8d4c2430             | lea                 ecx, [esp + 0x30]
            //   c68424840000000a     | mov                 byte ptr [esp + 0x84], 0xa
            //   51                   | push                ecx
            //   8d4c2428             | lea                 ecx, [esp + 0x28]
            //   51                   | push                ecx
            //   8bc8                 | mov                 ecx, eax

        $sequence_8 = { ff712c ff7108 8b4924 52 83ec08 8ad3 e8???????? }
            // n = 7, score = 400
            //   ff712c               | push                dword ptr [ecx + 0x2c]
            //   ff7108               | push                dword ptr [ecx + 8]
            //   8b4924               | mov                 ecx, dword ptr [ecx + 0x24]
            //   52                   | push                edx
            //   83ec08               | sub                 esp, 8
            //   8ad3                 | mov                 dl, bl
            //   e8????????           |                     

        $sequence_9 = { f30f7f842494000000 8b11 ff7060 8d842498000000 50 8d44244c 50 }
            // n = 7, score = 400
            //   f30f7f842494000000     | movdqu    xmmword ptr [esp + 0x94], xmm0
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   ff7060               | push                dword ptr [eax + 0x60]
            //   8d842498000000       | lea                 eax, [esp + 0x98]
            //   50                   | push                eax
            //   8d44244c             | lea                 eax, [esp + 0x4c]
            //   50                   | push                eax

    condition:
        7 of them and filesize < 18505728
}