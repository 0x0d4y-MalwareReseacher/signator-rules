rule win_mokes_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.mokes."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.mokes"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { f20f58e5 660f2fd1 f20f1005???????? 660f28da f20f5cdd f20f116c2408 7304 }
            // n = 7, score = 400
            //   f20f58e5             | addsd               xmm4, xmm5
            //   660f2fd1             | comisd              xmm2, xmm1
            //   f20f1005????????     |                     
            //   660f28da             | movapd              xmm3, xmm2
            //   f20f5cdd             | subsd               xmm3, xmm5
            //   f20f116c2408         | movsd               qword ptr [esp + 8], xmm5
            //   7304                 | jae                 6

        $sequence_1 = { f780f800000000000010 7407 8bcd e8???????? 8b4704 8bcf c7804801000000000000 }
            // n = 7, score = 400
            //   f780f800000000000010     | test    dword ptr [eax + 0xf8], 0x10000000
            //   7407                 | je                  9
            //   8bcd                 | mov                 ecx, ebp
            //   e8????????           |                     
            //   8b4704               | mov                 eax, dword ptr [edi + 4]
            //   8bcf                 | mov                 ecx, edi
            //   c7804801000000000000     | mov    dword ptr [eax + 0x148], 0

        $sequence_2 = { e8???????? c644243405 8b30 89742418 c700???????? c644243400 8b442444 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   c644243405           | mov                 byte ptr [esp + 0x34], 5
            //   8b30                 | mov                 esi, dword ptr [eax]
            //   89742418             | mov                 dword ptr [esp + 0x18], esi
            //   c700????????         |                     
            //   c644243400           | mov                 byte ptr [esp + 0x34], 0
            //   8b442444             | mov                 eax, dword ptr [esp + 0x44]

        $sequence_3 = { ff5238 8b4d10 41 3bc8 7521 8d8f68010000 e8???????? }
            // n = 7, score = 400
            //   ff5238               | call                dword ptr [edx + 0x38]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   41                   | inc                 ecx
            //   3bc8                 | cmp                 ecx, eax
            //   7521                 | jne                 0x23
            //   8d8f68010000         | lea                 ecx, dword ptr [edi + 0x168]
            //   e8????????           |                     

        $sequence_4 = { f20f105c2410 8b4c2408 f20f59cb 8b54240c f20f59c4 f20f58c8 f20f584e20 }
            // n = 7, score = 400
            //   f20f105c2410         | movsd               xmm3, qword ptr [esp + 0x10]
            //   8b4c2408             | mov                 ecx, dword ptr [esp + 8]
            //   f20f59cb             | mulsd               xmm1, xmm3
            //   8b54240c             | mov                 edx, dword ptr [esp + 0xc]
            //   f20f59c4             | mulsd               xmm0, xmm4
            //   f20f58c8             | addsd               xmm1, xmm0
            //   f20f584e20           | addsd               xmm1, qword ptr [esi + 0x20]

        $sequence_5 = { ffd0 83c408 a1???????? 85c0 7409 53 ff7738 }
            // n = 7, score = 400
            //   ffd0                 | call                eax
            //   83c408               | add                 esp, 8
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   53                   | push                ebx
            //   ff7738               | push                dword ptr [edi + 0x38]

        $sequence_6 = { e8???????? 8b8f9c000000 8b84249c000000 83c104 48 99 52 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8b8f9c000000         | mov                 ecx, dword ptr [edi + 0x9c]
            //   8b84249c000000       | mov                 eax, dword ptr [esp + 0x9c]
            //   83c104               | add                 ecx, 4
            //   48                   | dec                 eax
            //   99                   | cdq                 
            //   52                   | push                edx

        $sequence_7 = { f30f10842490000000 f30f11442440 0f57c0 660f11842484010000 660f11842494010000 e8???????? 8b4f04 }
            // n = 7, score = 400
            //   f30f10842490000000     | movss    xmm0, dword ptr [esp + 0x90]
            //   f30f11442440         | movss               dword ptr [esp + 0x40], xmm0
            //   0f57c0               | xorps               xmm0, xmm0
            //   660f11842484010000     | movupd    xmmword ptr [esp + 0x184], xmm0
            //   660f11842494010000     | movupd    xmmword ptr [esp + 0x194], xmm0
            //   e8????????           |                     
            //   8b4f04               | mov                 ecx, dword ptr [edi + 4]

        $sequence_8 = { e8???????? 8be5 5d c3 660f107c2430 0f57c0 0f57f6 }
            // n = 7, score = 400
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   660f107c2430         | movupd              xmm7, xmmword ptr [esp + 0x30]
            //   0f57c0               | xorps               xmm0, xmm0
            //   0f57f6               | xorps               xmm6, xmm6

        $sequence_9 = { eb02 33c0 8b4014 8b4010 8944241c 8b4718 85c0 }
            // n = 7, score = 400
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   8b4014               | mov                 eax, dword ptr [eax + 0x14]
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]
            //   8944241c             | mov                 dword ptr [esp + 0x1c], eax
            //   8b4718               | mov                 eax, dword ptr [edi + 0x18]
            //   85c0                 | test                eax, eax

    condition:
        7 of them and filesize < 18505728
}