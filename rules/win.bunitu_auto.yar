rule win_bunitu_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.bunitu."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.bunitu"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 0bc0 7415 40 7412 48 50 }
            // n = 7, score = 1300
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax
            //   7415                 | je                  0x17
            //   40                   | inc                 eax
            //   7412                 | je                  0x14
            //   48                   | dec                 eax
            //   50                   | push                eax

        $sequence_1 = { 6a00 68bf0a0000 ff15???????? 33c0 40 40 50 }
            // n = 7, score = 1300
            //   6a00                 | push                0
            //   68bf0a0000           | push                0xabf
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax
            //   40                   | inc                 eax
            //   40                   | inc                 eax
            //   50                   | push                eax

        $sequence_2 = { b968080000 f3aa 5f 8b4508 }
            // n = 4, score = 1300
            //   b968080000           | mov                 ecx, 0x868
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   5f                   | pop                 edi
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_3 = { ff750c ff7508 ff15???????? 59 5d 5a }
            // n = 6, score = 1300
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff15????????         |                     
            //   59                   | pop                 ecx
            //   5d                   | pop                 ebp
            //   5a                   | pop                 edx

        $sequence_4 = { ffb524fdffff e8???????? eb12 6a08 68???????? }
            // n = 5, score = 1300
            //   ffb524fdffff         | push                dword ptr [ebp - 0x2dc]
            //   e8????????           |                     
            //   eb12                 | jmp                 0x14
            //   6a08                 | push                8
            //   68????????           |                     

        $sequence_5 = { 8d953cfeffff b9???????? 52 6800000100 }
            // n = 4, score = 1300
            //   8d953cfeffff         | lea                 edx, [ebp - 0x1c4]
            //   b9????????           |                     
            //   52                   | push                edx
            //   6800000100           | push                0x10000

        $sequence_6 = { bf04000000 8b9d44feffff 56 53 ffb530feffff e8???????? }
            // n = 6, score = 1300
            //   bf04000000           | mov                 edi, 4
            //   8b9d44feffff         | mov                 ebx, dword ptr [ebp - 0x1bc]
            //   56                   | push                esi
            //   53                   | push                ebx
            //   ffb530feffff         | push                dword ptr [ebp - 0x1d0]
            //   e8????????           |                     

        $sequence_7 = { 8b7d08 8b750c 8b4d10 49 ac 3c00 7405 }
            // n = 7, score = 1300
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   8b750c               | mov                 esi, dword ptr [ebp + 0xc]
            //   8b4d10               | mov                 ecx, dword ptr [ebp + 0x10]
            //   49                   | dec                 ecx
            //   ac                   | lodsb               al, byte ptr [esi]
            //   3c00                 | cmp                 al, 0
            //   7405                 | je                  7

        $sequence_8 = { 5e 8d953cfeffff b9???????? 52 6800000100 }
            // n = 5, score = 1300
            //   5e                   | pop                 esi
            //   8d953cfeffff         | lea                 edx, [ebp - 0x1c4]
            //   b9????????           |                     
            //   52                   | push                edx
            //   6800000100           | push                0x10000

        $sequence_9 = { 50 ff75ec e8???????? 0bc0 7e18 50 }
            // n = 6, score = 1300
            //   50                   | push                eax
            //   ff75ec               | push                dword ptr [ebp - 0x14]
            //   e8????????           |                     
            //   0bc0                 | or                  eax, eax
            //   7e18                 | jle                 0x1a
            //   50                   | push                eax

    condition:
        7 of them and filesize < 221184
}