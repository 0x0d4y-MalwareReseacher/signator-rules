rule win_alureon_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.alureon."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.alureon"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33c9 c1e808 66c745260a12 c7454040000000 88454b 48 8d4520 }
            // n = 7, score = 200
            //   33c9                 | xor                 ecx, ecx
            //   c1e808               | shr                 eax, 8
            //   66c745260a12         | mov                 word ptr [ebp + 0x26], 0x120a
            //   c7454040000000       | mov                 dword ptr [ebp + 0x40], 0x40
            //   88454b               | mov                 byte ptr [ebp + 0x4b], al
            //   48                   | dec                 eax
            //   8d4520               | lea                 eax, [ebp + 0x20]

        $sequence_1 = { 3912 0f84ab000000 48 8bfa 48 63463c 4c }
            // n = 7, score = 200
            //   3912                 | cmp                 dword ptr [edx], edx
            //   0f84ab000000         | je                  0xb1
            //   48                   | dec                 eax
            //   8bfa                 | mov                 edi, edx
            //   48                   | dec                 eax
            //   63463c               | arpl                word ptr [esi + 0x3c], ax
            //   4c                   | dec                 esp

        $sequence_2 = { 8bfb 44 2b6330 8b0a 48 }
            // n = 5, score = 200
            //   8bfb                 | mov                 edi, ebx
            //   44                   | inc                 esp
            //   2b6330               | sub                 esp, dword ptr [ebx + 0x30]
            //   8b0a                 | mov                 ecx, dword ptr [edx]
            //   48                   | dec                 eax

        $sequence_3 = { 48 03c6 48 89442420 }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   03c6                 | add                 eax, esi
            //   48                   | dec                 eax
            //   89442420             | mov                 dword ptr [esp + 0x20], eax

        $sequence_4 = { 48 83c702 49 ffca }
            // n = 4, score = 200
            //   48                   | dec                 eax
            //   83c702               | add                 edi, 2
            //   49                   | dec                 ecx
            //   ffca                 | dec                 edx

        $sequence_5 = { 8a4001 88450b 3a4101 750f 8345f802 83c102 }
            // n = 6, score = 200
            //   8a4001               | mov                 al, byte ptr [eax + 1]
            //   88450b               | mov                 byte ptr [ebp + 0xb], al
            //   3a4101               | cmp                 al, byte ptr [ecx + 1]
            //   750f                 | jne                 0x11
            //   8345f802             | add                 dword ptr [ebp - 8], 2
            //   83c102               | add                 ecx, 2

        $sequence_6 = { 8b81b0000000 85c0 7460 41 8bb1b4000000 49 }
            // n = 6, score = 200
            //   8b81b0000000         | mov                 eax, dword ptr [ecx + 0xb0]
            //   85c0                 | test                eax, eax
            //   7460                 | je                  0x62
            //   41                   | inc                 ecx
            //   8bb1b4000000         | mov                 esi, dword ptr [ecx + 0xb4]
            //   49                   | dec                 ecx

        $sequence_7 = { 89442414 85c0 7517 0fb74606 47 }
            // n = 5, score = 200
            //   89442414             | mov                 dword ptr [esp + 0x14], eax
            //   85c0                 | test                eax, eax
            //   7517                 | jne                 0x19
            //   0fb74606             | movzx               eax, word ptr [esi + 6]
            //   47                   | inc                 edi

        $sequence_8 = { 40 84d2 75f9 ff75a8 2b7dfc 2bc1 }
            // n = 6, score = 100
            //   40                   | inc                 eax
            //   84d2                 | test                dl, dl
            //   75f9                 | jne                 0xfffffffb
            //   ff75a8               | push                dword ptr [ebp - 0x58]
            //   2b7dfc               | sub                 edi, dword ptr [ebp - 4]
            //   2bc1                 | sub                 eax, ecx

        $sequence_9 = { be04010000 56 8d8424e4000000 50 }
            // n = 4, score = 100
            //   be04010000           | mov                 esi, 0x104
            //   56                   | push                esi
            //   8d8424e4000000       | lea                 eax, [esp + 0xe4]
            //   50                   | push                eax

        $sequence_10 = { 56 6a08 56 57 ff15???????? 8b2d???????? }
            // n = 6, score = 100
            //   56                   | push                esi
            //   6a08                 | push                8
            //   56                   | push                esi
            //   57                   | push                edi
            //   ff15????????         |                     
            //   8b2d????????         |                     

        $sequence_11 = { 7cc0 eb32 8bc3 8d5001 8a08 }
            // n = 5, score = 100
            //   7cc0                 | jl                  0xffffffc2
            //   eb32                 | jmp                 0x34
            //   8bc3                 | mov                 eax, ebx
            //   8d5001               | lea                 edx, [eax + 1]
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_12 = { c645de31 c645df06 c645e006 c645e107 c645e213 c645e319 }
            // n = 6, score = 100
            //   c645de31             | mov                 byte ptr [ebp - 0x22], 0x31
            //   c645df06             | mov                 byte ptr [ebp - 0x21], 6
            //   c645e006             | mov                 byte ptr [ebp - 0x20], 6
            //   c645e107             | mov                 byte ptr [ebp - 0x1f], 7
            //   c645e213             | mov                 byte ptr [ebp - 0x1e], 0x13
            //   c645e319             | mov                 byte ptr [ebp - 0x1d], 0x19

        $sequence_13 = { 68???????? 8d8424ec000000 50 ff15???????? 8b35???????? 53 6880000000 }
            // n = 7, score = 100
            //   68????????           |                     
            //   8d8424ec000000       | lea                 eax, [esp + 0xec]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   8b35????????         |                     
            //   53                   | push                ebx
            //   6880000000           | push                0x80

        $sequence_14 = { 833d????????00 7423 56 be???????? 84db 7518 }
            // n = 6, score = 100
            //   833d????????00       |                     
            //   7423                 | je                  0x25
            //   56                   | push                esi
            //   be????????           |                     
            //   84db                 | test                bl, bl
            //   7518                 | jne                 0x1a

        $sequence_15 = { 75cf 53 53 57 ff15???????? }
            // n = 5, score = 100
            //   75cf                 | jne                 0xffffffd1
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   57                   | push                edi
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 278528
}