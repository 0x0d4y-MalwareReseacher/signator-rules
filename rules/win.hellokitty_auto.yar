rule win_hellokitty_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.hellokitty."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.hellokitty"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b820010000 eb24 837d0800 7404 85f6 7406 837d0c00 }
            // n = 7, score = 100
            //   b820010000           | mov                 eax, 0x120
            //   eb24                 | jmp                 0x26
            //   837d0800             | cmp                 dword ptr [ebp + 8], 0
            //   7404                 | je                  6
            //   85f6                 | test                esi, esi
            //   7406                 | je                  8
            //   837d0c00             | cmp                 dword ptr [ebp + 0xc], 0

        $sequence_1 = { 03f0 8bd1 8bc1 c1ca0d c1c00a 03f7 }
            // n = 6, score = 100
            //   03f0                 | add                 esi, eax
            //   8bd1                 | mov                 edx, ecx
            //   8bc1                 | mov                 eax, ecx
            //   c1ca0d               | ror                 edx, 0xd
            //   c1c00a               | rol                 eax, 0xa
            //   03f7                 | add                 esi, edi

        $sequence_2 = { 8bec 817d1000800200 8b4514 56 57 8bf9 }
            // n = 6, score = 100
            //   8bec                 | mov                 ebp, esp
            //   817d1000800200       | cmp                 dword ptr [ebp + 0x10], 0x28000
            //   8b4514               | mov                 eax, dword ptr [ebp + 0x14]
            //   56                   | push                esi
            //   57                   | push                edi
            //   8bf9                 | mov                 edi, ecx

        $sequence_3 = { 0f1145ec e8???????? 8b4508 83c40c 89873c010000 8b4718 c78738010000a08a4000 }
            // n = 7, score = 100
            //   0f1145ec             | movups              xmmword ptr [ebp - 0x14], xmm0
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c40c               | add                 esp, 0xc
            //   89873c010000         | mov                 dword ptr [edi + 0x13c], eax
            //   8b4718               | mov                 eax, dword ptr [edi + 0x18]
            //   c78738010000a08a4000     | mov    dword ptr [edi + 0x138], 0x408aa0

        $sequence_4 = { d1c0 8945b4 8bc3 33c2 894df4 33c6 c1c105 }
            // n = 7, score = 100
            //   d1c0                 | rol                 eax, 1
            //   8945b4               | mov                 dword ptr [ebp - 0x4c], eax
            //   8bc3                 | mov                 eax, ebx
            //   33c2                 | xor                 eax, edx
            //   894df4               | mov                 dword ptr [ebp - 0xc], ecx
            //   33c6                 | xor                 eax, esi
            //   c1c105               | rol                 ecx, 5

        $sequence_5 = { 8945d8 8945dc 8945e0 394508 0f84f4030000 8b5d14 85db }
            // n = 7, score = 100
            //   8945d8               | mov                 dword ptr [ebp - 0x28], eax
            //   8945dc               | mov                 dword ptr [ebp - 0x24], eax
            //   8945e0               | mov                 dword ptr [ebp - 0x20], eax
            //   394508               | cmp                 dword ptr [ebp + 8], eax
            //   0f84f4030000         | je                  0x3fa
            //   8b5d14               | mov                 ebx, dword ptr [ebp + 0x14]
            //   85db                 | test                ebx, ebx

        $sequence_6 = { 8b75f0 8bc7 c1c007 81c3dca9b05c c1c90b 33c8 8955a0 }
            // n = 7, score = 100
            //   8b75f0               | mov                 esi, dword ptr [ebp - 0x10]
            //   8bc7                 | mov                 eax, edi
            //   c1c007               | rol                 eax, 7
            //   81c3dca9b05c         | add                 ebx, 0x5cb0a9dc
            //   c1c90b               | ror                 ecx, 0xb
            //   33c8                 | xor                 ecx, eax
            //   8955a0               | mov                 dword ptr [ebp - 0x60], edx

        $sequence_7 = { ff75fc 51 8bce e8???????? 5f }
            // n = 5, score = 100
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     
            //   5f                   | pop                 edi

        $sequence_8 = { e8???????? 59 56 68???????? 51 51 e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   56                   | push                esi
            //   68????????           |                     
            //   51                   | push                ecx
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_9 = { 88463d 8a464b 88463c 8a464c 88463b 8a464d 88463a }
            // n = 7, score = 100
            //   88463d               | mov                 byte ptr [esi + 0x3d], al
            //   8a464b               | mov                 al, byte ptr [esi + 0x4b]
            //   88463c               | mov                 byte ptr [esi + 0x3c], al
            //   8a464c               | mov                 al, byte ptr [esi + 0x4c]
            //   88463b               | mov                 byte ptr [esi + 0x3b], al
            //   8a464d               | mov                 al, byte ptr [esi + 0x4d]
            //   88463a               | mov                 byte ptr [esi + 0x3a], al

    condition:
        7 of them and filesize < 319488
}