rule win_concealment_troy_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.concealment_troy."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.concealment_troy"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { e8???????? 56 8d4c2430 68???????? }
            // n = 4, score = 100
            //   e8????????           |                     
            //   56                   | push                esi
            //   8d4c2430             | lea                 ecx, [esp + 0x30]
            //   68????????           |                     

        $sequence_1 = { 56 57 b900000000 8b7508 0fb68600010000 0fb69e01010000 33d2 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   57                   | push                edi
            //   b900000000           | mov                 ecx, 0
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   0fb68600010000       | movzx               eax, byte ptr [esi + 0x100]
            //   0fb69e01010000       | movzx               ebx, byte ptr [esi + 0x101]
            //   33d2                 | xor                 edx, edx

        $sequence_2 = { e8???????? 8d542420 8a08 880a 40 42 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   880a                 | mov                 byte ptr [edx], cl
            //   40                   | inc                 eax
            //   42                   | inc                 edx

        $sequence_3 = { 50 e8???????? 83c418 8d942458010000 e8???????? 8d542420 8a08 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c418               | add                 esp, 0x18
            //   8d942458010000       | lea                 edx, [esp + 0x158]
            //   e8????????           |                     
            //   8d542420             | lea                 edx, [esp + 0x20]
            //   8a08                 | mov                 cl, byte ptr [eax]

        $sequence_4 = { 59 85c0 7456 8b4de0 8d0c8da0774100 8901 8305????????20 }
            // n = 7, score = 100
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7456                 | je                  0x58
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   8d0c8da0774100       | lea                 ecx, [ecx*4 + 0x4177a0]
            //   8901                 | mov                 dword ptr [ecx], eax
            //   8305????????20       |                     

        $sequence_5 = { 7525 57 ff15???????? 53 ff15???????? 33c0 }
            // n = 6, score = 100
            //   7525                 | jne                 0x27
            //   57                   | push                edi
            //   ff15????????         |                     
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_6 = { 53 52 885c2424 e8???????? 83c40c 6803010000 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   52                   | push                edx
            //   885c2424             | mov                 byte ptr [esp + 0x24], bl
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   6803010000           | push                0x103

        $sequence_7 = { ff34c518554100 ff15???????? 5d c3 }
            // n = 4, score = 100
            //   ff34c518554100       | push                dword ptr [eax*8 + 0x415518]
            //   ff15????????         |                     
            //   5d                   | pop                 ebp
            //   c3                   | ret                 

        $sequence_8 = { 8d4c2428 33c0 33f6 8d7901 8d642400 8a11 }
            // n = 6, score = 100
            //   8d4c2428             | lea                 ecx, [esp + 0x28]
            //   33c0                 | xor                 eax, eax
            //   33f6                 | xor                 esi, esi
            //   8d7901               | lea                 edi, [ecx + 1]
            //   8d642400             | lea                 esp, [esp]
            //   8a11                 | mov                 dl, byte ptr [ecx]

        $sequence_9 = { e8???????? 8be5 5d c3 8b4c2414 83c107 68???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp
            //   5d                   | pop                 ebp
            //   c3                   | ret                 
            //   8b4c2414             | mov                 ecx, dword ptr [esp + 0x14]
            //   83c107               | add                 ecx, 7
            //   68????????           |                     

    condition:
        7 of them and filesize < 229376
}