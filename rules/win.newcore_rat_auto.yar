rule win_newcore_rat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.newcore_rat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.newcore_rat"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d442408 64a300000000 8b742418 8bc6 e8???????? 33c0 89442410 }
            // n = 7, score = 100
            //   8d442408             | lea                 eax, dword ptr [esp + 8]
            //   64a300000000         | mov                 dword ptr fs:[0], eax
            //   8b742418             | mov                 esi, dword ptr [esp + 0x18]
            //   8bc6                 | mov                 eax, esi
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   89442410             | mov                 dword ptr [esp + 0x10], eax

        $sequence_1 = { ffd0 8b5500 8b5238 6830020000 8d442458 50 8bcd }
            // n = 7, score = 100
            //   ffd0                 | call                eax
            //   8b5500               | mov                 edx, dword ptr [ebp]
            //   8b5238               | mov                 edx, dword ptr [edx + 0x38]
            //   6830020000           | push                0x230
            //   8d442458             | lea                 eax, dword ptr [esp + 0x58]
            //   50                   | push                eax
            //   8bcd                 | mov                 ecx, ebp

        $sequence_2 = { 88442446 8bc1 83f809 7e04 }
            // n = 4, score = 100
            //   88442446             | mov                 byte ptr [esp + 0x46], al
            //   8bc1                 | mov                 eax, ecx
            //   83f809               | cmp                 eax, 9
            //   7e04                 | jle                 6

        $sequence_3 = { 88442445 8bc1 c1e804 83f809 7e04 0437 }
            // n = 6, score = 100
            //   88442445             | mov                 byte ptr [esp + 0x45], al
            //   8bc1                 | mov                 eax, ecx
            //   c1e804               | shr                 eax, 4
            //   83f809               | cmp                 eax, 9
            //   7e04                 | jle                 6
            //   0437                 | add                 al, 0x37

        $sequence_4 = { 89442445 89442449 8944244d 89442451 6689442455 88442457 8bc1 }
            // n = 7, score = 100
            //   89442445             | mov                 dword ptr [esp + 0x45], eax
            //   89442449             | mov                 dword ptr [esp + 0x49], eax
            //   8944244d             | mov                 dword ptr [esp + 0x4d], eax
            //   89442451             | mov                 dword ptr [esp + 0x51], eax
            //   6689442455           | mov                 word ptr [esp + 0x55], ax
            //   88442457             | mov                 byte ptr [esp + 0x57], al
            //   8bc1                 | mov                 eax, ecx

        $sequence_5 = { 8a08 40 84c9 75f9 2bc2 0f8417050000 8bac24c8090000 }
            // n = 7, score = 100
            //   8a08                 | mov                 cl, byte ptr [eax]
            //   40                   | inc                 eax
            //   84c9                 | test                cl, cl
            //   75f9                 | jne                 0xfffffffb
            //   2bc2                 | sub                 eax, edx
            //   0f8417050000         | je                  0x51d
            //   8bac24c8090000       | mov                 ebp, dword ptr [esp + 0x9c8]

        $sequence_6 = { 85c0 7409 50 e8???????? 83c404 8b866c300000 85c0 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b866c300000         | mov                 eax, dword ptr [esi + 0x306c]
            //   85c0                 | test                eax, eax

        $sequence_7 = { c1f905 8b0c8dc0cd0310 83e61f c1e606 89040e 8bc3 }
            // n = 6, score = 100
            //   c1f905               | sar                 ecx, 5
            //   8b0c8dc0cd0310       | mov                 ecx, dword ptr [ecx*4 + 0x1003cdc0]
            //   83e61f               | and                 esi, 0x1f
            //   c1e606               | shl                 esi, 6
            //   89040e               | mov                 dword ptr [esi + ecx], eax
            //   8bc3                 | mov                 eax, ebx

        $sequence_8 = { 85c0 7409 50 e8???????? 83c404 8b866c300000 }
            // n = 6, score = 100
            //   85c0                 | test                eax, eax
            //   7409                 | je                  0xb
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   8b866c300000         | mov                 eax, dword ptr [esi + 0x306c]

        $sequence_9 = { 33d2 8954240c 8b8758300000 8a545450 301408 }
            // n = 5, score = 100
            //   33d2                 | xor                 edx, edx
            //   8954240c             | mov                 dword ptr [esp + 0xc], edx
            //   8b8758300000         | mov                 eax, dword ptr [edi + 0x3058]
            //   8a545450             | mov                 dl, byte ptr [esp + edx*2 + 0x50]
            //   301408               | xor                 byte ptr [eax + ecx], dl

    condition:
        7 of them and filesize < 581632
}