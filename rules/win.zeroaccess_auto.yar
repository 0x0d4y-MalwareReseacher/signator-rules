rule win_zeroaccess_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.zeroaccess."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.zeroaccess"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 85c0 7408 ff15???????? eb02 }
            // n = 4, score = 300
            //   85c0                 | test                eax, eax
            //   7408                 | je                  0xa
            //   ff15????????         |                     
            //   eb02                 | jmp                 4

        $sequence_1 = { 45 33c0 48 83c9ff c744242804000000 48 }
            // n = 6, score = 200
            //   45                   | inc                 ebp
            //   33c0                 | xor                 eax, eax
            //   48                   | dec                 eax
            //   83c9ff               | or                  ecx, 0xffffffff
            //   c744242804000000     | mov                 dword ptr [esp + 0x28], 4
            //   48                   | dec                 eax

        $sequence_2 = { 6a02 68???????? ff75f8 ff15???????? }
            // n = 4, score = 200
            //   6a02                 | push                2
            //   68????????           |                     
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff15????????         |                     

        $sequence_3 = { 740c bf03000040 eb05 bf010000c0 }
            // n = 4, score = 200
            //   740c                 | je                  0xe
            //   bf03000040           | mov                 edi, 0x40000003
            //   eb05                 | jmp                 7
            //   bf010000c0           | mov                 edi, 0xc0000001

        $sequence_4 = { 6a10 68???????? 68060000c8 ff7308 ff15???????? }
            // n = 5, score = 200
            //   6a10                 | push                0x10
            //   68????????           |                     
            //   68060000c8           | push                0xc8000006
            //   ff7308               | push                dword ptr [ebx + 8]
            //   ff15????????         |                     

        $sequence_5 = { 68???????? 50 8d460c 50 ff15???????? 85c0 }
            // n = 6, score = 200
            //   68????????           |                     
            //   50                   | push                eax
            //   8d460c               | lea                 eax, [esi + 0xc]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax

        $sequence_6 = { 56 8bf1 8d4e08 e8???????? f644240801 740c }
            // n = 6, score = 200
            //   56                   | push                esi
            //   8bf1                 | mov                 esi, ecx
            //   8d4e08               | lea                 ecx, [esi + 8]
            //   e8????????           |                     
            //   f644240801           | test                byte ptr [esp + 8], 1
            //   740c                 | je                  0xe

        $sequence_7 = { 50 6a01 8d45f4 50 ff7308 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   6a01                 | push                1
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   50                   | push                eax
            //   ff7308               | push                dword ptr [ebx + 8]

        $sequence_8 = { 3bc1 7604 83c8ff c3 }
            // n = 4, score = 200
            //   3bc1                 | cmp                 eax, ecx
            //   7604                 | jbe                 6
            //   83c8ff               | or                  eax, 0xffffffff
            //   c3                   | ret                 

        $sequence_9 = { 50 68???????? 6889001200 8d45fc 50 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   68????????           |                     
            //   6889001200           | push                0x120089
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax

        $sequence_10 = { ff15???????? 85c0 7407 b8e3030000 }
            // n = 4, score = 200
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   b8e3030000           | mov                 eax, 0x3e3

        $sequence_11 = { 85c0 74cb 48 8b01 48 8b542458 ff5030 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   74cb                 | je                  0xffffffcd
            //   48                   | dec                 eax
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   48                   | dec                 eax
            //   8b542458             | mov                 edx, dword ptr [esp + 0x58]
            //   ff5030               | call                dword ptr [eax + 0x30]

        $sequence_12 = { c3 48 8b4b28 48 8b5310 }
            // n = 5, score = 100
            //   c3                   | ret                 
            //   48                   | dec                 eax
            //   8b4b28               | mov                 ecx, dword ptr [ebx + 0x28]
            //   48                   | dec                 eax
            //   8b5310               | mov                 edx, dword ptr [ebx + 0x10]

        $sequence_13 = { c744243000100000 e9???????? b801000000 48 8b9df0000000 }
            // n = 5, score = 100
            //   c744243000100000     | mov                 dword ptr [esp + 0x30], 0x1000
            //   e9????????           |                     
            //   b801000000           | mov                 eax, 1
            //   48                   | dec                 eax
            //   8b9df0000000         | mov                 ebx, dword ptr [ebp + 0xf0]

    condition:
        7 of them and filesize < 172032
}