rule win_helauto_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.helauto."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.helauto"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 52 8d8598fbffff 68???????? 50 }
            // n = 4, score = 100
            //   52                   | push                edx
            //   8d8598fbffff         | lea                 eax, dword ptr [ebp - 0x468]
            //   68????????           |                     
            //   50                   | push                eax

        $sequence_1 = { 50 ffd3 56 8d85f4feffff ff7704 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ffd3                 | call                ebx
            //   56                   | push                esi
            //   8d85f4feffff         | lea                 eax, dword ptr [ebp - 0x10c]
            //   ff7704               | push                dword ptr [edi + 4]

        $sequence_2 = { 66ab aa 8d85a8f8ffff 895df8 50 }
            // n = 5, score = 100
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8d85a8f8ffff         | lea                 eax, dword ptr [ebp - 0x758]
            //   895df8               | mov                 dword ptr [ebp - 8], ebx
            //   50                   | push                eax

        $sequence_3 = { ff7510 e8???????? 8b4518 83c40c 8938 }
            // n = 5, score = 100
            //   ff7510               | push                dword ptr [ebp + 0x10]
            //   e8????????           |                     
            //   8b4518               | mov                 eax, dword ptr [ebp + 0x18]
            //   83c40c               | add                 esp, 0xc
            //   8938                 | mov                 dword ptr [eax], edi

        $sequence_4 = { 50 ff75fc e8???????? 8d85a8f3ffff 50 ff15???????? 69c060ea0000 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   e8????????           |                     
            //   8d85a8f3ffff         | lea                 eax, dword ptr [ebp - 0xc58]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   69c060ea0000         | imul                eax, eax, 0xea60

        $sequence_5 = { e9???????? b902010000 33c0 8dbd9de5ffff c6859ce5ffff30 f3ab 66ab }
            // n = 7, score = 100
            //   e9????????           |                     
            //   b902010000           | mov                 ecx, 0x102
            //   33c0                 | xor                 eax, eax
            //   8dbd9de5ffff         | lea                 edi, dword ptr [ebp - 0x1a63]
            //   c6859ce5ffff30       | mov                 byte ptr [ebp - 0x1a64], 0x30
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax

        $sequence_6 = { f3ab 66ab aa 8d85a8f9ffff 50 8d859ce5ffff }
            // n = 6, score = 100
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   66ab                 | stosw               word ptr es:[edi], ax
            //   aa                   | stosb               byte ptr es:[edi], al
            //   8d85a8f9ffff         | lea                 eax, dword ptr [ebp - 0x658]
            //   50                   | push                eax
            //   8d859ce5ffff         | lea                 eax, dword ptr [ebp - 0x1a64]

        $sequence_7 = { 8b442404 3b442408 7f04 8b442408 c3 ff742408 }
            // n = 6, score = 100
            //   8b442404             | mov                 eax, dword ptr [esp + 4]
            //   3b442408             | cmp                 eax, dword ptr [esp + 8]
            //   7f04                 | jg                  6
            //   8b442408             | mov                 eax, dword ptr [esp + 8]
            //   c3                   | ret                 
            //   ff742408             | push                dword ptr [esp + 8]

        $sequence_8 = { 0f8595fbffff 6a08 8d85a8f3ffff 68???????? 50 ff15???????? }
            // n = 6, score = 100
            //   0f8595fbffff         | jne                 0xfffffb9b
            //   6a08                 | push                8
            //   8d85a8f3ffff         | lea                 eax, dword ptr [ebp - 0xc58]
            //   68????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_9 = { ffd3 85c0 0f8482000000 8d8500fcffff 50 ff15???????? }
            // n = 6, score = 100
            //   ffd3                 | call                ebx
            //   85c0                 | test                eax, eax
            //   0f8482000000         | je                  0x88
            //   8d8500fcffff         | lea                 eax, dword ptr [ebp - 0x400]
            //   50                   | push                eax
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 57344
}