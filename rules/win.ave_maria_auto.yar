rule win_ave_maria_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.ave_maria."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.ave_maria"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 5f 894e04 5e 5d c20400 6880000000 }
            // n = 6, score = 400
            //   5f                   | pop                 edi
            //   894e04               | mov                 dword ptr [esi + 4], ecx
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   6880000000           | push                0x80

        $sequence_1 = { 8bf1 ff7004 ff30 8d4e10 e8???????? 8bc6 5e }
            // n = 7, score = 400
            //   8bf1                 | mov                 esi, ecx
            //   ff7004               | push                dword ptr [eax + 4]
            //   ff30                 | push                dword ptr [eax]
            //   8d4e10               | lea                 ecx, [esi + 0x10]
            //   e8????????           |                     
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi

        $sequence_2 = { 8bf9 8b5704 8b0f 03d6 e8???????? 8b4f04 }
            // n = 6, score = 400
            //   8bf9                 | mov                 edi, ecx
            //   8b5704               | mov                 edx, dword ptr [edi + 4]
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   03d6                 | add                 edx, esi
            //   e8????????           |                     
            //   8b4f04               | mov                 ecx, dword ptr [edi + 4]

        $sequence_3 = { ff7104 0f57c0 8d4de8 0f1145f0 e8???????? 8bc8 e8???????? }
            // n = 7, score = 400
            //   ff7104               | push                dword ptr [ecx + 4]
            //   0f57c0               | xorps               xmm0, xmm0
            //   8d4de8               | lea                 ecx, [ebp - 0x18]
            //   0f1145f0             | movups              xmmword ptr [ebp - 0x10], xmm0
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     

        $sequence_4 = { 8b01 51 ff5008 897dfc 8b4df8 85c9 }
            // n = 6, score = 400
            //   8b01                 | mov                 eax, dword ptr [ecx]
            //   51                   | push                ecx
            //   ff5008               | call                dword ptr [eax + 8]
            //   897dfc               | mov                 dword ptr [ebp - 4], edi
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   85c9                 | test                ecx, ecx

        $sequence_5 = { 8d7508 03f8 a5 a5 a5 ff4308 5f }
            // n = 7, score = 400
            //   8d7508               | lea                 esi, [ebp + 8]
            //   03f8                 | add                 edi, eax
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   a5                   | movsd               dword ptr es:[edi], dword ptr [esi]
            //   ff4308               | inc                 dword ptr [ebx + 8]
            //   5f                   | pop                 edi

        $sequence_6 = { 33d0 034db8 8b4594 03d1 8bc8 03d7 8b7df4 }
            // n = 7, score = 400
            //   33d0                 | xor                 edx, eax
            //   034db8               | add                 ecx, dword ptr [ebp - 0x48]
            //   8b4594               | mov                 eax, dword ptr [ebp - 0x6c]
            //   03d1                 | add                 edx, ecx
            //   8bc8                 | mov                 ecx, eax
            //   03d7                 | add                 edx, edi
            //   8b7df4               | mov                 edi, dword ptr [ebp - 0xc]

        $sequence_7 = { 8b4d08 e8???????? 8b4df4 83650800 e8???????? 8b75f8 8d4d08 }
            // n = 7, score = 400
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   83650800             | and                 dword ptr [ebp + 8], 0
            //   e8????????           |                     
            //   8b75f8               | mov                 esi, dword ptr [ebp - 8]
            //   8d4d08               | lea                 ecx, [ebp + 8]

        $sequence_8 = { 8d7318 56 68???????? 6a01 6a00 68???????? ff15???????? }
            // n = 7, score = 400
            //   8d7318               | lea                 esi, [ebx + 0x18]
            //   56                   | push                esi
            //   68????????           |                     
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   68????????           |                     
            //   ff15????????         |                     

        $sequence_9 = { 334dd8 334dec 8b5de4 23c3 d1c1 894dac 8bcf }
            // n = 7, score = 400
            //   334dd8               | xor                 ecx, dword ptr [ebp - 0x28]
            //   334dec               | xor                 ecx, dword ptr [ebp - 0x14]
            //   8b5de4               | mov                 ebx, dword ptr [ebp - 0x1c]
            //   23c3                 | and                 eax, ebx
            //   d1c1                 | rol                 ecx, 1
            //   894dac               | mov                 dword ptr [ebp - 0x54], ecx
            //   8bcf                 | mov                 ecx, edi

    condition:
        7 of them and filesize < 237568
}