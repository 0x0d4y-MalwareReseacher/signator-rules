rule win_deputydog_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.deputydog."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.deputydog"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 05f8fdffff 3bf0 7615 8145fc08020000 6a42 ff75fc }
            // n = 6, score = 100
            //   05f8fdffff           | add                 eax, 0xfffffdf8
            //   3bf0                 | cmp                 esi, eax
            //   7615                 | jbe                 0x17
            //   8145fc08020000       | add                 dword ptr [ebp - 4], 0x208
            //   6a42                 | push                0x42
            //   ff75fc               | push                dword ptr [ebp - 4]

        $sequence_1 = { 8a45ff 0ac1 880437 47 8b5d08 ff45f4 8b4308 }
            // n = 7, score = 100
            //   8a45ff               | mov                 al, byte ptr [ebp - 1]
            //   0ac1                 | or                  al, cl
            //   880437               | mov                 byte ptr [edi + esi], al
            //   47                   | inc                 edi
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   ff45f4               | inc                 dword ptr [ebp - 0xc]
            //   8b4308               | mov                 eax, dword ptr [ebx + 8]

        $sequence_2 = { 8b30 3bf0 0f8407010000 8b4e08 8d45e0 }
            // n = 5, score = 100
            //   8b30                 | mov                 esi, dword ptr [eax]
            //   3bf0                 | cmp                 esi, eax
            //   0f8407010000         | je                  0x10d
            //   8b4e08               | mov                 ecx, dword ptr [esi + 8]
            //   8d45e0               | lea                 eax, [ebp - 0x20]

        $sequence_3 = { 50 8d8570ffffff 50 ff75b8 ff15???????? 85c0 7509 }
            // n = 7, score = 100
            //   50                   | push                eax
            //   8d8570ffffff         | lea                 eax, [ebp - 0x90]
            //   50                   | push                eax
            //   ff75b8               | push                dword ptr [ebp - 0x48]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   7509                 | jne                 0xb

        $sequence_4 = { 55 8bec 81eca80f0000 53 33db 56 }
            // n = 6, score = 100
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   81eca80f0000         | sub                 esp, 0xfa8
            //   53                   | push                ebx
            //   33db                 | xor                 ebx, ebx
            //   56                   | push                esi

        $sequence_5 = { 8d8580fbffff 50 ffd6 8a450b 83c414 }
            // n = 5, score = 100
            //   8d8580fbffff         | lea                 eax, [ebp - 0x480]
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   8a450b               | mov                 al, byte ptr [ebp + 0xb]
            //   83c414               | add                 esp, 0x14

        $sequence_6 = { 57 8b4608 8b4e04 50 51 8bce e8???????? }
            // n = 7, score = 100
            //   57                   | push                edi
            //   8b4608               | mov                 eax, dword ptr [esi + 8]
            //   8b4e04               | mov                 ecx, dword ptr [esi + 4]
            //   50                   | push                eax
            //   51                   | push                ecx
            //   8bce                 | mov                 ecx, esi
            //   e8????????           |                     

        $sequence_7 = { 33db 8d7e04 53 8bcf 8975f0 8807 ff15???????? }
            // n = 7, score = 100
            //   33db                 | xor                 ebx, ebx
            //   8d7e04               | lea                 edi, [esi + 4]
            //   53                   | push                ebx
            //   8bcf                 | mov                 ecx, edi
            //   8975f0               | mov                 dword ptr [ebp - 0x10], esi
            //   8807                 | mov                 byte ptr [edi], al
            //   ff15????????         |                     

        $sequence_8 = { 8b45e4 2b45e0 50 ff750c ff75e0 e8???????? }
            // n = 6, score = 100
            //   8b45e4               | mov                 eax, dword ptr [ebp - 0x1c]
            //   2b45e0               | sub                 eax, dword ptr [ebp - 0x20]
            //   50                   | push                eax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff75e0               | push                dword ptr [ebp - 0x20]
            //   e8????????           |                     

        $sequence_9 = { ff750c ff75e0 e8???????? 8b4d08 83c40c 8d45dc }
            // n = 6, score = 100
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff75e0               | push                dword ptr [ebp - 0x20]
            //   e8????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   83c40c               | add                 esp, 0xc
            //   8d45dc               | lea                 eax, [ebp - 0x24]

    condition:
        7 of them and filesize < 90112
}