rule win_deputydog_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.deputydog."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.deputydog"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { b840420f00 39460c 730a 53 }
            // n = 4, score = 100
            //   b840420f00           | mov                 eax, 0xf4240
            //   39460c               | cmp                 dword ptr [esi + 0xc], eax
            //   730a                 | jae                 0xc
            //   53                   | push                ebx

        $sequence_1 = { 53 51 ff75e4 50 ff7618 ff15???????? }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   51                   | push                ecx
            //   ff75e4               | push                dword ptr [ebp - 0x1c]
            //   50                   | push                eax
            //   ff7618               | push                dword ptr [esi + 0x18]
            //   ff15????????         |                     

        $sequence_2 = { e9???????? 57 bf???????? 6683bdb4fdffff2e 0f8496000000 8d85b4fdffff f68588fdffff10 }
            // n = 7, score = 100
            //   e9????????           |                     
            //   57                   | push                edi
            //   bf????????           |                     
            //   6683bdb4fdffff2e     | cmp                 word ptr [ebp - 0x24c], 0x2e
            //   0f8496000000         | je                  0x9c
            //   8d85b4fdffff         | lea                 eax, [ebp - 0x24c]
            //   f68588fdffff10       | test                byte ptr [ebp - 0x278], 0x10

        $sequence_3 = { 50 ffd6 83c40c 8d85acfdffff 50 8d8594f7ffff }
            // n = 6, score = 100
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   83c40c               | add                 esp, 0xc
            //   8d85acfdffff         | lea                 eax, [ebp - 0x254]
            //   50                   | push                eax
            //   8d8594f7ffff         | lea                 eax, [ebp - 0x86c]

        $sequence_4 = { 83792000 7408 83c118 e9???????? c3 55 }
            // n = 6, score = 100
            //   83792000             | cmp                 dword ptr [ecx + 0x20], 0
            //   7408                 | je                  0xa
            //   83c118               | add                 ecx, 0x18
            //   e9????????           |                     
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_5 = { 8b45f4 8b35???????? ff30 ffd6 8b45f8 }
            // n = 5, score = 100
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   8b35????????         |                     
            //   ff30                 | push                dword ptr [eax]
            //   ffd6                 | call                esi
            //   8b45f8               | mov                 eax, dword ptr [ebp - 8]

        $sequence_6 = { 8b5b04 8b4df8 ff45f8 85db }
            // n = 4, score = 100
            //   8b5b04               | mov                 ebx, dword ptr [ebx + 4]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   ff45f8               | inc                 dword ptr [ebp - 8]
            //   85db                 | test                ebx, ebx

        $sequence_7 = { 50 8d45ec 50 6a17 }
            // n = 4, score = 100
            //   50                   | push                eax
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax
            //   6a17                 | push                0x17

        $sequence_8 = { 89461c 894620 894624 894628 8bc6 5e c3 }
            // n = 7, score = 100
            //   89461c               | mov                 dword ptr [esi + 0x1c], eax
            //   894620               | mov                 dword ptr [esi + 0x20], eax
            //   894624               | mov                 dword ptr [esi + 0x24], eax
            //   894628               | mov                 dword ptr [esi + 0x28], eax
            //   8bc6                 | mov                 eax, esi
            //   5e                   | pop                 esi
            //   c3                   | ret                 

        $sequence_9 = { 68???????? 50 e8???????? 8d86d1010000 68???????? }
            // n = 5, score = 100
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d86d1010000         | lea                 eax, [esi + 0x1d1]
            //   68????????           |                     

    condition:
        7 of them and filesize < 90112
}