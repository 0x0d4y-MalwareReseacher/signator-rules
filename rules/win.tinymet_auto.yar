rule win_tinymet_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.tinymet."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.tinymet"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 33db 57 8bf3 e8???????? 59 85c0 7412 }
            // n = 7, score = 100
            //   33db                 | xor                 ebx, ebx
            //   57                   | push                edi
            //   8bf3                 | mov                 esi, ebx
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7412                 | je                  0x14

        $sequence_1 = { 83f85c 75e4 8d45e8 68???????? 50 e8???????? 8d45f0 }
            // n = 7, score = 100
            //   83f85c               | cmp                 eax, 0x5c
            //   75e4                 | jne                 0xffffffe6
            //   8d45e8               | lea                 eax, [ebp - 0x18]
            //   68????????           |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   8d45f0               | lea                 eax, [ebp - 0x10]

        $sequence_2 = { ff15???????? 8bf0 85f6 7507 68???????? eb7b }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   7507                 | jne                 9
            //   68????????           |                     
            //   eb7b                 | jmp                 0x7d

        $sequence_3 = { 885ded 895dfc ff15???????? 50 e8???????? 59 8d45f0 }
            // n = 7, score = 100
            //   885ded               | mov                 byte ptr [ebp - 0x13], bl
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   ff15????????         |                     
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   8d45f0               | lea                 eax, [ebp - 0x10]

        $sequence_4 = { 53 56 57 50 33db 6802020000 8bfb }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   50                   | push                eax
            //   33db                 | xor                 ebx, ebx
            //   6802020000           | push                0x202
            //   8bfb                 | mov                 edi, ebx

        $sequence_5 = { 7448 ff15???????? 85c0 740a }
            // n = 4, score = 100
            //   7448                 | je                  0x4a
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   740a                 | je                  0xc

        $sequence_6 = { a3???????? 6a04 c600bf 8d45fc 50 }
            // n = 5, score = 100
            //   a3????????           |                     
            //   6a04                 | push                4
            //   c600bf               | mov                 byte ptr [eax], 0xbf
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax

        $sequence_7 = { 85c0 7407 68???????? eb7d }
            // n = 4, score = 100
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   68????????           |                     
            //   eb7d                 | jmp                 0x7f

    condition:
        7 of them and filesize < 57344
}