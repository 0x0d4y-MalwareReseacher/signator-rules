rule win_unidentified_041_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.unidentified_041."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_041"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b03 8d4dd4 51 68???????? 68???????? 8bcb }
            // n = 6, score = 200
            //   8b03                 | mov                 eax, dword ptr [ebx]
            //   8d4dd4               | lea                 ecx, [ebp - 0x2c]
            //   51                   | push                ecx
            //   68????????           |                     
            //   68????????           |                     
            //   8bcb                 | mov                 ecx, ebx

        $sequence_1 = { 742a 8b4704 83f809 7f2d 744c 48 }
            // n = 6, score = 200
            //   742a                 | je                  0x2c
            //   8b4704               | mov                 eax, dword ptr [edi + 4]
            //   83f809               | cmp                 eax, 9
            //   7f2d                 | jg                  0x2f
            //   744c                 | je                  0x4e
            //   48                   | dec                 eax

        $sequence_2 = { 75da 68???????? 8d4c2418 e8???????? 8d442460 c684248800000006 50 }
            // n = 7, score = 200
            //   75da                 | jne                 0xffffffdc
            //   68????????           |                     
            //   8d4c2418             | lea                 ecx, [esp + 0x18]
            //   e8????????           |                     
            //   8d442460             | lea                 eax, [esp + 0x60]
            //   c684248800000006     | mov                 byte ptr [esp + 0x88], 6
            //   50                   | push                eax

        $sequence_3 = { ff15???????? ffb550bdffff 8bf0 ff15???????? ebac 33c0 8dbddcbfffff }
            // n = 7, score = 200
            //   ff15????????         |                     
            //   ffb550bdffff         | push                dword ptr [ebp - 0x42b0]
            //   8bf0                 | mov                 esi, eax
            //   ff15????????         |                     
            //   ebac                 | jmp                 0xffffffae
            //   33c0                 | xor                 eax, eax
            //   8dbddcbfffff         | lea                 edi, [ebp - 0x4024]

        $sequence_4 = { 89742460 89742464 89742468 89b42488000000 8d7c246c 33c0 ab }
            // n = 7, score = 200
            //   89742460             | mov                 dword ptr [esp + 0x60], esi
            //   89742464             | mov                 dword ptr [esp + 0x64], esi
            //   89742468             | mov                 dword ptr [esp + 0x68], esi
            //   89b42488000000       | mov                 dword ptr [esp + 0x88], esi
            //   8d7c246c             | lea                 edi, [esp + 0x6c]
            //   33c0                 | xor                 eax, eax
            //   ab                   | stosd               dword ptr es:[edi], eax

        $sequence_5 = { ff5008 c645fc00 8b85e0feffff 85c0 7406 8b08 50 }
            // n = 7, score = 200
            //   ff5008               | call                dword ptr [eax + 8]
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   8b85e0feffff         | mov                 eax, dword ptr [ebp - 0x120]
            //   85c0                 | test                eax, eax
            //   7406                 | je                  8
            //   8b08                 | mov                 ecx, dword ptr [eax]
            //   50                   | push                eax

        $sequence_6 = { 7536 c745f450424700 8d45f4 68???????? e9???????? 50 ff15???????? }
            // n = 7, score = 200
            //   7536                 | jne                 0x38
            //   c745f450424700       | mov                 dword ptr [ebp - 0xc], 0x474250
            //   8d45f4               | lea                 eax, [ebp - 0xc]
            //   68????????           |                     
            //   e9????????           |                     
            //   50                   | push                eax
            //   ff15????????         |                     

        $sequence_7 = { ffd6 83bc249800000008 8d842484000000 6a06 0f43842488000000 50 ffd6 }
            // n = 7, score = 200
            //   ffd6                 | call                esi
            //   83bc249800000008     | cmp                 dword ptr [esp + 0x98], 8
            //   8d842484000000       | lea                 eax, [esp + 0x84]
            //   6a06                 | push                6
            //   0f43842488000000     | cmovae              eax, dword ptr [esp + 0x88]
            //   50                   | push                eax
            //   ffd6                 | call                esi

        $sequence_8 = { 8b450c 2b4508 56 50 8bf1 e8???????? 84c0 }
            // n = 7, score = 200
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]
            //   2b4508               | sub                 eax, dword ptr [ebp + 8]
            //   56                   | push                esi
            //   50                   | push                eax
            //   8bf1                 | mov                 esi, ecx
            //   e8????????           |                     
            //   84c0                 | test                al, al

        $sequence_9 = { 53 50 e8???????? 83c40c 837e1408 7204 8b06 }
            // n = 7, score = 200
            //   53                   | push                ebx
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   837e1408             | cmp                 dword ptr [esi + 0x14], 8
            //   7204                 | jb                  6
            //   8b06                 | mov                 eax, dword ptr [esi]

    condition:
        7 of them and filesize < 1097728
}