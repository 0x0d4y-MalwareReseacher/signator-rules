rule win_unidentified_041_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.unidentified_041."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.unidentified_041"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 50 53 e8???????? 83c430 33f6 eb24 837c245408 }
            // n = 7, score = 200
            //   50                   | push                eax
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30
            //   33f6                 | xor                 esi, esi
            //   eb24                 | jmp                 0x26
            //   837c245408           | cmp                 dword ptr [esp + 0x54], 8

        $sequence_1 = { 7415 8d4710 50 ff750c e8???????? 84c0 7505 }
            // n = 7, score = 200
            //   7415                 | je                  0x17
            //   8d4710               | lea                 eax, [edi + 0x10]
            //   50                   | push                eax
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   e8????????           |                     
            //   84c0                 | test                al, al
            //   7505                 | jne                 7

        $sequence_2 = { 59 85db 7429 6a06 33c0 8bfb 33f6 }
            // n = 7, score = 200
            //   59                   | pop                 ecx
            //   85db                 | test                ebx, ebx
            //   7429                 | je                  0x2b
            //   6a06                 | push                6
            //   33c0                 | xor                 eax, eax
            //   8bfb                 | mov                 edi, ebx
            //   33f6                 | xor                 esi, esi

        $sequence_3 = { 7406 8b11 51 ff5208 8bc6 e8???????? c3 }
            // n = 7, score = 200
            //   7406                 | je                  8
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   51                   | push                ecx
            //   ff5208               | call                dword ptr [edx + 8]
            //   8bc6                 | mov                 eax, esi
            //   e8????????           |                     
            //   c3                   | ret                 

        $sequence_4 = { 58 668906 83c602 8b0c9590234800 8a45f8 6a0a 88441905 }
            // n = 7, score = 200
            //   58                   | pop                 eax
            //   668906               | mov                 word ptr [esi], ax
            //   83c602               | add                 esi, 2
            //   8b0c9590234800       | mov                 ecx, dword ptr [edx*4 + 0x482390]
            //   8a45f8               | mov                 al, byte ptr [ebp - 8]
            //   6a0a                 | push                0xa
            //   88441905             | mov                 byte ptr [ecx + ebx + 5], al

        $sequence_5 = { d1e9 f3ab 13c9 66f3ab 8b550c 8b4df8 33f6 }
            // n = 7, score = 200
            //   d1e9                 | shr                 ecx, 1
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   13c9                 | adc                 ecx, ecx
            //   66f3ab               | rep stosd           dword ptr es:[edi], eax
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8b4df8               | mov                 ecx, dword ptr [ebp - 8]
            //   33f6                 | xor                 esi, esi

        $sequence_6 = { ff75e0 e8???????? 8b45f0 83c418 2b06 8bce c1f802 }
            // n = 7, score = 200
            //   ff75e0               | push                dword ptr [ebp - 0x20]
            //   e8????????           |                     
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   83c418               | add                 esp, 0x18
            //   2b06                 | sub                 eax, dword ptr [esi]
            //   8bce                 | mov                 ecx, esi
            //   c1f802               | sar                 eax, 2

        $sequence_7 = { ff5748 85c0 0f889e050000 8b8540fdffff 6aff 50 8b08 }
            // n = 7, score = 200
            //   ff5748               | call                dword ptr [edi + 0x48]
            //   85c0                 | test                eax, eax
            //   0f889e050000         | js                  0x5a4
            //   8b8540fdffff         | mov                 eax, dword ptr [ebp - 0x2c0]
            //   6aff                 | push                -1
            //   50                   | push                eax
            //   8b08                 | mov                 ecx, dword ptr [eax]

        $sequence_8 = { 8945f4 668b440da4 6633840d78ffffff 6689440dd0 83c102 83f92a 72e6 }
            // n = 7, score = 200
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   668b440da4           | mov                 ax, word ptr [ebp + ecx - 0x5c]
            //   6633840d78ffffff     | xor                 ax, word ptr [ebp + ecx - 0x88]
            //   6689440dd0           | mov                 word ptr [ebp + ecx - 0x30], ax
            //   83c102               | add                 ecx, 2
            //   83f92a               | cmp                 ecx, 0x2a
            //   72e6                 | jb                  0xffffffe8

        $sequence_9 = { 0fbec2 0fbe80e8be4600 83e00f eb02 33c0 8bbdbcfdffff 0fbebcc708bf4600 }
            // n = 7, score = 200
            //   0fbec2               | movsx               eax, dl
            //   0fbe80e8be4600       | movsx               eax, byte ptr [eax + 0x46bee8]
            //   83e00f               | and                 eax, 0xf
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   8bbdbcfdffff         | mov                 edi, dword ptr [ebp - 0x244]
            //   0fbebcc708bf4600     | movsx               edi, byte ptr [edi + eax*8 + 0x46bf08]

    condition:
        7 of them and filesize < 1097728
}