rule win_btcware_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.btcware."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.btcware"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a01 56 53 ff15???????? 8b4524 83f810 7242 }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   56                   | push                esi
            //   53                   | push                ebx
            //   ff15????????         |                     
            //   8b4524               | mov                 eax, dword ptr [ebp + 0x24]
            //   83f810               | cmp                 eax, 0x10
            //   7242                 | jb                  0x44

        $sequence_1 = { 6a00 51 ff7520 8d4510 0f434510 }
            // n = 5, score = 100
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   ff7520               | push                dword ptr [ebp + 0x20]
            //   8d4510               | lea                 eax, [ebp + 0x10]
            //   0f434510             | cmovae              eax, dword ptr [ebp + 0x10]

        $sequence_2 = { e8???????? 8bf0 83c418 81fe04fd8101 7432 b904fd8101 }
            // n = 6, score = 100
            //   e8????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   83c418               | add                 esp, 0x18
            //   81fe04fd8101         | cmp                 esi, 0x181fd04
            //   7432                 | je                  0x34
            //   b904fd8101           | mov                 ecx, 0x181fd04

        $sequence_3 = { 83f810 7245 8b8da8feffff 40 3d00100000 }
            // n = 5, score = 100
            //   83f810               | cmp                 eax, 0x10
            //   7245                 | jb                  0x47
            //   8b8da8feffff         | mov                 ecx, dword ptr [ebp - 0x158]
            //   40                   | inc                 eax
            //   3d00100000           | cmp                 eax, 0x1000

        $sequence_4 = { 7409 2bc3 eb08 e8???????? 83c8ff }
            // n = 5, score = 100
            //   7409                 | je                  0xb
            //   2bc3                 | sub                 eax, ebx
            //   eb08                 | jmp                 0xa
            //   e8????????           |                     
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_5 = { 7204 8b0e eb02 8bce 8b4610 43 881401 }
            // n = 7, score = 100
            //   7204                 | jb                  6
            //   8b0e                 | mov                 ecx, dword ptr [esi]
            //   eb02                 | jmp                 4
            //   8bce                 | mov                 ecx, esi
            //   8b4610               | mov                 eax, dword ptr [esi + 0x10]
            //   43                   | inc                 ebx
            //   881401               | mov                 byte ptr [ecx + eax], dl

        $sequence_6 = { 85ff 7503 57 eb06 83ff01 }
            // n = 5, score = 100
            //   85ff                 | test                edi, edi
            //   7503                 | jne                 5
            //   57                   | push                edi
            //   eb06                 | jmp                 8
            //   83ff01               | cmp                 edi, 1

        $sequence_7 = { f9 2f 16 97 }
            // n = 4, score = 100
            //   f9                   | stc                 
            //   2f                   | das                 
            //   16                   | push                ss
            //   97                   | xchg                eax, edi

        $sequence_8 = { 660f282d???????? 660f59f5 660f28aae03f4100 660f54e5 660f58fe 660f58fc }
            // n = 6, score = 100
            //   660f282d????????     |                     
            //   660f59f5             | mulpd               xmm6, xmm5
            //   660f28aae03f4100     | movapd              xmm5, xmmword ptr [edx + 0x413fe0]
            //   660f54e5             | andpd               xmm4, xmm5
            //   660f58fe             | addpd               xmm7, xmm6
            //   660f58fc             | addpd               xmm7, xmm4

        $sequence_9 = { 83fe20 7ca9 8b4dfc 33c0 6689047b 33cd 5f }
            // n = 7, score = 100
            //   83fe20               | cmp                 esi, 0x20
            //   7ca9                 | jl                  0xffffffab
            //   8b4dfc               | mov                 ecx, dword ptr [ebp - 4]
            //   33c0                 | xor                 eax, eax
            //   6689047b             | mov                 word ptr [ebx + edi*2], ax
            //   33cd                 | xor                 ecx, ebp
            //   5f                   | pop                 edi

    condition:
        7 of them and filesize < 458752
}