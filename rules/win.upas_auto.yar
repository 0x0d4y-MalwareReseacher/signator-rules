rule win_upas_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.upas."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.upas"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 57 33ff eb1b 3cc2 741d 3cc3 7419 }
            // n = 7, score = 400
            //   57                   | push                edi
            //   33ff                 | xor                 edi, edi
            //   eb1b                 | jmp                 0x1d
            //   3cc2                 | cmp                 al, 0xc2
            //   741d                 | je                  0x1f
            //   3cc3                 | cmp                 al, 0xc3
            //   7419                 | je                  0x1b

        $sequence_1 = { 57 50 ffd6 50 ff15???????? 33c0 }
            // n = 6, score = 400
            //   57                   | push                edi
            //   50                   | push                eax
            //   ffd6                 | call                esi
            //   50                   | push                eax
            //   ff15????????         |                     
            //   33c0                 | xor                 eax, eax

        $sequence_2 = { 50 e8???????? 83c40c 8d45e4 50 ff15???????? e8???????? }
            // n = 7, score = 400
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   8d45e4               | lea                 eax, [ebp - 0x1c]
            //   50                   | push                eax
            //   ff15????????         |                     
            //   e8????????           |                     

        $sequence_3 = { 57 50 ff75fc 83e905 ff75ec c600e9 894801 }
            // n = 7, score = 400
            //   57                   | push                edi
            //   50                   | push                eax
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   83e905               | sub                 ecx, 5
            //   ff75ec               | push                dword ptr [ebp - 0x14]
            //   c600e9               | mov                 byte ptr [eax], 0xe9
            //   894801               | mov                 dword ptr [eax + 1], ecx

        $sequence_4 = { 8b7d08 57 53 ffd6 50 }
            // n = 5, score = 400
            //   8b7d08               | mov                 edi, dword ptr [ebp + 8]
            //   57                   | push                edi
            //   53                   | push                ebx
            //   ffd6                 | call                esi
            //   50                   | push                eax

        $sequence_5 = { c3 8b4508 83c040 5d }
            // n = 4, score = 400
            //   c3                   | ret                 
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   83c040               | add                 eax, 0x40
            //   5d                   | pop                 ebp

        $sequence_6 = { eb03 832200 8b11 85d2 7418 03ca }
            // n = 6, score = 400
            //   eb03                 | jmp                 5
            //   832200               | and                 dword ptr [edx], 0
            //   8b11                 | mov                 edx, dword ptr [ecx]
            //   85d2                 | test                edx, edx
            //   7418                 | je                  0x1a
            //   03ca                 | add                 ecx, edx

        $sequence_7 = { 8945fc 83f8ff 0f846a010000 6a04 5f f685a8fdffff02 0f8539010000 }
            // n = 7, score = 400
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   83f8ff               | cmp                 eax, -1
            //   0f846a010000         | je                  0x170
            //   6a04                 | push                4
            //   5f                   | pop                 edi
            //   f685a8fdffff02       | test                byte ptr [ebp - 0x258], 2
            //   0f8539010000         | jne                 0x13f

        $sequence_8 = { 7445 8b75fc 8d45e0 50 6a40 8d45ec 50 }
            // n = 7, score = 400
            //   7445                 | je                  0x47
            //   8b75fc               | mov                 esi, dword ptr [ebp - 4]
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   50                   | push                eax
            //   6a40                 | push                0x40
            //   8d45ec               | lea                 eax, [ebp - 0x14]
            //   50                   | push                eax

        $sequence_9 = { be???????? 56 3bfb 750d ff750c }
            // n = 5, score = 400
            //   be????????           |                     
            //   56                   | push                esi
            //   3bfb                 | cmp                 edi, ebx
            //   750d                 | jne                 0xf
            //   ff750c               | push                dword ptr [ebp + 0xc]

    condition:
        7 of them and filesize < 114688
}