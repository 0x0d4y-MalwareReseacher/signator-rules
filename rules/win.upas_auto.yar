rule win_upas_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2021-06-10"
        version = "1"
        description = "Detects win.upas."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.upas"
        malpedia_rule_date = "20210604"
        malpedia_hash = "be09d5d71e77373c0f538068be31a2ad4c69cfbd"
        malpedia_version = "20210616"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 83c42c 8d450c 50 33c0 50 }
            // n = 5, score = 400
            //   83c42c               | add                 esp, 0x2c
            //   8d450c               | lea                 eax, dword ptr [ebp + 0xc]
            //   50                   | push                eax
            //   33c0                 | xor                 eax, eax
            //   50                   | push                eax

        $sequence_1 = { 83e909 7408 83e919 7403 49 7505 }
            // n = 6, score = 400
            //   83e909               | sub                 ecx, 9
            //   7408                 | je                  0xa
            //   83e919               | sub                 ecx, 0x19
            //   7403                 | je                  5
            //   49                   | dec                 ecx
            //   7505                 | jne                 7

        $sequence_2 = { ff15???????? 8bf0 3bf7 7504 33c0 eb50 8b450c }
            // n = 7, score = 400
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   3bf7                 | cmp                 esi, edi
            //   7504                 | jne                 6
            //   33c0                 | xor                 eax, eax
            //   eb50                 | jmp                 0x52
            //   8b450c               | mov                 eax, dword ptr [ebp + 0xc]

        $sequence_3 = { 6a03 ff7508 ff15???????? 85c0 0f88a1000000 8d4304 3bc7 }
            // n = 7, score = 400
            //   6a03                 | push                3
            //   ff7508               | push                dword ptr [ebp + 8]
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f88a1000000         | js                  0xa7
            //   8d4304               | lea                 eax, dword ptr [ebx + 4]
            //   3bc7                 | cmp                 eax, edi

        $sequence_4 = { c9 c3 6800100000 8d8580e7ffff 6a00 50 }
            // n = 6, score = 400
            //   c9                   | leave               
            //   c3                   | ret                 
            //   6800100000           | push                0x1000
            //   8d8580e7ffff         | lea                 eax, dword ptr [ebp - 0x1880]
            //   6a00                 | push                0
            //   50                   | push                eax

        $sequence_5 = { 394508 752a 50 50 }
            // n = 4, score = 400
            //   394508               | cmp                 dword ptr [ebp + 8], eax
            //   752a                 | jne                 0x2c
            //   50                   | push                eax
            //   50                   | push                eax

        $sequence_6 = { 0f8587000000 8b45fc 2b45f8 c645dce9 }
            // n = 4, score = 400
            //   0f8587000000         | jne                 0x8d
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   2b45f8               | sub                 eax, dword ptr [ebp - 8]
            //   c645dce9             | mov                 byte ptr [ebp - 0x24], 0xe9

        $sequence_7 = { 740f 8b0f 3bc1 7209 8b57fc 03d1 }
            // n = 6, score = 400
            //   740f                 | je                  0x11
            //   8b0f                 | mov                 ecx, dword ptr [edi]
            //   3bc1                 | cmp                 eax, ecx
            //   7209                 | jb                  0xb
            //   8b57fc               | mov                 edx, dword ptr [edi - 4]
            //   03d1                 | add                 edx, ecx

        $sequence_8 = { 8d45f4 50 ff75c4 57 ff75fc ffd6 33c0 }
            // n = 7, score = 400
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   50                   | push                eax
            //   ff75c4               | push                dword ptr [ebp - 0x3c]
            //   57                   | push                edi
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   ffd6                 | call                esi
            //   33c0                 | xor                 eax, eax

        $sequence_9 = { eb21 57 6a00 ffd6 }
            // n = 4, score = 400
            //   eb21                 | jmp                 0x23
            //   57                   | push                edi
            //   6a00                 | push                0
            //   ffd6                 | call                esi

    condition:
        7 of them and filesize < 114688
}