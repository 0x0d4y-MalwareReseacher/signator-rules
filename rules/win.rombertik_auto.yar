rule win_rombertik_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.rombertik."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rombertik"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 46 0fb68c3500ffffff 03f9 81e7ff000080 }
            // n = 4, score = 200
            //   46                   | inc                 esi
            //   0fb68c3500ffffff     | movzx               ecx, byte ptr [ebp + esi - 0x100]
            //   03f9                 | add                 edi, ecx
            //   81e7ff000080         | and                 edi, 0x800000ff

        $sequence_1 = { 53 56 57 b940010000 8d85b4feffff }
            // n = 5, score = 200
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   b940010000           | mov                 ecx, 0x140
            //   8d85b4feffff         | lea                 eax, [ebp - 0x14c]

        $sequence_2 = { 2bf8 83ef05 c60406e9 897c0601 }
            // n = 4, score = 200
            //   2bf8                 | sub                 edi, eax
            //   83ef05               | sub                 edi, 5
            //   c60406e9             | mov                 byte ptr [esi + eax], 0xe9
            //   897c0601             | mov                 dword ptr [esi + eax + 1], edi

        $sequence_3 = { 85c0 0f8406010000 53 56 8b35???????? 57 }
            // n = 6, score = 200
            //   85c0                 | test                eax, eax
            //   0f8406010000         | je                  0x10c
            //   53                   | push                ebx
            //   56                   | push                esi
            //   8b35????????         |                     
            //   57                   | push                edi

        $sequence_4 = { 85c0 743b 807dfee9 7435 56 }
            // n = 5, score = 200
            //   85c0                 | test                eax, eax
            //   743b                 | je                  0x3d
            //   807dfee9             | cmp                 byte ptr [ebp - 2], 0xe9
            //   7435                 | je                  0x37
            //   56                   | push                esi

        $sequence_5 = { 8b35???????? 6a00 6a01 6a00 6a00 8d45fc }
            // n = 6, score = 200
            //   8b35????????         |                     
            //   6a00                 | push                0
            //   6a01                 | push                1
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   8d45fc               | lea                 eax, [ebp - 4]

        $sequence_6 = { ffd6 85c0 740f 8d95acfdffff 52 }
            // n = 5, score = 200
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   740f                 | je                  0x11
            //   8d95acfdffff         | lea                 edx, [ebp - 0x254]
            //   52                   | push                edx

        $sequence_7 = { 8d8df8feffff 51 c745fc04010000 ff15???????? }
            // n = 4, score = 200
            //   8d8df8feffff         | lea                 ecx, [ebp - 0x108]
            //   51                   | push                ecx
            //   c745fc04010000       | mov                 dword ptr [ebp - 4], 0x104
            //   ff15????????         |                     

        $sequence_8 = { 8b5508 8b7510 03d7 8ac3 2bf1 3c78 }
            // n = 6, score = 200
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   8b7510               | mov                 esi, dword ptr [ebp + 0x10]
            //   03d7                 | add                 edx, edi
            //   8ac3                 | mov                 al, bl
            //   2bf1                 | sub                 esi, ecx
            //   3c78                 | cmp                 al, 0x78

        $sequence_9 = { 50 52 8d85f4feffff 57 50 e8???????? }
            // n = 6, score = 200
            //   50                   | push                eax
            //   52                   | push                edx
            //   8d85f4feffff         | lea                 eax, [ebp - 0x10c]
            //   57                   | push                edi
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 73728
}