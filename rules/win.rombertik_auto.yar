rule win_rombertik_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.rombertik."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.rombertik"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8945f4 3bc1 0f8271ffffff 5f 5e }
            // n = 5, score = 200
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   3bc1                 | cmp                 eax, ecx
            //   0f8271ffffff         | jb                  0xffffff77
            //   5f                   | pop                 edi
            //   5e                   | pop                 esi

        $sequence_1 = { ffd3 33c0 eb1a 6a00 }
            // n = 4, score = 200
            //   ffd3                 | call                ebx
            //   33c0                 | xor                 eax, eax
            //   eb1a                 | jmp                 0x1c
            //   6a00                 | push                0

        $sequence_2 = { 57 33c0 88840500ffffff 40 }
            // n = 4, score = 200
            //   57                   | push                edi
            //   33c0                 | xor                 eax, eax
            //   88840500ffffff       | mov                 byte ptr [ebp + eax - 0x100], al
            //   40                   | inc                 eax

        $sequence_3 = { 75f9 b904010000 8d85acfdffff 8da42400000000 }
            // n = 4, score = 200
            //   75f9                 | jne                 0xfffffffb
            //   b904010000           | mov                 ecx, 0x104
            //   8d85acfdffff         | lea                 eax, [ebp - 0x254]
            //   8da42400000000       | lea                 esp, [esp]

        $sequence_4 = { 56 ff15???????? 85c0 0f85e3fdffff 3bf3 }
            // n = 5, score = 200
            //   56                   | push                esi
            //   ff15????????         |                     
            //   85c0                 | test                eax, eax
            //   0f85e3fdffff         | jne                 0xfffffde9
            //   3bf3                 | cmp                 esi, ebx

        $sequence_5 = { 8945f8 85c0 7e12 60 }
            // n = 4, score = 200
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   85c0                 | test                eax, eax
            //   7e12                 | jle                 0x14
            //   60                   | pushal              

        $sequence_6 = { 897df8 895df0 8945f4 663b4b06 0f8394000000 8945fc 8bff }
            // n = 7, score = 200
            //   897df8               | mov                 dword ptr [ebp - 8], edi
            //   895df0               | mov                 dword ptr [ebp - 0x10], ebx
            //   8945f4               | mov                 dword ptr [ebp - 0xc], eax
            //   663b4b06             | cmp                 cx, word ptr [ebx + 6]
            //   0f8394000000         | jae                 0x9a
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   8bff                 | mov                 edi, edi

        $sequence_7 = { 8bf8 57 56 ff15???????? 57 56 8bd8 }
            // n = 7, score = 200
            //   8bf8                 | mov                 edi, eax
            //   57                   | push                edi
            //   56                   | push                esi
            //   ff15????????         |                     
            //   57                   | push                edi
            //   56                   | push                esi
            //   8bd8                 | mov                 ebx, eax

        $sequence_8 = { 895dfc 85db 0f84d8000000 85ff }
            // n = 4, score = 200
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   85db                 | test                ebx, ebx
            //   0f84d8000000         | je                  0xde
            //   85ff                 | test                edi, edi

        $sequence_9 = { c3 6804010000 68???????? 68???????? }
            // n = 4, score = 200
            //   c3                   | ret                 
            //   6804010000           | push                0x104
            //   68????????           |                     
            //   68????????           |                     

    condition:
        7 of them and filesize < 73728
}