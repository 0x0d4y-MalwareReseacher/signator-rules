rule win_pgift_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.pgift."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.pgift"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8b7e08 8b5d08 3bdf 7476 }
            // n = 4, score = 100
            //   8b7e08               | mov                 edi, dword ptr [esi + 8]
            //   8b5d08               | mov                 ebx, dword ptr [ebp + 8]
            //   3bdf                 | cmp                 ebx, edi
            //   7476                 | je                  0x78

        $sequence_1 = { c645fc05 e8???????? 8d4d0c c645fc04 e8???????? 8b45f0 3958f8 }
            // n = 7, score = 100
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5
            //   e8????????           |                     
            //   8d4d0c               | lea                 ecx, [ebp + 0xc]
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   e8????????           |                     
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]
            //   3958f8               | cmp                 dword ptr [eax - 8], ebx

        $sequence_2 = { 50 8d4de0 e8???????? 33db 8d4dec 895dfc }
            // n = 6, score = 100
            //   50                   | push                eax
            //   8d4de0               | lea                 ecx, [ebp - 0x20]
            //   e8????????           |                     
            //   33db                 | xor                 ebx, ebx
            //   8d4dec               | lea                 ecx, [ebp - 0x14]
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx

        $sequence_3 = { 50 ff75e8 ff15???????? 8bf8 397e34 }
            // n = 5, score = 100
            //   50                   | push                eax
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   ff15????????         |                     
            //   8bf8                 | mov                 edi, eax
            //   397e34               | cmp                 dword ptr [esi + 0x34], edi

        $sequence_4 = { ff75e8 ff15???????? eb53 8b45ec 3958f8 742f }
            // n = 6, score = 100
            //   ff75e8               | push                dword ptr [ebp - 0x18]
            //   ff15????????         |                     
            //   eb53                 | jmp                 0x55
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]
            //   3958f8               | cmp                 dword ptr [eax - 8], ebx
            //   742f                 | je                  0x31

        $sequence_5 = { ffd7 50 68???????? 83c608 56 }
            // n = 5, score = 100
            //   ffd7                 | call                edi
            //   50                   | push                eax
            //   68????????           |                     
            //   83c608               | add                 esi, 8
            //   56                   | push                esi

        $sequence_6 = { 85ff 7669 8bc7 8bfb c1e002 895df8 }
            // n = 6, score = 100
            //   85ff                 | test                edi, edi
            //   7669                 | jbe                 0x6b
            //   8bc7                 | mov                 eax, edi
            //   8bfb                 | mov                 edi, ebx
            //   c1e002               | shl                 eax, 2
            //   895df8               | mov                 dword ptr [ebp - 8], ebx

        $sequence_7 = { 8d8de4feffff 895dfc 895dec e8???????? 8b7508 c645fc01 8b4630 }
            // n = 7, score = 100
            //   8d8de4feffff         | lea                 ecx, [ebp - 0x11c]
            //   895dfc               | mov                 dword ptr [ebp - 4], ebx
            //   895dec               | mov                 dword ptr [ebp - 0x14], ebx
            //   e8????????           |                     
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   8b4630               | mov                 eax, dword ptr [esi + 0x30]

        $sequence_8 = { 5e 8d4df0 c645fc01 e8???????? 8065fc00 8d4dec }
            // n = 6, score = 100
            //   5e                   | pop                 esi
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   e8????????           |                     
            //   8065fc00             | and                 byte ptr [ebp - 4], 0
            //   8d4dec               | lea                 ecx, [ebp - 0x14]

        $sequence_9 = { 5b c20400 ff31 ff15???????? c3 6a00 ff742408 }
            // n = 7, score = 100
            //   5b                   | pop                 ebx
            //   c20400               | ret                 4
            //   ff31                 | push                dword ptr [ecx]
            //   ff15????????         |                     
            //   c3                   | ret                 
            //   6a00                 | push                0
            //   ff742408             | push                dword ptr [esp + 8]

    condition:
        7 of them and filesize < 98304
}