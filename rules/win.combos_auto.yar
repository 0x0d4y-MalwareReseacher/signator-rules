rule win_combos_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.combos."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.combos"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7338 8bce 8bc6 c1f905 83e01f 8b0c8d201b0110 8d04c0 }
            // n = 7, score = 100
            //   7338                 | jae                 0x3a
            //   8bce                 | mov                 ecx, esi
            //   8bc6                 | mov                 eax, esi
            //   c1f905               | sar                 ecx, 5
            //   83e01f               | and                 eax, 0x1f
            //   8b0c8d201b0110       | mov                 ecx, dword ptr [ecx*4 + 0x10011b20]
            //   8d04c0               | lea                 eax, dword ptr [eax + eax*8]

        $sequence_1 = { 83c418 83f801 7e29 8b5604 6800010000 8d442408 52 }
            // n = 7, score = 100
            //   83c418               | add                 esp, 0x18
            //   83f801               | cmp                 eax, 1
            //   7e29                 | jle                 0x2b
            //   8b5604               | mov                 edx, dword ptr [esi + 4]
            //   6800010000           | push                0x100
            //   8d442408             | lea                 eax, dword ptr [esp + 8]
            //   52                   | push                edx

        $sequence_2 = { 755a ff15???????? b801000000 5f }
            // n = 4, score = 100
            //   755a                 | jne                 0x5c
            //   ff15????????         |                     
            //   b801000000           | mov                 eax, 1
            //   5f                   | pop                 edi

        $sequence_3 = { 56 53 e8???????? 83c444 83c608 33f8 56 }
            // n = 7, score = 100
            //   56                   | push                esi
            //   53                   | push                ebx
            //   e8????????           |                     
            //   83c444               | add                 esp, 0x44
            //   83c608               | add                 esi, 8
            //   33f8                 | xor                 edi, eax
            //   56                   | push                esi

        $sequence_4 = { c1e902 83e203 83f908 7229 f3a5 ff2495d84f0010 8bc7 }
            // n = 7, score = 100
            //   c1e902               | shr                 ecx, 2
            //   83e203               | and                 edx, 3
            //   83f908               | cmp                 ecx, 8
            //   7229                 | jb                  0x2b
            //   f3a5                 | rep movsd           dword ptr es:[edi], dword ptr [esi]
            //   ff2495d84f0010       | jmp                 dword ptr [edx*4 + 0x10004fd8]
            //   8bc7                 | mov                 eax, edi

        $sequence_5 = { 6a00 ffd5 8bd0 b9001b0000 }
            // n = 4, score = 100
            //   6a00                 | push                0
            //   ffd5                 | call                ebp
            //   8bd0                 | mov                 edx, eax
            //   b9001b0000           | mov                 ecx, 0x1b00

        $sequence_6 = { 83c408 6a0a ffd6 a1???????? 83f803 }
            // n = 5, score = 100
            //   83c408               | add                 esp, 8
            //   6a0a                 | push                0xa
            //   ffd6                 | call                esi
            //   a1????????           |                     
            //   83f803               | cmp                 eax, 3

        $sequence_7 = { ff15???????? 8945e4 85c0 741e 6810270000 8bd0 }
            // n = 6, score = 100
            //   ff15????????         |                     
            //   8945e4               | mov                 dword ptr [ebp - 0x1c], eax
            //   85c0                 | test                eax, eax
            //   741e                 | je                  0x20
            //   6810270000           | push                0x2710
            //   8bd0                 | mov                 edx, eax

        $sequence_8 = { 8b55fc 8a9238120110 0890011a0110 40 3bc7 76f5 }
            // n = 6, score = 100
            //   8b55fc               | mov                 edx, dword ptr [ebp - 4]
            //   8a9238120110         | mov                 dl, byte ptr [edx + 0x10011238]
            //   0890011a0110         | or                  byte ptr [eax + 0x10011a01], dl
            //   40                   | inc                 eax
            //   3bc7                 | cmp                 eax, edi
            //   76f5                 | jbe                 0xfffffff7

        $sequence_9 = { f2ae f7d1 49 8bf1 46 89b598feffff 89b5c4feffff }
            // n = 7, score = 100
            //   f2ae                 | repne scasb         al, byte ptr es:[edi]
            //   f7d1                 | not                 ecx
            //   49                   | dec                 ecx
            //   8bf1                 | mov                 esi, ecx
            //   46                   | inc                 esi
            //   89b598feffff         | mov                 dword ptr [ebp - 0x168], esi
            //   89b5c4feffff         | mov                 dword ptr [ebp - 0x13c], esi

    condition:
        7 of them and filesize < 163840
}