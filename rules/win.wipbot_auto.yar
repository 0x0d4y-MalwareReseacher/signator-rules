rule win_wipbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.wipbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wipbot"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7407 c7403400000000 8b45d4 c744240400000000 893424 89442408 ffd7 }
            // n = 7, score = 100
            //   7407                 | je                  9
            //   c7403400000000       | mov                 dword ptr [eax + 0x34], 0
            //   8b45d4               | mov                 eax, dword ptr [ebp - 0x2c]
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0
            //   893424               | mov                 dword ptr [esp], esi
            //   89442408             | mov                 dword ptr [esp + 8], eax
            //   ffd7                 | call                edi

        $sequence_1 = { 31d2 f3ab 8d8d94f9ffff c68593f9ffff2e c68594f9ffff4a c68595f9ffff4a c68596f9ffff40 }
            // n = 7, score = 100
            //   31d2                 | xor                 edx, edx
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8d8d94f9ffff         | lea                 ecx, [ebp - 0x66c]
            //   c68593f9ffff2e       | mov                 byte ptr [ebp - 0x66d], 0x2e
            //   c68594f9ffff4a       | mov                 byte ptr [ebp - 0x66c], 0x4a
            //   c68595f9ffff4a       | mov                 byte ptr [ebp - 0x66b], 0x4a
            //   c68596f9ffff40       | mov                 byte ptr [ebp - 0x66a], 0x40

        $sequence_2 = { 8d85d9fbffff c685eafbffff00 e8???????? 85c0 0f84db020000 bacd0e2eb6 b88a758b1f }
            // n = 7, score = 100
            //   8d85d9fbffff         | lea                 eax, [ebp - 0x427]
            //   c685eafbffff00       | mov                 byte ptr [ebp - 0x416], 0
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   0f84db020000         | je                  0x2e1
            //   bacd0e2eb6           | mov                 edx, 0xb62e0ecd
            //   b88a758b1f           | mov                 eax, 0x1f8b758a

        $sequence_3 = { c645e54b c645e646 8d3c08 88c2 3217 40 83f22e }
            // n = 7, score = 100
            //   c645e54b             | mov                 byte ptr [ebp - 0x1b], 0x4b
            //   c645e646             | mov                 byte ptr [ebp - 0x1a], 0x46
            //   8d3c08               | lea                 edi, [eax + ecx]
            //   88c2                 | mov                 dl, al
            //   3217                 | xor                 dl, byte ptr [edi]
            //   40                   | inc                 eax
            //   83f22e               | xor                 edx, 0x2e

        $sequence_4 = { c744240804000000 890424 89542404 c7459400000000 e8???????? eb59 895d98 }
            // n = 7, score = 100
            //   c744240804000000     | mov                 dword ptr [esp + 8], 4
            //   890424               | mov                 dword ptr [esp], eax
            //   89542404             | mov                 dword ptr [esp + 4], edx
            //   c7459400000000       | mov                 dword ptr [ebp - 0x6c], 0
            //   e8????????           |                     
            //   eb59                 | jmp                 0x5b
            //   895d98               | mov                 dword ptr [ebp - 0x68], ebx

        $sequence_5 = { 31c0 c645d70b 8d7dd7 c645d81f c645d914 }
            // n = 5, score = 100
            //   31c0                 | xor                 eax, eax
            //   c645d70b             | mov                 byte ptr [ebp - 0x29], 0xb
            //   8d7dd7               | lea                 edi, [ebp - 0x29]
            //   c645d81f             | mov                 byte ptr [ebp - 0x28], 0x1f
            //   c645d914             | mov                 byte ptr [ebp - 0x27], 0x14

        $sequence_6 = { 74c2 8d55dc 89542414 8b55d4 }
            // n = 4, score = 100
            //   74c2                 | je                  0xffffffc4
            //   8d55dc               | lea                 edx, [ebp - 0x24]
            //   89542414             | mov                 dword ptr [esp + 0x14], edx
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]

        $sequence_7 = { 53 89c3 83ec24 85c0 7504 31c0 }
            // n = 6, score = 100
            //   53                   | push                ebx
            //   89c3                 | mov                 ebx, eax
            //   83ec24               | sub                 esp, 0x24
            //   85c0                 | test                eax, eax
            //   7504                 | jne                 6
            //   31c0                 | xor                 eax, eax

        $sequence_8 = { 85c0 7502 ebdf 8b55d4 8b4314 c744240401000000 893424 }
            // n = 7, score = 100
            //   85c0                 | test                eax, eax
            //   7502                 | jne                 4
            //   ebdf                 | jmp                 0xffffffe1
            //   8b55d4               | mov                 edx, dword ptr [ebp - 0x2c]
            //   8b4314               | mov                 eax, dword ptr [ebx + 0x14]
            //   c744240401000000     | mov                 dword ptr [esp + 4], 1
            //   893424               | mov                 dword ptr [esp], esi

        $sequence_9 = { 8dbda6feffff f3aa 31c0 c685a5feffff2e 8dbda6feffff c685a6feffff0b c685a7feffff5c }
            // n = 7, score = 100
            //   8dbda6feffff         | lea                 edi, [ebp - 0x15a]
            //   f3aa                 | rep stosb           byte ptr es:[edi], al
            //   31c0                 | xor                 eax, eax
            //   c685a5feffff2e       | mov                 byte ptr [ebp - 0x15b], 0x2e
            //   8dbda6feffff         | lea                 edi, [ebp - 0x15a]
            //   c685a6feffff0b       | mov                 byte ptr [ebp - 0x15a], 0xb
            //   c685a7feffff5c       | mov                 byte ptr [ebp - 0x159], 0x5c

    condition:
        7 of them and filesize < 253952
}