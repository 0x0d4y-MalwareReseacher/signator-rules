rule win_wipbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.wipbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.wipbot"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 48 8d4c2430 89442428 e8???????? 8b442428 eb02 }
            // n = 6, score = 100
            //   48                   | dec                 eax
            //   8d4c2430             | lea                 ecx, dword ptr [esp + 0x30]
            //   89442428             | mov                 dword ptr [esp + 0x28], eax
            //   e8????????           |                     
            //   8b442428             | mov                 eax, dword ptr [esp + 0x28]
            //   eb02                 | jmp                 4

        $sequence_1 = { bb08000000 8945a0 66817f5acccc 7416 }
            // n = 4, score = 100
            //   bb08000000           | mov                 ebx, 8
            //   8945a0               | mov                 dword ptr [ebp - 0x60], eax
            //   66817f5acccc         | cmp                 word ptr [edi + 0x5a], 0xcccc
            //   7416                 | je                  0x18

        $sequence_2 = { 75f3 30c0 eb0b 41 8a1404 88540658 48 }
            // n = 7, score = 100
            //   75f3                 | jne                 0xfffffff5
            //   30c0                 | xor                 al, al
            //   eb0b                 | jmp                 0xd
            //   41                   | inc                 ecx
            //   8a1404               | mov                 dl, byte ptr [esp + eax]
            //   88540658             | mov                 byte ptr [esi + eax + 0x58], dl
            //   48                   | dec                 eax

        $sequence_3 = { 31d2 eb0d 89d1 ffc2 44 8a0408 44 }
            // n = 7, score = 100
            //   31d2                 | xor                 edx, edx
            //   eb0d                 | jmp                 0xf
            //   89d1                 | mov                 ecx, edx
            //   ffc2                 | inc                 edx
            //   44                   | inc                 esp
            //   8a0408               | mov                 al, byte ptr [eax + ecx]
            //   44                   | inc                 esp

        $sequence_4 = { ba01000000 89e5 57 56 53 81ecac060000 c744240400000000 }
            // n = 7, score = 100
            //   ba01000000           | mov                 edx, 1
            //   89e5                 | mov                 ebp, esp
            //   57                   | push                edi
            //   56                   | push                esi
            //   53                   | push                ebx
            //   81ecac060000         | sub                 esp, 0x6ac
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0

        $sequence_5 = { e8???????? 85c0 7426 c744240c00000000 c744240800000000 c744240411000000 891c24 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   85c0                 | test                eax, eax
            //   7426                 | je                  0x28
            //   c744240c00000000     | mov                 dword ptr [esp + 0xc], 0
            //   c744240800000000     | mov                 dword ptr [esp + 8], 0
            //   c744240411000000     | mov                 dword ptr [esp + 4], 0x11
            //   891c24               | mov                 dword ptr [esp], ebx

        $sequence_6 = { e8???????? 48 85c0 48 89c3 750f e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   48                   | dec                 eax
            //   85c0                 | test                eax, eax
            //   48                   | dec                 eax
            //   89c3                 | mov                 ebx, eax
            //   750f                 | jne                 0x11
            //   e8????????           |                     

        $sequence_7 = { 8a140f 42 881408 49 ffc1 }
            // n = 5, score = 100
            //   8a140f               | mov                 dl, byte ptr [edi + ecx]
            //   42                   | inc                 edx
            //   881408               | mov                 byte ptr [eax + ecx], dl
            //   49                   | dec                 ecx
            //   ffc1                 | inc                 ecx

        $sequence_8 = { c685a0f9ffff47 c685a1f9ffff42 c685a2f9ffff54 c685a3f9ffff01 c685a4f9ffff33 c685a5f9ffff35 c685a6f9ffff58 }
            // n = 7, score = 100
            //   c685a0f9ffff47       | mov                 byte ptr [ebp - 0x660], 0x47
            //   c685a1f9ffff42       | mov                 byte ptr [ebp - 0x65f], 0x42
            //   c685a2f9ffff54       | mov                 byte ptr [ebp - 0x65e], 0x54
            //   c685a3f9ffff01       | mov                 byte ptr [ebp - 0x65d], 1
            //   c685a4f9ffff33       | mov                 byte ptr [ebp - 0x65c], 0x33
            //   c685a5f9ffff35       | mov                 byte ptr [ebp - 0x65b], 0x35
            //   c685a6f9ffff58       | mov                 byte ptr [ebp - 0x65a], 0x58

        $sequence_9 = { c745dc00000000 c745d800000000 c745e000000000 894dc0 c745e400000000 e8???????? 8b4dc0 }
            // n = 7, score = 100
            //   c745dc00000000       | mov                 dword ptr [ebp - 0x24], 0
            //   c745d800000000       | mov                 dword ptr [ebp - 0x28], 0
            //   c745e000000000       | mov                 dword ptr [ebp - 0x20], 0
            //   894dc0               | mov                 dword ptr [ebp - 0x40], ecx
            //   c745e400000000       | mov                 dword ptr [ebp - 0x1c], 0
            //   e8????????           |                     
            //   8b4dc0               | mov                 ecx, dword ptr [ebp - 0x40]

    condition:
        7 of them and filesize < 253952
}