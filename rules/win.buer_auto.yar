rule win_buer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.buer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.buer"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 7d0f 8a0c46 880c18 40 3bc2 }
            // n = 5, score = 1100
            //   7d0f                 | jge                 0x11
            //   8a0c46               | mov                 cl, byte ptr [esi + eax*2]
            //   880c18               | mov                 byte ptr [eax + ebx], cl
            //   40                   | inc                 eax
            //   3bc2                 | cmp                 eax, edx

        $sequence_1 = { 8945f8 ff15???????? 59 59 85c0 7405 }
            // n = 6, score = 1100
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   ff15????????         |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   85c0                 | test                eax, eax
            //   7405                 | je                  7

        $sequence_2 = { 8b00 8b4010 8945fc 61 8b45fc }
            // n = 5, score = 1100
            //   8b00                 | mov                 eax, dword ptr [eax]
            //   8b4010               | mov                 eax, dword ptr [eax + 0x10]
            //   8945fc               | mov                 dword ptr [ebp - 4], eax
            //   61                   | popal               
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]

        $sequence_3 = { 8b45fc 03c7 894150 8b45ec }
            // n = 4, score = 1100
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   03c7                 | add                 eax, edi
            //   894150               | mov                 dword ptr [ecx + 0x50], eax
            //   8b45ec               | mov                 eax, dword ptr [ebp - 0x14]

        $sequence_4 = { 015158 8b55d8 894148 8b45dc 03c6 }
            // n = 5, score = 1100
            //   015158               | add                 dword ptr [ecx + 0x58], edx
            //   8b55d8               | mov                 edx, dword ptr [ebp - 0x28]
            //   894148               | mov                 dword ptr [ecx + 0x48], eax
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   03c6                 | add                 eax, esi

        $sequence_5 = { 8b734c 8b7b50 8b4340 0345f8 }
            // n = 4, score = 1100
            //   8b734c               | mov                 esi, dword ptr [ebx + 0x4c]
            //   8b7b50               | mov                 edi, dword ptr [ebx + 0x50]
            //   8b4340               | mov                 eax, dword ptr [ebx + 0x40]
            //   0345f8               | add                 eax, dword ptr [ebp - 8]

        $sequence_6 = { 40 3bc2 7cf1 eb02 33c0 5f }
            // n = 6, score = 1100
            //   40                   | inc                 eax
            //   3bc2                 | cmp                 eax, edx
            //   7cf1                 | jl                  0xfffffff3
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi

        $sequence_7 = { 6a04 50 8945f8 ff15???????? }
            // n = 4, score = 1100
            //   6a04                 | push                4
            //   50                   | push                eax
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   ff15????????         |                     

        $sequence_8 = { c1e106 33c8 8b442414 33ca }
            // n = 4, score = 300
            //   c1e106               | shl                 ecx, 6
            //   33c8                 | xor                 ecx, eax
            //   8b442414             | mov                 eax, dword ptr [esp + 0x14]
            //   33ca                 | xor                 ecx, edx

        $sequence_9 = { c1e106 0ad1 898424cc000000 88560f }
            // n = 4, score = 300
            //   c1e106               | shl                 ecx, 6
            //   0ad1                 | or                  dl, cl
            //   898424cc000000       | mov                 dword ptr [esp + 0xcc], eax
            //   88560f               | mov                 byte ptr [esi + 0xf], dl

        $sequence_10 = { c1e106 33c8 8bc3 c1e006 }
            // n = 4, score = 300
            //   c1e106               | shl                 ecx, 6
            //   33c8                 | xor                 ecx, eax
            //   8bc3                 | mov                 eax, ebx
            //   c1e006               | shl                 eax, 6

        $sequence_11 = { c1e303 890c24 895c2404 c744240804000000 }
            // n = 4, score = 300
            //   c1e303               | shl                 ebx, 3
            //   890c24               | mov                 dword ptr [esp], ecx
            //   895c2404             | mov                 dword ptr [esp + 4], ebx
            //   c744240804000000     | mov                 dword ptr [esp + 8], 4

        $sequence_12 = { c1e304 01d0 01d3 51 }
            // n = 4, score = 300
            //   c1e304               | shl                 ebx, 4
            //   01d0                 | add                 eax, edx
            //   01d3                 | add                 ebx, edx
            //   51                   | push                ecx

        $sequence_13 = { c1e008 89442430 8b8424e8000000 ff74242c 0fb6400c 99 09442434 }
            // n = 7, score = 300
            //   c1e008               | shl                 eax, 8
            //   89442430             | mov                 dword ptr [esp + 0x30], eax
            //   8b8424e8000000       | mov                 eax, dword ptr [esp + 0xe8]
            //   ff74242c             | push                dword ptr [esp + 0x2c]
            //   0fb6400c             | movzx               eax, byte ptr [eax + 0xc]
            //   99                   | cdq                 
            //   09442434             | or                  dword ptr [esp + 0x34], eax

        $sequence_14 = { c1e008 89442430 8b8424ec000000 0fb64025 }
            // n = 4, score = 300
            //   c1e008               | shl                 eax, 8
            //   89442430             | mov                 dword ptr [esp + 0x30], eax
            //   8b8424ec000000       | mov                 eax, dword ptr [esp + 0xec]
            //   0fb64025             | movzx               eax, byte ptr [eax + 0x25]

        $sequence_15 = { e8???????? 56 6a00 50 e8???????? 8a5c240e 31c0 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   56                   | push                esi
            //   6a00                 | push                0
            //   50                   | push                eax
            //   e8????????           |                     
            //   8a5c240e             | mov                 bl, byte ptr [esp + 0xe]
            //   31c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 3031040
}