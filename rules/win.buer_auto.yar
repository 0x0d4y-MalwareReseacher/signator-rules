rule win_buer_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.buer."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.buer"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { eb2d 6803010000 ff75f8 ff15???????? 59 59 }
            // n = 6, score = 1100
            //   eb2d                 | jmp                 0x2f
            //   6803010000           | push                0x103
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ff15????????         |                     
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx

        $sequence_1 = { f7d8 59 1bc0 83e0e0 83c057 }
            // n = 5, score = 1100
            //   f7d8                 | neg                 eax
            //   59                   | pop                 ecx
            //   1bc0                 | sbb                 eax, eax
            //   83e0e0               | and                 eax, 0xffffffe0
            //   83c057               | add                 eax, 0x57

        $sequence_2 = { 40 3bc2 7cf1 eb02 33c0 5f }
            // n = 6, score = 1100
            //   40                   | inc                 eax
            //   3bc2                 | cmp                 eax, edx
            //   7cf1                 | jl                  0xfffffff3
            //   eb02                 | jmp                 4
            //   33c0                 | xor                 eax, eax
            //   5f                   | pop                 edi

        $sequence_3 = { 56 57 60 64a130000000 8b400c 8b4014 }
            // n = 6, score = 1100
            //   56                   | push                esi
            //   57                   | push                edi
            //   60                   | pushal              
            //   64a130000000         | mov                 eax, dword ptr fs:[0x30]
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   8b4014               | mov                 eax, dword ptr [eax + 0x14]

        $sequence_4 = { 8b45dc 03c6 89414c 8b45fc 03c7 }
            // n = 5, score = 1100
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   03c6                 | add                 eax, esi
            //   89414c               | mov                 dword ptr [ecx + 0x4c], eax
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   03c7                 | add                 eax, edi

        $sequence_5 = { 8b734c 8b7b50 8b4340 0345f8 8b5b54 }
            // n = 5, score = 1100
            //   8b734c               | mov                 esi, dword ptr [ebx + 0x4c]
            //   8b7b50               | mov                 edi, dword ptr [ebx + 0x50]
            //   8b4340               | mov                 eax, dword ptr [ebx + 0x40]
            //   0345f8               | add                 eax, dword ptr [ebp - 8]
            //   8b5b54               | mov                 ebx, dword ptr [ebx + 0x54]

        $sequence_6 = { 7e13 3bc7 7d0f 8a0c46 880c18 }
            // n = 5, score = 1100
            //   7e13                 | jle                 0x15
            //   3bc7                 | cmp                 eax, edi
            //   7d0f                 | jge                 0x11
            //   8a0c46               | mov                 cl, byte ptr [esi + eax*2]
            //   880c18               | mov                 byte ptr [eax + ebx], cl

        $sequence_7 = { 03c2 8b55e8 015158 8b55d8 894148 8b45dc 03c6 }
            // n = 7, score = 1100
            //   03c2                 | add                 eax, edx
            //   8b55e8               | mov                 edx, dword ptr [ebp - 0x18]
            //   015158               | add                 dword ptr [ecx + 0x58], edx
            //   8b55d8               | mov                 edx, dword ptr [ebp - 0x28]
            //   894148               | mov                 dword ptr [ecx + 0x48], eax
            //   8b45dc               | mov                 eax, dword ptr [ebp - 0x24]
            //   03c6                 | add                 eax, esi

        $sequence_8 = { c1ed02 69ed7b140000 c1ed11 6bdd64 }
            // n = 4, score = 300
            //   c1ed02               | shr                 ebp, 2
            //   69ed7b140000         | imul                ebp, ebp, 0x147b
            //   c1ed11               | shr                 ebp, 0x11
            //   6bdd64               | imul                ebx, ebp, 0x64

        $sequence_9 = { c1eb1f c744241000004000 c744245800000000 c744245402000000 b0ff c744242800000000 }
            // n = 6, score = 300
            //   c1eb1f               | shr                 ebx, 0x1f
            //   c744241000004000     | mov                 dword ptr [esp + 0x10], 0x400000
            //   c744245800000000     | mov                 dword ptr [esp + 0x58], 0
            //   c744245402000000     | mov                 dword ptr [esp + 0x54], 2
            //   b0ff                 | mov                 al, 0xff
            //   c744242800000000     | mov                 dword ptr [esp + 0x28], 0

        $sequence_10 = { bf01000000 e9???????? 89d0 81fa00080000 7319 c1e806 }
            // n = 6, score = 300
            //   bf01000000           | mov                 edi, 1
            //   e9????????           |                     
            //   89d0                 | mov                 eax, edx
            //   81fa00080000         | cmp                 edx, 0x800
            //   7319                 | jae                 0x1b
            //   c1e806               | shr                 eax, 6

        $sequence_11 = { c1ed08 8b4c2410 0fb6c9 c1e708 }
            // n = 4, score = 300
            //   c1ed08               | shr                 ebp, 8
            //   8b4c2410             | mov                 ecx, dword ptr [esp + 0x10]
            //   0fb6c9               | movzx               ecx, cl
            //   c1e708               | shl                 edi, 8

        $sequence_12 = { be02000000 80cac0 80c980 881424 }
            // n = 4, score = 300
            //   be02000000           | mov                 esi, 2
            //   80cac0               | or                  dl, 0xc0
            //   80c980               | or                  cl, 0x80
            //   881424               | mov                 byte ptr [esp], dl

        $sequence_13 = { be02000000 31db 85c0 740e e8???????? }
            // n = 5, score = 300
            //   be02000000           | mov                 esi, 2
            //   31db                 | xor                 ebx, ebx
            //   85c0                 | test                eax, eax
            //   740e                 | je                  0x10
            //   e8????????           |                     

        $sequence_14 = { be02000000 81f900080000 720e 81f900000100 }
            // n = 4, score = 300
            //   be02000000           | mov                 esi, 2
            //   81f900080000         | cmp                 ecx, 0x800
            //   720e                 | jb                  0x10
            //   81f900000100         | cmp                 ecx, 0x10000

        $sequence_15 = { bf01000000 eb0b 56 e8???????? }
            // n = 4, score = 300
            //   bf01000000           | mov                 edi, 1
            //   eb0b                 | jmp                 0xd
            //   56                   | push                esi
            //   e8????????           |                     

    condition:
        7 of them and filesize < 3031040
}