rule win_stealbit_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.stealbit."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.stealbit"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c3 e8???????? 8b400c c3 55 }
            // n = 5, score = 300
            //   c3                   | ret                 
            //   e8????????           |                     
            //   8b400c               | mov                 eax, dword ptr [eax + 0xc]
            //   c3                   | ret                 
            //   55                   | push                ebp

        $sequence_1 = { 8d0488 8b0430 03c6 5e 5d c20400 56 }
            // n = 7, score = 300
            //   8d0488               | lea                 eax, dword ptr [eax + ecx*4]
            //   8b0430               | mov                 eax, dword ptr [eax + esi]
            //   03c6                 | add                 eax, esi
            //   5e                   | pop                 esi
            //   5d                   | pop                 ebp
            //   c20400               | ret                 4
            //   56                   | push                esi

        $sequence_2 = { 85c0 7431 e8???????? 8bc8 e8???????? ffd0 3d33270000 }
            // n = 7, score = 300
            //   85c0                 | test                eax, eax
            //   7431                 | je                  0x33
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   3d33270000           | cmp                 eax, 0x2733

        $sequence_3 = { 8b45b4 1b450c 6a00 6880969800 50 51 e8???????? }
            // n = 7, score = 300
            //   8b45b4               | mov                 eax, dword ptr [ebp - 0x4c]
            //   1b450c               | sbb                 eax, dword ptr [ebp + 0xc]
            //   6a00                 | push                0
            //   6880969800           | push                0x989680
            //   50                   | push                eax
            //   51                   | push                ecx
            //   e8????????           |                     

        $sequence_4 = { 56 8d4df4 e8???????? 8bc8 e8???????? 3d89f45ced 740b }
            // n = 7, score = 300
            //   56                   | push                esi
            //   8d4df4               | lea                 ecx, dword ptr [ebp - 0xc]
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   3d89f45ced           | cmp                 eax, 0xed5cf489
            //   740b                 | je                  0xd

        $sequence_5 = { 59 6a6f 668955b4 668945c6 }
            // n = 4, score = 300
            //   59                   | pop                 ecx
            //   6a6f                 | push                0x6f
            //   668955b4             | mov                 word ptr [ebp - 0x4c], dx
            //   668945c6             | mov                 word ptr [ebp - 0x3a], ax

        $sequence_6 = { 66899570feffff 66899574feffff 5a 6a6d 58 6a69 66898500feffff }
            // n = 7, score = 300
            //   66899570feffff       | mov                 word ptr [ebp - 0x190], dx
            //   66899574feffff       | mov                 word ptr [ebp - 0x18c], dx
            //   5a                   | pop                 edx
            //   6a6d                 | push                0x6d
            //   58                   | pop                 eax
            //   6a69                 | push                0x69
            //   66898500feffff       | mov                 word ptr [ebp - 0x200], ax

        $sequence_7 = { e8???????? 8bc8 e8???????? ffd0 0fb7c0 b92c080000 663bc1 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   8bc8                 | mov                 ecx, eax
            //   e8????????           |                     
            //   ffd0                 | call                eax
            //   0fb7c0               | movzx               eax, ax
            //   b92c080000           | mov                 ecx, 0x82c
            //   663bc1               | cmp                 ax, cx

        $sequence_8 = { 83ec38 53 56 57 33c0 8955f4 8d7de4 }
            // n = 7, score = 300
            //   83ec38               | sub                 esp, 0x38
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   33c0                 | xor                 eax, eax
            //   8955f4               | mov                 dword ptr [ebp - 0xc], edx
            //   8d7de4               | lea                 edi, dword ptr [ebp - 0x1c]

        $sequence_9 = { e8???????? 33c0 59 40 eb07 e8???????? 33c0 }
            // n = 7, score = 300
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax
            //   59                   | pop                 ecx
            //   40                   | inc                 eax
            //   eb07                 | jmp                 9
            //   e8????????           |                     
            //   33c0                 | xor                 eax, eax

    condition:
        7 of them and filesize < 131072
}