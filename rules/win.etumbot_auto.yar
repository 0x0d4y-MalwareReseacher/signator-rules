rule win_etumbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.etumbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.etumbot"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a8405fcfeffff 320437 8806 46 }
            // n = 4, score = 400
            //   8a8405fcfeffff       | mov                 al, byte ptr [ebp + eax - 0x104]
            //   320437               | xor                 al, byte ptr [edi + esi]
            //   8806                 | mov                 byte ptr [esi], al
            //   46                   | inc                 esi

        $sequence_1 = { 02c2 0fb6c0 8a8405fcfeffff 320437 }
            // n = 4, score = 400
            //   02c2                 | add                 al, dl
            //   0fb6c0               | movzx               eax, al
            //   8a8405fcfeffff       | mov                 al, byte ptr [ebp + eax - 0x104]
            //   320437               | xor                 al, byte ptr [edi + esi]

        $sequence_2 = { 57 0fbe38 33f6 33db }
            // n = 4, score = 300
            //   57                   | push                edi
            //   0fbe38               | movsx               edi, byte ptr [eax]
            //   33f6                 | xor                 esi, esi
            //   33db                 | xor                 ebx, ebx

        $sequence_3 = { 8bf1 0fbe0a c1e004 03c1 8bc8 81e1000000f0 7407 }
            // n = 7, score = 300
            //   8bf1                 | mov                 esi, ecx
            //   0fbe0a               | movsx               ecx, byte ptr [edx]
            //   c1e004               | shl                 eax, 4
            //   03c1                 | add                 eax, ecx
            //   8bc8                 | mov                 ecx, eax
            //   81e1000000f0         | and                 ecx, 0xf0000000
            //   7407                 | je                  9

        $sequence_4 = { c745bc646f7773 c745c05c5c4375 c745c47272656e c745c874566572 c745cc73696f6e }
            // n = 5, score = 300
            //   c745bc646f7773       | mov                 dword ptr [ebp - 0x44], 0x73776f64
            //   c745c05c5c4375       | mov                 dword ptr [ebp - 0x40], 0x75435c5c
            //   c745c47272656e       | mov                 dword ptr [ebp - 0x3c], 0x6e657272
            //   c745c874566572       | mov                 dword ptr [ebp - 0x38], 0x72655674
            //   c745cc73696f6e       | mov                 dword ptr [ebp - 0x34], 0x6e6f6973

        $sequence_5 = { c745a877617265 c745ac5c5c4d69 c745b063726f73 c745b46f66745c }
            // n = 4, score = 300
            //   c745a877617265       | mov                 dword ptr [ebp - 0x58], 0x65726177
            //   c745ac5c5c4d69       | mov                 dword ptr [ebp - 0x54], 0x694d5c5c
            //   c745b063726f73       | mov                 dword ptr [ebp - 0x50], 0x736f7263
            //   c745b46f66745c       | mov                 dword ptr [ebp - 0x4c], 0x5c74666f

        $sequence_6 = { ffd7 2bc3 3bc6 72ed }
            // n = 4, score = 300
            //   ffd7                 | call                edi
            //   2bc3                 | sub                 eax, ebx
            //   3bc6                 | cmp                 eax, esi
            //   72ed                 | jb                  0xffffffef

        $sequence_7 = { c745cc73696f6e c745d05c5c496e c745d47465726e c745d865742053 c745dc65747469 }
            // n = 5, score = 300
            //   c745cc73696f6e       | mov                 dword ptr [ebp - 0x34], 0x6e6f6973
            //   c745d05c5c496e       | mov                 dword ptr [ebp - 0x30], 0x6e495c5c
            //   c745d47465726e       | mov                 dword ptr [ebp - 0x2c], 0x6e726574
            //   c745d865742053       | mov                 dword ptr [ebp - 0x28], 0x53207465
            //   c745dc65747469       | mov                 dword ptr [ebp - 0x24], 0x69747465

        $sequence_8 = { 55 8bec 53 56 57 8b3d???????? ffd7 }
            // n = 7, score = 300
            //   55                   | push                ebp
            //   8bec                 | mov                 ebp, esp
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b3d????????         |                     
            //   ffd7                 | call                edi

        $sequence_9 = { 81e1000000f0 7407 8bf9 c1ef18 33c7 }
            // n = 5, score = 300
            //   81e1000000f0         | and                 ecx, 0xf0000000
            //   7407                 | je                  9
            //   8bf9                 | mov                 edi, ecx
            //   c1ef18               | shr                 edi, 0x18
            //   33c7                 | xor                 eax, edi

        $sequence_10 = { 8b3d???????? ffd7 8b7508 8bd8 69f660ea0000 }
            // n = 5, score = 300
            //   8b3d????????         |                     
            //   ffd7                 | call                edi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]
            //   8bd8                 | mov                 ebx, eax
            //   69f660ea0000         | imul                esi, esi, 0xea60

        $sequence_11 = { 23c1 42 4e 75df 5f }
            // n = 5, score = 300
            //   23c1                 | and                 eax, ecx
            //   42                   | inc                 edx
            //   4e                   | dec                 esi
            //   75df                 | jne                 0xffffffe1
            //   5f                   | pop                 edi

        $sequence_12 = { c1ef18 33c7 f7d1 23c1 42 }
            // n = 5, score = 300
            //   c1ef18               | shr                 edi, 0x18
            //   33c7                 | xor                 eax, edi
            //   f7d1                 | not                 ecx
            //   23c1                 | and                 eax, ecx
            //   42                   | inc                 edx

        $sequence_13 = { 6820a10700 50 68???????? 68???????? }
            // n = 4, score = 300
            //   6820a10700           | push                0x7a120
            //   50                   | push                eax
            //   68????????           |                     
            //   68????????           |                     

        $sequence_14 = { c645f569 c645f66e c645f769 c645f86e }
            // n = 4, score = 200
            //   c645f569             | mov                 byte ptr [ebp - 0xb], 0x69
            //   c645f66e             | mov                 byte ptr [ebp - 0xa], 0x6e
            //   c645f769             | mov                 byte ptr [ebp - 9], 0x69
            //   c645f86e             | mov                 byte ptr [ebp - 8], 0x6e

        $sequence_15 = { c645c062 c645c16c c645c265 c645c33b }
            // n = 4, score = 200
            //   c645c062             | mov                 byte ptr [ebp - 0x40], 0x62
            //   c645c16c             | mov                 byte ptr [ebp - 0x3f], 0x6c
            //   c645c265             | mov                 byte ptr [ebp - 0x3e], 0x65
            //   c645c33b             | mov                 byte ptr [ebp - 0x3d], 0x3b

        $sequence_16 = { 6a00 51 52 c644242850 885c2429 c644242a6f }
            // n = 6, score = 200
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   52                   | push                edx
            //   c644242850           | mov                 byte ptr [esp + 0x28], 0x50
            //   885c2429             | mov                 byte ptr [esp + 0x29], bl
            //   c644242a6f           | mov                 byte ptr [esp + 0x2a], 0x6f

        $sequence_17 = { 8b4df4 034df0 8b5508 0355ec }
            // n = 4, score = 200
            //   8b4df4               | mov                 ecx, dword ptr [ebp - 0xc]
            //   034df0               | add                 ecx, dword ptr [ebp - 0x10]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   0355ec               | add                 edx, dword ptr [ebp - 0x14]

        $sequence_18 = { c645ce3b c645cf20 c645d057 c645d169 c645d26e c645d364 }
            // n = 6, score = 200
            //   c645ce3b             | mov                 byte ptr [ebp - 0x32], 0x3b
            //   c645cf20             | mov                 byte ptr [ebp - 0x31], 0x20
            //   c645d057             | mov                 byte ptr [ebp - 0x30], 0x57
            //   c645d169             | mov                 byte ptr [ebp - 0x2f], 0x69
            //   c645d26e             | mov                 byte ptr [ebp - 0x2e], 0x6e
            //   c645d364             | mov                 byte ptr [ebp - 0x2d], 0x64

        $sequence_19 = { 83c204 3b5514 7608 83c8ff }
            // n = 4, score = 200
            //   83c204               | add                 edx, 4
            //   3b5514               | cmp                 edx, dword ptr [ebp + 0x14]
            //   7608                 | jbe                 0xa
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_20 = { 6a00 68???????? 6a00 6a00 6a00 51 68???????? }
            // n = 7, score = 200
            //   6a00                 | push                0
            //   68????????           |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   68????????           |                     

        $sequence_21 = { 8d4a01 83c404 8bd1 c1e902 f3ab 8bca 83e103 }
            // n = 7, score = 200
            //   8d4a01               | lea                 ecx, [edx + 1]
            //   83c404               | add                 esp, 4
            //   8bd1                 | mov                 edx, ecx
            //   c1e902               | shr                 ecx, 2
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax
            //   8bca                 | mov                 ecx, edx
            //   83e103               | and                 ecx, 3

        $sequence_22 = { ffd6 85c0 7417 8b44240c 50 }
            // n = 5, score = 200
            //   ffd6                 | call                esi
            //   85c0                 | test                eax, eax
            //   7417                 | je                  0x19
            //   8b44240c             | mov                 eax, dword ptr [esp + 0xc]
            //   50                   | push                eax

        $sequence_23 = { c645be74 c645bf69 c645c062 c645c16c }
            // n = 4, score = 200
            //   c645be74             | mov                 byte ptr [ebp - 0x42], 0x74
            //   c645bf69             | mov                 byte ptr [ebp - 0x41], 0x69
            //   c645c062             | mov                 byte ptr [ebp - 0x40], 0x62
            //   c645c16c             | mov                 byte ptr [ebp - 0x3f], 0x6c

        $sequence_24 = { 8d45fc 50 8d85f0eeffff 50 }
            // n = 4, score = 200
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   50                   | push                eax
            //   8d85f0eeffff         | lea                 eax, [ebp - 0x1110]
            //   50                   | push                eax

        $sequence_25 = { 46 40 bb02000000 89442458 eb73 85ed 7436 }
            // n = 7, score = 200
            //   46                   | inc                 esi
            //   40                   | inc                 eax
            //   bb02000000           | mov                 ebx, 2
            //   89442458             | mov                 dword ptr [esp + 0x58], eax
            //   eb73                 | jmp                 0x75
            //   85ed                 | test                ebp, ebp
            //   7436                 | je                  0x38

        $sequence_26 = { 8b4d08 83c101 894d08 8b550c 83ea03 }
            // n = 5, score = 200
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   83c101               | add                 ecx, 1
            //   894d08               | mov                 dword ptr [ebp + 8], ecx
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   83ea03               | sub                 edx, 3

        $sequence_27 = { 8d540964 52 e8???????? 83c404 }
            // n = 4, score = 200
            //   8d540964             | lea                 edx, [ecx + ecx + 0x64]
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4

        $sequence_28 = { c645d057 c645d153 c645d241 c645d353 }
            // n = 4, score = 200
            //   c645d057             | mov                 byte ptr [ebp - 0x30], 0x57
            //   c645d153             | mov                 byte ptr [ebp - 0x2f], 0x53
            //   c645d241             | mov                 byte ptr [ebp - 0x2e], 0x41
            //   c645d353             | mov                 byte ptr [ebp - 0x2d], 0x53

        $sequence_29 = { 0345f0 8b4d08 034dec 8a11 8810 8b45f0 }
            // n = 6, score = 200
            //   0345f0               | add                 eax, dword ptr [ebp - 0x10]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   034dec               | add                 ecx, dword ptr [ebp - 0x14]
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   8810                 | mov                 byte ptr [eax], dl
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]

        $sequence_30 = { c645d673 c645d720 c645d84e c645d954 c645da20 }
            // n = 5, score = 200
            //   c645d673             | mov                 byte ptr [ebp - 0x2a], 0x73
            //   c645d720             | mov                 byte ptr [ebp - 0x29], 0x20
            //   c645d84e             | mov                 byte ptr [ebp - 0x28], 0x4e
            //   c645d954             | mov                 byte ptr [ebp - 0x27], 0x54
            //   c645da20             | mov                 byte ptr [ebp - 0x26], 0x20

        $sequence_31 = { c645a453 c645a56f c645a666 c645a774 c645a877 c645a961 }
            // n = 6, score = 200
            //   c645a453             | mov                 byte ptr [ebp - 0x5c], 0x53
            //   c645a56f             | mov                 byte ptr [ebp - 0x5b], 0x6f
            //   c645a666             | mov                 byte ptr [ebp - 0x5a], 0x66
            //   c645a774             | mov                 byte ptr [ebp - 0x59], 0x74
            //   c645a877             | mov                 byte ptr [ebp - 0x58], 0x77
            //   c645a961             | mov                 byte ptr [ebp - 0x57], 0x61

        $sequence_32 = { 8d45fc c745fc04010000 50 8d45e0 ff750c 53 53 }
            // n = 7, score = 200
            //   8d45fc               | lea                 eax, [ebp - 4]
            //   c745fc04010000       | mov                 dword ptr [ebp - 4], 0x104
            //   50                   | push                eax
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   53                   | push                ebx
            //   53                   | push                ebx

        $sequence_33 = { c645fa74 c645fb2e c645fc64 c645fd6c c645fe6c }
            // n = 5, score = 200
            //   c645fa74             | mov                 byte ptr [ebp - 6], 0x74
            //   c645fb2e             | mov                 byte ptr [ebp - 5], 0x2e
            //   c645fc64             | mov                 byte ptr [ebp - 4], 0x64
            //   c645fd6c             | mov                 byte ptr [ebp - 3], 0x6c
            //   c645fe6c             | mov                 byte ptr [ebp - 2], 0x6c

        $sequence_34 = { c645da74 c645db69 c645dc6e c645dd67 c645de73 885ddf aa }
            // n = 7, score = 200
            //   c645da74             | mov                 byte ptr [ebp - 0x26], 0x74
            //   c645db69             | mov                 byte ptr [ebp - 0x25], 0x69
            //   c645dc6e             | mov                 byte ptr [ebp - 0x24], 0x6e
            //   c645dd67             | mov                 byte ptr [ebp - 0x23], 0x67
            //   c645de73             | mov                 byte ptr [ebp - 0x22], 0x73
            //   885ddf               | mov                 byte ptr [ebp - 0x21], bl
            //   aa                   | stosb               byte ptr es:[edi], al

        $sequence_35 = { 7408 ffb5ecfeffff ffd6 395d0c }
            // n = 4, score = 200
            //   7408                 | je                  0xa
            //   ffb5ecfeffff         | push                dword ptr [ebp - 0x114]
            //   ffd6                 | call                esi
            //   395d0c               | cmp                 dword ptr [ebp + 0xc], ebx

        $sequence_36 = { 83c104 3b4d14 7608 83c8ff }
            // n = 4, score = 200
            //   83c104               | add                 ecx, 4
            //   3b4d14               | cmp                 ecx, dword ptr [ebp + 0x14]
            //   7608                 | jbe                 0xa
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_37 = { c645c265 c645c33b c645c420 c645c54d c645c653 c645c749 c645c845 }
            // n = 7, score = 200
            //   c645c265             | mov                 byte ptr [ebp - 0x3e], 0x65
            //   c645c33b             | mov                 byte ptr [ebp - 0x3d], 0x3b
            //   c645c420             | mov                 byte ptr [ebp - 0x3c], 0x20
            //   c645c54d             | mov                 byte ptr [ebp - 0x3b], 0x4d
            //   c645c653             | mov                 byte ptr [ebp - 0x3a], 0x53
            //   c645c749             | mov                 byte ptr [ebp - 0x39], 0x49
            //   c645c845             | mov                 byte ptr [ebp - 0x38], 0x45

        $sequence_38 = { c685c2fdffff9f c685c3fdffff25 c685c4fdfffffe c685c5fdffff19 c685c6fdffff1b }
            // n = 5, score = 100
            //   c685c2fdffff9f       | mov                 byte ptr [ebp - 0x23e], 0x9f
            //   c685c3fdffff25       | mov                 byte ptr [ebp - 0x23d], 0x25
            //   c685c4fdfffffe       | mov                 byte ptr [ebp - 0x23c], 0xfe
            //   c685c5fdffff19       | mov                 byte ptr [ebp - 0x23b], 0x19
            //   c685c6fdffff1b       | mov                 byte ptr [ebp - 0x23a], 0x1b

        $sequence_39 = { 8b859cf7ffff 83c001 89859cf7ffff 80bd97f7ffff00 75bd 8d8d68f9ffff 83c1ff }
            // n = 7, score = 100
            //   8b859cf7ffff         | mov                 eax, dword ptr [ebp - 0x864]
            //   83c001               | add                 eax, 1
            //   89859cf7ffff         | mov                 dword ptr [ebp - 0x864], eax
            //   80bd97f7ffff00       | cmp                 byte ptr [ebp - 0x869], 0
            //   75bd                 | jne                 0xffffffbf
            //   8d8d68f9ffff         | lea                 ecx, [ebp - 0x698]
            //   83c1ff               | add                 ecx, -1

    condition:
        7 of them and filesize < 450560
}