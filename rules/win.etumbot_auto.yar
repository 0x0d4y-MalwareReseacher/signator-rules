rule win_etumbot_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.etumbot."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.etumbot"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8a8405fcfeffff 320437 8806 46 }
            // n = 4, score = 400
            //   8a8405fcfeffff       | mov                 al, byte ptr [ebp + eax - 0x104]
            //   320437               | xor                 al, byte ptr [edi + esi]
            //   8806                 | mov                 byte ptr [esi], al
            //   46                   | inc                 esi

        $sequence_1 = { 8a00 02c2 0fb6c0 8a8405fcfeffff 320437 }
            // n = 5, score = 400
            //   8a00                 | mov                 al, byte ptr [eax]
            //   02c2                 | add                 al, dl
            //   0fb6c0               | movzx               eax, al
            //   8a8405fcfeffff       | mov                 al, byte ptr [ebp + eax - 0x104]
            //   320437               | xor                 al, byte ptr [edi + esi]

        $sequence_2 = { 8d45f4 6820a10700 50 68???????? }
            // n = 4, score = 300
            //   8d45f4               | lea                 eax, dword ptr [ebp - 0xc]
            //   6820a10700           | push                0x7a120
            //   50                   | push                eax
            //   68????????           |                     

        $sequence_3 = { c745cc73696f6e c745d05c5c496e c745d47465726e c745d865742053 c745dc65747469 c745e06e677300 }
            // n = 6, score = 300
            //   c745cc73696f6e       | mov                 dword ptr [ebp - 0x34], 0x6e6f6973
            //   c745d05c5c496e       | mov                 dword ptr [ebp - 0x30], 0x6e495c5c
            //   c745d47465726e       | mov                 dword ptr [ebp - 0x2c], 0x6e726574
            //   c745d865742053       | mov                 dword ptr [ebp - 0x28], 0x53207465
            //   c745dc65747469       | mov                 dword ptr [ebp - 0x24], 0x69747465
            //   c745e06e677300       | mov                 dword ptr [ebp - 0x20], 0x73676e

        $sequence_4 = { 53 56 57 8b3d???????? ffd7 8b7508 }
            // n = 6, score = 300
            //   53                   | push                ebx
            //   56                   | push                esi
            //   57                   | push                edi
            //   8b3d????????         |                     
            //   ffd7                 | call                edi
            //   8b7508               | mov                 esi, dword ptr [ebp + 8]

        $sequence_5 = { c745bc646f7773 c745c05c5c4375 c745c47272656e c745c874566572 c745cc73696f6e }
            // n = 5, score = 300
            //   c745bc646f7773       | mov                 dword ptr [ebp - 0x44], 0x73776f64
            //   c745c05c5c4375       | mov                 dword ptr [ebp - 0x40], 0x75435c5c
            //   c745c47272656e       | mov                 dword ptr [ebp - 0x3c], 0x6e657272
            //   c745c874566572       | mov                 dword ptr [ebp - 0x38], 0x72655674
            //   c745cc73696f6e       | mov                 dword ptr [ebp - 0x34], 0x6e6f6973

        $sequence_6 = { c745a877617265 c745ac5c5c4d69 c745b063726f73 c745b46f66745c c745b85c57696e }
            // n = 5, score = 300
            //   c745a877617265       | mov                 dword ptr [ebp - 0x58], 0x65726177
            //   c745ac5c5c4d69       | mov                 dword ptr [ebp - 0x54], 0x694d5c5c
            //   c745b063726f73       | mov                 dword ptr [ebp - 0x50], 0x736f7263
            //   c745b46f66745c       | mov                 dword ptr [ebp - 0x4c], 0x5c74666f
            //   c745b85c57696e       | mov                 dword ptr [ebp - 0x48], 0x6e69575c

        $sequence_7 = { c745b46f66745c c745b85c57696e c745bc646f7773 c745c05c5c4375 }
            // n = 4, score = 300
            //   c745b46f66745c       | mov                 dword ptr [ebp - 0x4c], 0x5c74666f
            //   c745b85c57696e       | mov                 dword ptr [ebp - 0x48], 0x6e69575c
            //   c745bc646f7773       | mov                 dword ptr [ebp - 0x44], 0x73776f64
            //   c745c05c5c4375       | mov                 dword ptr [ebp - 0x40], 0x75435c5c

        $sequence_8 = { 7407 8bf9 c1ef18 33c7 f7d1 23c1 }
            // n = 6, score = 300
            //   7407                 | je                  9
            //   8bf9                 | mov                 edi, ecx
            //   c1ef18               | shr                 edi, 0x18
            //   33c7                 | xor                 eax, edi
            //   f7d1                 | not                 ecx
            //   23c1                 | and                 eax, ecx

        $sequence_9 = { 57 0fbe38 33f6 33db }
            // n = 4, score = 300
            //   57                   | push                edi
            //   0fbe38               | movsx               edi, byte ptr [eax]
            //   33f6                 | xor                 esi, esi
            //   33db                 | xor                 ebx, ebx

        $sequence_10 = { 03c1 8bc8 81e1000000f0 7407 8bf9 }
            // n = 5, score = 300
            //   03c1                 | add                 eax, ecx
            //   8bc8                 | mov                 ecx, eax
            //   81e1000000f0         | and                 ecx, 0xf0000000
            //   7407                 | je                  9
            //   8bf9                 | mov                 edi, ecx

        $sequence_11 = { 23c1 42 4e 75df 5f }
            // n = 5, score = 300
            //   23c1                 | and                 eax, ecx
            //   42                   | inc                 edx
            //   4e                   | dec                 esi
            //   75df                 | jne                 0xffffffe1
            //   5f                   | pop                 edi

        $sequence_12 = { 2bc3 3bc6 72ed 5f }
            // n = 4, score = 300
            //   2bc3                 | sub                 eax, ebx
            //   3bc6                 | cmp                 eax, esi
            //   72ed                 | jb                  0xffffffef
            //   5f                   | pop                 edi

        $sequence_13 = { 52 e8???????? 83c404 e9???????? 6a05 }
            // n = 5, score = 200
            //   52                   | push                edx
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   e9????????           |                     
            //   6a05                 | push                5

        $sequence_14 = { c645bf69 c645c062 c645c16c c645c265 c645c33b c645c420 }
            // n = 6, score = 200
            //   c645bf69             | mov                 byte ptr [ebp - 0x41], 0x69
            //   c645c062             | mov                 byte ptr [ebp - 0x40], 0x62
            //   c645c16c             | mov                 byte ptr [ebp - 0x3f], 0x6c
            //   c645c265             | mov                 byte ptr [ebp - 0x3e], 0x65
            //   c645c33b             | mov                 byte ptr [ebp - 0x3d], 0x3b
            //   c645c420             | mov                 byte ptr [ebp - 0x3c], 0x20

        $sequence_15 = { 884c2431 c644243273 88542434 885c2435 88442436 88442437 }
            // n = 6, score = 200
            //   884c2431             | mov                 byte ptr [esp + 0x31], cl
            //   c644243273           | mov                 byte ptr [esp + 0x32], 0x73
            //   88542434             | mov                 byte ptr [esp + 0x34], dl
            //   885c2435             | mov                 byte ptr [esp + 0x35], bl
            //   88442436             | mov                 byte ptr [esp + 0x36], al
            //   88442437             | mov                 byte ptr [esp + 0x37], al

        $sequence_16 = { 8d4a01 83c404 8bd1 c1e902 f3ab }
            // n = 5, score = 200
            //   8d4a01               | lea                 ecx, dword ptr [edx + 1]
            //   83c404               | add                 esp, 4
            //   8bd1                 | mov                 edx, ecx
            //   c1e902               | shr                 ecx, 2
            //   f3ab                 | rep stosd           dword ptr es:[edi], eax

        $sequence_17 = { e8???????? 59 3bc3 59 8906 7444 ff75f4 }
            // n = 7, score = 200
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   3bc3                 | cmp                 eax, ebx
            //   59                   | pop                 ecx
            //   8906                 | mov                 dword ptr [esi], eax
            //   7444                 | je                  0x46
            //   ff75f4               | push                dword ptr [ebp - 0xc]

        $sequence_18 = { c645d720 c645d84e c645d954 c645da20 }
            // n = 4, score = 200
            //   c645d720             | mov                 byte ptr [ebp - 0x29], 0x20
            //   c645d84e             | mov                 byte ptr [ebp - 0x28], 0x4e
            //   c645d954             | mov                 byte ptr [ebp - 0x27], 0x54
            //   c645da20             | mov                 byte ptr [ebp - 0x26], 0x20

        $sequence_19 = { 3bf3 57 c645bc41 c645bd42 c645be43 c645bf44 c645c045 }
            // n = 7, score = 200
            //   3bf3                 | cmp                 esi, ebx
            //   57                   | push                edi
            //   c645bc41             | mov                 byte ptr [ebp - 0x44], 0x41
            //   c645bd42             | mov                 byte ptr [ebp - 0x43], 0x42
            //   c645be43             | mov                 byte ptr [ebp - 0x42], 0x43
            //   c645bf44             | mov                 byte ptr [ebp - 0x41], 0x44
            //   c645c045             | mov                 byte ptr [ebp - 0x40], 0x45

        $sequence_20 = { 5e 8bc1 5b 83c47c c3 }
            // n = 5, score = 200
            //   5e                   | pop                 esi
            //   8bc1                 | mov                 eax, ecx
            //   5b                   | pop                 ebx
            //   83c47c               | add                 esp, 0x7c
            //   c3                   | ret                 

        $sequence_21 = { 8b45f4 0345f0 8b4d08 034dec }
            // n = 4, score = 200
            //   8b45f4               | mov                 eax, dword ptr [ebp - 0xc]
            //   0345f0               | add                 eax, dword ptr [ebp - 0x10]
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   034dec               | add                 ecx, dword ptr [ebp - 0x14]

        $sequence_22 = { 7505 83c8ff eb2a 8b45fc 881c30 8d85c4fcffff }
            // n = 6, score = 200
            //   7505                 | jne                 7
            //   83c8ff               | or                  eax, 0xffffffff
            //   eb2a                 | jmp                 0x2c
            //   8b45fc               | mov                 eax, dword ptr [ebp - 4]
            //   881c30               | mov                 byte ptr [eax + esi], bl
            //   8d85c4fcffff         | lea                 eax, dword ptr [ebp - 0x33c]

        $sequence_23 = { 50 c645f82f c645f969 c645fa6d c645fb61 }
            // n = 5, score = 200
            //   50                   | push                eax
            //   c645f82f             | mov                 byte ptr [ebp - 8], 0x2f
            //   c645f969             | mov                 byte ptr [ebp - 7], 0x69
            //   c645fa6d             | mov                 byte ptr [ebp - 6], 0x6d
            //   c645fb61             | mov                 byte ptr [ebp - 5], 0x61

        $sequence_24 = { 83c101 894d08 8b550c 83ea03 }
            // n = 4, score = 200
            //   83c101               | add                 ecx, 1
            //   894d08               | mov                 dword ptr [ebp + 8], ecx
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   83ea03               | sub                 edx, 3

        $sequence_25 = { 80e10f c0e102 c0eb06 02cb }
            // n = 4, score = 200
            //   80e10f               | and                 cl, 0xf
            //   c0e102               | shl                 cl, 2
            //   c0eb06               | shr                 bl, 6
            //   02cb                 | add                 cl, bl

        $sequence_26 = { c645c33b c645c420 c645c54d c645c653 c645c749 }
            // n = 5, score = 200
            //   c645c33b             | mov                 byte ptr [ebp - 0x3d], 0x3b
            //   c645c420             | mov                 byte ptr [ebp - 0x3c], 0x20
            //   c645c54d             | mov                 byte ptr [ebp - 0x3b], 0x4d
            //   c645c653             | mov                 byte ptr [ebp - 0x3a], 0x53
            //   c645c749             | mov                 byte ptr [ebp - 0x39], 0x49

        $sequence_27 = { 83c104 3b4d14 7608 83c8ff }
            // n = 4, score = 200
            //   83c104               | add                 ecx, 4
            //   3b4d14               | cmp                 ecx, dword ptr [ebp + 0x14]
            //   7608                 | jbe                 0xa
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_28 = { 83c204 3b5514 7608 83c8ff }
            // n = 4, score = 200
            //   83c204               | add                 edx, 4
            //   3b5514               | cmp                 edx, dword ptr [ebp + 0x14]
            //   7608                 | jbe                 0xa
            //   83c8ff               | or                  eax, 0xffffffff

        $sequence_29 = { 85ed 7436 8b442458 8b54245c 3bc2 0f835e010000 }
            // n = 6, score = 200
            //   85ed                 | test                ebp, ebp
            //   7436                 | je                  0x38
            //   8b442458             | mov                 eax, dword ptr [esp + 0x58]
            //   8b54245c             | mov                 edx, dword ptr [esp + 0x5c]
            //   3bc2                 | cmp                 eax, edx
            //   0f835e010000         | jae                 0x164

        $sequence_30 = { 8d85b4eaffff 6800100000 50 ff75f8 ffd7 85c0 }
            // n = 6, score = 200
            //   8d85b4eaffff         | lea                 eax, dword ptr [ebp - 0x154c]
            //   6800100000           | push                0x1000
            //   50                   | push                eax
            //   ff75f8               | push                dword ptr [ebp - 8]
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax

        $sequence_31 = { 8b4d08 034dec 8a11 8810 8b45f0 }
            // n = 5, score = 200
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   034dec               | add                 ecx, dword ptr [ebp - 0x14]
            //   8a11                 | mov                 dl, byte ptr [ecx]
            //   8810                 | mov                 byte ptr [eax], dl
            //   8b45f0               | mov                 eax, dword ptr [ebp - 0x10]

        $sequence_32 = { 034df0 8b5508 0355ec 8a02 }
            // n = 4, score = 200
            //   034df0               | add                 ecx, dword ptr [ebp - 0x10]
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   0355ec               | add                 edx, dword ptr [ebp - 0x14]
            //   8a02                 | mov                 al, byte ptr [edx]

        $sequence_33 = { c645d577 c645d673 c645d720 c645d84e }
            // n = 4, score = 200
            //   c645d577             | mov                 byte ptr [ebp - 0x2b], 0x77
            //   c645d673             | mov                 byte ptr [ebp - 0x2a], 0x73
            //   c645d720             | mov                 byte ptr [ebp - 0x29], 0x20
            //   c645d84e             | mov                 byte ptr [ebp - 0x28], 0x4e

        $sequence_34 = { 6a00 68???????? 6a00 6a00 6a00 51 }
            // n = 6, score = 200
            //   6a00                 | push                0
            //   68????????           |                     
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   51                   | push                ecx

        $sequence_35 = { c645973a c645982e c64599b5 c6459a35 c6459b44 c6459ce6 }
            // n = 6, score = 100
            //   c645973a             | mov                 byte ptr [ebp - 0x69], 0x3a
            //   c645982e             | mov                 byte ptr [ebp - 0x68], 0x2e
            //   c64599b5             | mov                 byte ptr [ebp - 0x67], 0xb5
            //   c6459a35             | mov                 byte ptr [ebp - 0x66], 0x35
            //   c6459b44             | mov                 byte ptr [ebp - 0x65], 0x44
            //   c6459ce6             | mov                 byte ptr [ebp - 0x64], 0xe6

    condition:
        7 of them and filesize < 450560
}