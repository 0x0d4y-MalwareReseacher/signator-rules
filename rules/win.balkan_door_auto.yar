rule win_balkan_door_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.balkan_door."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.balkan_door"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a02 6a10 6a04 68???????? 68???????? }
            // n = 5, score = 700
            //   6a02                 | push                2
            //   6a10                 | push                0x10
            //   6a04                 | push                4
            //   68????????           |                     
            //   68????????           |                     

        $sequence_1 = { 7403 56 ffd7 5e 32c0 5f }
            // n = 6, score = 700
            //   7403                 | je                  5
            //   56                   | push                esi
            //   ffd7                 | call                edi
            //   5e                   | pop                 esi
            //   32c0                 | xor                 al, al
            //   5f                   | pop                 edi

        $sequence_2 = { ffd7 85c0 741a 8d85d0fdffff }
            // n = 4, score = 700
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   741a                 | je                  0x1c
            //   8d85d0fdffff         | lea                 eax, [ebp - 0x230]

        $sequence_3 = { 50 ffd7 85c0 741a 8d85d0fdffff c785d0fdffff2c020000 }
            // n = 6, score = 700
            //   50                   | push                eax
            //   ffd7                 | call                edi
            //   85c0                 | test                eax, eax
            //   741a                 | je                  0x1c
            //   8d85d0fdffff         | lea                 eax, [ebp - 0x230]
            //   c785d0fdffff2c020000     | mov    dword ptr [ebp - 0x230], 0x22c

        $sequence_4 = { ffd7 5e 32c0 5f c3 }
            // n = 5, score = 700
            //   ffd7                 | call                edi
            //   5e                   | pop                 esi
            //   32c0                 | xor                 al, al
            //   5f                   | pop                 edi
            //   c3                   | ret                 

        $sequence_5 = { ff15???????? 8bf0 85f6 740b 6a00 6a00 56 }
            // n = 7, score = 700
            //   ff15????????         |                     
            //   8bf0                 | mov                 esi, eax
            //   85f6                 | test                esi, esi
            //   740b                 | je                  0xd
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   56                   | push                esi

        $sequence_6 = { 740b 6a00 6a00 56 ff15???????? 57 }
            // n = 6, score = 700
            //   740b                 | je                  0xd
            //   6a00                 | push                0
            //   6a00                 | push                0
            //   56                   | push                esi
            //   ff15????????         |                     
            //   57                   | push                edi

        $sequence_7 = { 8b85ccfdffff 33cd 5e e8???????? 8be5 }
            // n = 5, score = 700
            //   8b85ccfdffff         | mov                 eax, dword ptr [ebp - 0x234]
            //   33cd                 | xor                 ecx, ebp
            //   5e                   | pop                 esi
            //   e8????????           |                     
            //   8be5                 | mov                 esp, ebp

        $sequence_8 = { c3 8d85d0fdffff c785ccfdffff00000000 50 }
            // n = 4, score = 700
            //   c3                   | ret                 
            //   8d85d0fdffff         | lea                 eax, [ebp - 0x230]
            //   c785ccfdffff00000000     | mov    dword ptr [ebp - 0x234], 0
            //   50                   | push                eax

        $sequence_9 = { 6a00 56 ff15???????? 57 8b3d???????? ffd7 85f6 }
            // n = 7, score = 700
            //   6a00                 | push                0
            //   56                   | push                esi
            //   ff15????????         |                     
            //   57                   | push                edi
            //   8b3d????????         |                     
            //   ffd7                 | call                edi
            //   85f6                 | test                esi, esi

    condition:
        7 of them and filesize < 352256
}