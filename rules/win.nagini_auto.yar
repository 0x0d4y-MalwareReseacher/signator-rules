rule win_nagini_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.nagini."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nagini"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 53 53 53 e8???????? cc 56 6a04 }
            // n = 7, score = 100
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   53                   | push                ebx
            //   e8????????           |                     
            //   cc                   | int3                
            //   56                   | push                esi
            //   6a04                 | push                4

        $sequence_1 = { 05050f0303 110402 16 0907 190c0a }
            // n = 5, score = 100
            //   05050f0303           | add                 eax, 0x3030f05
            //   110402               | adc                 dword ptr [edx + eax], eax
            //   16                   | push                ss
            //   0907                 | or                  dword ptr [edi], eax
            //   190c0a               | sbb                 dword ptr [edx + ecx], ecx

        $sequence_2 = { 0f06 1b0f 0d1a0e0c19 0d0b160c0c 150b0b140a }
            // n = 5, score = 100
            //   0f06                 | clts                
            //   1b0f                 | sbb                 ecx, dword ptr [edi]
            //   0d1a0e0c19           | or                  eax, 0x190c0e1a
            //   0d0b160c0c           | or                  eax, 0xc0c160b
            //   150b0b140a           | adc                 eax, 0xa140b0b

        $sequence_3 = { 3d???????? 7dcb 83ceff eb20 e8???????? ff7514 }
            // n = 6, score = 100
            //   3d????????           |                     
            //   7dcb                 | jge                 0xffffffcd
            //   83ceff               | or                  esi, 0xffffffff
            //   eb20                 | jmp                 0x22
            //   e8????????           |                     
            //   ff7514               | push                dword ptr [ebp + 0x14]

        $sequence_4 = { 46 41 32423f 30403d 2f 41 3e303e }
            // n = 7, score = 100
            //   46                   | inc                 esi
            //   41                   | inc                 ecx
            //   32423f               | xor                 al, byte ptr [edx + 0x3f]
            //   30403d               | xor                 byte ptr [eax + 0x3d], al
            //   2f                   | das                 
            //   41                   | inc                 ecx
            //   3e303e               | xor                 byte ptr ds:[esi], bh

        $sequence_5 = { 7418 6a03 8802 42 8b048dc0914200 4e 5f }
            // n = 7, score = 100
            //   7418                 | je                  0x1a
            //   6a03                 | push                3
            //   8802                 | mov                 byte ptr [edx], al
            //   42                   | inc                 edx
            //   8b048dc0914200       | mov                 eax, dword ptr [ecx*4 + 0x4291c0]
            //   4e                   | dec                 esi
            //   5f                   | pop                 edi

        $sequence_6 = { 07 0a040509030409 030408 0203 07 0203 }
            // n = 6, score = 100
            //   07                   | pop                 es
            //   0a040509030409       | or                  al, byte ptr [eax + 0x9040309]
            //   030408               | add                 eax, dword ptr [eax + ecx]
            //   0203                 | add                 al, byte ptr [ebx]
            //   07                   | pop                 es
            //   0203                 | add                 al, byte ptr [ebx]

        $sequence_7 = { 0f85a4000000 837c242808 8d442414 68???????? 0f43442418 50 e8???????? }
            // n = 7, score = 100
            //   0f85a4000000         | jne                 0xaa
            //   837c242808           | cmp                 dword ptr [esp + 0x28], 8
            //   8d442414             | lea                 eax, dword ptr [esp + 0x14]
            //   68????????           |                     
            //   0f43442418           | cmovae              eax, dword ptr [esp + 0x18]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_8 = { 0b05???????? 0a02 020a 0202 0f06 0313 0a06 }
            // n = 7, score = 100
            //   0b05????????         |                     
            //   0a02                 | or                  al, byte ptr [edx]
            //   020a                 | add                 cl, byte ptr [edx]
            //   0202                 | add                 al, byte ptr [edx]
            //   0f06                 | clts                
            //   0313                 | add                 edx, dword ptr [ebx]
            //   0a06                 | or                  al, byte ptr [esi]

        $sequence_9 = { c60600 8b5de0 a1???????? 85c0 7407 50 e8???????? }
            // n = 7, score = 100
            //   c60600               | mov                 byte ptr [esi], 0
            //   8b5de0               | mov                 ebx, dword ptr [ebp - 0x20]
            //   a1????????           |                     
            //   85c0                 | test                eax, eax
            //   7407                 | je                  9
            //   50                   | push                eax
            //   e8????????           |                     

    condition:
        7 of them and filesize < 12820480
}