rule win_nagini_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.nagini."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nagini"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 59 59 8d4518 c7451844e44100 }
            // n = 4, score = 100
            //   59                   | pop                 ecx
            //   59                   | pop                 ecx
            //   8d4518               | lea                 eax, [ebp + 0x18]
            //   c7451844e44100       | mov                 dword ptr [ebp + 0x18], 0x41e444

        $sequence_1 = { 03d3 83fb1f 0f8715040000 ff249da0c64000 8b46e4 3b42e4 }
            // n = 6, score = 100
            //   03d3                 | add                 edx, ebx
            //   83fb1f               | cmp                 ebx, 0x1f
            //   0f8715040000         | ja                  0x41b
            //   ff249da0c64000       | jmp                 dword ptr [ebx*4 + 0x40c6a0]
            //   8b46e4               | mov                 eax, dword ptr [esi - 0x1c]
            //   3b42e4               | cmp                 eax, dword ptr [edx - 0x1c]

        $sequence_2 = { 07 07 0505070505 07 0505070505 07 }
            // n = 6, score = 100
            //   07                   | pop                 es
            //   07                   | pop                 es
            //   0505070505           | add                 eax, 0x5050705
            //   07                   | pop                 es
            //   0505070505           | add                 eax, 0x5050705
            //   07                   | pop                 es

        $sequence_3 = { c705????????181c4100 a3???????? c705????????a91c4100 c705????????031d4100 c705????????881d4100 }
            // n = 5, score = 100
            //   c705????????181c4100     |     
            //   a3????????           |                     
            //   c705????????a91c4100     |     
            //   c705????????031d4100     |     
            //   c705????????881d4100     |     

        $sequence_4 = { 07 2317 05261b052b 20042c 22042b 20042b 1e }
            // n = 7, score = 100
            //   07                   | pop                 es
            //   2317                 | and                 edx, dword ptr [edi]
            //   05261b052b           | add                 eax, 0x2b051b26
            //   20042c               | and                 byte ptr [esp + ebp], al
            //   22042b               | and                 al, byte ptr [ebx + ebp]
            //   20042b               | and                 byte ptr [ebx + ebp], al
            //   1e                   | push                ds

        $sequence_5 = { 83c404 8945f8 8d4df0 6a00 51 ff75fc 50 }
            // n = 7, score = 100
            //   83c404               | add                 esp, 4
            //   8945f8               | mov                 dword ptr [ebp - 8], eax
            //   8d4df0               | lea                 ecx, [ebp - 0x10]
            //   6a00                 | push                0
            //   51                   | push                ecx
            //   ff75fc               | push                dword ptr [ebp - 4]
            //   50                   | push                eax

        $sequence_6 = { 0b05???????? 0a02 020a 0202 0f06 0313 0a06 }
            // n = 7, score = 100
            //   0b05????????         |                     
            //   0a02                 | or                  al, byte ptr [edx]
            //   020a                 | add                 cl, byte ptr [edx]
            //   0202                 | add                 al, byte ptr [edx]
            //   0f06                 | clts                
            //   0313                 | add                 edx, dword ptr [ebx]
            //   0a06                 | or                  al, byte ptr [esi]

        $sequence_7 = { 17 0e 1b12 0918 0f06 1b0f }
            // n = 6, score = 100
            //   17                   | pop                 ss
            //   0e                   | push                cs
            //   1b12                 | sbb                 edx, dword ptr [edx]
            //   0918                 | or                  dword ptr [eax], ebx
            //   0f06                 | clts                
            //   1b0f                 | sbb                 ecx, dword ptr [edi]

        $sequence_8 = { 6a55 68a0000000 6a0a 6a00 ff35???????? ff15???????? }
            // n = 6, score = 100
            //   6a55                 | push                0x55
            //   68a0000000           | push                0xa0
            //   6a0a                 | push                0xa
            //   6a00                 | push                0
            //   ff35????????         |                     
            //   ff15????????         |                     

        $sequence_9 = { 33f6 50 6a02 53 33ff ff15???????? }
            // n = 6, score = 100
            //   33f6                 | xor                 esi, esi
            //   50                   | push                eax
            //   6a02                 | push                2
            //   53                   | push                ebx
            //   33ff                 | xor                 edi, edi
            //   ff15????????         |                     

    condition:
        7 of them and filesize < 12820480
}