rule win_urlzone_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.urlzone."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.urlzone"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 80fc39 7f05 80ec30 eb22 }
            // n = 4, score = 3000
            //   80fc39               | cmp                 ah, 0x39
            //   7f05                 | jg                  7
            //   80ec30               | sub                 ah, 0x30
            //   eb22                 | jmp                 0x24

        $sequence_1 = { 57 51 89c7 89d1 31c0 f3aa }
            // n = 6, score = 3000
            //   57                   | push                edi
            //   51                   | push                ecx
            //   89c7                 | mov                 edi, eax
            //   89d1                 | mov                 ecx, edx
            //   31c0                 | xor                 eax, eax
            //   f3aa                 | rep stosb           byte ptr es:[edi], al

        $sequence_2 = { 80fc30 7c63 80fc39 7f05 }
            // n = 4, score = 3000
            //   80fc30               | cmp                 ah, 0x30
            //   7c63                 | jl                  0x65
            //   80fc39               | cmp                 ah, 0x39
            //   7f05                 | jg                  7

        $sequence_3 = { 7f08 80e841 80c00a eb10 80f861 }
            // n = 5, score = 3000
            //   7f08                 | jg                  0xa
            //   80e841               | sub                 al, 0x41
            //   80c00a               | add                 al, 0xa
            //   eb10                 | jmp                 0x12
            //   80f861               | cmp                 al, 0x61

        $sequence_4 = { 8a0a 42 80e930 80f909 }
            // n = 4, score = 3000
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   42                   | inc                 edx
            //   80e930               | sub                 cl, 0x30
            //   80f909               | cmp                 cl, 9

        $sequence_5 = { 80f909 7708 8d0480 8d0441 ebed 9d 7502 }
            // n = 7, score = 3000
            //   80f909               | cmp                 cl, 9
            //   7708                 | ja                  0xa
            //   8d0480               | lea                 eax, dword ptr [eax + eax*4]
            //   8d0441               | lea                 eax, dword ptr [ecx + eax*2]
            //   ebed                 | jmp                 0xffffffef
            //   9d                   | popfd               
            //   7502                 | jne                 4

        $sequence_6 = { 31c0 85d2 7428 31c9 8a0a 42 80f92d }
            // n = 7, score = 3000
            //   31c0                 | xor                 eax, eax
            //   85d2                 | test                edx, edx
            //   7428                 | je                  0x2a
            //   31c9                 | xor                 ecx, ecx
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   42                   | inc                 edx
            //   80f92d               | cmp                 cl, 0x2d

        $sequence_7 = { 7428 31c9 8a0a 42 80f92d 9c 7405 }
            // n = 7, score = 3000
            //   7428                 | je                  0x2a
            //   31c9                 | xor                 ecx, ecx
            //   8a0a                 | mov                 cl, byte ptr [edx]
            //   42                   | inc                 edx
            //   80f92d               | cmp                 cl, 0x2d
            //   9c                   | pushfd              
            //   7405                 | je                  7

        $sequence_8 = { 80fc46 7f08 80ec41 80c40a eb10 }
            // n = 5, score = 3000
            //   80fc46               | cmp                 ah, 0x46
            //   7f08                 | jg                  0xa
            //   80ec41               | sub                 ah, 0x41
            //   80c40a               | add                 ah, 0xa
            //   eb10                 | jmp                 0x12

        $sequence_9 = { 31c0 85d2 7428 31c9 }
            // n = 4, score = 3000
            //   31c0                 | xor                 eax, eax
            //   85d2                 | test                edx, edx
            //   7428                 | je                  0x2a
            //   31c9                 | xor                 ecx, ecx

    condition:
        7 of them and filesize < 704512
}