rule win_nimrev_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.nimrev."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.nimrev"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 0f95c0 8845f7 eb01 90 807df700 }
            // n = 5, score = 200
            //   0f95c0               | nop                 
            //   8845f7               | dec                 eax
            //   eb01                 | add                 dword ptr [ebp - 8], 1
            //   90                   | jmp                 0x253
            //   807df700             | nop                 

        $sequence_1 = { 0fb600 3c5f 7507 b801000000 }
            // n = 4, score = 200
            //   0fb600               | nop                 
            //   3c5f                 | setg                al
            //   7507                 | mov                 byte ptr [ebp - 0xa], al
            //   b801000000           | cmp                 byte ptr [ebp - 0xa], 0

        $sequence_2 = { ffd0 90 e9???????? 90 b9d0070000 e8???????? }
            // n = 6, score = 200
            //   ffd0                 | mov                 dword ptr [ebp - 0x28], 0x4246f6
            //   90                   | mov                 eax, dword ptr [ebp - 0x20]
            //   e9????????           |                     
            //   90                   | test                eax, eax
            //   b9d0070000           | sete                al
            //   e8????????           |                     

        $sequence_3 = { 90 e9???????? 90 b9d0070000 e8???????? }
            // n = 5, score = 200
            //   90                   | add                 eax, edx
            //   e9????????           |                     
            //   90                   | mov                 dword ptr [esp], eax
            //   b9d0070000           | mov                 eax, dword ptr [ebp - 0xa0]
            //   e8????????           |                     

        $sequence_4 = { e8???????? e8???????? eb04 90 eb01 90 }
            // n = 6, score = 200
            //   e8????????           |                     
            //   e8????????           |                     
            //   eb04                 | mov                 edx, dword ptr [ebp - 0x24]
            //   90                   | mov                 dword ptr [esp], eax
            //   eb01                 | mov                 edx, dword ptr [ebp - 0x54]
            //   90                   | mov                 dword ptr [ebp - 0x10], eax

        $sequence_5 = { b800000000 8845f7 eb01 90 }
            // n = 4, score = 200
            //   b800000000           | mov                 ecx, eax
            //   8845f7               | mov                 dword ptr [ebp - 0x18], 0x378
            //   eb01                 | mov                 eax, dword ptr [ebp - 0x30]
            //   90                   | mov                 ecx, eax

        $sequence_6 = { e8???????? eb01 90 90 }
            // n = 4, score = 200
            //   e8????????           |                     
            //   eb01                 | mov                 eax, dword ptr [eax + 0x1890]
            //   90                   | mov                 dword ptr [ebp - 0x20], 0x110
            //   90                   | mov                 dword ptr [ebp - 0x1c], 0x422a4f

        $sequence_7 = { 7507 e8???????? eb01 90 }
            // n = 4, score = 200
            //   7507                 | dec                 eax
            //   e8????????           |                     
            //   eb01                 | lea                 eax, [0x12273]
            //   90                   | dec                 eax

        $sequence_8 = { 0f93c0 83f001 84c0 7408 }
            // n = 4, score = 200
            //   0f93c0               | mov                 dword ptr [ebp - 0x50], 0x97f
            //   83f001               | dec                 eax
            //   84c0                 | lea                 eax, [0x100d9]
            //   7408                 | dec                 eax

        $sequence_9 = { eb01 90 e8???????? 90 }
            // n = 4, score = 200
            //   eb01                 | mov                 dword ptr [ebp - 0x14], 0x422b17
            //   90                   | mov                 dword ptr [ebp - 0x18], 0x424015
            //   e8????????           |                     
            //   90                   | mov                 dword ptr [ebp - 0x10], 0x423ff4

    condition:
        7 of them and filesize < 1141760
}