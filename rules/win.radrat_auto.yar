rule win_radrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-11-21"
        version = "1"
        description = "Detects win.radrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.radrat"
        malpedia_rule_date = "20221118"
        malpedia_hash = "e0702e2e6d1d00da65c8a29a4ebacd0a4c59e1af"
        malpedia_version = "20221125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d4dcc e8???????? 8b4508 e9???????? 8a5524 52 8b4520 }
            // n = 7, score = 100
            //   8d4dcc               | lea                 ecx, [ebp - 0x34]
            //   e8????????           |                     
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   e9????????           |                     
            //   8a5524               | mov                 dl, byte ptr [ebp + 0x24]
            //   52                   | push                edx
            //   8b4520               | mov                 eax, dword ptr [ebp + 0x20]

        $sequence_1 = { e8???????? c745fc00000000 8d4dc4 e8???????? c645fc01 0fbe4d0c 83f940 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c745fc00000000       | mov                 dword ptr [ebp - 4], 0
            //   8d4dc4               | lea                 ecx, [ebp - 0x3c]
            //   e8????????           |                     
            //   c645fc01             | mov                 byte ptr [ebp - 4], 1
            //   0fbe4d0c             | movsx               ecx, byte ptr [ebp + 0xc]
            //   83f940               | cmp                 ecx, 0x40

        $sequence_2 = { e8???????? 8a85f0feffff eb28 c685ecfeffff01 c645fc00 8d4dcc e8???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8a85f0feffff         | mov                 al, byte ptr [ebp - 0x110]
            //   eb28                 | jmp                 0x2a
            //   c685ecfeffff01       | mov                 byte ptr [ebp - 0x114], 1
            //   c645fc00             | mov                 byte ptr [ebp - 4], 0
            //   8d4dcc               | lea                 ecx, [ebp - 0x34]
            //   e8????????           |                     

        $sequence_3 = { 8d855cfbffff 50 e8???????? 83c40c 898574f8ffff 8b8d74f8ffff 898d20f9ffff }
            // n = 7, score = 100
            //   8d855cfbffff         | lea                 eax, [ebp - 0x4a4]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c40c               | add                 esp, 0xc
            //   898574f8ffff         | mov                 dword ptr [ebp - 0x78c], eax
            //   8b8d74f8ffff         | mov                 ecx, dword ptr [ebp - 0x78c]
            //   898d20f9ffff         | mov                 dword ptr [ebp - 0x6e0], ecx

        $sequence_4 = { e8???????? 6a37 8b4d08 e8???????? 8b9540f9ffff 83ca01 899540f9ffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   6a37                 | push                0x37
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8b9540f9ffff         | mov                 edx, dword ptr [ebp - 0x6c0]
            //   83ca01               | or                  edx, 1
            //   899540f9ffff         | mov                 dword ptr [ebp - 0x6c0], edx

        $sequence_5 = { 8b4508 e9???????? 8b4d08 e8???????? 8b9568feffff 83ca01 899568feffff }
            // n = 7, score = 100
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]
            //   e9????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   e8????????           |                     
            //   8b9568feffff         | mov                 edx, dword ptr [ebp - 0x198]
            //   83ca01               | or                  edx, 1
            //   899568feffff         | mov                 dword ptr [ebp - 0x198], edx

        $sequence_6 = { 8d85e8adffff 50 68204e0000 8d8decadffff 51 8b5508 52 }
            // n = 7, score = 100
            //   8d85e8adffff         | lea                 eax, [ebp - 0x5218]
            //   50                   | push                eax
            //   68204e0000           | push                0x4e20
            //   8d8decadffff         | lea                 ecx, [ebp - 0x5214]
            //   51                   | push                ecx
            //   8b5508               | mov                 edx, dword ptr [ebp + 8]
            //   52                   | push                edx

        $sequence_7 = { c745fc01000000 c745ec02000000 8b550c 8b4218 8945e8 8b4d0c 8b5110 }
            // n = 7, score = 100
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   c745ec02000000       | mov                 dword ptr [ebp - 0x14], 2
            //   8b550c               | mov                 edx, dword ptr [ebp + 0xc]
            //   8b4218               | mov                 eax, dword ptr [edx + 0x18]
            //   8945e8               | mov                 dword ptr [ebp - 0x18], eax
            //   8b4d0c               | mov                 ecx, dword ptr [ebp + 0xc]
            //   8b5110               | mov                 edx, dword ptr [ecx + 0x10]

        $sequence_8 = { 8d8d4cffffff e8???????? c645fc03 8d8d24ffffff e8???????? c645fc04 837d8000 }
            // n = 7, score = 100
            //   8d8d4cffffff         | lea                 ecx, [ebp - 0xb4]
            //   e8????????           |                     
            //   c645fc03             | mov                 byte ptr [ebp - 4], 3
            //   8d8d24ffffff         | lea                 ecx, [ebp - 0xdc]
            //   e8????????           |                     
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   837d8000             | cmp                 dword ptr [ebp - 0x80], 0

        $sequence_9 = { 8d8d40c8ffff e8???????? c745fc02000000 8d8d98c7ffff e8???????? e9???????? 83bd54ffffff3e }
            // n = 7, score = 100
            //   8d8d40c8ffff         | lea                 ecx, [ebp - 0x37c0]
            //   e8????????           |                     
            //   c745fc02000000       | mov                 dword ptr [ebp - 4], 2
            //   8d8d98c7ffff         | lea                 ecx, [ebp - 0x3868]
            //   e8????????           |                     
            //   e9????????           |                     
            //   83bd54ffffff3e       | cmp                 dword ptr [ebp - 0xac], 0x3e

    condition:
        7 of them and filesize < 2080768
}