rule win_radrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-07-11"
        version = "1"
        description = "Detects win.radrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.radrat"
        malpedia_rule_date = "20230705"
        malpedia_hash = "42d0574f4405bd7d2b154d321d345acb18834a41"
        malpedia_version = "20230715"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { c7459402000000 c7459801000000 c7458000000000 c645fc04 8d8558ffffff 50 8d4d80 }
            // n = 7, score = 100
            //   c7459402000000       | mov                 dword ptr [ebp - 0x6c], 2
            //   c7459801000000       | mov                 dword ptr [ebp - 0x68], 1
            //   c7458000000000       | mov                 dword ptr [ebp - 0x80], 0
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8d8558ffffff         | lea                 eax, [ebp - 0xa8]
            //   50                   | push                eax
            //   8d4d80               | lea                 ecx, [ebp - 0x80]

        $sequence_1 = { c745fcffffffff 8d4d80 e8???????? 8a85088fffff e9???????? 6a00 8d8594c6ffff }
            // n = 7, score = 100
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8d4d80               | lea                 ecx, [ebp - 0x80]
            //   e8????????           |                     
            //   8a85088fffff         | mov                 al, byte ptr [ebp - 0x70f8]
            //   e9????????           |                     
            //   6a00                 | push                0
            //   8d8594c6ffff         | lea                 eax, [ebp - 0x396c]

        $sequence_2 = { c3 8b8568ffffff 50 e8???????? 59 c3 8b8d68ffffff }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8b8568ffffff         | mov                 eax, dword ptr [ebp - 0x98]
            //   50                   | push                eax
            //   e8????????           |                     
            //   59                   | pop                 ecx
            //   c3                   | ret                 
            //   8b8d68ffffff         | mov                 ecx, dword ptr [ebp - 0x98]

        $sequence_3 = { e8???????? 8945bc e8???????? 83c430 8845b8 8b45b8 25ff000000 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8945bc               | mov                 dword ptr [ebp - 0x44], eax
            //   e8????????           |                     
            //   83c430               | add                 esp, 0x30
            //   8845b8               | mov                 byte ptr [ebp - 0x48], al
            //   8b45b8               | mov                 eax, dword ptr [ebp - 0x48]
            //   25ff000000           | and                 eax, 0xff

        $sequence_4 = { 8d8d1082ffff e8???????? eb85 6a00 8d957cbbffff 52 8b4d08 }
            // n = 7, score = 100
            //   8d8d1082ffff         | lea                 ecx, [ebp - 0x7df0]
            //   e8????????           |                     
            //   eb85                 | jmp                 0xffffff87
            //   6a00                 | push                0
            //   8d957cbbffff         | lea                 edx, [ebp - 0x4484]
            //   52                   | push                edx
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_5 = { e8???????? 8a85c480ffff e9???????? c745fc02000000 8d8d30b2ffff e8???????? e9???????? }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8a85c480ffff         | mov                 al, byte ptr [ebp - 0x7f3c]
            //   e9????????           |                     
            //   c745fc02000000       | mov                 dword ptr [ebp - 4], 2
            //   8d8d30b2ffff         | lea                 ecx, [ebp - 0x4dd0]
            //   e8????????           |                     
            //   e9????????           |                     

        $sequence_6 = { c6459000 c745fcffffffff 8d4dc8 e8???????? 8a4590 e9???????? 8b4d08 }
            // n = 7, score = 100
            //   c6459000             | mov                 byte ptr [ebp - 0x70], 0
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8d4dc8               | lea                 ecx, [ebp - 0x38]
            //   e8????????           |                     
            //   8a4590               | mov                 al, byte ptr [ebp - 0x70]
            //   e9????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_7 = { 8b8d68fbffff 83c170 e8???????? 8b8d68fbffff e8???????? 25ff000000 85c0 }
            // n = 7, score = 100
            //   8b8d68fbffff         | mov                 ecx, dword ptr [ebp - 0x498]
            //   83c170               | add                 ecx, 0x70
            //   e8????????           |                     
            //   8b8d68fbffff         | mov                 ecx, dword ptr [ebp - 0x498]
            //   e8????????           |                     
            //   25ff000000           | and                 eax, 0xff
            //   85c0                 | test                eax, eax

        $sequence_8 = { a3???????? 8b4dd4 890d???????? 8b55d8 8915???????? c745c000000000 eb09 }
            // n = 7, score = 100
            //   a3????????           |                     
            //   8b4dd4               | mov                 ecx, dword ptr [ebp - 0x2c]
            //   890d????????         |                     
            //   8b55d8               | mov                 edx, dword ptr [ebp - 0x28]
            //   8915????????         |                     
            //   c745c000000000       | mov                 dword ptr [ebp - 0x40], 0
            //   eb09                 | jmp                 0xb

        $sequence_9 = { e8???????? 8b4d08 51 8d8d1cffffff e8???????? 8d951cffffff 8995bcfeffff }
            // n = 7, score = 100
            //   e8????????           |                     
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]
            //   51                   | push                ecx
            //   8d8d1cffffff         | lea                 ecx, [ebp - 0xe4]
            //   e8????????           |                     
            //   8d951cffffff         | lea                 edx, [ebp - 0xe4]
            //   8995bcfeffff         | mov                 dword ptr [ebp - 0x144], edx

    condition:
        7 of them and filesize < 2080768
}