rule win_radrat_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.radrat."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.radrat"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8d85c8feffff 50 e8???????? 83c408 c745fc01000000 8b8de0feffff 898d98feffff }
            // n = 7, score = 100
            //   8d85c8feffff         | lea                 eax, [ebp - 0x138]
            //   50                   | push                eax
            //   e8????????           |                     
            //   83c408               | add                 esp, 8
            //   c745fc01000000       | mov                 dword ptr [ebp - 4], 1
            //   8b8de0feffff         | mov                 ecx, dword ptr [ebp - 0x120]
            //   898d98feffff         | mov                 dword ptr [ebp - 0x168], ecx

        $sequence_1 = { c7412800000000 8b55c4 c6821409000001 8b45c4 c6809a09000000 8b4dc4 c6819809000000 }
            // n = 7, score = 100
            //   c7412800000000       | mov                 dword ptr [ecx + 0x28], 0
            //   8b55c4               | mov                 edx, dword ptr [ebp - 0x3c]
            //   c6821409000001       | mov                 byte ptr [edx + 0x914], 1
            //   8b45c4               | mov                 eax, dword ptr [ebp - 0x3c]
            //   c6809a09000000       | mov                 byte ptr [eax + 0x99a], 0
            //   8b4dc4               | mov                 ecx, dword ptr [ebp - 0x3c]
            //   c6819809000000       | mov                 byte ptr [ecx + 0x998], 0

        $sequence_2 = { 8b02 ff5008 25ff000000 85c0 0f858d000000 c685e881ffff01 c645fcb0 }
            // n = 7, score = 100
            //   8b02                 | mov                 eax, dword ptr [edx]
            //   ff5008               | call                dword ptr [eax + 8]
            //   25ff000000           | and                 eax, 0xff
            //   85c0                 | test                eax, eax
            //   0f858d000000         | jne                 0x93
            //   c685e881ffff01       | mov                 byte ptr [ebp - 0x7e18], 1
            //   c645fcb0             | mov                 byte ptr [ebp - 4], 0xb0

        $sequence_3 = { ff15???????? 837df000 741e 8b5534 8d45e0 3bd0 7514 }
            // n = 7, score = 100
            //   ff15????????         |                     
            //   837df000             | cmp                 dword ptr [ebp - 0x10], 0
            //   741e                 | je                  0x20
            //   8b5534               | mov                 edx, dword ptr [ebp + 0x34]
            //   8d45e0               | lea                 eax, [ebp - 0x20]
            //   3bd0                 | cmp                 edx, eax
            //   7514                 | jne                 0x16

        $sequence_4 = { c745fcffffffff 8d4da8 e8???????? 8b85b0feffff e9???????? 0fbe4d14 85c9 }
            // n = 7, score = 100
            //   c745fcffffffff       | mov                 dword ptr [ebp - 4], 0xffffffff
            //   8d4da8               | lea                 ecx, [ebp - 0x58]
            //   e8????????           |                     
            //   8b85b0feffff         | mov                 eax, dword ptr [ebp - 0x150]
            //   e9????????           |                     
            //   0fbe4d14             | movsx               ecx, byte ptr [ebp + 0x14]
            //   85c9                 | test                ecx, ecx

        $sequence_5 = { e8???????? 25ff000000 f7d8 1bc0 40 8885e0feffff c645fc05 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   25ff000000           | and                 eax, 0xff
            //   f7d8                 | neg                 eax
            //   1bc0                 | sbb                 eax, eax
            //   40                   | inc                 eax
            //   8885e0feffff         | mov                 byte ptr [ebp - 0x120], al
            //   c645fc05             | mov                 byte ptr [ebp - 4], 5

        $sequence_6 = { c3 8d8d6cffffff e8???????? c3 8d8d44ffffff e8???????? c3 }
            // n = 7, score = 100
            //   c3                   | ret                 
            //   8d8d6cffffff         | lea                 ecx, [ebp - 0x94]
            //   e8????????           |                     
            //   c3                   | ret                 
            //   8d8d44ffffff         | lea                 ecx, [ebp - 0xbc]
            //   e8????????           |                     
            //   c3                   | ret                 

        $sequence_7 = { c645fc04 8d8d24ffffff e8???????? 8b8d5cffffff 898df4feffff 8b953cffffff 899510fcffff }
            // n = 7, score = 100
            //   c645fc04             | mov                 byte ptr [ebp - 4], 4
            //   8d8d24ffffff         | lea                 ecx, [ebp - 0xdc]
            //   e8????????           |                     
            //   8b8d5cffffff         | mov                 ecx, dword ptr [ebp - 0xa4]
            //   898df4feffff         | mov                 dword ptr [ebp - 0x10c], ecx
            //   8b953cffffff         | mov                 edx, dword ptr [ebp - 0xc4]
            //   899510fcffff         | mov                 dword ptr [ebp - 0x3f0], edx

        $sequence_8 = { e8???????? c3 8b45a0 83e001 85c0 0f8408000000 8b4d08 }
            // n = 7, score = 100
            //   e8????????           |                     
            //   c3                   | ret                 
            //   8b45a0               | mov                 eax, dword ptr [ebp - 0x60]
            //   83e001               | and                 eax, 1
            //   85c0                 | test                eax, eax
            //   0f8408000000         | je                  0xe
            //   8b4d08               | mov                 ecx, dword ptr [ebp + 8]

        $sequence_9 = { e9???????? 0fbe4514 85c0 7d0a b8feffffff e9???????? 68???????? }
            // n = 7, score = 100
            //   e9????????           |                     
            //   0fbe4514             | movsx               eax, byte ptr [ebp + 0x14]
            //   85c0                 | test                eax, eax
            //   7d0a                 | jge                 0xc
            //   b8feffffff           | mov                 eax, 0xfffffffe
            //   e9????????           |                     
            //   68????????           |                     

    condition:
        7 of them and filesize < 2080768
}