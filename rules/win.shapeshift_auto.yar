rule win_shapeshift_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-08-05"
        version = "1"
        description = "Detects win.shapeshift."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.shapeshift"
        malpedia_rule_date = "20220805"
        malpedia_hash = "6ec06c64bcfdbeda64eff021c766b4ce34542b71"
        malpedia_version = "20220808"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 6a01 b9???????? e8???????? 68f0f1ffff b9???????? e8???????? c705????????c0f44100 }
            // n = 7, score = 100
            //   6a01                 | push                1
            //   b9????????           |                     
            //   e8????????           |                     
            //   68f0f1ffff           | push                0xfffff1f0
            //   b9????????           |                     
            //   e8????????           |                     
            //   c705????????c0f44100     |     

        $sequence_1 = { 25fe030000 f20f592c8550b44100 f20f59148550b44100 660f5834c560bc4100 660f54c5 f20f5ce8 }
            // n = 6, score = 100
            //   25fe030000           | and                 eax, 0x3fe
            //   f20f592c8550b44100     | mulsd    xmm5, qword ptr [eax*4 + 0x41b450]
            //   f20f59148550b44100     | mulsd    xmm2, qword ptr [eax*4 + 0x41b450]
            //   660f5834c560bc4100     | addpd    xmm6, xmmword ptr [eax*8 + 0x41bc60]
            //   660f54c5             | andpd               xmm0, xmm5
            //   f20f5ce8             | subsd               xmm5, xmm0

        $sequence_2 = { eb24 8b048dc4fc4100 41 50 890d???????? }
            // n = 5, score = 100
            //   eb24                 | jmp                 0x26
            //   8b048dc4fc4100       | mov                 eax, dword ptr [ecx*4 + 0x41fcc4]
            //   41                   | inc                 ecx
            //   50                   | push                eax
            //   890d????????         |                     

        $sequence_3 = { 83c410 8b35???????? 53 57 ffd6 }
            // n = 5, score = 100
            //   83c410               | add                 esp, 0x10
            //   8b35????????         |                     
            //   53                   | push                ebx
            //   57                   | push                edi
            //   ffd6                 | call                esi

        $sequence_4 = { 68???????? 8bf0 ffd3 03f0 33c9 }
            // n = 5, score = 100
            //   68????????           |                     
            //   8bf0                 | mov                 esi, eax
            //   ffd3                 | call                ebx
            //   03f0                 | add                 esi, eax
            //   33c9                 | xor                 ecx, ecx

        $sequence_5 = { e8???????? 83c404 ff750c ff15???????? 6a02 }
            // n = 5, score = 100
            //   e8????????           |                     
            //   83c404               | add                 esp, 4
            //   ff750c               | push                dword ptr [ebp + 0xc]
            //   ff15????????         |                     
            //   6a02                 | push                2

        $sequence_6 = { e9???????? c745e04c804100 e9???????? c745dc02000000 c745e04c804100 8b4508 }
            // n = 6, score = 100
            //   e9????????           |                     
            //   c745e04c804100       | mov                 dword ptr [ebp - 0x20], 0x41804c
            //   e9????????           |                     
            //   c745dc02000000       | mov                 dword ptr [ebp - 0x24], 2
            //   c745e04c804100       | mov                 dword ptr [ebp - 0x20], 0x41804c
            //   8b4508               | mov                 eax, dword ptr [ebp + 8]

        $sequence_7 = { 884a01 0fbf0d???????? 0fb689589a4100 884a02 }
            // n = 4, score = 100
            //   884a01               | mov                 byte ptr [edx + 1], cl
            //   0fbf0d????????       |                     
            //   0fb689589a4100       | movzx               ecx, byte ptr [ecx + 0x419a58]
            //   884a02               | mov                 byte ptr [edx + 2], cl

    condition:
        7 of them and filesize < 303104
}