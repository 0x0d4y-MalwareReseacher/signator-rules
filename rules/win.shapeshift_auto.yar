rule win_shapeshift_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2022-04-08"
        version = "1"
        description = "Describes win.shapeshift."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.shapeshift"
        malpedia_rule_date = "20220405"
        malpedia_hash = "ecd38294bd47d5589be5cd5490dc8bb4804afc2a"
        malpedia_version = ""
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { ffb598fdffff ff15???????? 6a02 57 e8???????? }
            // n = 5, score = 100
            //   ffb598fdffff         | push                dword ptr [ebp - 0x268]
            //   ff15????????         |                     
            //   6a02                 | push                2
            //   57                   | push                edi
            //   e8????????           |                     

        $sequence_1 = { a1???????? 53 ffd0 e8???????? 85f6 8bf0 6a0c }
            // n = 7, score = 100
            //   a1????????           |                     
            //   53                   | push                ebx
            //   ffd0                 | call                eax
            //   e8????????           |                     
            //   85f6                 | test                esi, esi
            //   8bf0                 | mov                 esi, eax
            //   6a0c                 | push                0xc

        $sequence_2 = { ba1d000000 e9???????? 833d????????00 0f852caeffff 8d0d009c4100 ba1d000000 e8???????? }
            // n = 7, score = 100
            //   ba1d000000           | mov                 edx, 0x1d
            //   e9????????           |                     
            //   833d????????00       |                     
            //   0f852caeffff         | jne                 0xffffae32
            //   8d0d009c4100         | lea                 ecx, dword ptr [0x419c00]
            //   ba1d000000           | mov                 edx, 0x1d
            //   e8????????           |                     

        $sequence_3 = { ffd7 53 66837c43fe5c 7455 ffd7 68???????? }
            // n = 6, score = 100
            //   ffd7                 | call                edi
            //   53                   | push                ebx
            //   66837c43fe5c         | cmp                 word ptr [ebx + eax*2 - 2], 0x5c
            //   7455                 | je                  0x57
            //   ffd7                 | call                edi
            //   68????????           |                     

        $sequence_4 = { 8a92589a4100 8816 0fbf15???????? 56 0fb68a589a4100 884e01 }
            // n = 6, score = 100
            //   8a92589a4100         | mov                 dl, byte ptr [edx + 0x419a58]
            //   8816                 | mov                 byte ptr [esi], dl
            //   0fbf15????????       |                     
            //   56                   | push                esi
            //   0fb68a589a4100       | movzx               ecx, byte ptr [edx + 0x419a58]
            //   884e01               | mov                 byte ptr [esi + 1], cl

        $sequence_5 = { 47 3bbdc8fdffff 89bddcfdffff 8b3d???????? }
            // n = 4, score = 100
            //   47                   | inc                 edi
            //   3bbdc8fdffff         | cmp                 edi, dword ptr [ebp - 0x238]
            //   89bddcfdffff         | mov                 dword ptr [ebp - 0x224], edi
            //   8b3d????????         |                     

        $sequence_6 = { 0f84ea000000 8d442410 c7442410583a5c00 50 885c2414 ff15???????? }
            // n = 6, score = 100
            //   0f84ea000000         | je                  0xf0
            //   8d442410             | lea                 eax, dword ptr [esp + 0x10]
            //   c7442410583a5c00     | mov                 dword ptr [esp + 0x10], 0x5c3a58
            //   50                   | push                eax
            //   885c2414             | mov                 byte ptr [esp + 0x14], bl
            //   ff15????????         |                     

        $sequence_7 = { 57 ffd6 8d85a4fdffff 50 57 ff15???????? 898598fdffff }
            // n = 7, score = 100
            //   57                   | push                edi
            //   ffd6                 | call                esi
            //   8d85a4fdffff         | lea                 eax, dword ptr [ebp - 0x25c]
            //   50                   | push                eax
            //   57                   | push                edi
            //   ff15????????         |                     
            //   898598fdffff         | mov                 dword ptr [ebp - 0x268], eax

    condition:
        7 of them and filesize < 303104
}