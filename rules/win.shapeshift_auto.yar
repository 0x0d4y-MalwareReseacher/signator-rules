rule win_shapeshift_auto {

    meta:
        author = "Felix Bilstein - yara-signator at cocacoding dot com"
        date = "2023-01-25"
        version = "1"
        description = "Detects win.shapeshift."
        info = "autogenerated rule brought to you by yara-signator"
        tool = "yara-signator v0.6.0"
        signator_config = "callsandjumps;datarefs;binvalue"
        malpedia_reference = "https://malpedia.caad.fkie.fraunhofer.de/details/win.shapeshift"
        malpedia_rule_date = "20230124"
        malpedia_hash = "2ee0eebba83dce3d019a90519f2f972c0fcf9686"
        malpedia_version = "20230125"
        malpedia_license = "CC BY-SA 4.0"
        malpedia_sharing = "TLP:WHITE"

    /* DISCLAIMER
     * The strings used in this rule have been automatically selected from the
     * disassembly of memory dumps and unpacked files, using YARA-Signator.
     * The code and documentation is published here:
     * https://github.com/fxb-cocacoding/yara-signator
     * As Malpedia is used as data source, please note that for a given
     * number of families, only single samples are documented.
     * This likely impacts the degree of generalization these rules will offer.
     * Take the described generation method also into consideration when you
     * apply the rules in your use cases and assign them confidence levels.
     */


    strings:
        $sequence_0 = { 8bfa c1ef03 85ff 0f44f8 8d85fcfdffff 50 e8???????? }
            // n = 7, score = 100
            //   8bfa                 | mov                 edi, edx
            //   c1ef03               | shr                 edi, 3
            //   85ff                 | test                edi, edi
            //   0f44f8               | cmove               edi, eax
            //   8d85fcfdffff         | lea                 eax, [ebp - 0x204]
            //   50                   | push                eax
            //   e8????????           |                     

        $sequence_1 = { 83fa08 7408 84820f9b4100 7528 d92d???????? 891424 c744240400000000 }
            // n = 7, score = 100
            //   83fa08               | cmp                 edx, 8
            //   7408                 | je                  0xa
            //   84820f9b4100         | test                byte ptr [edx + 0x419b0f], al
            //   7528                 | jne                 0x2a
            //   d92d????????         |                     
            //   891424               | mov                 dword ptr [esp], edx
            //   c744240400000000     | mov                 dword ptr [esp + 4], 0

        $sequence_2 = { 660f123d???????? 25ff010000 83c001 25fe030000 f20f592c8550b44100 }
            // n = 5, score = 100
            //   660f123d????????     |                     
            //   25ff010000           | and                 eax, 0x1ff
            //   83c001               | add                 eax, 1
            //   25fe030000           | and                 eax, 0x3fe
            //   f20f592c8550b44100     | mulsd    xmm5, qword ptr [eax*4 + 0x41b450]

        $sequence_3 = { f20f592c8530a84100 03c0 660f58348540ac4100 660f5625???????? }
            // n = 4, score = 100
            //   f20f592c8530a84100     | mulsd    xmm5, qword ptr [eax*4 + 0x41a830]
            //   03c0                 | add                 eax, eax
            //   660f58348540ac4100     | addpd    xmm6, xmmword ptr [eax*4 + 0x41ac40]
            //   660f5625????????     |                     

        $sequence_4 = { f20f593c85109c4100 660f122c85109c4100 03c0 660f28348520a04100 ba7f3e0400 e9???????? }
            // n = 6, score = 100
            //   f20f593c85109c4100     | mulsd    xmm7, qword ptr [eax*4 + 0x419c10]
            //   660f122c85109c4100     | movlpd    xmm5, qword ptr [eax*4 + 0x419c10]
            //   03c0                 | add                 eax, eax
            //   660f28348520a04100     | movapd    xmm6, xmmword ptr [eax*4 + 0x41a020]
            //   ba7f3e0400           | mov                 edx, 0x43e7f
            //   e9????????           |                     

        $sequence_5 = { 57 6a00 ff15???????? 6a6f }
            // n = 4, score = 100
            //   57                   | push                edi
            //   6a00                 | push                0
            //   ff15????????         |                     
            //   6a6f                 | push                0x6f

        $sequence_6 = { 56 6a00 68???????? 6a00 6810040000 6a00 }
            // n = 6, score = 100
            //   56                   | push                esi
            //   6a00                 | push                0
            //   68????????           |                     
            //   6a00                 | push                0
            //   6810040000           | push                0x410
            //   6a00                 | push                0

        $sequence_7 = { 897de4 8365fc00 8b049d38054200 8b4de0 f644082801 7515 e8???????? }
            // n = 7, score = 100
            //   897de4               | mov                 dword ptr [ebp - 0x1c], edi
            //   8365fc00             | and                 dword ptr [ebp - 4], 0
            //   8b049d38054200       | mov                 eax, dword ptr [ebx*4 + 0x420538]
            //   8b4de0               | mov                 ecx, dword ptr [ebp - 0x20]
            //   f644082801           | test                byte ptr [eax + ecx + 0x28], 1
            //   7515                 | jne                 0x17
            //   e8????????           |                     

    condition:
        7 of them and filesize < 303104
}